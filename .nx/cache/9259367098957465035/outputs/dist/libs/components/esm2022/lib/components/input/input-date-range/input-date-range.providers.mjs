import { forwardRef, Optional, Self } from '@angular/core';
import { NgControl } from '@angular/forms';
import { PrizmInputDateRangeComponent } from './input-date-range.component';
import { AbstractPrizmControl } from '../../../abstract/control';
import { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';
import { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';
import { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';
import { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';
import { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';
// TODO: 2.0 remove in ivy compilation
export const RANGE_STREAM_FACTORY = (control, valueTransformer) => prizmReplayControlValueChangesFactory(control, valueTransformer);
export const PRIZM_INPUT_DATE_RANGE_PROVIDERS = [
    {
        provide: AbstractPrizmControl,
        useExisting: forwardRef(() => PrizmInputDateRangeComponent),
    },
    {
        provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,
        useExisting: forwardRef(() => PrizmInputDateRangeComponent),
    },
    {
        provide: PRIZM_CALENDAR_DATA_STREAM,
        deps: [
            [new Optional(), new Self(), NgControl],
            [new Optional(), forwardRef(() => PRIZM_DATE_RANGE_VALUE_TRANSFORMER)],
        ],
        useFactory: RANGE_STREAM_FACTORY,
    },
    PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZGF0ZS1yYW5nZS5wcm92aWRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L2lucHV0LWRhdGUtcmFuZ2UvaW5wdXQtZGF0ZS1yYW5nZS5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUczQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUc1RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4RixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNsRixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRyxPQUFPLEVBQUUsK0NBQStDLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUNuSCxPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUVsSCxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsQ0FDbEMsT0FBeUIsRUFDekIsZ0JBQWlELEVBQ3BCLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBSSxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUV0RyxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBRztJQUM5QztRQUNFLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztLQUM1RDtJQUNEO1FBQ0UsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDRCQUE0QixDQUFDO0tBQzVEO0lBQ0Q7UUFDRSxPQUFPLEVBQUUsMEJBQTBCO1FBQ25DLElBQUksRUFBRTtZQUNKLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFNBQVMsQ0FBQztZQUN2QyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGtDQUFrQyxDQUFDLENBQUM7U0FDdkU7UUFDRCxVQUFVLEVBQUUsb0JBQW9CO0tBQ2pDO0lBQ0QsK0NBQStDO0NBQ2hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCBPcHRpb25hbCwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQcml6bUlucHV0RGF0ZVJhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1kYXRlLXJhbmdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcml6bURheVJhbmdlIH0gZnJvbSAnLi4vLi4vLi4vQGNvcmUvZGF0ZS10aW1lJztcbmltcG9ydCB7IFByaXptQ29udHJvbFZhbHVlVHJhbnNmb3JtZXIgfSBmcm9tICcuLi8uLi8uLi90eXBlcy9jb250cm9sLXZhbHVlLXRyYW5zZm9ybWVyJztcbmltcG9ydCB7IEFic3RyYWN0UHJpem1Db250cm9sIH0gZnJvbSAnLi4vLi4vLi4vYWJzdHJhY3QvY29udHJvbCc7XG5pbXBvcnQgeyBQUklaTV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUiB9IGZyb20gJy4uLy4uLy4uL3Rva2Vucy9mb2N1c2FibGUtaXRlbS1hY2Nlc3Nvcic7XG5pbXBvcnQgeyBQUklaTV9DQUxFTkRBUl9EQVRBX1NUUkVBTSB9IGZyb20gJy4uLy4uLy4uL3Rva2Vucy9jYWxlbmRhci1kYXRhLXN0cmVhbSc7XG5pbXBvcnQgeyBQUklaTV9EQVRFX1JBTkdFX1ZBTFVFX1RSQU5TRk9STUVSIH0gZnJvbSAnLi4vLi4vLi4vdG9rZW5zL2RhdGUtaW5wdXRzLXZhbHVlLXRyYW5zZm9ybWVycyc7XG5pbXBvcnQgeyBQUklaTV9MRUZUX0FMSUdORURfRFJPUERPV05fQ09OVFJPTExFUl9QUk9WSURFUiB9IGZyb20gJy4uLy4uLy4uL3Byb3ZpZGVycy9zcGVjaWZpYy1kcm9wZG93bi1jb250cm9sbGVycyc7XG5pbXBvcnQgeyBwcml6bVJlcGxheUNvbnRyb2xWYWx1ZUNoYW5nZXNGYWN0b3J5IH0gZnJvbSAnLi4vLi4vLi4vdXRpbC9jb21tb24vcmVwbGF5LWNvbnRyb2wtdmFsdWUtY2hhbmdlcy1mYWN0b3J5JztcblxuLy8gVE9ETzogMi4wIHJlbW92ZSBpbiBpdnkgY29tcGlsYXRpb25cbmV4cG9ydCBjb25zdCBSQU5HRV9TVFJFQU1fRkFDVE9SWSA9IDxUIGV4dGVuZHMgUHJpem1EYXlSYW5nZT4oXG4gIGNvbnRyb2w6IE5nQ29udHJvbCB8IG51bGwsXG4gIHZhbHVlVHJhbnNmb3JtZXI6IFByaXptQ29udHJvbFZhbHVlVHJhbnNmb3JtZXI8VD5cbik6IE9ic2VydmFibGU8VCB8IG51bGw+IHwgbnVsbCA9PiBwcml6bVJlcGxheUNvbnRyb2xWYWx1ZUNoYW5nZXNGYWN0b3J5PFQ+KGNvbnRyb2wsIHZhbHVlVHJhbnNmb3JtZXIpO1xuXG5leHBvcnQgY29uc3QgUFJJWk1fSU5QVVRfREFURV9SQU5HRV9QUk9WSURFUlMgPSBbXG4gIHtcbiAgICBwcm92aWRlOiBBYnN0cmFjdFByaXptQ29udHJvbCxcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQcml6bUlucHV0RGF0ZVJhbmdlQ29tcG9uZW50KSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IFBSSVpNX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFByaXptSW5wdXREYXRlUmFuZ2VDb21wb25lbnQpLFxuICB9LFxuICB7XG4gICAgcHJvdmlkZTogUFJJWk1fQ0FMRU5EQVJfREFUQV9TVFJFQU0sXG4gICAgZGVwczogW1xuICAgICAgW25ldyBPcHRpb25hbCgpLCBuZXcgU2VsZigpLCBOZ0NvbnRyb2xdLFxuICAgICAgW25ldyBPcHRpb25hbCgpLCBmb3J3YXJkUmVmKCgpID0+IFBSSVpNX0RBVEVfUkFOR0VfVkFMVUVfVFJBTlNGT1JNRVIpXSxcbiAgICBdLFxuICAgIHVzZUZhY3Rvcnk6IFJBTkdFX1NUUkVBTV9GQUNUT1JZLFxuICB9LFxuICBQUklaTV9MRUZUX0FMSUdORURfRFJPUERPV05fQ09OVFJPTExFUl9QUk9WSURFUixcbl07XG4iXX0=