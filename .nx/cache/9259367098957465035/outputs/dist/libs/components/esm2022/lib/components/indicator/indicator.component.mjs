import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { PrizmAbstractTestId } from '../../abstract/interactive';
import { NgIf } from '@angular/common';
import * as i0 from "@angular/core";
export class PrizmIndicatorComponent extends PrizmAbstractTestId {
    constructor() {
        super(...arguments);
        this.type = 'simple';
        this.status = 'info';
        this.testId_ = 'ui_indicator';
        this.iconMap = {
            info: 'alerts-information-variant',
            secondary: 'alerts-information-variant',
            success: 'selection-check-simple',
            warning: 'alerts-mark',
            danger: 'alerts-mark',
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmIndicatorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmIndicatorComponent, isStandalone: true, selector: "prizm-indicator", inputs: { type: "type", status: "status" }, usesInheritance: true, ngImport: i0, template: "<div\n  class=\"indicator\"\n  [class.indicator_with-icon]=\"type === 'icon'\"\n  [attr.status]=\"status\"\n  [attr.type]=\"type\"\n>\n  <span class=\"indicator__icon prizm-icon {{iconMap?.[status]}}\" *ngIf=\"type === 'icon'\"></span>\n</div>\n", styles: [":host{display:inline-flex}:host .indicator{height:8px;width:8px;min-height:8px;min-width:8px;display:flex;align-items:center;justify-content:center;border-radius:50%}:host .indicator_with-icon{height:14px;width:14px;min-height:14px;min-width:14px}:host .indicator__icon{height:14px;width:14px;min-height:14px;min-width:14px;display:flex;align-items:center;justify-content:center;color:var(--prizm-v3-text-icon-exception)}:host .indicator[status=info]{background:var(--prizm-v3-status-info-primary-default)}:host .indicator[status=secondary]{background:var(--prizm-v3-status-none-primary-default)}:host .indicator[status=success]{background:var(--prizm-v3-status-success-primary-default)}:host .indicator[status=warning]{background:var(--prizm-v3-status-warning-primary-default)}:host .indicator[status=warning][type=icon]{width:0;height:0;background:none;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:14px solid var(--prizm-v3-status-warning-primary-default);border-radius:0;position:relative}:host .indicator[status=warning][type=icon] .indicator__icon{position:absolute;top:1px}:host .indicator[status=danger]{background:var(--prizm-v3-status-alarm-primary-default)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmIndicatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-indicator', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgIf], template: "<div\n  class=\"indicator\"\n  [class.indicator_with-icon]=\"type === 'icon'\"\n  [attr.status]=\"status\"\n  [attr.type]=\"type\"\n>\n  <span class=\"indicator__icon prizm-icon {{iconMap?.[status]}}\" *ngIf=\"type === 'icon'\"></span>\n</div>\n", styles: [":host{display:inline-flex}:host .indicator{height:8px;width:8px;min-height:8px;min-width:8px;display:flex;align-items:center;justify-content:center;border-radius:50%}:host .indicator_with-icon{height:14px;width:14px;min-height:14px;min-width:14px}:host .indicator__icon{height:14px;width:14px;min-height:14px;min-width:14px;display:flex;align-items:center;justify-content:center;color:var(--prizm-v3-text-icon-exception)}:host .indicator[status=info]{background:var(--prizm-v3-status-info-primary-default)}:host .indicator[status=secondary]{background:var(--prizm-v3-status-none-primary-default)}:host .indicator[status=success]{background:var(--prizm-v3-status-success-primary-default)}:host .indicator[status=warning]{background:var(--prizm-v3-status-warning-primary-default)}:host .indicator[status=warning][type=icon]{width:0;height:0;background:none;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:14px solid var(--prizm-v3-status-warning-primary-default);border-radius:0;position:relative}:host .indicator[status=warning][type=icon] .indicator__icon{position:absolute;top:1px}:host .indicator[status=danger]{background:var(--prizm-v3-status-alarm-primary-default)}\n"] }]
        }], propDecorators: { type: [{
                type: Input
            }], status: [{
                type: Input
            }] } });
/**
 * TODO v5: remove
 * @deprecated
 * */
export const IndicatorComponent = PrizmIndicatorComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWNhdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29tcG9uZW50cy9zcmMvbGliL2NvbXBvbmVudHMvaW5kaWNhdG9yL2luZGljYXRvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2luZGljYXRvci9pbmRpY2F0b3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFdkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDakUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQVV2QyxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsbUJBQW1CO0lBUmhFOztRQVNrQixTQUFJLEdBQWtCLFFBQVEsQ0FBQztRQUMvQixXQUFNLEdBQW9CLE1BQU0sQ0FBQztRQUUvQixZQUFPLEdBQUcsY0FBYyxDQUFDO1FBRTNCLFlBQU8sR0FBRztZQUN4QixJQUFJLEVBQUUsNEJBQTRCO1lBQ2xDLFNBQVMsRUFBRSw0QkFBNEI7WUFDdkMsT0FBTyxFQUFFLHdCQUF3QjtZQUNqQyxPQUFPLEVBQUUsYUFBYTtZQUN0QixNQUFNLEVBQUUsYUFBYTtTQUN0QixDQUFDO0tBQ0g7OEdBYlksdUJBQXVCO2tHQUF2Qix1QkFBdUIsOElDYnBDLHVQQVFBLGl2Q0RHWSxJQUFJOzsyRkFFSCx1QkFBdUI7a0JBUm5DLFNBQVM7K0JBQ0UsaUJBQWlCLG1CQUdWLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQLENBQUMsSUFBSSxDQUFDOzhCQUdDLElBQUk7c0JBQW5CLEtBQUs7Z0JBQ1UsTUFBTTtzQkFBckIsS0FBSzs7QUFZUjs7O0tBR0s7QUFDTCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyx1QkFBdUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5kaWNhdG9yU3RhdHVzLCBJbmRpY2F0b3JUeXBlIH0gZnJvbSAnLi9pbmRpY2F0b3IubW9kZWxzJztcbmltcG9ydCB7IFByaXptQWJzdHJhY3RUZXN0SWQgfSBmcm9tICcuLi8uLi9hYnN0cmFjdC9pbnRlcmFjdGl2ZSc7XG5pbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHJpem0taW5kaWNhdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2luZGljYXRvci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2luZGljYXRvci5jb21wb25lbnQubGVzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWZdLFxufSlcbmV4cG9ydCBjbGFzcyBQcml6bUluZGljYXRvckNvbXBvbmVudCBleHRlbmRzIFByaXptQWJzdHJhY3RUZXN0SWQge1xuICBASW5wdXQoKSBwdWJsaWMgdHlwZTogSW5kaWNhdG9yVHlwZSA9ICdzaW1wbGUnO1xuICBASW5wdXQoKSBwdWJsaWMgc3RhdHVzOiBJbmRpY2F0b3JTdGF0dXMgPSAnaW5mbyc7XG5cbiAgb3ZlcnJpZGUgcmVhZG9ubHkgdGVzdElkXyA9ICd1aV9pbmRpY2F0b3InO1xuXG4gIHB1YmxpYyByZWFkb25seSBpY29uTWFwID0ge1xuICAgIGluZm86ICdhbGVydHMtaW5mb3JtYXRpb24tdmFyaWFudCcsXG4gICAgc2Vjb25kYXJ5OiAnYWxlcnRzLWluZm9ybWF0aW9uLXZhcmlhbnQnLFxuICAgIHN1Y2Nlc3M6ICdzZWxlY3Rpb24tY2hlY2stc2ltcGxlJyxcbiAgICB3YXJuaW5nOiAnYWxlcnRzLW1hcmsnLFxuICAgIGRhbmdlcjogJ2FsZXJ0cy1tYXJrJyxcbiAgfTtcbn1cbi8qKlxuICogVE9ETyB2NTogcmVtb3ZlXG4gKiBAZGVwcmVjYXRlZFxuICogKi9cbmV4cG9ydCBjb25zdCBJbmRpY2F0b3JDb21wb25lbnQgPSBQcml6bUluZGljYXRvckNvbXBvbmVudDtcbiIsIjxkaXZcbiAgY2xhc3M9XCJpbmRpY2F0b3JcIlxuICBbY2xhc3MuaW5kaWNhdG9yX3dpdGgtaWNvbl09XCJ0eXBlID09PSAnaWNvbidcIlxuICBbYXR0ci5zdGF0dXNdPVwic3RhdHVzXCJcbiAgW2F0dHIudHlwZV09XCJ0eXBlXCJcbj5cbiAgPHNwYW4gY2xhc3M9XCJpbmRpY2F0b3JfX2ljb24gcHJpem0taWNvbiB7e2ljb25NYXA/LltzdGF0dXNdfX1cIiAqbmdJZj1cInR5cGUgPT09ICdpY29uJ1wiPjwvc3Bhbj5cbjwvZGl2PlxuIl19