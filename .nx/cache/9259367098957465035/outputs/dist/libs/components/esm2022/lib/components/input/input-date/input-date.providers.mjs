import { forwardRef, Optional, Self } from '@angular/core';
import { NgControl } from '@angular/forms';
import { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';
import { PRIZM_DATE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';
import { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';
import { PrizmInputDateComponent } from './date.component';
import { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';
import { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';
import { AbstractPrizmControl } from '../../../abstract/control';
export const DATE_STREAM_FACTORY = (control, valueTransformer) => prizmReplayControlValueChangesFactory(control, valueTransformer);
export const PRIZM_INPUT_DATE_PROVIDERS = [
    {
        provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,
        useExisting: forwardRef(() => PrizmInputDateComponent),
    },
    {
        provide: PRIZM_CALENDAR_DATA_STREAM,
        deps: [
            [new Optional(), new Self(), NgControl],
            [new Optional(), PRIZM_DATE_VALUE_TRANSFORMER],
        ],
        useFactory: DATE_STREAM_FACTORY,
    },
    {
        provide: AbstractPrizmControl,
        useExisting: forwardRef(() => PrizmInputDateComponent),
    },
    PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZGF0ZS5wcm92aWRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L2lucHV0LWRhdGUvaW5wdXQtZGF0ZS5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQVksSUFBSSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNsRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUM5RixPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUNsSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsK0NBQStDLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUduSCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN4RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVqRSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUNqQyxPQUF5QixFQUN6QixnQkFBaUQsRUFDcEIsRUFBRSxDQUFDLHFDQUFxQyxDQUFJLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBRXRHLE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUFHO0lBQ3hDO1FBQ0UsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDO0tBQ3ZEO0lBQ0Q7UUFDRSxPQUFPLEVBQUUsMEJBQTBCO1FBQ25DLElBQUksRUFBRTtZQUNKLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFNBQVMsQ0FBQztZQUN2QyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsNEJBQTRCLENBQUM7U0FDL0M7UUFDRCxVQUFVLEVBQUUsbUJBQW1CO0tBQ2hDO0lBQ0Q7UUFDRSxPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUM7S0FDdkQ7SUFDRCwrQ0FBK0M7Q0FDaEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYsIE9wdGlvbmFsLCBQcm92aWRlciwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUFJJWk1fQ0FMRU5EQVJfREFUQV9TVFJFQU0gfSBmcm9tICcuLi8uLi8uLi90b2tlbnMvY2FsZW5kYXItZGF0YS1zdHJlYW0nO1xuaW1wb3J0IHsgUFJJWk1fREFURV9WQUxVRV9UUkFOU0ZPUk1FUiB9IGZyb20gJy4uLy4uLy4uL3Rva2Vucy9kYXRlLWlucHV0cy12YWx1ZS10cmFuc2Zvcm1lcnMnO1xuaW1wb3J0IHsgcHJpem1SZXBsYXlDb250cm9sVmFsdWVDaGFuZ2VzRmFjdG9yeSB9IGZyb20gJy4uLy4uLy4uL3V0aWwvY29tbW9uL3JlcGxheS1jb250cm9sLXZhbHVlLWNoYW5nZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBQcml6bUlucHV0RGF0ZUNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUFJJWk1fTEVGVF9BTElHTkVEX0RST1BET1dOX0NPTlRST0xMRVJfUFJPVklERVIgfSBmcm9tICcuLi8uLi8uLi9wcm92aWRlcnMvc3BlY2lmaWMtZHJvcGRvd24tY29udHJvbGxlcnMnO1xuaW1wb3J0IHsgUHJpem1EYXkgfSBmcm9tICcuLi8uLi8uLi9AY29yZS9kYXRlLXRpbWUvZGF5JztcbmltcG9ydCB7IFByaXptQ29udHJvbFZhbHVlVHJhbnNmb3JtZXIgfSBmcm9tICcuLi8uLi8uLi90eXBlcy9jb250cm9sLXZhbHVlLXRyYW5zZm9ybWVyJztcbmltcG9ydCB7IFBSSVpNX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SIH0gZnJvbSAnLi4vLi4vLi4vdG9rZW5zL2ZvY3VzYWJsZS1pdGVtLWFjY2Vzc29yJztcbmltcG9ydCB7IEFic3RyYWN0UHJpem1Db250cm9sIH0gZnJvbSAnLi4vLi4vLi4vYWJzdHJhY3QvY29udHJvbCc7XG5cbmV4cG9ydCBjb25zdCBEQVRFX1NUUkVBTV9GQUNUT1JZID0gPFQgZXh0ZW5kcyBQcml6bURheT4oXG4gIGNvbnRyb2w6IE5nQ29udHJvbCB8IG51bGwsXG4gIHZhbHVlVHJhbnNmb3JtZXI6IFByaXptQ29udHJvbFZhbHVlVHJhbnNmb3JtZXI8VD5cbik6IE9ic2VydmFibGU8VCB8IG51bGw+IHwgbnVsbCA9PiBwcml6bVJlcGxheUNvbnRyb2xWYWx1ZUNoYW5nZXNGYWN0b3J5PFQ+KGNvbnRyb2wsIHZhbHVlVHJhbnNmb3JtZXIpO1xuXG5leHBvcnQgY29uc3QgUFJJWk1fSU5QVVRfREFURV9QUk9WSURFUlMgPSBbXG4gIHtcbiAgICBwcm92aWRlOiBQUklaTV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUixcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQcml6bUlucHV0RGF0ZUNvbXBvbmVudCksXG4gIH0sXG4gIHtcbiAgICBwcm92aWRlOiBQUklaTV9DQUxFTkRBUl9EQVRBX1NUUkVBTSxcbiAgICBkZXBzOiBbXG4gICAgICBbbmV3IE9wdGlvbmFsKCksIG5ldyBTZWxmKCksIE5nQ29udHJvbF0sXG4gICAgICBbbmV3IE9wdGlvbmFsKCksIFBSSVpNX0RBVEVfVkFMVUVfVFJBTlNGT1JNRVJdLFxuICAgIF0sXG4gICAgdXNlRmFjdG9yeTogREFURV9TVFJFQU1fRkFDVE9SWSxcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IEFic3RyYWN0UHJpem1Db250cm9sLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFByaXptSW5wdXREYXRlQ29tcG9uZW50KSxcbiAgfSxcbiAgUFJJWk1fTEVGVF9BTElHTkVEX0RST1BET1dOX0NPTlRST0xMRVJfUFJPVklERVIsXG5dO1xuIl19