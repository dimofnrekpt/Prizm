import { Component, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';
import { PrizmNavigationMenuToolbarService } from '../../services/prizm-navigation-menu-toolbar.service';
import { PrizmAbstractTestId } from '@prizm-ui/core';
import { CommonModule } from '@angular/common';
import { PrizmNavigationMenuSearchComponent } from '../prizm-navigation-menu-search/prizm-navigation-menu-search.component';
import { PrizmButtonModule } from '../../../button/button.module';
import { PrizmLetDirective } from '@prizm-ui/helpers';
import * as i0 from "@angular/core";
import * as i1 from "../../services/prizm-navigation-menu-toolbar.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../button/button.component";
export class PrizmNavigationMenuToolbarComponent extends PrizmAbstractTestId {
    get toolbarIsVisible() {
        return !this.hideGroupAppearance && this.toolbarConfig && Object.values(this.toolbarConfig).some(Boolean);
    }
    constructor(toolbarService) {
        super();
        this.toolbarService = toolbarService;
        this.testId_ = 'ui_navigation_menu_toolbar';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmNavigationMenuToolbarComponent, deps: [{ token: i1.PrizmNavigationMenuToolbarService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmNavigationMenuToolbarComponent, isStandalone: true, selector: "prizm-navigation-menu-toolbar", inputs: { toolbarExtraTemplate: "toolbarExtraTemplate", toolbarConfig: "toolbarConfig", searchConfig: "searchConfig", hideGroupAppearance: "hideGroupAppearance" }, usesInheritance: true, ngImport: i0, template: "<ng-container *prizmLet=\"toolbarService.searchVisible$ | async as searchVisible\">\n  <div class=\"prizm-navigation-menu-toolbar\" *ngIf=\"toolbarIsVisible\">\n    <div class=\"instruments\">\n      <ng-container *ngTemplateOutlet=\"toolbarExtraTemplate\"></ng-container>\n\n      <ng-container *ngIf=\"toolbarService.viewMode$ | async as viewMode\">\n        <button\n          *ngIf=\"toolbarConfig.hierarchyMode ?? true\"\n          [pseudoPressed]=\"viewMode === 'hierarchy'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-mode'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('hierarchy')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.rubricatorMode\"\n          [pseudoPressed]=\"viewMode === 'rubricator'\"\n          [size]=\"'m'\"\n          [icon]=\"'editor-alfavit'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('rubricator')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.folderMode\"\n          [pseudoPressed]=\"viewMode === 'folder'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-folder'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('folder')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.closeAll\"\n          [size]=\"'m'\"\n          [icon]=\"'chevrons-close-all'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.closeAll()\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.search\"\n          [pseudoPressed]=\"searchVisible\"\n          [size]=\"'m'\"\n          [icon]=\"'sort-zoom-in'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.toggleSearch()\"\n          prizmIconButton\n        ></button>\n      </ng-container>\n    </div>\n  </div>\n  <prizm-navigation-menu-search\n    *ngIf=\"searchVisible\"\n    [searchDebounce]=\"$any(searchConfig.searchDebounce)\"\n    (searchChange)=\"toolbarService.changeSearchValue($event)\"\n  ></prizm-navigation-menu-search>\n</ng-container>\n", styles: [":host .prizm-navigation-menu-toolbar{padding:var(--prizm-navigation-menu__item-padding, 8px 16px);display:flex;justify-content:space-between;align-items:center;overflow:hidden}:host .prizm-navigation-menu-toolbar .instruments{display:flex;align-items:center;margin-left:auto}:host .prizm-navigation-menu-toolbar .instruments button[prizmIconButton]{margin-left:8px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "component", type: i3.PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "component", type: PrizmNavigationMenuSearchComponent, selector: "prizm-navigation-menu-search", inputs: ["searchDebounce", "placeholder"], outputs: ["searchChange"] }, { kind: "directive", type: PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmNavigationMenuToolbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-navigation-menu-toolbar', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CommonModule, PrizmButtonModule, PrizmNavigationMenuSearchComponent, PrizmLetDirective], template: "<ng-container *prizmLet=\"toolbarService.searchVisible$ | async as searchVisible\">\n  <div class=\"prizm-navigation-menu-toolbar\" *ngIf=\"toolbarIsVisible\">\n    <div class=\"instruments\">\n      <ng-container *ngTemplateOutlet=\"toolbarExtraTemplate\"></ng-container>\n\n      <ng-container *ngIf=\"toolbarService.viewMode$ | async as viewMode\">\n        <button\n          *ngIf=\"toolbarConfig.hierarchyMode ?? true\"\n          [pseudoPressed]=\"viewMode === 'hierarchy'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-mode'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('hierarchy')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.rubricatorMode\"\n          [pseudoPressed]=\"viewMode === 'rubricator'\"\n          [size]=\"'m'\"\n          [icon]=\"'editor-alfavit'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('rubricator')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.folderMode\"\n          [pseudoPressed]=\"viewMode === 'folder'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-folder'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('folder')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.closeAll\"\n          [size]=\"'m'\"\n          [icon]=\"'chevrons-close-all'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.closeAll()\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.search\"\n          [pseudoPressed]=\"searchVisible\"\n          [size]=\"'m'\"\n          [icon]=\"'sort-zoom-in'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.toggleSearch()\"\n          prizmIconButton\n        ></button>\n      </ng-container>\n    </div>\n  </div>\n  <prizm-navigation-menu-search\n    *ngIf=\"searchVisible\"\n    [searchDebounce]=\"$any(searchConfig.searchDebounce)\"\n    (searchChange)=\"toolbarService.changeSearchValue($event)\"\n  ></prizm-navigation-menu-search>\n</ng-container>\n", styles: [":host .prizm-navigation-menu-toolbar{padding:var(--prizm-navigation-menu__item-padding, 8px 16px);display:flex;justify-content:space-between;align-items:center;overflow:hidden}:host .prizm-navigation-menu-toolbar .instruments{display:flex;align-items:center;margin-left:auto}:host .prizm-navigation-menu-toolbar .instruments button[prizmIconButton]{margin-left:8px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PrizmNavigationMenuToolbarService }]; }, propDecorators: { toolbarExtraTemplate: [{
                type: Input
            }], toolbarConfig: [{
                type: Input
            }], searchConfig: [{
                type: Input
            }], hideGroupAppearance: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpem0tbmF2aWdhdGlvbi1tZW51LXRvb2xiYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy9uYXZpZ2F0aW9uLW1lbnUvY29tcG9uZW50cy9wcml6bS1uYXZpZ2F0aW9uLW1lbnUtdG9vbGJhci9wcml6bS1uYXZpZ2F0aW9uLW1lbnUtdG9vbGJhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL25hdmlnYXRpb24tbWVudS9jb21wb25lbnRzL3ByaXptLW5hdmlnYXRpb24tbWVudS10b29sYmFyL3ByaXptLW5hdmlnYXRpb24tbWVudS10b29sYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RixPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUN6RyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDNUgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7O0FBVXRELE1BQU0sT0FBTyxtQ0FBb0MsU0FBUSxtQkFBbUI7SUFTMUUsSUFBSSxnQkFBZ0I7UUFDbEIsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1RyxDQUFDO0lBR0QsWUFBbUIsY0FBaUQ7UUFDbEUsS0FBSyxFQUFFLENBQUM7UUFEUyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUM7UUFGbEQsWUFBTyxHQUFHLDRCQUE0QixDQUFDO0lBSXpELENBQUM7OEdBaEJVLG1DQUFtQztrR0FBbkMsbUNBQW1DLG9SQ2pCaEQscTRFQW9FQSx3YURyRFksWUFBWSw4VkFBRSxpQkFBaUIsb1JBQUUsa0NBQWtDLCtJQUFFLGlCQUFpQjs7MkZBRXJGLG1DQUFtQztrQkFSL0MsU0FBUzsrQkFDRSwrQkFBK0IsbUJBR3hCLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQLENBQUMsWUFBWSxFQUFFLGlCQUFpQixFQUFFLGtDQUFrQyxFQUFFLGlCQUFpQixDQUFDO3dIQUd4RixvQkFBb0I7c0JBQTVCLEtBQUs7Z0JBRUcsYUFBYTtzQkFBckIsS0FBSztnQkFFRyxZQUFZO3NCQUFwQixLQUFLO2dCQUVHLG1CQUFtQjtzQkFBM0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJpem1OYXZpZ2F0aW9uTWVudVNlYXJjaENvbmZpZywgUHJpem1OYXZpZ2F0aW9uTWVudVRvb2xiYXJDb25maWcgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IFByaXptTmF2aWdhdGlvbk1lbnVUb29sYmFyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3ByaXptLW5hdmlnYXRpb24tbWVudS10b29sYmFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgUHJpem1BYnN0cmFjdFRlc3RJZCB9IGZyb20gJ0Bwcml6bS11aS9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBQcml6bU5hdmlnYXRpb25NZW51U2VhcmNoQ29tcG9uZW50IH0gZnJvbSAnLi4vcHJpem0tbmF2aWdhdGlvbi1tZW51LXNlYXJjaC9wcml6bS1uYXZpZ2F0aW9uLW1lbnUtc2VhcmNoLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcml6bUJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uLy4uLy4uL2J1dHRvbi9idXR0b24ubW9kdWxlJztcbmltcG9ydCB7IFByaXptTGV0RGlyZWN0aXZlIH0gZnJvbSAnQHByaXptLXVpL2hlbHBlcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwcml6bS1uYXZpZ2F0aW9uLW1lbnUtdG9vbGJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcml6bS1uYXZpZ2F0aW9uLW1lbnUtdG9vbGJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3ByaXptLW5hdmlnYXRpb24tbWVudS10b29sYmFyLmNvbXBvbmVudC5sZXNzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQcml6bUJ1dHRvbk1vZHVsZSwgUHJpem1OYXZpZ2F0aW9uTWVudVNlYXJjaENvbXBvbmVudCwgUHJpem1MZXREaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBQcml6bU5hdmlnYXRpb25NZW51VG9vbGJhckNvbXBvbmVudCBleHRlbmRzIFByaXptQWJzdHJhY3RUZXN0SWQge1xuICBASW5wdXQoKSB0b29sYmFyRXh0cmFUZW1wbGF0ZSE6IFRlbXBsYXRlUmVmPHVua25vd24+O1xuXG4gIEBJbnB1dCgpIHRvb2xiYXJDb25maWchOiBQcml6bU5hdmlnYXRpb25NZW51VG9vbGJhckNvbmZpZztcblxuICBASW5wdXQoKSBzZWFyY2hDb25maWchOiBQcml6bU5hdmlnYXRpb25NZW51U2VhcmNoQ29uZmlnO1xuXG4gIEBJbnB1dCgpIGhpZGVHcm91cEFwcGVhcmFuY2UhOiBib29sZWFuO1xuXG4gIGdldCB0b29sYmFySXNWaXNpYmxlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5oaWRlR3JvdXBBcHBlYXJhbmNlICYmIHRoaXMudG9vbGJhckNvbmZpZyAmJiBPYmplY3QudmFsdWVzKHRoaXMudG9vbGJhckNvbmZpZykuc29tZShCb29sZWFuKTtcbiAgfVxuICBvdmVycmlkZSByZWFkb25seSB0ZXN0SWRfID0gJ3VpX25hdmlnYXRpb25fbWVudV90b29sYmFyJztcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdG9vbGJhclNlcnZpY2U6IFByaXptTmF2aWdhdGlvbk1lbnVUb29sYmFyU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKnByaXptTGV0PVwidG9vbGJhclNlcnZpY2Uuc2VhcmNoVmlzaWJsZSQgfCBhc3luYyBhcyBzZWFyY2hWaXNpYmxlXCI+XG4gIDxkaXYgY2xhc3M9XCJwcml6bS1uYXZpZ2F0aW9uLW1lbnUtdG9vbGJhclwiICpuZ0lmPVwidG9vbGJhcklzVmlzaWJsZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJpbnN0cnVtZW50c1wiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRvb2xiYXJFeHRyYVRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+XG5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0b29sYmFyU2VydmljZS52aWV3TW9kZSQgfCBhc3luYyBhcyB2aWV3TW9kZVwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgKm5nSWY9XCJ0b29sYmFyQ29uZmlnLmhpZXJhcmNoeU1vZGUgPz8gdHJ1ZVwiXG4gICAgICAgICAgW3BzZXVkb1ByZXNzZWRdPVwidmlld01vZGUgPT09ICdoaWVyYXJjaHknXCJcbiAgICAgICAgICBbc2l6ZV09XCInbSdcIlxuICAgICAgICAgIFtpY29uXT1cIidmaWxlcy1tb2RlJ1wiXG4gICAgICAgICAgW2FwcGVhcmFuY2VdPVwiJ3NlY29uZGFyeSdcIlxuICAgICAgICAgIFthcHBlYXJhbmNlVHlwZV09XCInZ2hvc3QnXCJcbiAgICAgICAgICAoY2xpY2spPVwidG9vbGJhclNlcnZpY2UuY2hhbmdlVmlld01vZGUoJ2hpZXJhcmNoeScpXCJcbiAgICAgICAgICBwcml6bUljb25CdXR0b25cbiAgICAgICAgPjwvYnV0dG9uPlxuXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICAqbmdJZj1cInRvb2xiYXJDb25maWcucnVicmljYXRvck1vZGVcIlxuICAgICAgICAgIFtwc2V1ZG9QcmVzc2VkXT1cInZpZXdNb2RlID09PSAncnVicmljYXRvcidcIlxuICAgICAgICAgIFtzaXplXT1cIidtJ1wiXG4gICAgICAgICAgW2ljb25dPVwiJ2VkaXRvci1hbGZhdml0J1wiXG4gICAgICAgICAgW2FwcGVhcmFuY2VdPVwiJ3NlY29uZGFyeSdcIlxuICAgICAgICAgIFthcHBlYXJhbmNlVHlwZV09XCInZ2hvc3QnXCJcbiAgICAgICAgICAoY2xpY2spPVwidG9vbGJhclNlcnZpY2UuY2hhbmdlVmlld01vZGUoJ3J1YnJpY2F0b3InKVwiXG4gICAgICAgICAgcHJpem1JY29uQnV0dG9uXG4gICAgICAgID48L2J1dHRvbj5cblxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgKm5nSWY9XCJ0b29sYmFyQ29uZmlnLmZvbGRlck1vZGVcIlxuICAgICAgICAgIFtwc2V1ZG9QcmVzc2VkXT1cInZpZXdNb2RlID09PSAnZm9sZGVyJ1wiXG4gICAgICAgICAgW3NpemVdPVwiJ20nXCJcbiAgICAgICAgICBbaWNvbl09XCInZmlsZXMtZm9sZGVyJ1wiXG4gICAgICAgICAgW2FwcGVhcmFuY2VdPVwiJ3NlY29uZGFyeSdcIlxuICAgICAgICAgIFthcHBlYXJhbmNlVHlwZV09XCInZ2hvc3QnXCJcbiAgICAgICAgICAoY2xpY2spPVwidG9vbGJhclNlcnZpY2UuY2hhbmdlVmlld01vZGUoJ2ZvbGRlcicpXCJcbiAgICAgICAgICBwcml6bUljb25CdXR0b25cbiAgICAgICAgPjwvYnV0dG9uPlxuXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICAqbmdJZj1cInRvb2xiYXJDb25maWcuY2xvc2VBbGxcIlxuICAgICAgICAgIFtzaXplXT1cIidtJ1wiXG4gICAgICAgICAgW2ljb25dPVwiJ2NoZXZyb25zLWNsb3NlLWFsbCdcIlxuICAgICAgICAgIFthcHBlYXJhbmNlXT1cIidzZWNvbmRhcnknXCJcbiAgICAgICAgICBbYXBwZWFyYW5jZVR5cGVdPVwiJ2dob3N0J1wiXG4gICAgICAgICAgKGNsaWNrKT1cInRvb2xiYXJTZXJ2aWNlLmNsb3NlQWxsKClcIlxuICAgICAgICAgIHByaXptSWNvbkJ1dHRvblxuICAgICAgICA+PC9idXR0b24+XG5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICpuZ0lmPVwidG9vbGJhckNvbmZpZy5zZWFyY2hcIlxuICAgICAgICAgIFtwc2V1ZG9QcmVzc2VkXT1cInNlYXJjaFZpc2libGVcIlxuICAgICAgICAgIFtzaXplXT1cIidtJ1wiXG4gICAgICAgICAgW2ljb25dPVwiJ3NvcnQtem9vbS1pbidcIlxuICAgICAgICAgIFthcHBlYXJhbmNlXT1cIidzZWNvbmRhcnknXCJcbiAgICAgICAgICBbYXBwZWFyYW5jZVR5cGVdPVwiJ2dob3N0J1wiXG4gICAgICAgICAgKGNsaWNrKT1cInRvb2xiYXJTZXJ2aWNlLnRvZ2dsZVNlYXJjaCgpXCJcbiAgICAgICAgICBwcml6bUljb25CdXR0b25cbiAgICAgICAgPjwvYnV0dG9uPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8cHJpem0tbmF2aWdhdGlvbi1tZW51LXNlYXJjaFxuICAgICpuZ0lmPVwic2VhcmNoVmlzaWJsZVwiXG4gICAgW3NlYXJjaERlYm91bmNlXT1cIiRhbnkoc2VhcmNoQ29uZmlnLnNlYXJjaERlYm91bmNlKVwiXG4gICAgKHNlYXJjaENoYW5nZSk9XCJ0b29sYmFyU2VydmljZS5jaGFuZ2VTZWFyY2hWYWx1ZSgkZXZlbnQpXCJcbiAgPjwvcHJpem0tbmF2aWdhdGlvbi1tZW51LXNlYXJjaD5cbjwvbmctY29udGFpbmVyPlxuIl19