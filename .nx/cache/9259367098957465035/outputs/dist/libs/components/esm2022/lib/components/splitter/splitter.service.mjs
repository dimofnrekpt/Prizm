import { Subject } from 'rxjs';
export class PrizmSplitterService {
    constructor() {
        this.areaInputSizeChange$$ = new Subject();
        this.accuracy = 8;
    }
    toFixed(num) {
        return +num.toFixed(this.accuracy);
    }
    mathOperation(a, b, operation) {
        const accuracyNumber = 10 ** this.accuracy;
        const newA = this.toFixed(a) * accuracyNumber;
        const newB = this.toFixed(b) * accuracyNumber;
        switch (operation) {
            case '-': {
                return Math.round(newA - newB) / accuracyNumber;
            }
            case '+': {
                return Math.round(newA + newB) / accuracyNumber;
            }
            case '*': {
                return (newA * newB) / accuracyNumber ** 2;
            }
            case '/': {
                return newA / newB;
            }
        }
        return NaN;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXR0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29tcG9uZW50cy9zcmMvbGliL2NvbXBvbmVudHMvc3BsaXR0ZXIvc3BsaXR0ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWtDLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUcvRCxNQUFNLE9BQU8sb0JBQW9CO0lBQWpDO1FBQ0UsMEJBQXFCLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7UUFFbEUsYUFBUSxHQUFHLENBQUMsQ0FBQztJQThCZixDQUFDO0lBNUJTLE9BQU8sQ0FBQyxHQUFXO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sYUFBYSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsU0FBaUI7UUFDMUQsTUFBTSxjQUFjLEdBQUcsRUFBRSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDM0MsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxjQUFjLENBQUM7UUFDOUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxjQUFjLENBQUM7UUFFOUMsUUFBUSxTQUFTLEVBQUU7WUFDakIsS0FBSyxHQUFHLENBQUMsQ0FBQztnQkFDUixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLGNBQWMsQ0FBQzthQUNqRDtZQUVELEtBQUssR0FBRyxDQUFDLENBQUM7Z0JBQ1IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxjQUFjLENBQUM7YUFDakQ7WUFFRCxLQUFLLEdBQUcsQ0FBQyxDQUFDO2dCQUNSLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsY0FBYyxJQUFJLENBQUMsQ0FBQzthQUM1QztZQUVELEtBQUssR0FBRyxDQUFDLENBQUM7Z0JBQ1IsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDO2FBQ3BCO1NBQ0Y7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgUmVwbGF5U3ViamVjdCwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUHJpem1TcGxpdHRlckFyZWFDb21wb25lbnQgfSBmcm9tICcuL2FyZWEvYXJlYS5jb21wb25lbnQnO1xuXG5leHBvcnQgY2xhc3MgUHJpem1TcGxpdHRlclNlcnZpY2Uge1xuICBhcmVhSW5wdXRTaXplQ2hhbmdlJCQgPSBuZXcgU3ViamVjdDxQcml6bVNwbGl0dGVyQXJlYUNvbXBvbmVudD4oKTtcblxuICBhY2N1cmFjeSA9IDg7XG5cbiAgcHJpdmF0ZSB0b0ZpeGVkKG51bTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gK251bS50b0ZpeGVkKHRoaXMuYWNjdXJhY3kpO1xuICB9XG5cbiAgcHVibGljIG1hdGhPcGVyYXRpb24oYTogbnVtYmVyLCBiOiBudW1iZXIsIG9wZXJhdGlvbjogc3RyaW5nKTogbnVtYmVyIHtcbiAgICBjb25zdCBhY2N1cmFjeU51bWJlciA9IDEwICoqIHRoaXMuYWNjdXJhY3k7XG4gICAgY29uc3QgbmV3QSA9IHRoaXMudG9GaXhlZChhKSAqIGFjY3VyYWN5TnVtYmVyO1xuICAgIGNvbnN0IG5ld0IgPSB0aGlzLnRvRml4ZWQoYikgKiBhY2N1cmFjeU51bWJlcjtcblxuICAgIHN3aXRjaCAob3BlcmF0aW9uKSB7XG4gICAgICBjYXNlICctJzoge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChuZXdBIC0gbmV3QikgLyBhY2N1cmFjeU51bWJlcjtcbiAgICAgIH1cblxuICAgICAgY2FzZSAnKyc6IHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQobmV3QSArIG5ld0IpIC8gYWNjdXJhY3lOdW1iZXI7XG4gICAgICB9XG5cbiAgICAgIGNhc2UgJyonOiB7XG4gICAgICAgIHJldHVybiAobmV3QSAqIG5ld0IpIC8gYWNjdXJhY3lOdW1iZXIgKiogMjtcbiAgICAgIH1cblxuICAgICAgY2FzZSAnLyc6IHtcbiAgICAgICAgcmV0dXJuIG5ld0EgLyBuZXdCO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gTmFOO1xuICB9XG59XG4iXX0=