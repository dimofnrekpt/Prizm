import { coerceNumberProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Inject, Input, Output, } from '@angular/core';
import { AsyncSubject, Observable } from 'rxjs';
import { PolymorphOutletDirective } from '../../directives';
import { PrizmAbstractTestId } from '../../abstract/interactive';
import { PRIZM_PAGINATOR } from '../../tokens';
import { prizmI18nInitWithKey } from '../../services';
import { CommonModule } from '@angular/common';
import { PrizmCallFuncPipe, PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';
import { PrizmIconComponent } from '../icon';
import { PrizmInputSelectModule } from '../dropdowns/select';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { PrizmButtonModule } from '../button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../dropdowns/select/input-select.component";
import * as i3 from "../input/common/input-layout/input-layout.component";
import * as i4 from "@angular/forms";
import * as i5 from "../button/button.component";
import * as i6 from "rxjs";
export class PrizmPaginatorComponent extends PrizmAbstractTestId {
    /** The length of the total number of items that are being paginated. Defaulted to 0. */
    get totalRecords() {
        return this.paginatorType === 'finite' ? this._totalRecords : null;
    }
    set totalRecords(value) {
        this._totalRecords = Math.max(coerceNumberProperty(value), 0);
        this.changeDetectorRef.markForCheck();
    }
    /** Number of items to display on a page. */
    get rows() {
        return this._rows;
    }
    set rows(value) {
        this._rows = Math.max(coerceNumberProperty(value), 0);
        if (!this._rows) {
            this._rows = this.rowsCountOptions[0];
        }
        this.changeDetectorRef.markForCheck();
    }
    /** The 1-based page index of the displayed list of items. Defaulted to 1. */
    get page() {
        return this.currentPage;
    }
    set page(value) {
        this.currentPage = Math.max(coerceNumberProperty(value), 1);
        this.changeDetectorRef.markForCheck();
    }
    constructor(paginator$, changeDetectorRef) {
        super();
        this.paginator$ = paginator$;
        this.changeDetectorRef = changeDetectorRef;
        this.paginatorType = 'finite';
        this.textOnPage = 'Строк на странице';
        this._totalRecords = 0;
        // Сколько номеров видно на экране
        this.pageLinkSize = Number.POSITIVE_INFINITY;
        this.showMoreDisabled = false;
        // disabled
        this.disabled = false;
        this.paginatorOptions = {
            noRowsSelector: false,
            noRowsSelectorLabel: false,
            noInfo: false,
            noPages: false,
        };
        this.leftButtonLabel = '';
        this.rightButtonLabel = '';
        this.moreButtonLabel = 'Показать еще';
        this.rowsCountOptions = [];
        this.paginatorChange = new EventEmitter();
        this.pageChange = new EventEmitter();
        this.rowsChange = new EventEmitter();
        this.testId_ = 'ui_paginator';
        /**
         * The 1-based page index of the displayed list of items.
         */
        this.currentPage = 1;
        // Количесвто пакетов = Суммарное количество данных / Сколько данных в одном пакете
        this.pagesCount = 0;
        // `AsyncSubject` used so what late subscribers notified immediately.
        this.initialized$$ = new AsyncSubject();
        this.initialized = this.initialized$$.asObservable();
    }
    ngOnInit() {
        this.paginationGenerator();
        this.initialized$$.next();
        this.initialized$$.complete();
    }
    /**
     * Updates the list of page options to display to the user.
     */
    paginationGenerator() {
        if (this.isDataValid) {
            const allNumbers = new Array(this.pagesCount).fill(0).map((page, i) => i + 1);
            let mid;
            if (this.currentPage - Math.ceil((this.pageLinkSize - 1) / 2) <= 1) {
                mid = allNumbers.filter(item => item <= this.pageLinkSize);
            }
            else if (this.currentPage + Math.ceil((this.pageLinkSize - 1) / 2) >= this.pagesCount) {
                mid = allNumbers.filter(item => item > this.pagesCount - this.pageLinkSize);
            }
            else {
                mid = allNumbers.filter(item => item >= this.currentPage - Math.ceil((this.pageLinkSize - 1) / 2) &&
                    item <= this.currentPage + Math.floor((this.pageLinkSize - 1) / 2));
            }
            this.changeDetectorRef.markForCheck();
            return {
                mid: mid,
                left: mid[0] === 1 ? null : 1,
                right: mid[mid.length - 1] === this.pagesCount ? null : this.pagesCount,
            };
        }
        return null;
    }
    get realTotalRecord() {
        return this.paginatorType === 'infinite' ? this.rows * (this.currentPage + 1) : this.totalRecords;
    }
    /**
     * Tries to normalize paginator configuration.
     */
    get isDataValid() {
        if (!this.rows)
            return false;
        if (!this.totalRecords)
            return false;
        this.pagesCount = Math.ceil(this.totalRecords / this.rows);
        this.currentPage = Math.min(this.currentPage, this.pagesCount) || 1;
        return true;
    }
    changePage(page) {
        const prev = this.currentPage;
        this.page = page;
        // Emit only if real value was changed by the setter
        if (this.currentPage !== prev) {
            this.emitPageChange();
        }
    }
    increase() {
        this.changePage(this.page + 1);
    }
    decrease() {
        this.changePage(this.page - 1);
    }
    toLastPage() {
        this.changePage(this.pagesCount);
    }
    toFirstPage() {
        this.changePage(0);
    }
    emitPageChange() {
        this.pageChange.emit(this.currentPage);
        this.emitPaginatorChanges();
    }
    emitPaginatorChanges() {
        this.paginatorChange.emit({
            page: this.currentPage,
            first: (this.currentPage - 1) * this.rows + 1,
            rows: this.rows,
            pagesCount: this.paginatorType === 'infinite' ? null : this.pagesCount,
        });
    }
    changeRows(rows) {
        if (this.rows === rows)
            return;
        this.rows = rows;
        this.paginationGenerator();
        this.rowsChange.emit(this.rows);
        this.emitPaginatorChanges();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmPaginatorComponent, deps: [{ token: PRIZM_PAGINATOR }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmPaginatorComponent, isStandalone: true, selector: "prizm-paginator", inputs: { paginatorType: "paginatorType", textOnPage: "textOnPage", totalRecords: "totalRecords", pageLinkSize: "pageLinkSize", showMoreDisabled: "showMoreDisabled", disabled: "disabled", rows: "rows", page: "page", paginatorOptions: "paginatorOptions", leftButtonLabel: "leftButtonLabel", rightButtonLabel: "rightButtonLabel", moreButtonLabel: "moreButtonLabel", rowsCountOptions: "rowsCountOptions" }, outputs: { paginatorChange: "paginatorChange", pageChange: "pageChange", rowsChange: "rowsChange" }, providers: [...prizmI18nInitWithKey(PRIZM_PAGINATOR, 'paginator')], usesInheritance: true, ngImport: i0, template: "<div class=\"container\">\n  <div class=\"content\">\n    <span\n      class=\"rows rows__count\"\n      *ngIf=\"!paginatorOptions?.noRowsSelector && !paginatorOptions?.noRowsSelectorLabel\"\n    >\n      <ng-container *polymorphOutlet=\"textOnPage as title\">\n        {{ title }}\n      </ng-container>\n    </span>\n    <div class=\"rows-selector\" *ngIf=\"!paginatorOptions?.noRowsSelector\">\n      <prizm-input-layout [forceClear]=\"false\" [outer]=\"true\" label=\"\" size=\"s\">\n        <prizm-input-select\n          [items]=\"$any(this.rowsCountOptions?.length) > 0 ? this.rowsCountOptions : [rows]\"\n          [disabled]=\"disabled\"\n          [ngModel]=\"rows\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          [nullContent]=\"$any(null)\"\n          (ngModelChange)=\"changeRows($event)\"\n        ></prizm-input-select>\n      </prizm-input-layout>\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <span class=\"rows rows__show\" *ngIf=\"!paginatorOptions?.noInfo\" [hidden]=\"disabled\">\n      {{ paginator$ | async | prizmPluck : ['linesShown'] }} {{ (currentPage - 1) * rows + 1 }}-{{\n        currentPage * rows > $any(totalRecords) ? totalRecords : currentPage * rows\n      }}\n      \u0438\u0437 {{ realTotalRecord }}\n    </span>\n    <div\n      class=\"paginator paginator__finite\"\n      *ngIf=\"paginatorType === 'finite' && paginationGenerator() as pagingData\"\n    >\n      <button\n        class=\"control control_left\"\n        *ngIf=\"paginatorOptions.noToFirstPageBtn ?? true\"\n        [icon]=\"'chevrons-double-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"toFirstPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <button\n        class=\"control control_left\"\n        *ngIf=\"!leftButtonLabel; else leftLabelBtn\"\n        [icon]=\"'arrows-chevron-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"decrease()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #leftLabelBtn>\n        <button\n          class=\"control control_left\"\n          *ngIf=\"leftButtonLabel\"\n          [icon]=\"'arrows-chevron-left'\"\n          [disabled]=\"disabled || currentPage === 1\"\n          (click)=\"decrease()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ leftButtonLabel }}\n        </button>\n      </ng-template>\n\n      <ng-container *ngIf=\"!paginatorOptions?.noPages\">\n        <ng-container *ngIf=\"pagingData.left\">\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.left)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.left }}\n          </button>\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.left + 1 !== pagingData.mid[0]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n        </ng-container>\n\n        <button\n          class=\"page\"\n          *ngFor=\"let page of pagingData.mid\"\n          [disabled]=\"disabled\"\n          [pseudoPressed]=\"page === currentPage\"\n          (click)=\"changePage(page)\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ page }}\n        </button>\n\n        <ng-container *ngIf=\"pagingData.right\">\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.right - 1 !== pagingData.mid[pagingData.mid.length - 1]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.right)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.right }}\n          </button>\n        </ng-container>\n      </ng-container>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"!rightButtonLabel; else rightLabelBtn\"\n        [icon]=\"'arrows-chevron-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"increase()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #rightLabelBtn>\n        <button\n          class=\"control_right\"\n          [iconRight]=\"'arrows-chevron-right'\"\n          [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n          (click)=\"increase()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ rightButtonLabel }}\n        </button>\n      </ng-template>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"paginatorOptions.noToLastPageBtn ?? true\"\n        [icon]=\"'chevrons-double-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"toLastPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </div>\n\n    <div class=\"paginator paginator__infinite\" *ngIf=\"paginatorType === 'infinite'\">\n      <button\n        [disabled]=\"disabled || showMoreDisabled\"\n        (click)=\"increase()\"\n        prizmButton\n        appearanceType=\"ghost\"\n        appearance=\"primary\"\n        size=\"m\"\n      >\n        {{ moreButtonLabel }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [":host{height:40px;display:flex}:host button{outline:none;border:none;background:transparent;cursor:pointer}:host .container{height:100%;width:100%;padding:16px;background:var(--prizm-v3-background-fill-primary);display:flex;justify-content:space-between;align-items:center;overflow:hidden}:host .container .content{display:flex;align-items:center}:host .container span{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .container .rows{font-weight:600;font-size:12px;line-height:16px}:host .container .rows__count{margin-right:12px;color:var(--prizm-v3-text-icon-secondary)}:host .container .rows__show{margin-right:16px;color:var(--prizm-v3-text-icon-tertiary)}:host .container .rows-selector{margin-right:12px;width:100px;min-width:100px}:host .container .paginator{display:flex}:host .container .paginator .page{height:32px;min-width:40px;margin:0 4px}:host .container .paginator .dots{height:32px;width:32px;display:flex;align-items:flex-end;justify-content:center;color:var(--prizm-v3-button-secondary-solid-default)}:host .container .paginator .dots_disabled{cursor:not-allowed;color:var(--prizm-v3-text-icon-disable)}:host .container .paginator .control_left{margin-right:16px}:host .container .paginator .control_right{margin-left:16px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "ngmodule", type: PrizmInputSelectModule }, { kind: "component", type: i2.PrizmSelectInputComponent, selector: "prizm-input-select", inputs: ["prizmHintDirection", "prizmHintCanShow", "items", "dropdownScroll", "dropdownStyles", "dropdownClasses", "searchable", "icon", "minDropdownHeight", "maxDropdownHeight", "placeholder", "dropdownWidth", "search", "transformer", "searchMatcher", "emptyContent", "nullContent", "stringify", "identityMatcher", "valueTemplate", "listItemTemplate"], outputs: ["searchChange"], exportAs: ["prizmSelectInput"] }, { kind: "component", type: i3.PrizmInputLayoutComponent, selector: "prizm-input-layout", inputs: ["label", "size", "status", "outer", "clearButton", "border", "position", "forceClear"], outputs: ["clear"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "component", type: i5.PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "pipe", type: PrizmPluckPipe, name: "prizmPluck" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmPaginatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-paginator', changeDetection: ChangeDetectionStrategy.OnPush, providers: [...prizmI18nInitWithKey(PRIZM_PAGINATOR, 'paginator')], standalone: true, imports: [
                        CommonModule,
                        PrizmCallFuncPipe,
                        PolymorphOutletDirective,
                        PrizmLetDirective,
                        PrizmIconComponent,
                        PrizmInputSelectModule,
                        ReactiveFormsModule,
                        FormsModule,
                        PrizmButtonModule,
                        PrizmPluckPipe,
                    ], template: "<div class=\"container\">\n  <div class=\"content\">\n    <span\n      class=\"rows rows__count\"\n      *ngIf=\"!paginatorOptions?.noRowsSelector && !paginatorOptions?.noRowsSelectorLabel\"\n    >\n      <ng-container *polymorphOutlet=\"textOnPage as title\">\n        {{ title }}\n      </ng-container>\n    </span>\n    <div class=\"rows-selector\" *ngIf=\"!paginatorOptions?.noRowsSelector\">\n      <prizm-input-layout [forceClear]=\"false\" [outer]=\"true\" label=\"\" size=\"s\">\n        <prizm-input-select\n          [items]=\"$any(this.rowsCountOptions?.length) > 0 ? this.rowsCountOptions : [rows]\"\n          [disabled]=\"disabled\"\n          [ngModel]=\"rows\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          [nullContent]=\"$any(null)\"\n          (ngModelChange)=\"changeRows($event)\"\n        ></prizm-input-select>\n      </prizm-input-layout>\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <span class=\"rows rows__show\" *ngIf=\"!paginatorOptions?.noInfo\" [hidden]=\"disabled\">\n      {{ paginator$ | async | prizmPluck : ['linesShown'] }} {{ (currentPage - 1) * rows + 1 }}-{{\n        currentPage * rows > $any(totalRecords) ? totalRecords : currentPage * rows\n      }}\n      \u0438\u0437 {{ realTotalRecord }}\n    </span>\n    <div\n      class=\"paginator paginator__finite\"\n      *ngIf=\"paginatorType === 'finite' && paginationGenerator() as pagingData\"\n    >\n      <button\n        class=\"control control_left\"\n        *ngIf=\"paginatorOptions.noToFirstPageBtn ?? true\"\n        [icon]=\"'chevrons-double-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"toFirstPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <button\n        class=\"control control_left\"\n        *ngIf=\"!leftButtonLabel; else leftLabelBtn\"\n        [icon]=\"'arrows-chevron-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"decrease()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #leftLabelBtn>\n        <button\n          class=\"control control_left\"\n          *ngIf=\"leftButtonLabel\"\n          [icon]=\"'arrows-chevron-left'\"\n          [disabled]=\"disabled || currentPage === 1\"\n          (click)=\"decrease()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ leftButtonLabel }}\n        </button>\n      </ng-template>\n\n      <ng-container *ngIf=\"!paginatorOptions?.noPages\">\n        <ng-container *ngIf=\"pagingData.left\">\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.left)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.left }}\n          </button>\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.left + 1 !== pagingData.mid[0]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n        </ng-container>\n\n        <button\n          class=\"page\"\n          *ngFor=\"let page of pagingData.mid\"\n          [disabled]=\"disabled\"\n          [pseudoPressed]=\"page === currentPage\"\n          (click)=\"changePage(page)\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ page }}\n        </button>\n\n        <ng-container *ngIf=\"pagingData.right\">\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.right - 1 !== pagingData.mid[pagingData.mid.length - 1]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.right)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.right }}\n          </button>\n        </ng-container>\n      </ng-container>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"!rightButtonLabel; else rightLabelBtn\"\n        [icon]=\"'arrows-chevron-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"increase()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #rightLabelBtn>\n        <button\n          class=\"control_right\"\n          [iconRight]=\"'arrows-chevron-right'\"\n          [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n          (click)=\"increase()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ rightButtonLabel }}\n        </button>\n      </ng-template>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"paginatorOptions.noToLastPageBtn ?? true\"\n        [icon]=\"'chevrons-double-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"toLastPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </div>\n\n    <div class=\"paginator paginator__infinite\" *ngIf=\"paginatorType === 'infinite'\">\n      <button\n        [disabled]=\"disabled || showMoreDisabled\"\n        (click)=\"increase()\"\n        prizmButton\n        appearanceType=\"ghost\"\n        appearance=\"primary\"\n        size=\"m\"\n      >\n        {{ moreButtonLabel }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [":host{height:40px;display:flex}:host button{outline:none;border:none;background:transparent;cursor:pointer}:host .container{height:100%;width:100%;padding:16px;background:var(--prizm-v3-background-fill-primary);display:flex;justify-content:space-between;align-items:center;overflow:hidden}:host .container .content{display:flex;align-items:center}:host .container span{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .container .rows{font-weight:600;font-size:12px;line-height:16px}:host .container .rows__count{margin-right:12px;color:var(--prizm-v3-text-icon-secondary)}:host .container .rows__show{margin-right:16px;color:var(--prizm-v3-text-icon-tertiary)}:host .container .rows-selector{margin-right:12px;width:100px;min-width:100px}:host .container .paginator{display:flex}:host .container .paginator .page{height:32px;min-width:40px;margin:0 4px}:host .container .paginator .dots{height:32px;width:32px;display:flex;align-items:flex-end;justify-content:center;color:var(--prizm-v3-button-secondary-solid-default)}:host .container .paginator .dots_disabled{cursor:not-allowed;color:var(--prizm-v3-text-icon-disable)}:host .container .paginator .control_left{margin-right:16px}:host .container .paginator .control_right{margin-left:16px}\n"] }]
        }], ctorParameters: function () { return [{ type: i6.Observable, decorators: [{
                    type: Inject,
                    args: [PRIZM_PAGINATOR]
                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { paginatorType: [{
                type: Input
            }], textOnPage: [{
                type: Input
            }], totalRecords: [{
                type: Input
            }], pageLinkSize: [{
                type: Input
            }], showMoreDisabled: [{
                type: Input
            }], disabled: [{
                type: Input
            }], rows: [{
                type: Input
            }], page: [{
                type: Input
            }], paginatorOptions: [{
                type: Input
            }], leftButtonLabel: [{
                type: Input
            }], rightButtonLabel: [{
                type: Input
            }], moreButtonLabel: [{
                type: Input
            }], rowsCountOptions: [{
                type: Input
            }], paginatorChange: [{
                type: Output
            }], pageChange: [{
                type: Output
            }], rowsChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,