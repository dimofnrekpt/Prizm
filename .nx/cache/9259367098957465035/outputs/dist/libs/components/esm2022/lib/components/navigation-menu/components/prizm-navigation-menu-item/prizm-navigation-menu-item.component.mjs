import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, TemplateRef, } from '@angular/core';
import { PrizmAbstractTestId } from '@prizm-ui/core';
import { PrizmIconsSvgModule } from '@prizm-ui/icons';
import { NgIf, NgTemplateOutlet } from '@angular/common';
import { PrizmInputCommonModule } from '../../../input/common/input-common.module';
import { PrizmHoveredModule } from '../../../../directives/hovered';
import { PrizmHintDirective } from '../../../../directives';
import { PrizmButtonComponent } from '../../../button';
import { prizmIsTextOverflow } from '../../../../util';
import * as i0 from "@angular/core";
import * as i1 from "@prizm-ui/icons";
import * as i2 from "../../../../directives/hovered/hovered.directive";
export class PrizmNavigationMenuItemComponent extends PrizmAbstractTestId {
    get expandButtonVisible() {
        return this.mode === 'rubricator' ? !!this.item.isRubricator : this.isExpandable;
    }
    get goToButtonsVisible() {
        this.item.breadcrumbs = this.item.breadcrumbs ?? [];
        return this.mode === 'folder' && this.item.breadcrumbs.length > 1;
    }
    constructor(cdr) {
        super();
        this.cdr = cdr;
        this.interaction = new EventEmitter();
        this.toggleExpanded = new EventEmitter();
        this.goToParentItem = new EventEmitter();
        this.goToRootItem = new EventEmitter();
        this.prizmIsTextOverflow = prizmIsTextOverflow;
        this.isHovered = false;
        this.testId_ = 'ui_navigation_menu_item';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmNavigationMenuItemComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmNavigationMenuItemComponent, isStandalone: true, selector: "prizm-navigation-menu-item", inputs: { itemExtraTemplate: "itemExtraTemplate", isExpandable: "isExpandable", isExpanded: "isExpanded", isActive: "isActive", item: "item", mode: "mode", showGoToButtons: "showGoToButtons" }, outputs: { interaction: "interaction", toggleExpanded: "toggleExpanded", goToParentItem: "goToParentItem", goToRootItem: "goToRootItem" }, usesInheritance: true, ngImport: i0, template: "<div\n  class=\"prizm-navigation-menu-item\"\n  [class.prizm-navigation-menu-item_active]=\"isActive\"\n  [class.prizm-navigation-menu-item_hovered]=\"isHovered\"\n  [class.prizm-navigation-menu-item_expandable]=\"isExpandable\"\n  [tabindex]=\"0\"\n  [prizmHint]=\"item.text\"\n  [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\"\n  (keydown.space)=\"interaction.emit(item)\"\n  (keydown.enter)=\"interaction.emit(item)\"\n  (click)=\"interaction.emit(item)\"\n  (prizmHoveredChange)=\"isHovered = $event\"\n>\n  <prizm-icons-svg\n    class=\"prizm-navigation-menu-item__icon\"\n    *ngIf=\"item.icon\"\n    [name]=\"item.icon\"\n  ></prizm-icons-svg>\n  <p class=\"prizm-navigation-menu-item__text\" #elem>\n    {{ item.text }}\n  </p>\n  <div class=\"prizm-navigation-menu-item__extra\">\n    <ng-container\n      [ngTemplateOutlet]=\"item.extraTemplate || itemExtraTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: item, isHovered: isHovered }\"\n    ></ng-container>\n  </div>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-corner-left-up'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToParentItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-arrow-up-level'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToRootItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    class=\"expand-button\"\n    *ngIf=\"expandButtonVisible\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    [size]=\"'m'\"\n    [icon]=\"isExpanded ? 'chevrons-down' : 'chevrons-right'\"\n    [class.t-button_expanded]=\"isExpanded\"\n    (click)=\"$event.stopPropagation(); toggleExpanded.emit(item)\"\n    prizmIconButton\n  ></button>\n</div>\n", styles: [":host{width:100%}.prizm-navigation-menu-item{display:flex;align-items:center;flex:1;height:var(--prizm-navigation-menu__item-height);outline:none;padding-right:8px;padding-left:calc(4px + (var(--prizm-tree-item-indent, 24) * var(--prizm-tree-item-indent-level)) * 1px);border-left:4px solid transparent;font-size:14px;font-weight:400;line-height:16px;color:var(--prizm-v3-text-icon-secondary);cursor:pointer}.prizm-navigation-menu-item:not(.prizm-navigation-menu-item_active):hover,.prizm-navigation-menu-item:not(.prizm-navigation-menu-item_active):focus{background:var(--prizm-v3-table-fill-row-hover)}.prizm-navigation-menu-item_active{background:var(--prizm-v3-table-fill-row-active);border-left-color:var(--prizm-navigation-active-row-marker-color, var(--prizm-v3-status-info-primary-default))}.prizm-navigation-menu-item__icon{flex-basis:24px;padding-left:8px}.prizm-navigation-menu-item__text{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1;padding:0 4px;font-weight:400;font-size:14px;line-height:16px;margin:0}.prizm-navigation-menu-item .expand-button{transition-property:transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.prizm-navigation-menu-item .expand-button_expanded{transform:rotate(90deg)}\n"], dependencies: [{ kind: "ngmodule", type: PrizmIconsSvgModule }, { kind: "component", type: i1.PrizmIconsSvgComponent, selector: "prizm-icons-svg", inputs: ["name", "color", "size"] }, { kind: "ngmodule", type: PrizmHoveredModule }, { kind: "directive", type: i2.PrizmHoveredDirective, selector: "[prizmHoveredChange]", outputs: ["prizmHoveredChange"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: PrizmInputCommonModule }, { kind: "component", type: PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmNavigationMenuItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-navigation-menu-item', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        PrizmIconsSvgModule,
                        PrizmHoveredModule,
                        NgIf,
                        NgTemplateOutlet,
                        PrizmInputCommonModule,
                        PrizmButtonComponent,
                        PrizmHintDirective,
                    ], template: "<div\n  class=\"prizm-navigation-menu-item\"\n  [class.prizm-navigation-menu-item_active]=\"isActive\"\n  [class.prizm-navigation-menu-item_hovered]=\"isHovered\"\n  [class.prizm-navigation-menu-item_expandable]=\"isExpandable\"\n  [tabindex]=\"0\"\n  [prizmHint]=\"item.text\"\n  [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\"\n  (keydown.space)=\"interaction.emit(item)\"\n  (keydown.enter)=\"interaction.emit(item)\"\n  (click)=\"interaction.emit(item)\"\n  (prizmHoveredChange)=\"isHovered = $event\"\n>\n  <prizm-icons-svg\n    class=\"prizm-navigation-menu-item__icon\"\n    *ngIf=\"item.icon\"\n    [name]=\"item.icon\"\n  ></prizm-icons-svg>\n  <p class=\"prizm-navigation-menu-item__text\" #elem>\n    {{ item.text }}\n  </p>\n  <div class=\"prizm-navigation-menu-item__extra\">\n    <ng-container\n      [ngTemplateOutlet]=\"item.extraTemplate || itemExtraTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: item, isHovered: isHovered }\"\n    ></ng-container>\n  </div>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-corner-left-up'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToParentItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-arrow-up-level'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToRootItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    class=\"expand-button\"\n    *ngIf=\"expandButtonVisible\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    [size]=\"'m'\"\n    [icon]=\"isExpanded ? 'chevrons-down' : 'chevrons-right'\"\n    [class.t-button_expanded]=\"isExpanded\"\n    (click)=\"$event.stopPropagation(); toggleExpanded.emit(item)\"\n    prizmIconButton\n  ></button>\n</div>\n", styles: [":host{width:100%}.prizm-navigation-menu-item{display:flex;align-items:center;flex:1;height:var(--prizm-navigation-menu__item-height);outline:none;padding-right:8px;padding-left:calc(4px + (var(--prizm-tree-item-indent, 24) * var(--prizm-tree-item-indent-level)) * 1px);border-left:4px solid transparent;font-size:14px;font-weight:400;line-height:16px;color:var(--prizm-v3-text-icon-secondary);cursor:pointer}.prizm-navigation-menu-item:not(.prizm-navigation-menu-item_active):hover,.prizm-navigation-menu-item:not(.prizm-navigation-menu-item_active):focus{background:var(--prizm-v3-table-fill-row-hover)}.prizm-navigation-menu-item_active{background:var(--prizm-v3-table-fill-row-active);border-left-color:var(--prizm-navigation-active-row-marker-color, var(--prizm-v3-status-info-primary-default))}.prizm-navigation-menu-item__icon{flex-basis:24px;padding-left:8px}.prizm-navigation-menu-item__text{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1;padding:0 4px;font-weight:400;font-size:14px;line-height:16px;margin:0}.prizm-navigation-menu-item .expand-button{transition-property:transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.prizm-navigation-menu-item .expand-button_expanded{transform:rotate(90deg)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { interaction: [{
                type: Output
            }], toggleExpanded: [{
                type: Output
            }], goToParentItem: [{
                type: Output
            }], goToRootItem: [{
                type: Output
            }], itemExtraTemplate: [{
                type: Input
            }], isExpandable: [{
                type: Input
            }], isExpanded: [{
                type: Input
            }], isActive: [{
                type: Input
            }], item: [{
                type: Input
            }], mode: [{
                type: Input
            }], showGoToButtons: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,