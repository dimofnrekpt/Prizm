import { ChangeDetectionStrategy, Component, inject, Input } from '@angular/core';
import { PrizmCallFuncPipe, PrizmDestroyService, PrizmLetDirective, PrizmToObservablePipe, } from '@prizm-ui/helpers';
import { PolymorphOutletDirective } from '../../../directives/polymorph';
import { PrizmInputSelectOptionDirective } from './input-select-option.directive';
import { AsyncPipe, NgIf } from '@angular/common';
import { PrizmHintDirective } from '../../../directives';
import { PrizmSelectInputComponent } from './input-select.component';
import * as i0 from "@angular/core";
export class PrizmSelectInputItemComponent {
    constructor() {
        this.parent = inject(PrizmSelectInputComponent);
    }
    isMostRelevant(items) {
        const idx = this.parent.items.findIndex(i => this.item === i);
        const wroteInputValue = this.parent.printing$.value;
        const valueFromItems = this.parent.value && this.parent.getValueFromItems(this.parent.value, items);
        const itIsNotCurrentValue = valueFromItems && wroteInputValue && !this.parent.searchMatcher(wroteInputValue, valueFromItems);
        const isCanSearch = this.parent.searchable;
        const hasNullValue = items[0] === null;
        const result = isCanSearch && itIsNotCurrentValue && ((hasNullValue && idx === 1) || (!hasNullValue && idx === 0));
        return !!result;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmSelectInputItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmSelectInputItemComponent, isStandalone: true, selector: "prizm-input-select-item", inputs: { item: "item" }, providers: [PrizmDestroyService], exportAs: ["prizmSelectInputItem"], ngImport: i0, template: "<div\n  class=\"item\"\n  #hostHint\n  [class.most-relevant]=\"isMostRelevant(parent.items)\"\n  [class.selected]=\"\n    item === parent.value ||\n    (item &&\n      parent.value &&\n      (parent.transformer(item) | prizmCallFunc : parent.identityMatcher : parent.value))\n  \"\n  [value]=\"item\"\n  prizmInputSelectOption\n>\n  <ng-container *ngIf=\"!parent.isNullish(item); else nullContentTemplate\">\n    <span\n      class=\"text\"\n      #elem\n      *prizmLet=\"\n        item | prizmCallFunc : parent.stringify : $any(parent.nullContent) | prizmToObservable | async as text\n      \"\n      [prizmHint]=\"text\"\n      [prizmHintHost]=\"hostHint\"\n      [prizmHintDirection]=\"parent.direction\"\n      [prizmHintCanShow]=\"$any(elem | prizmCallFunc : parent.prizmIsTextOverflow$ | async)\"\n    >\n      <ng-container\n        *polymorphOutlet=\"\n          parent.listItemTemplate ?? parent.valueTemplate as content;\n          context: {\n            $implicit: item,\n            value: item | prizmCallFunc : parent.transformer,\n            stringify: text\n          }\n        \"\n      >\n        {{ text }}\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <ng-template #nullContentTemplate>\n    <ng-container *ngIf=\"parent.nullContent\">\n      <ng-container *polymorphOutlet=\"parent.nullContent as content\">\n        {{ content }}\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</div>\n", styles: [":host{position:relative;z-index:0;display:block;width:100%}:host-context(span){display:inline}.placeholder:empty:before{content:\"-\";visibility:hidden}.item{display:flex;align-items:center;padding:var(--prizm-select-item-padding, 8px 16px);min-height:40px;background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));cursor:pointer;font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-item-text, var(--prizm-v3-text-icon-secondary))}.item:empty{display:none}.item .text{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.item.selected,.item.most-relevant{background:var(--prizm-select-item-selected-background, var(--prizm-v3-table-fill-row-active));color:var(--prizm-v3-text-icon-secondary)}.item:not(.selected):not(.most-relevant):hover{background:var(--prizm-select-item-hover-background, var(--prizm-v3-table-fill-row-hover));color:var(--prizm-v3-text-icon-secondary)}.block{background:var(--prizm-select-background, var(--prizm-v3-background-fill-overlay));border-radius:2px;border:none;padding:var(--prizm-select-padding, 8px 0)}.input-chips[readonly]{cursor:pointer}.empty-template{padding:var(--prizm-select-item-padding, 8px 16px);background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-empty-text, var(--prizm-v3-text-icon-secondary))}.icon-dropdown{color:var(--prizm-v3-button-secondary-solid-default);cursor:pointer;transition-property:transform;transition-property:all;transition-property:color,transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.icon-dropdown.opened{transform:rotate(180deg)}.icon-dropdown.active{color:var(--prizm-v3-button-primary-solid-active)}prizm-icon{color:var(--prizm-text-subscript)}.disabled{cursor:not-allowed;pointer-events:none}.list-search-item{padding:var(--prizm-select-item-padding, 8px 16px)}.list-search-item prizm-input-layout{width:100%}prizm-dropdown-host{display:flex}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PrizmInputSelectOptionDirective, selector: "[prizmInputSelectOption]", inputs: ["value"], outputs: ["selected"], exportAs: ["prizmInputSelectOption"] }, { kind: "pipe", type: PrizmCallFuncPipe, name: "prizmCallFunc" }, { kind: "directive", type: PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }, { kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "pipe", type: PrizmToObservablePipe, name: "prizmToObservable" }, { kind: "pipe", type: AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmSelectInputItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-input-select-item', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf,
                        PrizmInputSelectOptionDirective,
                        PrizmCallFuncPipe,
                        PrizmLetDirective,
                        PrizmHintDirective,
                        PolymorphOutletDirective,
                        PrizmToObservablePipe,
                        AsyncPipe,
                    ], providers: [PrizmDestroyService], exportAs: 'prizmSelectInputItem', template: "<div\n  class=\"item\"\n  #hostHint\n  [class.most-relevant]=\"isMostRelevant(parent.items)\"\n  [class.selected]=\"\n    item === parent.value ||\n    (item &&\n      parent.value &&\n      (parent.transformer(item) | prizmCallFunc : parent.identityMatcher : parent.value))\n  \"\n  [value]=\"item\"\n  prizmInputSelectOption\n>\n  <ng-container *ngIf=\"!parent.isNullish(item); else nullContentTemplate\">\n    <span\n      class=\"text\"\n      #elem\n      *prizmLet=\"\n        item | prizmCallFunc : parent.stringify : $any(parent.nullContent) | prizmToObservable | async as text\n      \"\n      [prizmHint]=\"text\"\n      [prizmHintHost]=\"hostHint\"\n      [prizmHintDirection]=\"parent.direction\"\n      [prizmHintCanShow]=\"$any(elem | prizmCallFunc : parent.prizmIsTextOverflow$ | async)\"\n    >\n      <ng-container\n        *polymorphOutlet=\"\n          parent.listItemTemplate ?? parent.valueTemplate as content;\n          context: {\n            $implicit: item,\n            value: item | prizmCallFunc : parent.transformer,\n            stringify: text\n          }\n        \"\n      >\n        {{ text }}\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <ng-template #nullContentTemplate>\n    <ng-container *ngIf=\"parent.nullContent\">\n      <ng-container *polymorphOutlet=\"parent.nullContent as content\">\n        {{ content }}\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</div>\n", styles: [":host{position:relative;z-index:0;display:block;width:100%}:host-context(span){display:inline}.placeholder:empty:before{content:\"-\";visibility:hidden}.item{display:flex;align-items:center;padding:var(--prizm-select-item-padding, 8px 16px);min-height:40px;background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));cursor:pointer;font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-item-text, var(--prizm-v3-text-icon-secondary))}.item:empty{display:none}.item .text{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.item.selected,.item.most-relevant{background:var(--prizm-select-item-selected-background, var(--prizm-v3-table-fill-row-active));color:var(--prizm-v3-text-icon-secondary)}.item:not(.selected):not(.most-relevant):hover{background:var(--prizm-select-item-hover-background, var(--prizm-v3-table-fill-row-hover));color:var(--prizm-v3-text-icon-secondary)}.block{background:var(--prizm-select-background, var(--prizm-v3-background-fill-overlay));border-radius:2px;border:none;padding:var(--prizm-select-padding, 8px 0)}.input-chips[readonly]{cursor:pointer}.empty-template{padding:var(--prizm-select-item-padding, 8px 16px);background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-empty-text, var(--prizm-v3-text-icon-secondary))}.icon-dropdown{color:var(--prizm-v3-button-secondary-solid-default);cursor:pointer;transition-property:transform;transition-property:all;transition-property:color,transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.icon-dropdown.opened{transform:rotate(180deg)}.icon-dropdown.active{color:var(--prizm-v3-button-primary-solid-active)}prizm-icon{color:var(--prizm-text-subscript)}.disabled{cursor:not-allowed;pointer-events:none}.list-search-item{padding:var(--prizm-select-item-padding, 8px 16px)}.list-search-item prizm-input-layout{width:100%}prizm-dropdown-host{display:flex}\n"] }]
        }], propDecorators: { item: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy9kcm9wZG93bnMvc2VsZWN0L2lucHV0LXNlbGVjdC1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29tcG9uZW50cy9zcmMvbGliL2NvbXBvbmVudHMvZHJvcGRvd25zL3NlbGVjdC9pbnB1dC1zZWxlY3QtaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2pCLHFCQUFxQixHQUN0QixNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7O0FBcUJyRSxNQUFNLE9BQU8sNkJBQTZCO0lBbkIxQztRQXFCVyxXQUFNLEdBQUcsTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUM7S0FlckQ7SUFiUSxjQUFjLENBQUMsS0FBVTtRQUM5QixNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlELE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztRQUNwRCxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BHLE1BQU0sbUJBQW1CLEdBQ3ZCLGNBQWMsSUFBSSxlQUFlLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDbkcsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDM0MsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQztRQUN2QyxNQUFNLE1BQU0sR0FDVixXQUFXLElBQUksbUJBQW1CLElBQUksQ0FBQyxDQUFDLFlBQVksSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV0RyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs4R0FoQlUsNkJBQTZCO2tHQUE3Qiw2QkFBNkIsZ0dBSDdCLENBQUMsbUJBQW1CLENBQUMsOERDN0JsQyxtNkNBZ0RBLHlxRUQ1QkksSUFBSSw2RkFDSiwrQkFBK0IsZ0pBQy9CLGlCQUFpQixzREFDakIsaUJBQWlCLHFHQUNqQixrQkFBa0IsMlVBQ2xCLHdCQUF3QiwySUFDeEIscUJBQXFCLHFEQUNyQixTQUFTOzsyRkFLQSw2QkFBNkI7a0JBbkJ6QyxTQUFTOytCQUNFLHlCQUF5QixtQkFHbEIsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1A7d0JBQ1AsSUFBSTt3QkFDSiwrQkFBK0I7d0JBQy9CLGlCQUFpQjt3QkFDakIsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLHdCQUF3Qjt3QkFDeEIscUJBQXFCO3dCQUNyQixTQUFTO3FCQUNWLGFBQ1UsQ0FBQyxtQkFBbUIsQ0FBQyxZQUN0QixzQkFBc0I7OEJBR3ZCLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIGluamVjdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFByaXptQ2FsbEZ1bmNQaXBlLFxuICBQcml6bURlc3Ryb3lTZXJ2aWNlLFxuICBQcml6bUxldERpcmVjdGl2ZSxcbiAgUHJpem1Ub09ic2VydmFibGVQaXBlLFxufSBmcm9tICdAcHJpem0tdWkvaGVscGVycyc7XG5pbXBvcnQgeyBQb2x5bW9ycGhPdXRsZXREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL3BvbHltb3JwaCc7XG5pbXBvcnQgeyBQcml6bUlucHV0U2VsZWN0T3B0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9pbnB1dC1zZWxlY3Qtb3B0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBBc3luY1BpcGUsIE5nSWYgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUHJpem1IaW50RGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBQcml6bVNlbGVjdElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1zZWxlY3QuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHJpem0taW5wdXQtc2VsZWN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtc2VsZWN0LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1zZWxlY3QtaXRlbS5jb21wb25lbnQubGVzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE5nSWYsXG4gICAgUHJpem1JbnB1dFNlbGVjdE9wdGlvbkRpcmVjdGl2ZSxcbiAgICBQcml6bUNhbGxGdW5jUGlwZSxcbiAgICBQcml6bUxldERpcmVjdGl2ZSxcbiAgICBQcml6bUhpbnREaXJlY3RpdmUsXG4gICAgUG9seW1vcnBoT3V0bGV0RGlyZWN0aXZlLFxuICAgIFByaXptVG9PYnNlcnZhYmxlUGlwZSxcbiAgICBBc3luY1BpcGUsXG4gIF0sXG4gIHByb3ZpZGVyczogW1ByaXptRGVzdHJveVNlcnZpY2VdLFxuICBleHBvcnRBczogJ3ByaXptU2VsZWN0SW5wdXRJdGVtJyxcbn0pXG5leHBvcnQgY2xhc3MgUHJpem1TZWxlY3RJbnB1dEl0ZW1Db21wb25lbnQ8VD4ge1xuICBASW5wdXQoKSBpdGVtITogVDtcbiAgcmVhZG9ubHkgcGFyZW50ID0gaW5qZWN0KFByaXptU2VsZWN0SW5wdXRDb21wb25lbnQpO1xuXG4gIHB1YmxpYyBpc01vc3RSZWxldmFudChpdGVtczogVFtdKTogYm9vbGVhbiB7XG4gICAgY29uc3QgaWR4ID0gdGhpcy5wYXJlbnQuaXRlbXMuZmluZEluZGV4KGkgPT4gdGhpcy5pdGVtID09PSBpKTtcbiAgICBjb25zdCB3cm90ZUlucHV0VmFsdWUgPSB0aGlzLnBhcmVudC5wcmludGluZyQudmFsdWU7XG4gICAgY29uc3QgdmFsdWVGcm9tSXRlbXMgPSB0aGlzLnBhcmVudC52YWx1ZSAmJiB0aGlzLnBhcmVudC5nZXRWYWx1ZUZyb21JdGVtcyh0aGlzLnBhcmVudC52YWx1ZSwgaXRlbXMpO1xuICAgIGNvbnN0IGl0SXNOb3RDdXJyZW50VmFsdWUgPVxuICAgICAgdmFsdWVGcm9tSXRlbXMgJiYgd3JvdGVJbnB1dFZhbHVlICYmICF0aGlzLnBhcmVudC5zZWFyY2hNYXRjaGVyKHdyb3RlSW5wdXRWYWx1ZSwgdmFsdWVGcm9tSXRlbXMpO1xuICAgIGNvbnN0IGlzQ2FuU2VhcmNoID0gdGhpcy5wYXJlbnQuc2VhcmNoYWJsZTtcbiAgICBjb25zdCBoYXNOdWxsVmFsdWUgPSBpdGVtc1swXSA9PT0gbnVsbDtcbiAgICBjb25zdCByZXN1bHQgPVxuICAgICAgaXNDYW5TZWFyY2ggJiYgaXRJc05vdEN1cnJlbnRWYWx1ZSAmJiAoKGhhc051bGxWYWx1ZSAmJiBpZHggPT09IDEpIHx8ICghaGFzTnVsbFZhbHVlICYmIGlkeCA9PT0gMCkpO1xuXG4gICAgcmV0dXJuICEhcmVzdWx0O1xuICB9XG59XG4iLCI8ZGl2XG4gIGNsYXNzPVwiaXRlbVwiXG4gICNob3N0SGludFxuICBbY2xhc3MubW9zdC1yZWxldmFudF09XCJpc01vc3RSZWxldmFudChwYXJlbnQuaXRlbXMpXCJcbiAgW2NsYXNzLnNlbGVjdGVkXT1cIlxuICAgIGl0ZW0gPT09IHBhcmVudC52YWx1ZSB8fFxuICAgIChpdGVtICYmXG4gICAgICBwYXJlbnQudmFsdWUgJiZcbiAgICAgIChwYXJlbnQudHJhbnNmb3JtZXIoaXRlbSkgfCBwcml6bUNhbGxGdW5jIDogcGFyZW50LmlkZW50aXR5TWF0Y2hlciA6IHBhcmVudC52YWx1ZSkpXG4gIFwiXG4gIFt2YWx1ZV09XCJpdGVtXCJcbiAgcHJpem1JbnB1dFNlbGVjdE9wdGlvblxuPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiIXBhcmVudC5pc051bGxpc2goaXRlbSk7IGVsc2UgbnVsbENvbnRlbnRUZW1wbGF0ZVwiPlxuICAgIDxzcGFuXG4gICAgICBjbGFzcz1cInRleHRcIlxuICAgICAgI2VsZW1cbiAgICAgICpwcml6bUxldD1cIlxuICAgICAgICBpdGVtIHwgcHJpem1DYWxsRnVuYyA6IHBhcmVudC5zdHJpbmdpZnkgOiAkYW55KHBhcmVudC5udWxsQ29udGVudCkgfCBwcml6bVRvT2JzZXJ2YWJsZSB8IGFzeW5jIGFzIHRleHRcbiAgICAgIFwiXG4gICAgICBbcHJpem1IaW50XT1cInRleHRcIlxuICAgICAgW3ByaXptSGludEhvc3RdPVwiaG9zdEhpbnRcIlxuICAgICAgW3ByaXptSGludERpcmVjdGlvbl09XCJwYXJlbnQuZGlyZWN0aW9uXCJcbiAgICAgIFtwcml6bUhpbnRDYW5TaG93XT1cIiRhbnkoZWxlbSB8IHByaXptQ2FsbEZ1bmMgOiBwYXJlbnQucHJpem1Jc1RleHRPdmVyZmxvdyQgfCBhc3luYylcIlxuICAgID5cbiAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgKnBvbHltb3JwaE91dGxldD1cIlxuICAgICAgICAgIHBhcmVudC5saXN0SXRlbVRlbXBsYXRlID8/IHBhcmVudC52YWx1ZVRlbXBsYXRlIGFzIGNvbnRlbnQ7XG4gICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgJGltcGxpY2l0OiBpdGVtLFxuICAgICAgICAgICAgdmFsdWU6IGl0ZW0gfCBwcml6bUNhbGxGdW5jIDogcGFyZW50LnRyYW5zZm9ybWVyLFxuICAgICAgICAgICAgc3RyaW5naWZ5OiB0ZXh0XG4gICAgICAgICAgfVxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICB7eyB0ZXh0IH19XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L3NwYW4+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxuZy10ZW1wbGF0ZSAjbnVsbENvbnRlbnRUZW1wbGF0ZT5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwicGFyZW50Lm51bGxDb250ZW50XCI+XG4gICAgICA8bmctY29udGFpbmVyICpwb2x5bW9ycGhPdXRsZXQ9XCJwYXJlbnQubnVsbENvbnRlbnQgYXMgY29udGVudFwiPlxuICAgICAgICB7eyBjb250ZW50IH19XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvZGl2PlxuIl19