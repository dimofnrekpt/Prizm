import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, HostBinding, Input, Output, QueryList, TemplateRef, ViewChild, } from '@angular/core';
import { animationFrameScheduler, Subject, Subscription } from 'rxjs';
import { debounceTime, observeOn, takeUntil, tap } from 'rxjs/operators';
import { PrizmTabsService } from './tabs.service';
import { PrizmTabComponent } from './components/tab.component';
import { PrizmTabMenuItemDirective } from './tab-menu-item.directive';
import { PrizmDropdownHostComponent } from '../dropdowns/dropdown-host';
import { PrizmCallFuncPipe, PrizmDestroyService, prizmEmptyQueryList, PrizmLetDirective, } from '@prizm-ui/helpers';
import { PrizmAbstractTestId } from '../../abstract/interactive';
import { CommonModule } from '@angular/common';
import { PolymorphOutletDirective, PrizmDropdownControllerModule, PrizmHintDirective, PrizmLifecycleModule, } from '../../directives';
import { PrizmButtonModule } from '../button';
import { PrizmDataListComponent } from '../data-list';
import { PrizmListingItemComponent } from '../listing-item';
import { PrizmCounterComponent } from '../counter';
import { PrizmIconModule } from '../icon';
import { PrizmIconTabsPipe } from './pipes/icon-tabs.pipe';
import { prizmIsTextOverflow$ } from '../../util';
import * as i0 from "@angular/core";
import * as i1 from "@prizm-ui/helpers";
import * as i2 from "./tabs.service";
import * as i3 from "@angular/common";
import * as i4 from "../../directives/lifecycle/lifecycle.directive";
import * as i5 from "../button/button.component";
import * as i6 from "../icon/icon.component";
export class PrizmTabsComponent extends PrizmAbstractTestId {
    set activeTabIndex(idx) {
        if (idx === this.tabsService.activeTabIdx)
            return;
        this.tabsService.updateActiveTab(idx);
    }
    get activeTabIndex() {
        return this.tabsService.activeTabIdx;
    }
    set canOpen(func) {
        this.tabsService.canOpenTab = func;
    }
    get canOpen() {
        return this.tabsService.canOpenTab;
    }
    constructor(cdRef, elRef, destroy$, tabsService) {
        super();
        this.cdRef = cdRef;
        this.elRef = elRef;
        this.destroy$ = destroy$;
        this.tabsService = tabsService;
        this.size = 'adaptive';
        this.canShowMenu = true;
        this.activeTabIndexChange = new EventEmitter();
        this.tabElements = prizmEmptyQueryList();
        this.menuElements = prizmEmptyQueryList();
        this.testId_ = 'ui_tabs';
        this.openLeft = false;
        this.openRight = false;
        this.isLeftBtnActive = false;
        this.isRightBtnActive = false;
        this.prizmIsTextOverflow$ = prizmIsTextOverflow$;
        this.mutationDetector$ = new Subject();
        this.subscription = new Subscription();
    }
    ngOnInit() {
        this.tabsService.initObservingTabsParent(this.tabsContainer.nativeElement);
        this.mutationObserver = new MutationObserver(() => this.mutationDetector$.next());
        this.resizeObserver = new ResizeObserver(() => this.mutationDetector$.next());
        this.mutationObserver.observe(this.tabsContainer.nativeElement, {
            attributes: true,
            characterData: true,
            childList: true,
        });
        this.resizeObserver.observe(this.tabsContainer.nativeElement);
        this.initTabClickListener();
        this.subscription.add(this.mutationDetector$
            .pipe(debounceTime(200), observeOn(animationFrameScheduler))
            .subscribe(() => this.overflowChecker()));
    }
    initTabClickListener() {
        this.tabsService.activeTabIdx$
            .pipe(tap(idx => {
            this.tabClickHandler(idx);
        }), takeUntil(this.destroy$))
            .subscribe();
    }
    ngOnDestroy() {
        this.mutationObserver.disconnect();
        this.resizeObserver.disconnect();
        this.mutationDetector$.complete();
        this.subscription.unsubscribe();
    }
    tabClickHandler(idx) {
        this.activeTabIndex = idx;
        this.activeTabIndexChange.emit(this.activeTabIndex);
        this.focusTabByIdx(idx);
    }
    increase() {
        const tabsContainerElement = this.tabsContainer.nativeElement;
        const scrollLeft = tabsContainerElement.scrollLeft + (1.5 * tabsContainerElement.offsetWidth) / this.tabsService.tabs.size;
        this.calculateControlsState(scrollLeft);
        tabsContainerElement.scrollLeft = scrollLeft;
    }
    decrease() {
        const tabsContainerElement = this.tabsContainer.nativeElement;
        const scrollLeft = tabsContainerElement.scrollLeft - (1.5 * tabsContainerElement.offsetWidth) / this.tabsService.tabs.size;
        this.calculateControlsState(scrollLeft);
        tabsContainerElement.scrollLeft = scrollLeft;
    }
    calculateControlsState(scrollLeft) {
        const tabsContainerElement = this.tabsContainer.nativeElement;
        const scrollWidth = tabsContainerElement.scrollWidth;
        const offsetWidth = tabsContainerElement.offsetWidth;
        this.isLeftBtnActive = scrollLeft > 20;
        this.isRightBtnActive = scrollWidth - offsetWidth - scrollLeft > 20;
    }
    overflowChecker() {
        if (!this.tabElements?.length)
            return;
        let tabsWidth = 0;
        const tabContainerElement = this.tabsContainer.nativeElement;
        this.tabElements.forEach(item => {
            tabsWidth += item?.el.nativeElement.clientWidth;
        });
        if (tabsWidth > tabContainerElement.clientWidth) {
            const scrollLeft = tabContainerElement.scrollLeft;
            if (scrollLeft === 0) {
                this.isRightBtnActive = true;
            }
            else {
                this.calculateControlsState(scrollLeft);
            }
        }
        else {
            this.isRightBtnActive = false;
            this.isLeftBtnActive = false;
            this.openLeft = false;
            this.openRight = false;
        }
        this.cdRef.markForCheck();
    }
    focusTabByIdx(idx) {
        if (!this.tabElements?.length)
            return;
        const selectedTabElement = this.tabElements.find((item, index) => index === idx)?.el.nativeElement;
        if (!selectedTabElement)
            return;
        this.tabsContainer.nativeElement.scrollLeft =
            selectedTabElement.offsetLeft -
                this.tabsContainer.nativeElement.offsetWidth / 2 +
                selectedTabElement.offsetWidth / 2;
        this.mutationDetector$.next();
    }
    reCalculatePositions() {
        (this.tabsDropdown ?? this.tabsMoreDropdown)?.reCalculatePositions();
    }
    closeTab(idx) {
        this.tabsService.getTabByIdx(idx)?.closeTab.emit();
        this.reCalculatePositions();
    }
    clickTab(index) {
        this.openLeft = this.openRight = false;
        this.tabClickHandler(index);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmTabsComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.PrizmDestroyService }, { token: i2.PrizmTabsService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.8", type: PrizmTabsComponent, isStandalone: true, selector: "prizm-tabs", inputs: { size: "size", activeTabIndex: "activeTabIndex", canShowMenu: "canShowMenu", canOpen: "canOpen" }, outputs: { activeTabIndexChange: "activeTabIndexChange" }, host: { properties: { "attr.data-size": "this.size" } }, providers: [PrizmTabsService, PrizmDestroyService], queries: [{ propertyName: "tabElements", predicate: PrizmTabComponent, descendants: true }, { propertyName: "menuElements", predicate: PrizmTabMenuItemDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: "tabsContainer", first: true, predicate: ["tabsContainer"], descendants: true, static: true }, { propertyName: "tabsDropdown", first: true, predicate: ["tabsDropdown"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"container\">\n  <div class=\"control\" [class.control_active]=\"isLeftBtnActive\">\n    <button\n      [icon]=\"'arrows-chevron-left'\"\n      (click)=\"decrease()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #dropdownMore=\"prizm-dropdown-host\"\n      *ngIf=\"canShowMenu && !isRightBtnActive\"\n      [(isOpen)]=\"openLeft\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = dropdownMore\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openLeft = !openLeft\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n  </div>\n\n  <div class=\"tabs\" #tabsContainer>\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"control\" *ngIf=\"canShowMenu\" [class.control_active]=\"isRightBtnActive\">\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #tabsDropdown\n      [(isOpen)]=\"openRight\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = tabsDropdown\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openRight = !openRight\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n    <button\n      [icon]=\"'arrows-chevron-right'\"\n      (click)=\"increase()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n  </div>\n\n  <ng-template #dropdown>\n    <prizm-data-list>\n      <div class=\"tabs-column prizm-tab-menu-container\" *prizmLet=\"tabElements | prizmIconTabs as hasIcons\">\n        <ng-container *ngFor=\"let tabElement of tabElements; let i = index\">\n          <ng-container *ngIf=\"tabElement as tab\">\n            <prizm-listing-item\n              [disabled]=\"$any(tab.disabled)\"\n              [selected]=\"activeTabIndex === i\"\n              (click)=\"clickTab(i)\"\n            >\n              <ng-container *ngIf=\"tab.icon || hasIcons\" leftBox>\n                <ng-container *ngIf=\"tab.icon as icon; else placeholder\">\n                  <ng-container *polymorphOutlet=\"icon; context: $any({ idx: i, tab: tab })\">\n                    <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n                  </ng-container>\n                </ng-container>\n                <ng-template #placeholder>\n                  <div class=\"icon-placeholder\"></div>\n                </ng-template>\n              </ng-container>\n\n              <ng-container>\n                <div\n                  class=\"tab-content\"\n                  #elem\n                  [prizmHint]=\"tab.content\"\n                  [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n                >\n                  {{ tab.content }}\n                </div>\n              </ng-container>\n\n              <ng-container rightBox>\n                <prizm-counter\n                  *ngIf=\"tab.count\"\n                  [value]=\"tab.count\"\n                  [status]=\"tab._counterOptions.status\"\n                  [disabled]=\"tab._counterOptions.disabled\"\n                  [maxValue]=\"tab._counterOptions.maxValue\"\n                ></prizm-counter>\n                <prizm-icon\n                  class=\"icon\"\n                  [class.hidden]=\"!tab.closable\"\n                  [iconClass]=\"'cancel-close'\"\n                  [size]=\"16\"\n                  (click)=\"closeTab($any(tabElement.idx))\"\n                ></prizm-icon>\n              </ng-container>\n            </prizm-listing-item>\n          </ng-container>\n        </ng-container>\n      </div>\n    </prizm-data-list>\n  </ng-template>\n</div>\n", styles: [":host{width:100%;display:flex;align-items:flex-end;isolation:isolate}:host .container{height:100%;width:100%;display:flex;align-items:center;position:relative;overflow:hidden}:host .container .tabs{height:100%;display:flex;overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth}:host .container .tabs::-webkit-scrollbar{display:none}:host .container .control{height:100%;padding:8px;display:flex;align-items:center;gap:8px;background:var(--prizm-v3-background-fill-primary);position:absolute;opacity:0;z-index:100;pointer-events:none;transition:.2s}:host .container .control:first-child{left:0;border-right:1px solid var(--prizm-v3-background-stroke)}:host .container .control:last-child{right:0;border-left:1px solid var(--prizm-v3-background-stroke)}:host .container .control_active{opacity:1;pointer-events:auto;transition:.2s}.tabs-column{max-width:var(--prizm-tabs-dropdown-max-width, 360px);--prizm-listing-item-row-instruments-hover: var(--prizm-v3-table-fill-row-active);padding:8px 0;display:flex;flex-direction:column;background:var(--prizm-v3-background-fill-primary)}.tabs-column prizm-listing-item{max-width:100%}.tabs-column .tab-content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.hidden{visibility:hidden}.icon{color:var(--prizm-v3-button-secondary-solid-default)}.icon-placeholder{width:16px;height:16px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "ngmodule", type: PrizmLifecycleModule }, { kind: "directive", type: i4.PrizmLifecycleDirective, selector: "[prizmLifecycle], [prizmAfterViewInit], [prizmAfterContentInit], [prizmOnInit], [prizmOnDestroy]", outputs: ["prizmAfterViewInit", "prizmOnInit", "prizmAfterContentInit", "prizmOnDestroy"], exportAs: ["prizmLifecycle"] }, { kind: "component", type: PrizmDropdownHostComponent, selector: "prizm-dropdown-host", inputs: ["content", "prizmDropdownHostId", "prizmDropdownCustomContext", "delay", "canOpen", "closeByEsc", "closeOnOutsideClick", "prizmDropdownHost", "prizmDropdownHostWidth", "autoReposition", "placement", "isOpen", "dropdownStyles", "dropdownClasses"], outputs: ["isOpenChange"], exportAs: ["prizm-dropdown-host"] }, { kind: "pipe", type: PrizmCallFuncPipe, name: "prizmCallFunc" }, { kind: "directive", type: PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "component", type: i5.PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "ngmodule", type: PrizmDropdownControllerModule }, { kind: "component", type: PrizmDataListComponent, selector: "prizm-data-list", inputs: ["defaultStyle", "iconOff", "content", "scroll"] }, { kind: "component", type: PrizmListingItemComponent, selector: "prizm-listing-item", inputs: ["disabled", "selected"] }, { kind: "component", type: PrizmCounterComponent, selector: "prizm-counter", inputs: ["disabled", "class", "maxValue", "status", "value"] }, { kind: "ngmodule", type: PrizmIconModule }, { kind: "component", type: i6.PrizmIconComponent, selector: "prizm-icon", inputs: ["iconClass", "size"] }, { kind: "pipe", type: PrizmIconTabsPipe, name: "prizmIconTabs" }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmTabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-tabs', changeDetection: ChangeDetectionStrategy.OnPush, providers: [PrizmTabsService, PrizmDestroyService], standalone: true, imports: [
                        CommonModule,
                        PolymorphOutletDirective,
                        PrizmLifecycleModule,
                        PrizmDropdownHostComponent,
                        PrizmCallFuncPipe,
                        PrizmLetDirective,
                        PrizmButtonModule,
                        PrizmDropdownControllerModule,
                        PrizmDataListComponent,
                        PrizmTabComponent,
                        PrizmListingItemComponent,
                        PrizmCounterComponent,
                        PrizmIconModule,
                        PrizmIconTabsPipe,
                        PrizmHintDirective,
                    ], template: "<div class=\"container\">\n  <div class=\"control\" [class.control_active]=\"isLeftBtnActive\">\n    <button\n      [icon]=\"'arrows-chevron-left'\"\n      (click)=\"decrease()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #dropdownMore=\"prizm-dropdown-host\"\n      *ngIf=\"canShowMenu && !isRightBtnActive\"\n      [(isOpen)]=\"openLeft\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = dropdownMore\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openLeft = !openLeft\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n  </div>\n\n  <div class=\"tabs\" #tabsContainer>\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"control\" *ngIf=\"canShowMenu\" [class.control_active]=\"isRightBtnActive\">\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #tabsDropdown\n      [(isOpen)]=\"openRight\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = tabsDropdown\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openRight = !openRight\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n    <button\n      [icon]=\"'arrows-chevron-right'\"\n      (click)=\"increase()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n  </div>\n\n  <ng-template #dropdown>\n    <prizm-data-list>\n      <div class=\"tabs-column prizm-tab-menu-container\" *prizmLet=\"tabElements | prizmIconTabs as hasIcons\">\n        <ng-container *ngFor=\"let tabElement of tabElements; let i = index\">\n          <ng-container *ngIf=\"tabElement as tab\">\n            <prizm-listing-item\n              [disabled]=\"$any(tab.disabled)\"\n              [selected]=\"activeTabIndex === i\"\n              (click)=\"clickTab(i)\"\n            >\n              <ng-container *ngIf=\"tab.icon || hasIcons\" leftBox>\n                <ng-container *ngIf=\"tab.icon as icon; else placeholder\">\n                  <ng-container *polymorphOutlet=\"icon; context: $any({ idx: i, tab: tab })\">\n                    <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n                  </ng-container>\n                </ng-container>\n                <ng-template #placeholder>\n                  <div class=\"icon-placeholder\"></div>\n                </ng-template>\n              </ng-container>\n\n              <ng-container>\n                <div\n                  class=\"tab-content\"\n                  #elem\n                  [prizmHint]=\"tab.content\"\n                  [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n                >\n                  {{ tab.content }}\n                </div>\n              </ng-container>\n\n              <ng-container rightBox>\n                <prizm-counter\n                  *ngIf=\"tab.count\"\n                  [value]=\"tab.count\"\n                  [status]=\"tab._counterOptions.status\"\n                  [disabled]=\"tab._counterOptions.disabled\"\n                  [maxValue]=\"tab._counterOptions.maxValue\"\n                ></prizm-counter>\n                <prizm-icon\n                  class=\"icon\"\n                  [class.hidden]=\"!tab.closable\"\n                  [iconClass]=\"'cancel-close'\"\n                  [size]=\"16\"\n                  (click)=\"closeTab($any(tabElement.idx))\"\n                ></prizm-icon>\n              </ng-container>\n            </prizm-listing-item>\n          </ng-container>\n        </ng-container>\n      </div>\n    </prizm-data-list>\n  </ng-template>\n</div>\n", styles: [":host{width:100%;display:flex;align-items:flex-end;isolation:isolate}:host .container{height:100%;width:100%;display:flex;align-items:center;position:relative;overflow:hidden}:host .container .tabs{height:100%;display:flex;overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth}:host .container .tabs::-webkit-scrollbar{display:none}:host .container .control{height:100%;padding:8px;display:flex;align-items:center;gap:8px;background:var(--prizm-v3-background-fill-primary);position:absolute;opacity:0;z-index:100;pointer-events:none;transition:.2s}:host .container .control:first-child{left:0;border-right:1px solid var(--prizm-v3-background-stroke)}:host .container .control:last-child{right:0;border-left:1px solid var(--prizm-v3-background-stroke)}:host .container .control_active{opacity:1;pointer-events:auto;transition:.2s}.tabs-column{max-width:var(--prizm-tabs-dropdown-max-width, 360px);--prizm-listing-item-row-instruments-hover: var(--prizm-v3-table-fill-row-active);padding:8px 0;display:flex;flex-direction:column;background:var(--prizm-v3-background-fill-primary)}.tabs-column prizm-listing-item{max-width:100%}.tabs-column .tab-content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.hidden{visibility:hidden}.icon{color:var(--prizm-v3-button-secondary-solid-default)}.icon-placeholder{width:16px;height:16px}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.PrizmDestroyService }, { type: i2.PrizmTabsService }]; }, propDecorators: { size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], activeTabIndex: [{
                type: Input
            }], canShowMenu: [{
                type: Input
            }], canOpen: [{
                type: Input
            }], activeTabIndexChange: [{
                type: Output
            }], tabsContainer: [{
                type: ViewChild,
                args: ['tabsContainer', { static: true }]
            }], tabsDropdown: [{
                type: ViewChild,
                args: ['tabsDropdown', { static: true }]
            }], tabElements: [{
                type: ContentChildren,
                args: [PrizmTabComponent, { descendants: true }]
            }], menuElements: [{
                type: ContentChildren,
                args: [PrizmTabMenuItemDirective, { read: TemplateRef, descendants: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,