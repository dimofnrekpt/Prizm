import { prizmAssert } from '@prizm-ui/core';
/**
 * Rounds a number to the closest value in a fixed discrete series
 *
 * @param value
 * @param quantum series step
 */
export function prizmQuantize(value, quantum) {
    prizmAssert.assert(Number.isFinite(value));
    prizmAssert.assert(Number.isFinite(quantum));
    prizmAssert.assert(quantum > 0);
    const remainder = value % quantum;
    return remainder < quantum / 2 ? value - remainder : value + quantum - remainder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhbnRpemUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi91dGlsL21hdGgvcXVhbnRpemUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FBQyxLQUFhLEVBQUUsT0FBZTtJQUMxRCxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMzQyxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM3QyxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVoQyxNQUFNLFNBQVMsR0FBRyxLQUFLLEdBQUcsT0FBTyxDQUFDO0lBRWxDLE9BQU8sU0FBUyxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxPQUFPLEdBQUcsU0FBUyxDQUFDO0FBQ25GLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcml6bUFzc2VydCB9IGZyb20gJ0Bwcml6bS11aS9jb3JlJztcblxuLyoqXG4gKiBSb3VuZHMgYSBudW1iZXIgdG8gdGhlIGNsb3Nlc3QgdmFsdWUgaW4gYSBmaXhlZCBkaXNjcmV0ZSBzZXJpZXNcbiAqXG4gKiBAcGFyYW0gdmFsdWVcbiAqIEBwYXJhbSBxdWFudHVtIHNlcmllcyBzdGVwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcml6bVF1YW50aXplKHZhbHVlOiBudW1iZXIsIHF1YW50dW06IG51bWJlcik6IG51bWJlciB7XG4gIHByaXptQXNzZXJ0LmFzc2VydChOdW1iZXIuaXNGaW5pdGUodmFsdWUpKTtcbiAgcHJpem1Bc3NlcnQuYXNzZXJ0KE51bWJlci5pc0Zpbml0ZShxdWFudHVtKSk7XG4gIHByaXptQXNzZXJ0LmFzc2VydChxdWFudHVtID4gMCk7XG5cbiAgY29uc3QgcmVtYWluZGVyID0gdmFsdWUgJSBxdWFudHVtO1xuXG4gIHJldHVybiByZW1haW5kZXIgPCBxdWFudHVtIC8gMiA/IHZhbHVlIC0gcmVtYWluZGVyIDogdmFsdWUgKyBxdWFudHVtIC0gcmVtYWluZGVyO1xufVxuIl19