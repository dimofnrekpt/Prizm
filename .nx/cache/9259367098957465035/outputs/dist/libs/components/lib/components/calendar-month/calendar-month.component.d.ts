import { EventEmitter } from '@angular/core';
import { PrizmAbstractTestId } from '@prizm-ui/core';
import { Observable } from 'rxjs';
import { PrizmMonth } from '../../@core/date-time/month';
import { PrizmMonthContext } from '../../@core/date-time/month-context';
import { PrizmMonthRange } from '../../@core/date-time/month-range';
import { PrizmYear } from '../../@core/date-time/year';
import { PrizmRangeState } from '../../@core/enums/range-state';
import { PrizmInteractiveState } from '../../directives/wrapper/wrapper.component';
import { PrizmBooleanHandlerWithContext } from '../../types/handler-with-context';
import { PrizmWithOptionalMinMax } from '../../types/with-optional-min-max';
import * as i0 from "@angular/core";
export declare class PrizmCalendarMonthComponent extends PrizmAbstractTestId implements PrizmWithOptionalMinMax<PrizmMonth> {
    readonly months$: Observable<readonly string[]>;
    value: PrizmMonthRange | PrizmMonth | null;
    year: PrizmYear;
    disabledItemHandler: PrizmBooleanHandlerWithContext<PrizmMonth, PrizmMonthContext>;
    min: PrizmMonth;
    max: PrizmMonth;
    readonly monthClick: EventEmitter<PrizmMonth>;
    readonly hoveredItemChange: EventEmitter<PrizmMonth | null>;
    readonly yearChange: EventEmitter<PrizmYear>;
    isYearPickerShown: boolean;
    hoveredItem: PrizmMonth | null;
    pressedItem: PrizmMonth | null;
    readonly testId_ = "ui_calendar_month";
    constructor(months$: Observable<readonly string[]>);
    get isSingle(): boolean;
    get previousYearDisabled(): boolean;
    get nextYearDisabled(): boolean;
    getItemState(item: PrizmMonth): PrizmInteractiveState | null;
    getItemRange(item: PrizmMonth): PrizmRangeState | null;
    getPrizmMonth(monthNumber: number, yearNumber: number): PrizmMonth;
    isItemToday(item: PrizmMonth): boolean;
    isItemInsideRange(month: PrizmMonth): boolean;
    onPickerYearClick(year: PrizmYear): void;
    onItemClick(month: PrizmMonth): void;
    onYearClick(): void;
    onNextYear(): void;
    onPreviousYear(): void;
    onItemHovered(hovered: boolean, item: PrizmMonth): void;
    onItemPressed(pressed: boolean, item: PrizmMonth): void;
    private calculateDisabledItemHandlerWithMinMax;
    private get disabledItemHandlerWithMinMax();
    private updateHoveredItem;
    private updatePressedItem;
    private updateActiveYear;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmCalendarMonthComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmCalendarMonthComponent, "prizm-calendar-month", never, { "value": { "alias": "value"; "required": false; }; "year": { "alias": "year"; "required": false; }; "disabledItemHandler": { "alias": "disabledItemHandler"; "required": false; }; "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; }, { "monthClick": "monthClick"; "yearChange": "yearChange"; }, never, never, true, never>;
}
