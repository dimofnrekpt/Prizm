import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { PrizmToggleOptions } from './toggle-options';
import { AbstractPrizmControl } from '../../abstract/control';
import { PrizmSize, PrizmSizeL, PrizmSizeM } from '../../util';
import { PrizmNativeFocusableElement } from '../../types/focusable-element-accessor';
import { PrizmAppearance } from '../../types/appearance.types';
import * as i0 from "@angular/core";
export declare class PrizmToggleComponent extends AbstractPrizmControl<boolean> {
    readonly options: PrizmToggleOptions;
    private readonly focusableElement?;
    singleColor: boolean;
    iconOn: import("../../directives").PolymorphContent<import("@prizm-ui/components").PrizmContextWithImplicit<"m" | "l">>;
    iconOff: import("../../directives").PolymorphContent<import("@prizm-ui/components").PrizmContextWithImplicit<"m" | "l">>;
    showLoader: boolean;
    size: PrizmSizeL | PrizmSizeM;
    readonly testId_ = "ui_checkbox";
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, options: PrizmToggleOptions);
    get nativeFocusableElement(): PrizmNativeFocusableElement | null;
    get focused(): boolean;
    get appearance(): PrizmAppearance;
    get sizeM(): boolean;
    get checked(): boolean;
    get loaderSize(): PrizmSize;
    onChecked(checked: boolean): void;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    onFocusVisible(focusVisible: boolean): void;
    protected getFallbackValue(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmToggleComponent, [{ optional: true; self: true; }, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmToggleComponent, "prizm-toggle", never, { "singleColor": { "alias": "singleColor"; "required": false; }; "iconOn": { "alias": "iconOn"; "required": false; }; "iconOff": { "alias": "iconOff"; "required": false; }; "showLoader": { "alias": "showLoader"; "required": false; }; "size": { "alias": "size"; "required": false; }; }, {}, never, never, true, never>;
}
