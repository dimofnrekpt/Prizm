import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { PrizmOverlayOutsidePlacement } from '../../modules';
import { BehaviorSubject, Observable } from 'rxjs';
import { PrizmDestroyService } from '@prizm-ui/helpers';
import { PrizmAbstractTestId } from '../../abstract/interactive';
import * as i0 from "@angular/core";
export declare class PrizmChipsComponent extends PrizmAbstractTestId implements ControlValueAccessor, OnInit, OnDestroy, AfterViewInit {
    private readonly cdRef;
    private readonly destroy$;
    size: 's' | 'l';
    set chips(data: string[]);
    deletable: boolean;
    singleLine: boolean;
    hintCanShow: boolean;
    hintDirection: PrizmOverlayOutsidePlacement;
    addChipEvent: EventEmitter<string>;
    removeChipEvent: EventEmitter<string>;
    clickChipEvent: EventEmitter<string>;
    readonly testId_ = "ui_chips";
    accessorIsDisabled: boolean;
    readonly overflowedChipsList$: BehaviorSubject<Set<number>>;
    chipsList$: BehaviorSubject<string[]>;
    private subscription;
    readonly ready: (el: ElementRef) => boolean;
    constructor(cdRef: ChangeDetectorRef, destroy$: PrizmDestroyService);
    onChange: (value: unknown) => void;
    onTouched: (value: unknown) => void;
    get chipsList(): string[];
    set chipsList(data: string[]);
    addChips(chipName: string): void;
    removeChips(event: MouseEvent, idx: number): void;
    chipClick(chipName: string): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    writeValue(data: string[]): void;
    setDisabledState(isDisabled: boolean): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
    isChipsContent$(observable: Observable<ElementRef>, parent: HTMLElement, singleLine: boolean, chips: string, idx: number, allChipsCount: number): Observable<string>;
    getOverflowedChipsListHint(): string;
    ngAfterViewInit(): void;
    trackByIdx(idx: number): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmChipsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmChipsComponent, "prizm-chips", never, { "size": { "alias": "size"; "required": false; }; "chips": { "alias": "chips"; "required": false; }; "deletable": { "alias": "deletable"; "required": false; }; "singleLine": { "alias": "singleLine"; "required": false; }; "hintCanShow": { "alias": "hintCanShow"; "required": false; }; "hintDirection": { "alias": "hintDirection"; "required": false; }; }, { "addChipEvent": "addChipEvent"; "removeChipEvent": "removeChipEvent"; "clickChipEvent": "clickChipEvent"; }, never, never, true, never>;
}
