import { PRIZM_DIGIT_REGEXP } from '../../constants';
import { prizmAssert } from '@prizm-ui/core';
const TWO_DIGITS = new Array(2).fill(PRIZM_DIGIT_REGEXP);
const FOUR_DIGITS = new Array(4).fill(PRIZM_DIGIT_REGEXP);
/**
 * @deprecated
 * use prizmCreateDateNgxMask
 * */
export function prizmCreateDateMask(mode, separator) {
    prizmAssert.assert(separator.length === 1, `Separator should consist of only 1 symbol`);
    switch (mode) {
        case `YMD`:
            return [...FOUR_DIGITS, separator, ...TWO_DIGITS, separator, ...TWO_DIGITS];
        case `MDY`:
        case `DMY`:
        default:
            return [...TWO_DIGITS, separator, ...TWO_DIGITS, separator, ...FOUR_DIGITS];
    }
}
export function prizmCreateDateNgxMask(mode, separator) {
    console.assert(separator.length === 1, `Separator should consist of only 1 symbol`);
    switch (mode) {
        case `YMD`:
            return `0000${separator}00${separator}00`;
        case `MDY`:
        case `DMY`:
        default:
            return `00${separator}00${separator}0000`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWRhdGUtbWFzay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29tcG9uZW50cy9zcmMvbGliL0Bjb3JlL21hc2svY3JlYXRlLWRhdGUtbWFzay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUdyRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsTUFBTSxVQUFVLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDekQsTUFBTSxXQUFXLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFFMUQ7OztLQUdLO0FBQ0wsTUFBTSxVQUFVLG1CQUFtQixDQUFDLElBQW1CLEVBQUUsU0FBaUI7SUFDeEUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSwyQ0FBMkMsQ0FBQyxDQUFDO0lBRXhGLFFBQVEsSUFBSSxFQUFFO1FBQ1osS0FBSyxLQUFLO1lBQ1IsT0FBTyxDQUFDLEdBQUcsV0FBVyxFQUFFLFNBQVMsRUFBRSxHQUFHLFVBQVUsRUFBRSxTQUFTLEVBQUUsR0FBRyxVQUFVLENBQUMsQ0FBQztRQUM5RSxLQUFLLEtBQUssQ0FBQztRQUNYLEtBQUssS0FBSyxDQUFDO1FBQ1g7WUFDRSxPQUFPLENBQUMsR0FBRyxVQUFVLEVBQUUsU0FBUyxFQUFFLEdBQUcsVUFBVSxFQUFFLFNBQVMsRUFBRSxHQUFHLFdBQVcsQ0FBQyxDQUFDO0tBQy9FO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxJQUFtQixFQUFFLFNBQWlCO0lBQzNFLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsMkNBQTJDLENBQUMsQ0FBQztJQUVwRixRQUFRLElBQUksRUFBRTtRQUNaLEtBQUssS0FBSztZQUNSLE9BQU8sT0FBTyxTQUFTLEtBQUssU0FBUyxJQUFJLENBQUM7UUFDNUMsS0FBSyxLQUFLLENBQUM7UUFDWCxLQUFLLEtBQUssQ0FBQztRQUNYO1lBQ0UsT0FBTyxLQUFLLFNBQVMsS0FBSyxTQUFTLE1BQU0sQ0FBQztLQUM3QztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQUklaTV9ESUdJVF9SRUdFWFAgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgUHJpem1EYXRlTW9kZSB9IGZyb20gJy4uLy4uL3R5cGVzL2RhdGUtbW9kZSc7XG5pbXBvcnQgeyBQcml6bVRleHRNYXNrTGlzdCB9IGZyb20gJy4vdGV4dC1tYXNrLWxpc3QnO1xuaW1wb3J0IHsgcHJpem1Bc3NlcnQgfSBmcm9tICdAcHJpem0tdWkvY29yZSc7XG5cbmNvbnN0IFRXT19ESUdJVFMgPSBuZXcgQXJyYXkoMikuZmlsbChQUklaTV9ESUdJVF9SRUdFWFApO1xuY29uc3QgRk9VUl9ESUdJVFMgPSBuZXcgQXJyYXkoNCkuZmlsbChQUklaTV9ESUdJVF9SRUdFWFApO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKiB1c2UgcHJpem1DcmVhdGVEYXRlTmd4TWFza1xuICogKi9cbmV4cG9ydCBmdW5jdGlvbiBwcml6bUNyZWF0ZURhdGVNYXNrKG1vZGU6IFByaXptRGF0ZU1vZGUsIHNlcGFyYXRvcjogc3RyaW5nKTogUHJpem1UZXh0TWFza0xpc3Qge1xuICBwcml6bUFzc2VydC5hc3NlcnQoc2VwYXJhdG9yLmxlbmd0aCA9PT0gMSwgYFNlcGFyYXRvciBzaG91bGQgY29uc2lzdCBvZiBvbmx5IDEgc3ltYm9sYCk7XG5cbiAgc3dpdGNoIChtb2RlKSB7XG4gICAgY2FzZSBgWU1EYDpcbiAgICAgIHJldHVybiBbLi4uRk9VUl9ESUdJVFMsIHNlcGFyYXRvciwgLi4uVFdPX0RJR0lUUywgc2VwYXJhdG9yLCAuLi5UV09fRElHSVRTXTtcbiAgICBjYXNlIGBNRFlgOlxuICAgIGNhc2UgYERNWWA6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBbLi4uVFdPX0RJR0lUUywgc2VwYXJhdG9yLCAuLi5UV09fRElHSVRTLCBzZXBhcmF0b3IsIC4uLkZPVVJfRElHSVRTXTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJpem1DcmVhdGVEYXRlTmd4TWFzayhtb2RlOiBQcml6bURhdGVNb2RlLCBzZXBhcmF0b3I6IHN0cmluZyk6IGFueSB7XG4gIGNvbnNvbGUuYXNzZXJ0KHNlcGFyYXRvci5sZW5ndGggPT09IDEsIGBTZXBhcmF0b3Igc2hvdWxkIGNvbnNpc3Qgb2Ygb25seSAxIHN5bWJvbGApO1xuXG4gIHN3aXRjaCAobW9kZSkge1xuICAgIGNhc2UgYFlNRGA6XG4gICAgICByZXR1cm4gYDAwMDAke3NlcGFyYXRvcn0wMCR7c2VwYXJhdG9yfTAwYDtcbiAgICBjYXNlIGBNRFlgOlxuICAgIGNhc2UgYERNWWA6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBgMDAke3NlcGFyYXRvcn0wMCR7c2VwYXJhdG9yfTAwMDBgO1xuICB9XG59XG4iXX0=