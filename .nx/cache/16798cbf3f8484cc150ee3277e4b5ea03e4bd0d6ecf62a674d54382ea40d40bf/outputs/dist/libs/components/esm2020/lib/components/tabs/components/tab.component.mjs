import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Optional, Output, } from '@angular/core';
import { PrizmTabsService } from '../tabs.service';
import { PolymorphOutletDirective } from '../../../directives';
import { combineLatest, fromEvent, of, switchMap, timeout } from 'rxjs';
import { Compare, PrizmDestroyService, PrizmLetContextService } from '@prizm-ui/helpers';
import { filter, first, map, startWith, takeUntil, tap } from 'rxjs/operators';
import { PrizmAbstractTestId } from '../../../abstract/interactive';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { CommonModule } from '@angular/common';
import { PrizmIconComponent } from '../../icon';
import { PrizmCounterModule } from '../../counter';
import * as i0 from "@angular/core";
import * as i1 from "@prizm-ui/helpers";
import * as i2 from "../tabs.service";
import * as i3 from "@angular/common";
import * as i4 from "../../counter/counter.component";
export class PrizmTabComponent extends PrizmAbstractTestId {
    set counterOptions(value) {
        this._counterOptions = { ...this._counterOptions, ...value };
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
    get idx() {
        return this.idx_;
    }
    constructor(inMenuContextService, tabsService, destroy, el) {
        super();
        this.inMenuContextService = inMenuContextService;
        this.tabsService = tabsService;
        this.destroy = destroy;
        this.el = el;
        this.type = 'line';
        this.icon = null;
        this.content = null;
        this.closeIcon = 'cancel-close';
        this.count = 0;
        this._counterOptions = {
            status: 'info',
            disabled: false,
        };
        this._disabled = false;
        this.idx_ = null;
        this.idx$ = this.tabsService.tabs$.pipe(map(() => this.inMenuContextService?.context?.inMenuIdx ?? this.tabsService?.findTabIdx?.(this)), tap(idx => (this.idx_ = idx)));
        this.closeTab = new EventEmitter();
        this.testId_ = 'ui_tab';
        this.isActiveTab$ = combineLatest([
            this.idx$,
            this.tabsService.activeTabIdx$,
        ]).pipe(map(([current, active]) => current === active));
        this.tab$ = this.idx$.pipe(map(idx => (typeof idx === 'number' ? this.tabsService.getTabByIdx(idx) : this)));
    }
    ngOnDestroy() {
        this.tab$
            .pipe(first(), tap(tab => {
            if (tab === this)
                this.tabsService.removeTab(tab);
        }), timeout(25), takeUntil(this.destroy))
            .subscribe();
    }
    isFromMenuTab() {
        return Compare.isNotNullish(this.inMenuContextService?.context?.inMenuIdx);
    }
    isMainProjectedTab() {
        return !this.isFromMenuTab();
    }
    initUpdateIndexOnDomUpdateListener() {
        this.tabsService.removed$$
            .pipe(switchMap(() => this.tabsService.changeParent$), startWith(void 0), filter(() => this.isMainProjectedTab()), tap(() => {
            const currentDomIdx = Array.from(this.el.nativeElement.parentElement?.children ?? []).indexOf(this.el.nativeElement);
            if (Compare.isNotNullish(this.currentDomIdx) && currentDomIdx !== this.currentDomIdx) {
                this.tabsService.moveTab(this.currentDomIdx, currentDomIdx, this);
            }
            else {
                this.tabsService.updateTab(this, currentDomIdx);
            }
            this.currentDomIdx = currentDomIdx;
        }), takeUntil(this.destroy))
            .subscribe();
    }
    initClickListenerToSelectTab() {
        fromEvent(this.el.nativeElement, 'click')
            .pipe(switchMap(() => {
            if (this.disabled)
                return of(null);
            return this.selectTab$();
        }), takeUntil(this.destroy))
            .subscribe();
    }
    ngOnInit() {
        this.initUpdateIndexOnDomUpdateListener();
        this.initClickListenerToSelectTab();
    }
    selectTab$() {
        return this.tab$.pipe(first(), tap(tab => {
            this.tabsService?.selectTab(tab);
        }));
    }
    onClose(event) {
        event.stopPropagation();
        this.tab$.pipe(first(), tap(tab => {
            tab.closeTab.emit();
        }), takeUntil(this.destroy));
        this.closeTab.emit();
    }
}
PrizmTabComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmTabComponent, deps: [{ token: i1.PrizmLetContextService, optional: true }, { token: i2.PrizmTabsService }, { token: i1.PrizmDestroyService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
PrizmTabComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmTabComponent, isStandalone: true, selector: "prizm-tab", inputs: { type: "type", icon: "icon", content: "content", closeIcon: "closeIcon", count: "count", counterOptions: "counterOptions", closable: "closable", disabled: "disabled" }, outputs: { closeTab: "closeTab" }, host: { properties: { "attr.tab-type": "this.type" } }, providers: [PrizmDestroyService], usesInheritance: true, ngImport: i0, template: "<button\n  class=\"page\"\n  [class.page_active]=\"isActiveTab$ | async\"\n  [disabled]=\"disabled\"\n  [tabIndex]=\"(isActiveTab$ | async) ? -1 : ''\"\n>\n  <div class=\"page__icon\" *ngIf=\"icon\">\n    <ng-container *polymorphOutlet=\"icon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n    </ng-container>\n  </div>\n  <span class=\"page__title\" *ngIf=\"content\">\n    <ng-container *polymorphOutlet=\"content; context: $any({ idx: idx$ | async, tab: this })\">\n      {{ content }}\n    </ng-container>\n  </span>\n  <prizm-counter\n    [value]=\"count\"\n    [status]=\"_counterOptions.status\"\n    [disabled]=\"_counterOptions.disabled\"\n    [maxValue]=\"_counterOptions.maxValue\"\n  ></prizm-counter>\n  <div class=\"page__cancel\" *ngIf=\"closable && !disabled\" (click)=\"onClose($event)\">\n    <ng-container *polymorphOutlet=\"closeIcon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon\" [iconClass]=\"$any(closeIcon)\" [size]=\"16\"></prizm-icon>\n    </ng-container>\n  </div>\n</button>\n", styles: [":host{height:100%;display:inline-flex;position:relative;z-index:2}:host button{border:none;outline:none;background:transparent;max-width:var(--prizm-tab-button-max-width, unset)}:host span{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .page{width:100%;padding:0 16px;display:flex;align-items:center;gap:8px;cursor:pointer;overflow:hidden;border:2px solid transparent}:host .page:focus:not(.page_active):not(:active){border:2px solid var(--prizm-v3-background-stroke-focus);border-radius:2px}:host .page:disabled{cursor:not-allowed}:host .page:disabled .page__title,:host .page:disabled .icon__mark{color:var(--prizm-v3-text-icon-disable)}:host .page:disabled .icon__mark{cursor:not-allowed}:host .page:disabled .page__counter{background:var(--prizm-v3-button-disable);color:var(--prizm-v3-text-icon-disable)}:host .page__title{font-weight:600;font-size:14px;line-height:16px;color:var(--prizm-v3-button-secondary-solid-default);transition:.4ms}:host .page_active .page__title,:host .page_active .page__icon{color:var(--prizm-v3-text-icon-primary)}:host .page__counter{font-size:12px;line-height:16px;min-height:20px;min-width:20px;padding:0 4px;display:flex;align-items:center;justify-content:center;border-radius:1.25rem;background:var(--prizm-v3-status-info-primary-default);font-weight:600;color:var(--prizm-v3-text-icon-exception)}:host .page__cancel,:host .page__icon{display:flex;cursor:pointer;color:var(--prizm-v3-button-secondary-solid-default)}:host .page__cancel{margin-left:8px}:host .page .icon{height:16px;width:16px;display:flex}:host[tab-type=line] .page{border-bottom:2px solid transparent}:host[tab-type=line] .page:hover:not(:disabled):not(.page_active):after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-form-stroke-hover)}:host[tab-type=line] .page_active:not(:disabled):after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-status-info-primary-default)}:host[tab-type=line] .page_active:disabled:after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-form-active)}:host[tab-type=contained] .page{border-top:2px solid transparent}:host[tab-type=contained] .page:not(.page_active){background:var(--prizm-v3-background-fill-secondary);border-right:1px solid var(--prizm-v3-background-stroke)}:host[tab-type=contained] .page:hover:not(:disabled):not(.page_active){background:var(--prizm-v3-button-ghost-hover);border-right:1px solid var(--prizm-v3-background-stroke)}:host[tab-type=contained] .page_active:not(:disabled):after{position:absolute;left:0;content:\" \";display:block;width:100%;top:0;border-top:2px solid var(--prizm-v3-status-info-primary-default)}:host[tab-type=contained] .page_active:disabled:after{position:absolute;left:0;content:\" \";display:block;width:100%;top:0;border-top:2px solid var(--prizm-v3-form-active)}.page__title:empty{display:none}.pseudo-border{position:absolute;left:0;content:\" \";display:block;width:100%}.pseudo-border-bottom{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0}.pseudo-border-top{position:absolute;left:0;content:\" \";display:block;width:100%;top:0}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "component", type: PrizmIconComponent, selector: "prizm-icon", inputs: ["iconClass", "size"] }, { kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "ngmodule", type: PrizmCounterModule }, { kind: "component", type: i4.PrizmCounterComponent, selector: "prizm-counter", inputs: ["disabled", "class", "maxValue", "status", "value"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmTabComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-tab', changeDetection: ChangeDetectionStrategy.OnPush, providers: [PrizmDestroyService], imports: [CommonModule, PrizmIconComponent, PolymorphOutletDirective, PrizmCounterModule], standalone: true, template: "<button\n  class=\"page\"\n  [class.page_active]=\"isActiveTab$ | async\"\n  [disabled]=\"disabled\"\n  [tabIndex]=\"(isActiveTab$ | async) ? -1 : ''\"\n>\n  <div class=\"page__icon\" *ngIf=\"icon\">\n    <ng-container *polymorphOutlet=\"icon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n    </ng-container>\n  </div>\n  <span class=\"page__title\" *ngIf=\"content\">\n    <ng-container *polymorphOutlet=\"content; context: $any({ idx: idx$ | async, tab: this })\">\n      {{ content }}\n    </ng-container>\n  </span>\n  <prizm-counter\n    [value]=\"count\"\n    [status]=\"_counterOptions.status\"\n    [disabled]=\"_counterOptions.disabled\"\n    [maxValue]=\"_counterOptions.maxValue\"\n  ></prizm-counter>\n  <div class=\"page__cancel\" *ngIf=\"closable && !disabled\" (click)=\"onClose($event)\">\n    <ng-container *polymorphOutlet=\"closeIcon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon\" [iconClass]=\"$any(closeIcon)\" [size]=\"16\"></prizm-icon>\n    </ng-container>\n  </div>\n</button>\n", styles: [":host{height:100%;display:inline-flex;position:relative;z-index:2}:host button{border:none;outline:none;background:transparent;max-width:var(--prizm-tab-button-max-width, unset)}:host span{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .page{width:100%;padding:0 16px;display:flex;align-items:center;gap:8px;cursor:pointer;overflow:hidden;border:2px solid transparent}:host .page:focus:not(.page_active):not(:active){border:2px solid var(--prizm-v3-background-stroke-focus);border-radius:2px}:host .page:disabled{cursor:not-allowed}:host .page:disabled .page__title,:host .page:disabled .icon__mark{color:var(--prizm-v3-text-icon-disable)}:host .page:disabled .icon__mark{cursor:not-allowed}:host .page:disabled .page__counter{background:var(--prizm-v3-button-disable);color:var(--prizm-v3-text-icon-disable)}:host .page__title{font-weight:600;font-size:14px;line-height:16px;color:var(--prizm-v3-button-secondary-solid-default);transition:.4ms}:host .page_active .page__title,:host .page_active .page__icon{color:var(--prizm-v3-text-icon-primary)}:host .page__counter{font-size:12px;line-height:16px;min-height:20px;min-width:20px;padding:0 4px;display:flex;align-items:center;justify-content:center;border-radius:1.25rem;background:var(--prizm-v3-status-info-primary-default);font-weight:600;color:var(--prizm-v3-text-icon-exception)}:host .page__cancel,:host .page__icon{display:flex;cursor:pointer;color:var(--prizm-v3-button-secondary-solid-default)}:host .page__cancel{margin-left:8px}:host .page .icon{height:16px;width:16px;display:flex}:host[tab-type=line] .page{border-bottom:2px solid transparent}:host[tab-type=line] .page:hover:not(:disabled):not(.page_active):after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-form-stroke-hover)}:host[tab-type=line] .page_active:not(:disabled):after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-status-info-primary-default)}:host[tab-type=line] .page_active:disabled:after{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0;border-bottom:2px solid var(--prizm-v3-form-active)}:host[tab-type=contained] .page{border-top:2px solid transparent}:host[tab-type=contained] .page:not(.page_active){background:var(--prizm-v3-background-fill-secondary);border-right:1px solid var(--prizm-v3-background-stroke)}:host[tab-type=contained] .page:hover:not(:disabled):not(.page_active){background:var(--prizm-v3-button-ghost-hover);border-right:1px solid var(--prizm-v3-background-stroke)}:host[tab-type=contained] .page_active:not(:disabled):after{position:absolute;left:0;content:\" \";display:block;width:100%;top:0;border-top:2px solid var(--prizm-v3-status-info-primary-default)}:host[tab-type=contained] .page_active:disabled:after{position:absolute;left:0;content:\" \";display:block;width:100%;top:0;border-top:2px solid var(--prizm-v3-form-active)}.page__title:empty{display:none}.pseudo-border{position:absolute;left:0;content:\" \";display:block;width:100%}.pseudo-border-bottom{position:absolute;left:0;content:\" \";display:block;width:100%;bottom:0}.pseudo-border-top{position:absolute;left:0;content:\" \";display:block;width:100%;top:0}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PrizmLetContextService, decorators: [{
                    type: Optional
                }] }, { type: i2.PrizmTabsService }, { type: i1.PrizmDestroyService }, { type: i0.ElementRef }]; }, propDecorators: { type: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.tab-type']
            }], icon: [{
                type: Input
            }], content: [{
                type: Input
            }], closeIcon: [{
                type: Input
            }], count: [{
                type: Input
            }], counterOptions: [{
                type: Input
            }], closable: [{
                type: Input
            }], disabled: [{
                type: Input
            }], closeTab: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,