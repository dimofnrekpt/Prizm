import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, Input, Output, TemplateRef, } from '@angular/core';
import { PrizmAccordionContentDirective } from '../../directives/accordion-content.directive';
import { AccordionToolsDirective } from '../../directives/accordion-tools.directive';
import { expandAnimation } from '../../accordion.animation';
import { Subject } from 'rxjs';
import { PolymorphOutletDirective } from '../../../../directives/polymorph';
import { PrizmAbstractTestId } from '../../../../abstract/interactive';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { CommonModule } from '@angular/common';
import { PrizmIconModule } from '../../../icon';
import { PrizmButtonComponent } from '../../../button';
import { PrizmHintDirective } from '../../../../directives';
import { prizmIsTextOverflow } from '../../../../util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../icon/icon.component";
export class PrizmAccordionItemComponent extends PrizmAbstractTestId {
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
    get data() {
        return {
            icon: this.icon,
            title: this.title,
            isExpanded: this.isExpanded,
            disabled: this._disabled,
            focused: this.isAccordionFocused,
        };
    }
    constructor(cdRef) {
        super();
        this.cdRef = cdRef;
        this.title = '';
        this.isExpanded = false;
        this.prizmIsTextOverflow = prizmIsTextOverflow;
        this._disabled = false;
        this.isExpandedChange = new EventEmitter();
        this.testId_ = 'ui_accordion_item';
        this.toggle$ = new Subject();
        this.isAccordionFocused = false;
    }
    toggle() {
        if (this.disabled)
            return;
        this.isExpanded = !this.isExpanded;
        this.isExpandedChange.emit(this.isExpanded);
        this.toggle$.next();
    }
    close() {
        if (this.disabled)
            return;
        this.isExpanded = false;
        this.isExpandedChange.emit(this.isExpanded);
        this.cdRef.markForCheck();
    }
    stopProp($event) {
        $event.stopPropagation();
    }
    ngOnDestroy() {
        this.toggle$.complete();
    }
}
PrizmAccordionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmAccordionItemComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
PrizmAccordionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmAccordionItemComponent, isStandalone: true, selector: "prizm-accordion-item", inputs: { icon: "icon", title: "title", isExpanded: "isExpanded", disabled: "disabled" }, outputs: { isExpandedChange: "isExpandedChange" }, queries: [{ propertyName: "accordionContent", first: true, predicate: PrizmAccordionContentDirective, descendants: true, read: TemplateRef }, { propertyName: "accordionTools", first: true, predicate: AccordionToolsDirective, descendants: true, read: TemplateRef }], usesInheritance: true, ngImport: i0, template: "<div\n  class=\"accordion\"\n  [class.accordion_expanded]=\"isExpanded\"\n  [class.accordion_disabled]=\"disabled\"\n  [class.accordion_focused]=\"isAccordionFocused\"\n>\n  <div\n    class=\"accordion__header\"\n    [tabindex]=\"disabled ? -1 : 0\"\n    (click)=\"toggle()\"\n    (keydown.enter)=\"toggle()\"\n    (keydown.space)=\"toggle()\"\n    (focus)=\"isAccordionFocused = true\"\n    (focusout)=\"isAccordionFocused = false\"\n  >\n    <ng-container *ngIf=\"icon\">\n      <ng-container *polymorphOutlet=\"icon as content; context: data\">\n        <!-- TODO add type string-->\n        <prizm-icon class=\"header-icon\" [iconClass]=\"$any(content)\" size=\"16\"></prizm-icon>\n      </ng-container>\n    </ng-container>\n    <div class=\"title\" #elem *ngIf=\"title\" [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n      <ng-container *polymorphOutlet=\"title as content; context: data\">\n        {{ content }}\n      </ng-container>\n    </div>\n    <div\n      class=\"accordion__tools\"\n      *ngIf=\"accordionTools\"\n      (click)=\"stopProp($event)\"\n      (keydown.enter)=\"stopProp($event)\"\n      (keydown.space)=\"stopProp($event)\"\n    >\n      <ng-container *ngTemplateOutlet=\"accordionTools\"></ng-container>\n    </div>\n    <div class=\"btn-wrapper\">\n      <button\n        class=\"accordion__button\"\n        [class.accordion_expanded__button]=\"isExpanded\"\n        [icon]=\"'chevrons-double-down'\"\n        [disabled]=\"disabled\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n        tabindex=\"-1\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"accordion__content\" *ngIf=\"accordionContent\" [@expand]=\"isExpanded ? 'expanded' : 'init'\">\n    <ng-container *ngTemplateOutlet=\"accordionContent\"></ng-container>\n  </div>\n</div>\n", styles: [":host{display:block}.accordion{display:flex;flex-direction:column;cursor:pointer;border-top:1px solid var(--prizm-v3-background-stroke)}.accordion_focused:not(.accordion_disabled),.accordion:hover:not(.accordion_disabled){border-radius:2px}.accordion_focused:not(.accordion_disabled){box-shadow:0 0 0 2px var(--prizm-v3-background-stroke-focus);position:relative}.accordion__header{height:47px;padding:0 16px;display:flex;align-items:center;background:var(--prizm-v3-background-fill-panel);outline:none;overflow:hidden}.accordion__header .title{flex:1;font-weight:600;font-size:14px;line-height:20px;color:var(--prizm-v3-text-icon-primary);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.accordion__header .header-icon{color:var(--prizm-v3-text-icon-primary);margin-right:8px}.accordion__tools{display:flex;margin-left:10px}.accordion__content{opacity:0;overflow:hidden;background:var(--prizm-v3-background-fill-primary);transition:.4s}.accordion .btn-wrapper{margin:auto 0 auto 12px;border-left:1px solid var(--prizm-v3-background-stroke)}.accordion .btn-wrapper .accordion__button{margin-left:12px}.accordion_expanded .accordion_expanded__button{transform:rotate(180deg)}.accordion_expanded:focus{box-shadow:none}.accordion_expanded>.accordion__content{padding:var(--prizm-accordion-content-padding, 16px);opacity:1}.accordion_disabled{cursor:not-allowed}.accordion_disabled>.accordion__header .title,.accordion_disabled>.accordion__header,.accordion_disabled>.accordion__header .header-icon{color:var(--prizm-v3-text-icon-disable);pointer-events:none}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: PrizmIconModule }, { kind: "component", type: i2.PrizmIconComponent, selector: "prizm-icon", inputs: ["iconClass", "size"] }, { kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "component", type: PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }], animations: [expandAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmAccordionItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-accordion-item', animations: [expandAnimation], standalone: true, imports: [
                        CommonModule,
                        PrizmIconModule,
                        PolymorphOutletDirective,
                        PrizmButtonComponent,
                        PrizmHintDirective,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  class=\"accordion\"\n  [class.accordion_expanded]=\"isExpanded\"\n  [class.accordion_disabled]=\"disabled\"\n  [class.accordion_focused]=\"isAccordionFocused\"\n>\n  <div\n    class=\"accordion__header\"\n    [tabindex]=\"disabled ? -1 : 0\"\n    (click)=\"toggle()\"\n    (keydown.enter)=\"toggle()\"\n    (keydown.space)=\"toggle()\"\n    (focus)=\"isAccordionFocused = true\"\n    (focusout)=\"isAccordionFocused = false\"\n  >\n    <ng-container *ngIf=\"icon\">\n      <ng-container *polymorphOutlet=\"icon as content; context: data\">\n        <!-- TODO add type string-->\n        <prizm-icon class=\"header-icon\" [iconClass]=\"$any(content)\" size=\"16\"></prizm-icon>\n      </ng-container>\n    </ng-container>\n    <div class=\"title\" #elem *ngIf=\"title\" [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n      <ng-container *polymorphOutlet=\"title as content; context: data\">\n        {{ content }}\n      </ng-container>\n    </div>\n    <div\n      class=\"accordion__tools\"\n      *ngIf=\"accordionTools\"\n      (click)=\"stopProp($event)\"\n      (keydown.enter)=\"stopProp($event)\"\n      (keydown.space)=\"stopProp($event)\"\n    >\n      <ng-container *ngTemplateOutlet=\"accordionTools\"></ng-container>\n    </div>\n    <div class=\"btn-wrapper\">\n      <button\n        class=\"accordion__button\"\n        [class.accordion_expanded__button]=\"isExpanded\"\n        [icon]=\"'chevrons-double-down'\"\n        [disabled]=\"disabled\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n        tabindex=\"-1\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"accordion__content\" *ngIf=\"accordionContent\" [@expand]=\"isExpanded ? 'expanded' : 'init'\">\n    <ng-container *ngTemplateOutlet=\"accordionContent\"></ng-container>\n  </div>\n</div>\n", styles: [":host{display:block}.accordion{display:flex;flex-direction:column;cursor:pointer;border-top:1px solid var(--prizm-v3-background-stroke)}.accordion_focused:not(.accordion_disabled),.accordion:hover:not(.accordion_disabled){border-radius:2px}.accordion_focused:not(.accordion_disabled){box-shadow:0 0 0 2px var(--prizm-v3-background-stroke-focus);position:relative}.accordion__header{height:47px;padding:0 16px;display:flex;align-items:center;background:var(--prizm-v3-background-fill-panel);outline:none;overflow:hidden}.accordion__header .title{flex:1;font-weight:600;font-size:14px;line-height:20px;color:var(--prizm-v3-text-icon-primary);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.accordion__header .header-icon{color:var(--prizm-v3-text-icon-primary);margin-right:8px}.accordion__tools{display:flex;margin-left:10px}.accordion__content{opacity:0;overflow:hidden;background:var(--prizm-v3-background-fill-primary);transition:.4s}.accordion .btn-wrapper{margin:auto 0 auto 12px;border-left:1px solid var(--prizm-v3-background-stroke)}.accordion .btn-wrapper .accordion__button{margin-left:12px}.accordion_expanded .accordion_expanded__button{transform:rotate(180deg)}.accordion_expanded:focus{box-shadow:none}.accordion_expanded>.accordion__content{padding:var(--prizm-accordion-content-padding, 16px);opacity:1}.accordion_disabled{cursor:not-allowed}.accordion_disabled>.accordion__header .title,.accordion_disabled>.accordion__header,.accordion_disabled>.accordion__header .header-icon{color:var(--prizm-v3-text-icon-disable);pointer-events:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { icon: [{
                type: Input
            }], title: [{
                type: Input
            }], isExpanded: [{
                type: Input
            }], disabled: [{
                type: Input
            }], isExpandedChange: [{
                type: Output
            }], accordionContent: [{
                type: ContentChild,
                args: [PrizmAccordionContentDirective, { read: TemplateRef }]
            }], accordionTools: [{
                type: ContentChild,
                args: [AccordionToolsDirective, { read: TemplateRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,