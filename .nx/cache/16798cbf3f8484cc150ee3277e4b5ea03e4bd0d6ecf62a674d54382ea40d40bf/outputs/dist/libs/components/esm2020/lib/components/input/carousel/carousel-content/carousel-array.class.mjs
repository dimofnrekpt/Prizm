import { prizmDefaultCarouselControlsState } from './carousel-content.interface';
/**
 * TODO remove in 2.0 version
 * @deprecated
 * use PrizmInputCarouselArrayContent
 * */
export class PrizmCarouselArrayContent {
    constructor(set, searchFn = (item, el) => item === el) {
        this.set = set;
        this.searchFn = searchFn;
        this.currentIndex = -1;
        this.currentValue = undefined;
        this.controlsState = { ...prizmDefaultCarouselControlsState };
    }
    get first() {
        return this.set[0];
    }
    get last() {
        return this.set[this.set.length - 1];
    }
    setCurrentValue(element) {
        this.currentIndex = this.set.findIndex(item => this.searchFn(item, element));
        this.currentValue = this.currentIndex === -1 ? undefined : this.set[this.currentIndex];
        this.updateControlsState();
    }
    get currentValueNotSet() {
        return this.currentIndex === -1;
    }
    stepLeft() {
        this.currentIndex--;
        this.currentValue = this.set[this.currentIndex];
        this.updateControlsState();
    }
    left() {
        this.currentIndex = 0;
        this.currentValue = this.set[this.currentIndex];
        this.updateControlsState();
    }
    stepRight() {
        ++this.currentIndex;
        this.currentValue = this.set[this.currentIndex];
        this.updateControlsState();
    }
    right() {
        this.currentIndex = this.set.length - 1;
        this.currentValue = this.set[this.currentIndex];
        this.updateControlsState();
    }
    updateControlsState() {
        if (this.currentIndex === 0) {
            this.controlsState.leftCtrlDisabled = true;
            this.controlsState.stepleftCtrlDisabled = true;
            this.controlsState.stepRightCtrlDisabled = false;
            this.controlsState.rightCtrlDisabled = false;
            return;
        }
        if (this.currentIndex === this.set.length - 1) {
            this.controlsState.leftCtrlDisabled = false;
            this.controlsState.stepleftCtrlDisabled = false;
            this.controlsState.stepRightCtrlDisabled = true;
            this.controlsState.rightCtrlDisabled = true;
            return;
        }
        if (this.currentIndex === -1) {
            this.controlsState.leftCtrlDisabled = true;
            this.controlsState.stepleftCtrlDisabled = true;
            this.controlsState.stepRightCtrlDisabled = true;
            this.controlsState.rightCtrlDisabled = true;
            return;
        }
        this.controlsState.leftCtrlDisabled = false;
        this.controlsState.stepleftCtrlDisabled = false;
        this.controlsState.stepRightCtrlDisabled = false;
        this.controlsState.rightCtrlDisabled = false;
    }
}
export class PrizmInputCarouselArrayContent extends PrizmCarouselArrayContent {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwtYXJyYXkuY2xhc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L2Nhcm91c2VsL2Nhcm91c2VsLWNvbnRlbnQvY2Fyb3VzZWwtYXJyYXkuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlDQUFpQyxFQUF3QixNQUFNLDhCQUE4QixDQUFDO0FBQ3ZHOzs7O0tBSUs7QUFDTCxNQUFNLE9BQU8seUJBQXlCO0lBTXBDLFlBQ1MsR0FBYSxFQUNaLFdBQWlELENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBVyxFQUFFLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFEcEYsUUFBRyxHQUFILEdBQUcsQ0FBVTtRQUNaLGFBQVEsR0FBUixRQUFRLENBQTJFO1FBUHJGLGlCQUFZLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDMUIsaUJBQVksR0FBTSxTQUFnQixDQUFDO1FBRTVCLGtCQUFhLEdBQUcsRUFBRSxHQUFHLGlDQUFpQyxFQUFFLENBQUM7SUFLN0QsQ0FBQztJQUVKLElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxlQUFlLENBQUMsT0FBVTtRQUMvQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZ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QUFLLENBQUM7UUFDakQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7SUFDL0MsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLDhCQUFrQyxTQUFRLHlCQUE0QjtDQUFHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpem1EZWZhdWx0Q2Fyb3VzZWxDb250cm9sc1N0YXRlLCBQcml6bUNhcm91c2VsQ29udGVudCB9IGZyb20gJy4vY2Fyb3VzZWwtY29udGVudC5pbnRlcmZhY2UnO1xuLyoqXG4gKiBUT0RPIHJlbW92ZSBpbiAyLjAgdmVyc2lvblxuICogQGRlcHJlY2F0ZWRcbiAqIHVzZSBQcml6bUlucHV0Q2Fyb3VzZWxBcnJheUNvbnRlbnRcbiAqICovXG5leHBvcnQgY2xhc3MgUHJpem1DYXJvdXNlbEFycmF5Q29udGVudDxUPiBpbXBsZW1lbnRzIFByaXptQ2Fyb3VzZWxDb250ZW50IHtcbiAgcHJpdmF0ZSBjdXJyZW50SW5kZXggPSAtMTtcbiAgY3VycmVudFZhbHVlOiBUID0gdW5kZWZpbmVkIGFzIGFueTtcblxuICBwdWJsaWMgY29udHJvbHNTdGF0ZSA9IHsgLi4ucHJpem1EZWZhdWx0Q2Fyb3VzZWxDb250cm9sc1N0YXRlIH07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHNldDogQXJyYXk8VD4sXG4gICAgcHJpdmF0ZSBzZWFyY2hGbjogKGFycmF5SXRlbTogVCwgZmluZEVsOiBUKSA9PiBib29sZWFuID0gKGl0ZW0sIGVsKTogYm9vbGVhbiA9PiBpdGVtID09PSBlbFxuICApIHt9XG5cbiAgZ2V0IGZpcnN0KCk6IFQge1xuICAgIHJldHVybiB0aGlzLnNldFswXTtcbiAgfVxuXG4gIGdldCBsYXN0KCk6IFQge1xuICAgIHJldHVybiB0aGlzLnNldFt0aGlzLnNldC5sZW5ndGggLSAxXTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRDdXJyZW50VmFsdWUoZWxlbWVudDogVCk6IHZvaWQge1xuICAgIHRoaXMuY3VycmVudEluZGV4ID0gdGhpcy5zZXQuZmluZEluZGV4KGl0ZW0gPT4gdGhpcy5zZWFyY2hGbihpdGVtLCBlbGVtZW50KSk7XG4gICAgdGhpcy5jdXJyZW50VmFsdWUgPSB0aGlzLmN1cnJlbnRJbmRleCA9PT0gLTEgPyB1bmRlZmluZWQgOiAodGhpcy5zZXRbdGhpcy5jdXJyZW50SW5kZXhdIGFzIGFueSk7XG5cbiAgICB0aGlzLnVwZGF0ZUNvbnRyb2xzU3RhdGUoKTtcbiAgfVxuXG4gIGdldCBjdXJyZW50VmFsdWVOb3RTZXQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudEluZGV4ID09PSAtMTtcbiAgfVxuXG4gIHB1YmxpYyBzdGVwTGVmdCgpOiB2b2lkIHtcbiAgICB0aGlzLmN1cnJlbnRJbmRleC0tO1xuICAgIHRoaXMuY3VycmVudFZhbHVlID0gdGhpcy5zZXRbdGhpcy5jdXJyZW50SW5kZXhdO1xuXG4gICAgdGhpcy51cGRhdGVDb250cm9sc1N0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgbGVmdCgpOiB2b2lkIHtcbiAgICB0aGlzLmN1cnJlbnRJbmRleCA9IDA7XG4gICAgdGhpcy5jdXJyZW50VmFsdWUgPSB0aGlzLnNldFt0aGlzLmN1cnJlbnRJbmRleF07XG4gICAgdGhpcy51cGRhdGVDb250cm9sc1N0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgc3RlcFJpZ2h0KCk6IHZvaWQge1xuICAgICsrdGhpcy5jdXJyZW50SW5kZXg7XG4gICAgdGhpcy5jdXJyZW50VmFsdWUgPSB0aGlzLnNldFt0aGlzLmN1cnJlbnRJbmRleF07XG4gICAgdGhpcy51cGRhdGVDb250cm9sc1N0YXRlKCk7XG4gIH1cblxuICBwdWJsaWMgcmlnaHQoKTogdm9pZCB7XG4gICAgdGhpcy5jdXJyZW50SW5kZXggPSB0aGlzLnNldC5sZW5ndGggLSAxO1xuICAgIHRoaXMuY3VycmVudFZhbHVlID0gdGhpcy5zZXRbdGhpcy5jdXJyZW50SW5kZXhdO1xuICAgIHRoaXMudXBkYXRlQ29udHJvbHNTdGF0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVDb250cm9sc1N0YXRlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA9PT0gMCkge1xuICAgICAgdGhpcy5jb250cm9sc1N0YXRlLmxlZnRDdHJsRGlzYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5jb250cm9sc1N0YXRlLnN0ZXBsZWZ0Q3RybERpc2FibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5zdGVwUmlnaHRDdHJsRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5yaWdodEN0cmxEaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA9PT0gdGhpcy5zZXQubGVuZ3RoIC0gMSkge1xuICAgICAgdGhpcy5jb250cm9sc1N0YXRlLmxlZnRDdHJsRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5zdGVwbGVmdEN0cmxEaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5jb250cm9sc1N0YXRlLnN0ZXBSaWdodEN0cmxEaXNhYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmNvbnRyb2xzU3RhdGUucmlnaHRDdHJsRGlzYWJsZWQgPSB0cnVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA9PT0gLTEpIHtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5sZWZ0Q3RybERpc2FibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5zdGVwbGVmdEN0cmxEaXNhYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmNvbnRyb2xzU3RhdGUuc3RlcFJpZ2h0Q3RybERpc2FibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29udHJvbHNTdGF0ZS5yaWdodEN0cmxEaXNhYmxlZCA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5jb250cm9sc1N0YXRlLmxlZnRDdHJsRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNvbnRyb2xzU3RhdGUuc3RlcGxlZnRDdHJsRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNvbnRyb2xzU3RhdGUuc3RlcFJpZ2h0Q3RybERpc2FibGVkID0gZmFsc2U7XG4gICAgdGhpcy5jb250cm9sc1N0YXRlLnJpZ2h0Q3RybERpc2FibGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFByaXptSW5wdXRDYXJvdXNlbEFycmF5Q29udGVudDxUPiBleHRlbmRzIFByaXptQ2Fyb3VzZWxBcnJheUNvbnRlbnQ8VD4ge31cbiJdfQ==