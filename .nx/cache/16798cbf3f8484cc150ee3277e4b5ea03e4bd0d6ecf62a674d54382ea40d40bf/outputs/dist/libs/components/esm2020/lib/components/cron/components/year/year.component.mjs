import { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';
import { PrizmCronUiYearState } from '../../cron-ui-year.state';
import { UntypedFormControl } from '@angular/forms';
import { PrizmChipsComponent } from '../../../chips';
import * as i0 from "@angular/core";
import * as i1 from "../../cron-ui-year.state";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "@prizm-ui/helpers";
import * as i5 from "../../../chips/chips.component";
import * as i6 from "../../../input/common/input-layout/input-layout.component";
import * as i7 from "../../../input/common/input-allowed-symbols/input-allowed-symbols.directive";
import * as i8 from "../../../radio/prizm-radio-button.component";
import * as i9 from "../../../input/input-text/input-text.component";
import * as i10 from "../schedule/schedule.component";
import * as i11 from "../carousel/carousel.component";
export class PrizmCronYearComponent {
    constructor(cronUiState) {
        this.cronUiState = cronUiState;
        this.specifiedList = [];
        this.deletable = true;
        this.requiredInputControl = new UntypedFormControl('');
        this.chipsControl = new UntypedFormControl([]);
        this.yearForAdd = null;
        this.chipses = [];
        this.allowedYear = /[0-9]/g;
    }
    removedChips(value) {
        const correctedValue = this.corrector(value);
        this.chipses = correctedValue;
        this.saveSpecified(correctedValue.join(', '));
    }
    onEnter(value, chipsComponent) {
        if (!value)
            return;
        const str = value.toString();
        this.yearForAdd = null;
        this.chipses.push(str);
        this.chipses = this.corrector(this.chipses);
        this.saveSpecified(this.chipses.join(', '));
    }
    join(str) {
        return str.join(', ');
    }
    corrector(str) {
        const result = str
            .reduce((base, i) => {
            const trimmed = i.replace(/[ ]+/g, '');
            const int = parseInt(trimmed, 10);
            if (!trimmed) {
                return base;
            }
            if (!int)
                return base;
            if (int < 1900)
                return base;
            if (int > 2999)
                base.push(2999);
            else
                base.push(int);
            return base;
        }, [])
            .sort()
            .map(i => i.toString());
        return Array.from(new Set(result));
    }
    saveSpecified(str) {
        return this.cronUiState.updateSpecified(str.replace(/[ ]+/g, '').split(','));
    }
}
PrizmCronYearComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmCronYearComponent, deps: [{ token: i1.PrizmCronUiYearState }], target: i0.ɵɵFactoryTarget.Component });
PrizmCronYearComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmCronYearComponent, selector: "prizm-cron-year", inputs: { specifiedList: "specifiedList" }, viewQueries: [{ propertyName: "chipsComponent", first: true, predicate: PrizmChipsComponent, descendants: true, static: true }], ngImport: i0, template: "<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\u041A\u0430\u0436\u0434\u044B\u0439 \u0433\u043E\u0434</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>\u041A\u0430\u0436\u0434\u044B\u0439</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>\u0433\u043E\u0434, \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"scheduleComponent.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column year\">\n        <span>\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0433\u043E\u0434 (\u0432\u044B\u0431\u043E\u0440 \u043E\u0434\u043D\u043E\u0433\u043E \u0438\u043B\u0438 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u0438\u0445)</span>\n        <div>\n          <prizm-input-layout\n            class=\"year-input\"\n            *prizmLet=\"\n              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : corrector as chips\n            \"\n            [outer]=\"true\"\n            [label]=\"null\"\n            size=\"m\"\n          >\n            <input\n              #input\n              [(ngModel)]=\"yearForAdd\"\n              [prizmInputAllowedSymbols]=\"allowedYear\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              (enter)=\"onEnter($event, chipsComponent)\"\n              prizmInput\n              placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0433\u043E\u0434\"\n            />\n            <prizm-chips\n              #chipsComponent\n              [ngModel]=\"chips\"\n              [deletable]=\"deletable\"\n              (ngModelChange)=\"removedChips($event)\"\n              prizm-input-bottom\n            ></prizm-chips>\n          </prizm-input-layout>\n\n          <!--          <prizm-input-layout-->\n          <!--            class=\"year-input\"-->\n          <!--            *prizmLet=\"-->\n          <!--              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : join as joinedStr-->\n          <!--            \"-->\n          <!--            [outer]=\"true\"-->\n          <!--            [label]=\"null\"-->\n          <!--            [forceClear]=\"false\"-->\n          <!--            size=\"m\"-->\n          <!--          >-->\n          <!--            <input-->\n          <!--              [prizmInputAllowedSymbols]=\"allowedYear\"-->\n          <!--              [prizmInputCorrector]=\"corrector\"-->\n          <!--              [ngModel]=\"joinedStr\"-->\n          <!--              [ngModelOptions]=\"{ standalone: true }\"-->\n          <!--              (ngModelChange)=\"saveSpecified($event)\"-->\n          <!--              prizmInput-->\n          <!--            />-->\n          <!--          </prizm-input-layout>-->\n        </div>\n        <prizm-cron-schedule\n          #scheduleComponent\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>\u041A\u0430\u0436\u0434\u044B\u0439 \u0433\u043E\u0434 \u0441</span>\n        <prizm-cron-carousel\n          #start\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>\u0434\u043E</span>\n        <prizm-cron-carousel\n          #end\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n", styles: [".year-input{padding:4px 0}prizm-chips:not(:empty){margin-bottom:10px}.year.content{max-width:var(--prizm-cron-year-max-width, 400px)}\n", ".blocks{display:flex;flex-direction:column}.blocks .block{display:flex;width:100%;gap:8px;padding:16px 15px}.blocks .block.row .radio{align-items:center;display:flex}.blocks .block.row .content{flex-direction:row;align-items:center;gap:12px}.content{display:flex}.content.column{flex-direction:column;gap:8px}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "component", type: i5.PrizmChipsComponent, selector: "prizm-chips", inputs: ["size", "chips", "deletable", "singleLine", "hintCanShow", "hintDirection"], outputs: ["addChipEvent", "removeChipEvent", "clickChipEvent"] }, { kind: "component", type: i6.PrizmInputLayoutComponent, selector: "prizm-input-layout", inputs: ["label", "size", "status", "outer", "clearButton", "border", "position", "forceClear"], outputs: ["clear"] }, { kind: "directive", type: i7.PrizmInputAllowedSymbolsDirective, selector: "[prizmInputAllowedSymbols]", inputs: ["prizmInputAllowedSymbols"] }, { kind: "component", type: i8.PrizmRadioButtonComponent, selector: "prizm-radio-button", inputs: ["size", "value", "name", "label", "disabled"], outputs: ["clickEvent", "changeEvent", "focusEvent", "focusOutEvent", "blurEvent"] }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i9.PrizmInputTextComponent, selector: "input[prizmInput]:not([type=number]), textarea[prizmInput], input[prizmInputPassword]", inputs: ["disabled", "required", "value"], outputs: ["enter", "onClear", "valueChanged"], exportAs: ["prizmInput"] }, { kind: "component", type: i10.PrizmCronScheduleComponent, selector: "prizm-cron-schedule", inputs: ["items", "selected"], outputs: ["selectedChange"] }, { kind: "component", type: i11.PrizmCronCarouselComponent, selector: "prizm-cron-carousel", inputs: ["content", "value"], outputs: ["valueChange"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.PrizmPluckPipe, name: "prizmPluck" }, { kind: "pipe", type: i4.PrizmCallFuncPipe, name: "prizmCallFunc" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmCronYearComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-cron-year', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\u041A\u0430\u0436\u0434\u044B\u0439 \u0433\u043E\u0434</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>\u041A\u0430\u0436\u0434\u044B\u0439</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>\u0433\u043E\u0434, \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"scheduleComponent.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column year\">\n        <span>\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0433\u043E\u0434 (\u0432\u044B\u0431\u043E\u0440 \u043E\u0434\u043D\u043E\u0433\u043E \u0438\u043B\u0438 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u0438\u0445)</span>\n        <div>\n          <prizm-input-layout\n            class=\"year-input\"\n            *prizmLet=\"\n              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : corrector as chips\n            \"\n            [outer]=\"true\"\n            [label]=\"null\"\n            size=\"m\"\n          >\n            <input\n              #input\n              [(ngModel)]=\"yearForAdd\"\n              [prizmInputAllowedSymbols]=\"allowedYear\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              (enter)=\"onEnter($event, chipsComponent)\"\n              prizmInput\n              placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0433\u043E\u0434\"\n            />\n            <prizm-chips\n              #chipsComponent\n              [ngModel]=\"chips\"\n              [deletable]=\"deletable\"\n              (ngModelChange)=\"removedChips($event)\"\n              prizm-input-bottom\n            ></prizm-chips>\n          </prizm-input-layout>\n\n          <!--          <prizm-input-layout-->\n          <!--            class=\"year-input\"-->\n          <!--            *prizmLet=\"-->\n          <!--              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : join as joinedStr-->\n          <!--            \"-->\n          <!--            [outer]=\"true\"-->\n          <!--            [label]=\"null\"-->\n          <!--            [forceClear]=\"false\"-->\n          <!--            size=\"m\"-->\n          <!--          >-->\n          <!--            <input-->\n          <!--              [prizmInputAllowedSymbols]=\"allowedYear\"-->\n          <!--              [prizmInputCorrector]=\"corrector\"-->\n          <!--              [ngModel]=\"joinedStr\"-->\n          <!--              [ngModelOptions]=\"{ standalone: true }\"-->\n          <!--              (ngModelChange)=\"saveSpecified($event)\"-->\n          <!--              prizmInput-->\n          <!--            />-->\n          <!--          </prizm-input-layout>-->\n        </div>\n        <prizm-cron-schedule\n          #scheduleComponent\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>\u041A\u0430\u0436\u0434\u044B\u0439 \u0433\u043E\u0434 \u0441</span>\n        <prizm-cron-carousel\n          #start\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>\u0434\u043E</span>\n        <prizm-cron-carousel\n          #end\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n", styles: [".year-input{padding:4px 0}prizm-chips:not(:empty){margin-bottom:10px}.year.content{max-width:var(--prizm-cron-year-max-width, 400px)}\n", ".blocks{display:flex;flex-direction:column}.blocks .block{display:flex;width:100%;gap:8px;padding:16px 15px}.blocks .block.row .radio{align-items:center;display:flex}.blocks .block.row .content{flex-direction:row;align-items:center;gap:12px}.content{display:flex}.content.column{flex-direction:column;gap:8px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PrizmCronUiYearState }]; }, propDecorators: { specifiedList: [{
                type: Input
            }], chipsComponent: [{
                type: ViewChild,
                args: [PrizmChipsComponent, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,