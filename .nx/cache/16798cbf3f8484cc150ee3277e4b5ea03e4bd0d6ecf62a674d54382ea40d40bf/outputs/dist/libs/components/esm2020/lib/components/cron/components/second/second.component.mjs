import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PrizmDestroyService } from '@prizm-ui/helpers';
import { PrizmCronUiSecondState } from '../../cron-ui-second.state';
import * as i0 from "@angular/core";
import * as i1 from "../../cron-ui-second.state";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "@prizm-ui/helpers";
import * as i5 from "../../../radio/prizm-radio-button.component";
import * as i6 from "../schedule/schedule.component";
import * as i7 from "../carousel/carousel.component";
export class PrizmCronSecondComponent {
    constructor(cronUiState) {
        this.cronUiState = cronUiState;
        this.specifiedList = [];
    }
}
PrizmCronSecondComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmCronSecondComponent, deps: [{ token: i1.PrizmCronUiSecondState }], target: i0.ɵɵFactoryTarget.Component });
PrizmCronSecondComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmCronSecondComponent, selector: "prizm-cron-second", inputs: { specifiedList: "specifiedList" }, providers: [PrizmDestroyService], ngImport: i0, template: "<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\u041A\u0430\u0436\u0434\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>\u041A\u0430\u0436\u0434\u0430\u044F</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>\u0441\u0435\u043A\u0443\u043D\u0434\u0430, \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430 (\u0432\u044B\u0431\u043E\u0440 \u043E\u0434\u043D\u043E\u0439 \u0438\u043B\u0438 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u0438\u0445)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>\u041A\u0430\u0436\u0434\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430 \u0441</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>\u0434\u043E</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n", styles: ["", ".blocks{display:flex;flex-direction:column}.blocks .block{display:flex;width:100%;gap:8px;padding:16px 15px}.blocks .block.row .radio{align-items:center;display:flex}.blocks .block.row .content{flex-direction:row;align-items:center;gap:12px}.content{display:flex}.content.column{flex-direction:column;gap:8px}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "component", type: i5.PrizmRadioButtonComponent, selector: "prizm-radio-button", inputs: ["size", "value", "name", "label", "disabled"], outputs: ["clickEvent", "changeEvent", "focusEvent", "focusOutEvent", "blurEvent"] }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i6.PrizmCronScheduleComponent, selector: "prizm-cron-schedule", inputs: ["items", "selected"], outputs: ["selectedChange"] }, { kind: "component", type: i7.PrizmCronCarouselComponent, selector: "prizm-cron-carousel", inputs: ["content", "value"], outputs: ["valueChange"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.PrizmPluckPipe, name: "prizmPluck" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmCronSecondComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-cron-second', changeDetection: ChangeDetectionStrategy.OnPush, providers: [PrizmDestroyService], template: "<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\u041A\u0430\u0436\u0434\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>\u041A\u0430\u0436\u0434\u0430\u044F</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>\u0441\u0435\u043A\u0443\u043D\u0434\u0430, \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430 (\u0432\u044B\u0431\u043E\u0440 \u043E\u0434\u043D\u043E\u0439 \u0438\u043B\u0438 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u0438\u0445)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>\u041A\u0430\u0436\u0434\u0430\u044F \u0441\u0435\u043A\u0443\u043D\u0434\u0430 \u0441</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>\u0434\u043E</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n", styles: [".blocks{display:flex;flex-direction:column}.blocks .block{display:flex;width:100%;gap:8px;padding:16px 15px}.blocks .block.row .radio{align-items:center;display:flex}.blocks .block.row .content{flex-direction:row;align-items:center;gap:12px}.content{display:flex}.content.column{flex-direction:column;gap:8px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PrizmCronUiSecondState }]; }, propDecorators: { specifiedList: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,