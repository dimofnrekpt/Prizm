import { ChangeDetectionStrategy, Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, } from '@angular/core';
import { PRIZM_EMPTY_ARRAY, PrizmAbstractTestId } from '@prizm-ui/core';
import { PrizmNavigationMenuGroupComponent } from '../prizm-navigation-menu-group/prizm-navigation-menu-group.component';
import { PrizmNavigationMenuToolbarService } from '../../services/prizm-navigation-menu-toolbar.service';
import { PrizmNavigationMenuService } from '../../services/prizm-navigation-menu.service';
import { takeUntil } from 'rxjs/operators';
import { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';
import { DEFAULT_HEADER_CONFIG } from '../../defaults';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { PrizmTreeModule } from '../../../tree';
import { PrizmIconsSvgModule } from '@prizm-ui/icons';
import { PrizmButtonComponent } from '../../../button';
import { PolymorphOutletDirective, PrizmHintDirective, PrizmHoveredDirective } from '../../../../directives';
import { PrizmAccordionComponent } from '../../../accordion';
import { PrizmNavigationMenuToolbarComponent } from '../prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component';
import { prizmIsTextOverflow } from '../../../../util';
import * as i0 from "@angular/core";
import * as i1 from "../../services/prizm-navigation-menu.service";
import * as i2 from "@prizm-ui/helpers";
import * as i3 from "@angular/common";
export class PrizmNavigationMenuComponent extends PrizmAbstractTestId {
    set activeItem(activeItem) {
        this.menuService.setActiveItem(activeItem);
    }
    set itemKeyName(keyName) {
        this.menuService.setItemKeyName(keyName);
    }
    set expandedItemsMap(expandedItemsMap) {
        this.menuService.registerExpandedItemsMap(expandedItemsMap);
    }
    set expandedGroupsMap(expandedGroupsMap) {
        this.menuService.registerExpandedGroupsMap(expandedGroupsMap);
    }
    set settingsConfig(settings) {
        this.menuService.setSettingsConfiguration(settings);
    }
    set emptySearchResultMessageConfig(config) {
        this.menuService.setEmptySearchResultMessageConfig(config);
    }
    set emptyDataMessageConfig(config) {
        this.menuService.setEmptyDataMessageConfig(config);
    }
    set headerConfig(config) {
        this.headerConfiguration = { ...config, showSettings: false };
    }
    set searchConfig(config) {
        this.menuService.setSearchConfig(config);
    }
    set toolbarConfig(config) {
        this.menuService.setToolbarConfig(config);
    }
    constructor(menuService, destroy$) {
        super();
        this.menuService = menuService;
        this.destroy$ = destroy$;
        this.menuGroups = prizmEmptyQueryList();
        this.homeClicked = new EventEmitter();
        this.activeItemChanged = new EventEmitter();
        this.breadcrumbsChanged = new EventEmitter();
        this.expandedItemsMapChanged = new EventEmitter();
        this.expandedGroupsMapChangedEvent = new EventEmitter();
        this.itemExpandedChanged = new EventEmitter();
        this.groupExpandedChanged = new EventEmitter();
        this.testId_ = 'ui_navigation_menu';
        this.menuToolbarConfig$ = this.menuService.toolbarConfig$;
        this.menuSearchConfig$ = this.menuService.searchConfig$;
        this.emptySearchResultMessageConfig$ = this.menuService.emptySearchResultMessageConfig$;
        this.emptyDataMessageConfig$ = this.menuService.emptyDataMessageConfig$;
        this.settingsConfiguration = this.menuService.settingsConfig;
        this.headerConfiguration = DEFAULT_HEADER_CONFIG;
        this.prizmIsTextOverflow = prizmIsTextOverflow;
        this.handler = item => item.children || PRIZM_EMPTY_ARRAY;
        this.forwardEvents();
    }
    handleHomeClicked() {
        this.homeClicked.emit();
    }
    forwardEvents() {
        this.menuService.activeItemChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.activeItemChanged.emit(event));
        this.menuService.breadCrumbsChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.breadcrumbsChanged.emit(event));
        this.menuService.itemExpandedChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.itemExpandedChanged.emit(event));
        this.menuService.groupExpandedChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.groupExpandedChanged.emit(event));
        this.menuService.expandedItemsMapChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.expandedItemsMapChanged.emit(event));
        this.menuService.expandedGroupsMapChangedEvent$
            .pipe(takeUntil(this.destroy$))
            .subscribe(event => this.expandedGroupsMapChangedEvent.emit(event));
    }
    handleSettingsClicked() {
        // TODO
    }
}
PrizmNavigationMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmNavigationMenuComponent, deps: [{ token: i1.PrizmNavigationMenuService }, { token: i2.PrizmDestroyService }], target: i0.ɵɵFactoryTarget.Component });
PrizmNavigationMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmNavigationMenuComponent, isStandalone: true, selector: "prizm-navigation-menu", inputs: { title: "title", items: "items", toolbarExtraTemplate: "toolbarExtraTemplate", itemExtraTemplate: "itemExtraTemplate", headerExtraTemplate: "headerExtraTemplate", activeItem: "activeItem", itemKeyName: "itemKeyName", expandedItemsMap: "expandedItemsMap", expandedGroupsMap: "expandedGroupsMap", settingsConfig: "settingsConfig", emptySearchResultMessageConfig: "emptySearchResultMessageConfig", emptyDataMessageConfig: "emptyDataMessageConfig", headerConfig: "headerConfig", searchConfig: "searchConfig", toolbarConfig: "toolbarConfig" }, outputs: { homeClicked: "homeClicked", activeItemChanged: "activeItemChanged", breadcrumbsChanged: "breadcrumbsChanged", expandedItemsMapChanged: "expandedItemsMapChanged", expandedGroupsMapChangedEvent: "expandedGroupsMapChangedEvent", itemExpandedChanged: "itemExpandedChanged", groupExpandedChanged: "groupExpandedChanged" }, providers: [PrizmNavigationMenuService, PrizmNavigationMenuToolbarService, PrizmDestroyService], queries: [{ propertyName: "menuGroups", predicate: PrizmNavigationMenuGroupComponent }], usesInheritance: true, ngImport: i0, template: "<div class=\"prizm-navigation-menu\">\n  <header class=\"prizm-navigation-menu__header header\">\n    <div class=\"header__top\" (prizmHoveredChange)=\"headerIsHovered = $event\">\n      <div class=\"header__title\" #elem [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n        {{ title }}\n      </div>\n      <div class=\"header__instruments\">\n        <ng-container\n          [ngTemplateOutlet]=\"headerExtraTemplate\"\n          [ngTemplateOutletContext]=\"{ headerIsHovered: headerIsHovered }\"\n        ></ng-container>\n        <button\n          *ngIf=\"headerConfiguration.showSettings\"\n          [size]=\"'m'\"\n          [icon]=\"'settings'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleSettingsClicked()\"\n          prizmIconButton\n        ></button>\n        <button\n          *ngIf=\"headerConfiguration.showHome\"\n          [size]=\"'m'\"\n          [icon]=\"'social-home'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleHomeClicked()\"\n          prizmIconButton\n        ></button>\n      </div>\n    </div>\n    <prizm-navigation-menu-toolbar\n      class=\"header__toolbar\"\n      [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n      [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n      [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n    ></prizm-navigation-menu-toolbar>\n  </header>\n\n  <main class=\"prizm-navigation-menu__content groups-content\" [ngClass]=\"settingsConfiguration.selectedSize\">\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\n      <section class=\"groups-content__top\">\n        <ng-content></ng-content>\n        <ng-content select=\"[top]\"></ng-content>\n      </section>\n      <section class=\"groups-content__bottom\">\n        <ng-content select=\"[bottom]\"></ng-content>\n      </section>\n    </ng-container>\n\n    <ng-template #noGroups>\n      <div class=\"no-groups-content\">\n        <prizm-navigation-menu-group\n          [groupId]=\"'prizm-navigation-menu-default-group'\"\n          [hideGroupAppearance]=\"true\"\n          [items]=\"items\"\n          [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n          [itemExtraTemplate]=\"itemExtraTemplate\"\n          [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n          [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n          [emptySearchResultMessageConfig]=\"$any(emptySearchResultMessageConfig$ | async)\"\n          [emptyDataMessageConfig]=\"$any(emptyDataMessageConfig$ | async)\"\n        ></prizm-navigation-menu-group>\n      </div>\n    </ng-template>\n  </main>\n</div>\n", styles: [".prizm-navigation-menu{--prizm-navigation-menu__item-padding: 8px 16px;--prizm-navigation-menu__item-height: 40px;display:grid;grid-template-rows:min-content;height:100%;background:var(--prizm-v3-background-fill-primary);border-right:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu__header{overflow:hidden;border-bottom:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu__content{flex:1}.prizm-navigation-menu .header__top{display:flex;align-items:center;justify-content:space-between;padding:var(--prizm-navigation-menu__item-padding);height:var(--prizm-navigation-menu__item-height);border-bottom:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu .header__toolbar{height:var(--prizm-navigation-menu__item-height)}.prizm-navigation-menu .header__title{font-size:14px;line-height:20px;font-weight:600;padding:0 4px;color:var(--prizm-v3-text-icon-primary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.prizm-navigation-menu .header__instruments{display:flex;align-items:center}.prizm-navigation-menu .header__instruments button[prizmIconButton]{margin:0 1px}.prizm-navigation-menu .no-groups-content{overflow:auto;height:100%}.prizm-navigation-menu .groups-content{display:flex;flex-direction:column;overflow:hidden;height:100%}.prizm-navigation-menu .groups-content__top{flex:1;overflow:auto;display:flex;flex-direction:column}.prizm-navigation-menu .groups-content__bottom{flex-shrink:1;overflow:hidden}::-webkit-scrollbar{width:0px;background:transparent}::-webkit-scrollbar-track{background:transparent}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "ngmodule", type: PrizmTreeModule }, { kind: "ngmodule", type: PrizmIconsSvgModule }, { kind: "component", type: PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "directive", type: PrizmHoveredDirective, selector: "[prizmHoveredChange]", outputs: ["prizmHoveredChange"] }, { kind: "component", type: PrizmNavigationMenuGroupComponent, selector: "prizm-navigation-menu-group", inputs: ["groupId", "title", "hideGroupAppearance", "icon", "toolbarExtraTemplate", "itemExtraTemplate", "items", "toolbarConfig", "emptySearchResultMessageConfig", "emptyDataMessageConfig", "searchConfig", "childrenHandler"], outputs: ["itemExpandedChanged", "groupExpandedChanged"] }, { kind: "component", type: PrizmNavigationMenuToolbarComponent, selector: "prizm-navigation-menu-toolbar", inputs: ["toolbarExtraTemplate", "toolbarConfig", "searchConfig", "hideGroupAppearance"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmNavigationMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-navigation-menu', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        CommonModule,
                        ReactiveFormsModule,
                        PrizmTreeModule,
                        PrizmIconsSvgModule,
                        PrizmButtonComponent,
                        PrizmHoveredDirective,
                        PrizmAccordionComponent,
                        PolymorphOutletDirective,
                        PrizmNavigationMenuGroupComponent,
                        PrizmNavigationMenuToolbarComponent,
                        PrizmHintDirective,
                    ], providers: [PrizmNavigationMenuService, PrizmNavigationMenuToolbarService, PrizmDestroyService], template: "<div class=\"prizm-navigation-menu\">\n  <header class=\"prizm-navigation-menu__header header\">\n    <div class=\"header__top\" (prizmHoveredChange)=\"headerIsHovered = $event\">\n      <div class=\"header__title\" #elem [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n        {{ title }}\n      </div>\n      <div class=\"header__instruments\">\n        <ng-container\n          [ngTemplateOutlet]=\"headerExtraTemplate\"\n          [ngTemplateOutletContext]=\"{ headerIsHovered: headerIsHovered }\"\n        ></ng-container>\n        <button\n          *ngIf=\"headerConfiguration.showSettings\"\n          [size]=\"'m'\"\n          [icon]=\"'settings'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleSettingsClicked()\"\n          prizmIconButton\n        ></button>\n        <button\n          *ngIf=\"headerConfiguration.showHome\"\n          [size]=\"'m'\"\n          [icon]=\"'social-home'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleHomeClicked()\"\n          prizmIconButton\n        ></button>\n      </div>\n    </div>\n    <prizm-navigation-menu-toolbar\n      class=\"header__toolbar\"\n      [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n      [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n      [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n    ></prizm-navigation-menu-toolbar>\n  </header>\n\n  <main class=\"prizm-navigation-menu__content groups-content\" [ngClass]=\"settingsConfiguration.selectedSize\">\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\n      <section class=\"groups-content__top\">\n        <ng-content></ng-content>\n        <ng-content select=\"[top]\"></ng-content>\n      </section>\n      <section class=\"groups-content__bottom\">\n        <ng-content select=\"[bottom]\"></ng-content>\n      </section>\n    </ng-container>\n\n    <ng-template #noGroups>\n      <div class=\"no-groups-content\">\n        <prizm-navigation-menu-group\n          [groupId]=\"'prizm-navigation-menu-default-group'\"\n          [hideGroupAppearance]=\"true\"\n          [items]=\"items\"\n          [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n          [itemExtraTemplate]=\"itemExtraTemplate\"\n          [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n          [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n          [emptySearchResultMessageConfig]=\"$any(emptySearchResultMessageConfig$ | async)\"\n          [emptyDataMessageConfig]=\"$any(emptyDataMessageConfig$ | async)\"\n        ></prizm-navigation-menu-group>\n      </div>\n    </ng-template>\n  </main>\n</div>\n", styles: [".prizm-navigation-menu{--prizm-navigation-menu__item-padding: 8px 16px;--prizm-navigation-menu__item-height: 40px;display:grid;grid-template-rows:min-content;height:100%;background:var(--prizm-v3-background-fill-primary);border-right:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu__header{overflow:hidden;border-bottom:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu__content{flex:1}.prizm-navigation-menu .header__top{display:flex;align-items:center;justify-content:space-between;padding:var(--prizm-navigation-menu__item-padding);height:var(--prizm-navigation-menu__item-height);border-bottom:1px solid var(--prizm-v3-background-stroke)}.prizm-navigation-menu .header__toolbar{height:var(--prizm-navigation-menu__item-height)}.prizm-navigation-menu .header__title{font-size:14px;line-height:20px;font-weight:600;padding:0 4px;color:var(--prizm-v3-text-icon-primary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.prizm-navigation-menu .header__instruments{display:flex;align-items:center}.prizm-navigation-menu .header__instruments button[prizmIconButton]{margin:0 1px}.prizm-navigation-menu .no-groups-content{overflow:auto;height:100%}.prizm-navigation-menu .groups-content{display:flex;flex-direction:column;overflow:hidden;height:100%}.prizm-navigation-menu .groups-content__top{flex:1;overflow:auto;display:flex;flex-direction:column}.prizm-navigation-menu .groups-content__bottom{flex-shrink:1;overflow:hidden}::-webkit-scrollbar{width:0px;background:transparent}::-webkit-scrollbar-track{background:transparent}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PrizmNavigationMenuService }, { type: i2.PrizmDestroyService }]; }, propDecorators: { menuGroups: [{
                type: ContentChildren,
                args: [PrizmNavigationMenuGroupComponent]
            }], homeClicked: [{
                type: Output
            }], activeItemChanged: [{
                type: Output
            }], breadcrumbsChanged: [{
                type: Output
            }], expandedItemsMapChanged: [{
                type: Output
            }], expandedGroupsMapChangedEvent: [{
                type: Output
            }], itemExpandedChanged: [{
                type: Output
            }], groupExpandedChanged: [{
                type: Output
            }], title: [{
                type: Input
            }], items: [{
                type: Input
            }], toolbarExtraTemplate: [{
                type: Input
            }], itemExtraTemplate: [{
                type: Input
            }], headerExtraTemplate: [{
                type: Input
            }], activeItem: [{
                type: Input
            }], itemKeyName: [{
                type: Input
            }], expandedItemsMap: [{
                type: Input
            }], expandedGroupsMap: [{
                type: Input
            }], settingsConfig: [{
                type: Input
            }], emptySearchResultMessageConfig: [{
                type: Input
            }], emptyDataMessageConfig: [{
                type: Input
            }], headerConfig: [{
                type: Input
            }], searchConfig: [{
                type: Input
            }], toolbarConfig: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,