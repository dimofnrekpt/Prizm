import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input } from '@angular/core';
import { Observable } from 'rxjs';
import { PRIZM_ANIMATIONS_DURATION } from '../../../tokens';
import { PRIZM_DIALOG_CLOSE_STREAM, PRIZM_DIALOG_PROVIDERS } from '../dialog/dialog-options';
import { prizmFadeIn, prizmSlideInTop } from '../../../animations';
import { takeUntil } from 'rxjs/operators';
import { PrizmDestroyService, PrizmToObservableModule } from '@prizm-ui/helpers';
import { PrizmAbstractTestId } from '../../../abstract/interactive';
import { CommonModule } from '@angular/common';
import { PolymorphModule, PrizmFocusTrapModule } from '../../../directives';
import { PrizmOverlayModule } from '../../../modules';
import { PrizmThemeModule } from '@prizm-ui/theme';
import { PrizmButtonModule } from '../../button';
import { PrizmScrollbarModule } from '../../scrollbar';
import * as i0 from "@angular/core";
import * as i1 from "@prizm-ui/helpers";
import * as i2 from "@angular/common";
import * as i3 from "../../../directives/polymorph/directives/outlet";
import * as i4 from "@prizm-ui/theme";
import * as i5 from "../../button/button.component";
import * as i6 from "../../../directives/focus-trap/focus-trap.directive";
import * as i7 from "../../scrollbar/scrollbar.component";
import * as i8 from "rxjs";
export class PrizmDialogConfirmComponent extends PrizmAbstractTestId {
    get size() {
        return this.context.size;
    }
    get id() {
        return this.context.id;
    }
    get slideInTop() {
        return this.animation;
    }
    constructor(duration, close$, destroy$, elRef) {
        super();
        this.duration = duration;
        this.close$ = close$;
        this.destroy$ = destroy$;
        this.elRef = elRef;
        this.width = '100%';
        this.testId_ = 'ui_form_submit';
        this.animation = {
            value: '',
            params: {
                start: '40px',
                duration: this.duration,
            },
        };
        close$.pipe(takeUntil(this.destroy$)).subscribe(() => {
            this.close();
        });
    }
}
PrizmDialogConfirmComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmDialogConfirmComponent, deps: [{ token: PRIZM_ANIMATIONS_DURATION }, { token: PRIZM_DIALOG_CLOSE_STREAM }, { token: i1.PrizmDestroyService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
PrizmDialogConfirmComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmDialogConfirmComponent, isStandalone: true, selector: "prizm-confirm-dialog", inputs: { context: "context", close: "close" }, host: { properties: { "attr.prizm-size": "this.size", "attr.prizm-dialog-id": "this.id", "@prizmSlideInTop": "this.slideInTop", "@prizmFadeIn": "this.slideInTop", "style.width": "this.width" } }, providers: PRIZM_DIALOG_PROVIDERS, usesInheritance: true, ngImport: i0, template: "<div class=\"host\" prizmFocusTrap prizmTheme>\n  <div class=\"content\">\n    <div class=\"title prizm-font-title-h4\">\n      <ng-container *polymorphOutlet=\"$any(context.title) as data; context: context\">\n        {{ data }}\n      </ng-container>\n    </div>\n    <div class=\"description prizm-font-main-body-14\">\n      <prizm-scrollbar class=\"scrollbar\" [visibility]=\"context.scrollbarVisibility ?? 'auto'\">\n        <ng-container *polymorphOutlet=\"$any(context.description) as data; context: $any(context)\">\n          {{ data }}\n        </ng-container>\n      </prizm-scrollbar>\n    </div>\n  </div>\n\n  <div class=\"footer prizm-font-btn-links-14\">\n    <ng-template #columnWrapper let-column=\"column\"> </ng-template>\n\n    <ng-container *polymorphOutlet=\"$any(context.footer); context: context\">\n      <ng-container [ngSwitch]=\"!context.showByVertical\">\n        <div class=\"horizontal\" *ngSwitchCase=\"true\">\n          <div class=\"left\">\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"right\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"vertical\" *ngSwitchDefault>\n          <div class=\"top\">\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"bottom\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #buttonTemplate let-button=\"button\">\n      <button\n        [style]=\"button.style\"\n        [appearance]=\"button.appearance\"\n        [appearanceType]=\"button.appearanceType\"\n        [size]=\"button.size\"\n        [iconRight]=\"button.iconRight\"\n        [icon]=\"button.icon\"\n        [disabled]=\"$any(button.disabled ?? false | prizmToObservable | async)\"\n        [showLoader]=\"$any(button.showLoader ?? false | prizmToObservable | async)\"\n        (click)=\"button.action(context)\"\n        prizmButton\n      >\n        {{ button.text }}\n      </button>\n    </ng-template>\n  </div>\n</div>\n", styles: [".title{overflow:hidden;text-overflow:ellipsis;font-weight:var(--prizm-confirm-dialog-title-font-weight, 600);font-size:var(--prizm-confirm-dialog-title-font-size, 14px);line-height:var(--prizm-confirm-dialog-title-line-height, 20px);text-align:var(--prizm-confirm-dialog-title-align, center);color:var(--prizm-confirm-dialog-title, var(--prizm-v3-text-icon-primary));white-space:pre-line}.description{overflow:hidden;text-overflow:ellipsis;font-weight:var(--prizm-confirm-dialog-description-font-weight, 400);font-size:var(--prizm-confirm-dialog-description-font-size, 14px);line-height:var(--prizm-confirm-dialog-description-line-height, 20px);text-align:var(--prizm-confirm-dialog-description-align, center);color:var(--prizm-confirm-dialog-description, var(--prizm-v3-text-icon-secondary));white-space:pre-line}:host{display:block}.host{background:var(--prizm-confirm-dialog-background, var(--prizm-v3-background-fill-overlay));border:1px solid var(--prizm-v3-background-stroke);border-radius:var(--prizm-confirm-dialog-border-radius, 2px);margin:var(--prizm-confirm-dialog-margin, 10px);pointer-events:all}*:focus-visible{outline:none}.horizontal{display:flex;justify-content:space-between;gap:32px}.left,.right,.top,.bottom{display:flex;gap:8px}.vertical [prizmButton]{width:100%;text-align:center}.vertical .top,.vertical .bottom{flex-flow:column}.vertical .bottom{margin-top:16px}.content{display:flex;flex-flow:column;gap:16px;padding:32px 16px}.footer{border-top:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-confirm-dialog-padding, 14px 16px);max-width:100%}.footer .buttons{display:flex;justify-content:flex-end;gap:8px}.scrollbar{max-height:var(--prizm-confirm-dialog-max-scrollbar-height, 60vh)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "ngmodule", type: PolymorphModule }, { kind: "directive", type: i3.PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "ngmodule", type: PrizmOverlayModule }, { kind: "ngmodule", type: PrizmThemeModule }, { kind: "directive", type: i4.PrizmThemeDirective, selector: "[prizmTheme]", inputs: ["prizmTheme"], outputs: ["prizmThemeChange"] }, { kind: "ngmodule", type: PrizmToObservableModule }, { kind: "pipe", type: i1.PrizmToObservablePipe, name: "prizmToObservable" }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "component", type: i5.PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "ngmodule", type: PrizmFocusTrapModule }, { kind: "directive", type: i6.PrizmFocusTrapDirective, selector: "[prizmFocusTrap]" }, { kind: "ngmodule", type: PrizmScrollbarModule }, { kind: "component", type: i7.PrizmScrollbarComponent, selector: "prizm-scrollbar", inputs: ["visibility"] }], animations: [prizmSlideInTop, prizmFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmDialogConfirmComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-confirm-dialog', changeDetection: ChangeDetectionStrategy.OnPush, providers: PRIZM_DIALOG_PROVIDERS, standalone: true, imports: [
                        CommonModule,
                        PolymorphModule,
                        PrizmOverlayModule,
                        PrizmThemeModule,
                        PrizmToObservableModule,
                        PrizmButtonModule,
                        PrizmFocusTrapModule,
                        PrizmScrollbarModule,
                    ], animations: [prizmSlideInTop, prizmFadeIn], template: "<div class=\"host\" prizmFocusTrap prizmTheme>\n  <div class=\"content\">\n    <div class=\"title prizm-font-title-h4\">\n      <ng-container *polymorphOutlet=\"$any(context.title) as data; context: context\">\n        {{ data }}\n      </ng-container>\n    </div>\n    <div class=\"description prizm-font-main-body-14\">\n      <prizm-scrollbar class=\"scrollbar\" [visibility]=\"context.scrollbarVisibility ?? 'auto'\">\n        <ng-container *polymorphOutlet=\"$any(context.description) as data; context: $any(context)\">\n          {{ data }}\n        </ng-container>\n      </prizm-scrollbar>\n    </div>\n  </div>\n\n  <div class=\"footer prizm-font-btn-links-14\">\n    <ng-template #columnWrapper let-column=\"column\"> </ng-template>\n\n    <ng-container *polymorphOutlet=\"$any(context.footer); context: context\">\n      <ng-container [ngSwitch]=\"!context.showByVertical\">\n        <div class=\"horizontal\" *ngSwitchCase=\"true\">\n          <div class=\"left\">\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"right\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"vertical\" *ngSwitchDefault>\n          <div class=\"top\">\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"bottom\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #buttonTemplate let-button=\"button\">\n      <button\n        [style]=\"button.style\"\n        [appearance]=\"button.appearance\"\n        [appearanceType]=\"button.appearanceType\"\n        [size]=\"button.size\"\n        [iconRight]=\"button.iconRight\"\n        [icon]=\"button.icon\"\n        [disabled]=\"$any(button.disabled ?? false | prizmToObservable | async)\"\n        [showLoader]=\"$any(button.showLoader ?? false | prizmToObservable | async)\"\n        (click)=\"button.action(context)\"\n        prizmButton\n      >\n        {{ button.text }}\n      </button>\n    </ng-template>\n  </div>\n</div>\n", styles: [".title{overflow:hidden;text-overflow:ellipsis;font-weight:var(--prizm-confirm-dialog-title-font-weight, 600);font-size:var(--prizm-confirm-dialog-title-font-size, 14px);line-height:var(--prizm-confirm-dialog-title-line-height, 20px);text-align:var(--prizm-confirm-dialog-title-align, center);color:var(--prizm-confirm-dialog-title, var(--prizm-v3-text-icon-primary));white-space:pre-line}.description{overflow:hidden;text-overflow:ellipsis;font-weight:var(--prizm-confirm-dialog-description-font-weight, 400);font-size:var(--prizm-confirm-dialog-description-font-size, 14px);line-height:var(--prizm-confirm-dialog-description-line-height, 20px);text-align:var(--prizm-confirm-dialog-description-align, center);color:var(--prizm-confirm-dialog-description, var(--prizm-v3-text-icon-secondary));white-space:pre-line}:host{display:block}.host{background:var(--prizm-confirm-dialog-background, var(--prizm-v3-background-fill-overlay));border:1px solid var(--prizm-v3-background-stroke);border-radius:var(--prizm-confirm-dialog-border-radius, 2px);margin:var(--prizm-confirm-dialog-margin, 10px);pointer-events:all}*:focus-visible{outline:none}.horizontal{display:flex;justify-content:space-between;gap:32px}.left,.right,.top,.bottom{display:flex;gap:8px}.vertical [prizmButton]{width:100%;text-align:center}.vertical .top,.vertical .bottom{flex-flow:column}.vertical .bottom{margin-top:16px}.content{display:flex;flex-flow:column;gap:16px;padding:32px 16px}.footer{border-top:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-confirm-dialog-padding, 14px 16px);max-width:100%}.footer .buttons{display:flex;justify-content:flex-end;gap:8px}.scrollbar{max-height:var(--prizm-confirm-dialog-max-scrollbar-height, 60vh)}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [PRIZM_ANIMATIONS_DURATION]
                }] }, { type: i8.Observable, decorators: [{
                    type: Inject,
                    args: [PRIZM_DIALOG_CLOSE_STREAM]
                }] }, { type: i1.PrizmDestroyService }, { type: i0.ElementRef }]; }, propDecorators: { context: [{
                type: Input
            }], close: [{
                type: Input
            }], size: [{
                type: HostBinding,
                args: ['attr.prizm-size']
            }], id: [{
                type: HostBinding,
                args: ['attr.prizm-dialog-id']
            }], slideInTop: [{
                type: HostBinding,
                args: ['@prizmSlideInTop']
            }, {
                type: HostBinding,
                args: ['@prizmFadeIn']
            }], width: [{
                type: HostBinding,
                args: ['style.width']
            }] } });
//# sourceMappingURL=data:application/json;base64,