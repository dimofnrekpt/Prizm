import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, HostBinding, Injector, Input, Output, ViewChild, } from '@angular/core';
import { BehaviorSubject, EMPTY, merge, Subject, timer } from 'rxjs';
import { PrizmInputControl } from '../base/input-control.class';
import { PrizmInputStatusTextDirective } from '../input-status-text/input-status-text.directive';
import { debounceTime, map, startWith, takeUntil, tap } from 'rxjs/operators';
import { isPolymorphPrimitive } from '../../../../directives/polymorph';
import { Compare, filterTruthy, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';
import { PrizmAbstractTestId } from '../../../../abstract/interactive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@prizm-ui/helpers";
import * as i3 from "../../../../directives/polymorph/directives/outlet";
import * as i4 from "../../../../directives/hint/hint.directive";
import * as i5 from "../input-icon-button/input-icon-button.component";
export class PrizmInputLayoutComponent extends PrizmAbstractTestId {
    set label(val) {
        this.label$.next(val);
    }
    get label() {
        return this.label$.value;
    }
    get hasHiddenControl() {
        return this.control.hidden;
    }
    get hasTextarea() {
        return this.control.nativeElementType === 'textarea';
    }
    get showClearButton() {
        if (this.disabled)
            return false;
        return typeof this.forceClear === 'boolean'
            ? this.forceClear
            : this.control.hasClearButton &&
                !this.letDirective?.context?.disabled &&
                !this.letDirective?.context?.empty;
    }
    get disabled() {
        return this.letDirective?.context?.disabled;
    }
    get enabled() {
        return !this.letDirective?.context?.disabled;
    }
    get correctedStatus() {
        return this.foundStatusDirective?.status && this.foundStatusDirective.enable
            ? this.foundStatusDirective.status
            : this.status;
    }
    get emptyLabel() {
        return !this.label?.replace(/[ ]+/, '');
    }
    get showStatusButton() {
        return Boolean(this.status !== 'default' ||
            (this.letDirective?.context?.invalid && this.letDirective?.context?.touched));
    }
    constructor(injector, el) {
        super();
        this.injector = injector;
        this.el = el;
        this.size = 'l';
        this.status = 'default';
        this.outer = false;
        this.clearButton = 'cancel-delete-content';
        this.border = true;
        this.position = 'left';
        this.forceClear = null;
        this.clear = new EventEmitter();
        this.testId_ = 'ui_input_layout';
        this.isPolymorphPrimitive = isPolymorphPrimitive;
        this.label$ = new BehaviorSubject(null);
        this.innerClick$$ = new Subject();
        this.innerClick$ = this.innerClick$$.asObservable();
        this.cdr = this.injector.get(ChangeDetectorRef);
        this.destroy$ = this.injector.get(PrizmDestroyService);
        this.changes$ = new Subject();
        this.onClearClick = (event) => {
            this.clear.next(event);
            this.control.clear(event);
            this.actualizeStatusIcon();
        };
    }
    ngOnInit() {
        this.control.stateChanges
            .pipe(debounceTime(10), tap(() => {
            this.actualizeStatusIcon();
            this.cdr.detectChanges();
        }), takeUntil(this.destroy$))
            .subscribe();
    }
    ngAfterViewInit() {
        this.actualizeStatusIcon();
        if (this.control.defaultLabel && Compare.isNullish(this.label)) {
            this.label$.next(this.control.defaultLabel);
        }
        merge(this.inputStatusText ? this.inputStatusText.changed.pipe(map(() => this.inputStatusText)) : EMPTY)
            .pipe(startWith(this.inputStatusText), map(i => i ?? this.control.statusText), filterTruthy(), tap(text => {
            this.foundStatusDirective = text;
            this.statusMessage = text.getStatusMessage();
            this.actualizeStatusIcon();
            this.cdr.detectChanges();
        }), takeUntil(this.destroy$))
            .subscribe();
        // NEED for get view children from nested controll
        timer(0)
            .pipe(tap(() => this.cdr.markForCheck()), takeUntil(this.destroy$))
            .subscribe();
    }
    ngOnChanges(changes) {
        if (changes.status) {
            this.actualizeStatusIcon();
        }
        this.changes$.next();
    }
    actualizeStatusIcon() {
        let statusIcon;
        switch (this.correctedStatus) {
            case 'warning':
                statusIcon = 'alerts-warning';
                break;
            case 'success':
                statusIcon = 'success-circle-fill';
                break;
            case 'danger':
                statusIcon = 'alerts-info-circle-fill';
                break;
            case 'default':
            default:
                break;
        }
        if (this.control.invalid) {
            statusIcon = 'alerts-info-circle-fill';
        }
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        this.statusIcon = statusIcon;
    }
    innerClick(event) {
        this.innerClick$$.next(event);
    }
}
PrizmInputLayoutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmInputLayoutComponent, deps: [{ token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
PrizmInputLayoutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmInputLayoutComponent, selector: "prizm-input-layout", inputs: { label: "label", size: "size", status: "status", outer: "outer", clearButton: "clearButton", border: "border", position: "position", forceClear: "forceClear" }, outputs: { clear: "clear" }, host: { properties: { "class.has-hidden-control": "this.hasHiddenControl", "class.has-textarea": "this.hasTextarea", "class.disabled": "this.disabled", "class.enabled": "this.enabled" }, classAttribute: "prizm-input-layout" }, providers: [PrizmDestroyService], queries: [{ propertyName: "control", first: true, predicate: PrizmInputControl, descendants: true, static: true }, { propertyName: "inputStatusText", first: true, predicate: PrizmInputStatusTextDirective, descendants: true }], viewQueries: [{ propertyName: "letDirective", first: true, predicate: PrizmLetDirective, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-container\n  *prizmLet=\"{\n    focused: control.focused | prizmToObservable | async,\n    disabled: control.disabled | prizmToObservable | async,\n    empty: control.empty | prizmToObservable | async,\n    touched: control.touched | prizmToObservable | async,\n    invalid: control.invalid | prizmToObservable | async,\n    required: control.required | prizmToObservable | async,\n    emptyLabel: emptyLabel\n  } as $\"\n>\n  <ng-template #labelTemplate>\n    <div\n      class=\"label-container\"\n      *ngIf=\"label$ | async\"\n      [ngClass]=\"[\n        control.nativeElementType ? 'label-container-' + control.nativeElementType : '',\n        'label-container-' + (outer ? 'outer' : 'inner')\n      ]\"\n      [class.label-container-focused]=\"$.focused\"\n      [attr.data-size]=\"size\"\n    >\n      <label\n        class=\"prizm-input-label\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n    {{ control.nativeElementType ? 'prizm-input-label-' + control.nativeElementType : '' }}\n\"\n        [attr.data-size]=\"size\"\n        [class.prizm-input-label-focused]=\"$.focused\"\n        [class.prizm-input-label-empty]=\"$.empty\"\n      >\n        <div class=\"label--title\">\n          {{ label$ | async }}\n        </div>\n        <span class=\"prizm-input-label-required\" *ngIf=\"$.required\">*</span>\n      </label>\n\n      <ng-container [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n        <button\n          class=\"prizm-input-label-clear-btn clear-icon\"\n          *ngSwitchCase=\"true\"\n          [interactive]=\"true\"\n          [disabled]=\"$.disabled\"\n          [prizmInputIconButton]=\"$any(clearButton)\"\n          (click)=\"onClearClick($event)\"\n        ></button>\n\n        <div class=\"prizm-input-label-clear-btn clear-icon\" *ngSwitchDefault>\n          <ng-container\n            *polymorphOutlet=\"\n              clearButton;\n              context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n            \"\n          >\n          </ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-container *ngIf=\"!outer; else labelTemplate\"></ng-container>\n\n  <div\n    class=\"prizm-input-form\n  prizm-input-form-status-{{ correctedStatus }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}\n  prizm-input-form-{{ position }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n  {{ control.nativeElementType ? 'prizm-input-form-' + control.nativeElementType : '' }}\n\"\n    [class.hide-border]=\"!border\"\n    [attr.data-size]=\"size\"\n    [ngClass]=\"{\n      'prizm-input-form-focused': !$.disabled && $.focused,\n      'prizm-input-form-empty': $.empty,\n      'prizm-input-empty-label': emptyLabel,\n      'prizm-input-form-disabled': $.disabled,\n      'prizm-input-form-touched': $.touched,\n      'prizm-input-form-invalid': $.invalid\n    }\"\n  >\n    <div class=\"prizm-input-form__first\">\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutLeft?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-left]\"></ng-content>\n      </ng-container>\n\n      <div class=\"prizm-input-form-inner-container\" (click)=\"innerClick($event)\">\n        <div class=\"prizm-input-form-body\">\n          <ng-container *ngIf=\"outer; else labelTemplate\"></ng-container>\n\n          <ng-content></ng-content>\n          <ng-container>\n            <ng-container *ngIf=\"control.layoutInBody?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n            </ng-container>\n            <ng-content select=\"[prizm-input-in-body]\"></ng-content>\n          </ng-container>\n        </div>\n\n        <ng-container *ngIf=\"showClearButton\" [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n          <button\n            class=\"prizm-input-label-clear-btn prizm-input-button-default clear-icon\"\n            *ngSwitchCase=\"true\"\n            [interactive]=\"true\"\n            [disabled]=\"$.disabled\"\n            [prizmInputIconButton]=\"$any(clearButton) ?? 'cancel-delete-content'\"\n            (click)=\"onClearClick($event)\"\n          ></button>\n\n          <div class=\"prizm-input-button-default clear-icon\" *ngSwitchDefault>\n            <ng-container\n              *polymorphOutlet=\"\n                clearButton;\n                context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n              \"\n            >\n            </ng-container>\n          </div>\n        </ng-container>\n\n        <button\n          class=\"prizm-input-form-status-button\"\n          #statusButton\n          *ngIf=\"showStatusButton\"\n          [prizmInputIconButton]=\"statusIcon\"\n          [prizmHint]=\"statusMessage\"\n          [prizmHintCanShow]=\"!!statusMessage\"\n          [interactive]=\"false\"\n        ></button>\n      </div>\n\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutRight?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-right]\"></ng-content>\n      </ng-container>\n    </div>\n\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutBottom?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-bottom]\"></ng-content>\n    </ng-container>\n  </div>\n\n  <div class=\"prizm-input-form-subtext prizm-input-form-subtext-{{ correctedStatus }}\">\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutSubtext?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-subtext]\"></ng-content>\n    </ng-container>\n  </div>\n</ng-container>\n", styles: [":host{display:block;position:relative;width:var(--prizm-input-layout-width, 100%)}:host .prizm-input-form-status-button,:host .prizm-input-button-default{flex-shrink:0;height:100%}:host .prizm-input-button-default{display:none}:host:hover .prizm-input-button-default,:host:focus-within .prizm-input-button-default{display:block}.label-container{display:flex}.label-container .prizm-input-label-clear-btn{display:none;position:relative;bottom:2px;width:auto;padding-left:5px}.prizm-input-label{font-weight:600;font-size:12px;color:var(--prizm-v3-text-icon-tertiary);line-height:16px;transition:top .2s ease 0s;pointer-events:none;width:100%;display:flex;gap:4px}.prizm-input-label-required{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-label-inner{position:absolute;display:flex;gap:4px;max-width:100%;width:100%}.prizm-input-label-inner[data-size=l]{top:5px}.prizm-input-label-inner[data-size=l].prizm-input-label-empty{top:13px}.prizm-input-label-inner[data-size=l].prizm-input-label-focused{top:5px}.prizm-input-label-inner[data-size=m]{top:1px}.prizm-input-label-inner[data-size=m].prizm-input-label-empty{top:9px}.prizm-input-label-inner[data-size=m].prizm-input-label-focused{top:1px}.prizm-input-label-inner-center{padding:0;left:50%;justify-content:center;transform:translate(-50%)}.prizm-input-form{background-color:var(--prizm-v3-form-fill-default);border:1px solid var(--prizm-v3-form-stroke-default);border-radius:2px;display:flex;flex-direction:column;padding:0 8px;justify-content:center;width:100%}.prizm-input-form.hide-border{border-color:transparent}.prizm-input-form .prizm-input-form-inner-container{flex:1;display:flex;align-items:center;position:relative}.prizm-input-form:hover{border-color:var(--prizm-v3-form-stroke-hover)}.prizm-input-form__first{display:flex;align-items:center;flex-grow:1}.prizm-input-form-body{position:relative;width:100%}.prizm-input-form-status-success{border-color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-status-success:hover{border-color:var(--prizm-v3-status-success-primary-hover)}.prizm-input-form-status-success .prizm-input-form-status-button{color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-status-warning{border-color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-status-warning:hover{border-color:var(--prizm-v3-status-warning-primary-hover)}.prizm-input-form-status-warning .prizm-input-form-status-button{color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-status-danger{border-color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-status-danger:hover{border-color:var(--prizm-v3-status-alarm-primary-hover)}.prizm-input-form-status-danger .prizm-input-form-status-button{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-invalid.prizm-input-form-touched{border-color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-invalid .prizm-input-form-status-button{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-focused,.prizm-input-form:focus-within{border-color:var(--prizm-v3-form-active);box-shadow:0 0 0 2px var(--prizm-v3-background-stroke-focus);position:relative}.prizm-input-form-focused:hover,.prizm-input-form:focus-within:hover{border-color:var(--prizm-v3-form-active-hover)}.prizm-input-form-focused .prizm-input-button-default,.prizm-input-form:focus-within .prizm-input-button-default{display:block}.prizm-input-form-disabled{border-color:transparent;cursor:not-allowed}.prizm-input-form-disabled:hover{border-color:transparent}.prizm-input-form-disabled ::ng-deep [prizmInputIconButton]{display:none}.prizm-input-form-inner,.prizm-input-form-inner[data-size=l]{min-height:44px}.prizm-input-form-inner[data-size=m]{min-height:36px}.prizm-input-form-outer{min-height:32px}.prizm-input-form-outer[data-size=l]{min-height:40px}.prizm-input-form-outer[data-size=m]{min-height:32px}.prizm-input-form-outer[data-size=s]{min-height:24px}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-form-status-button,.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default{position:absolute;z-index:100;background-color:var(--prizm-v3-form-fill-default)}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default{right:32px}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default.alone,.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-form-status-button{right:0}.prizm-input-form-subtext{font-size:10px;font-weight:500;line-height:22px}.prizm-input-form-subtext-success{color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-subtext-warning{color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-subtext-danger{color:var(--prizm-v3-status-alarm-primary-default)}.label--title{max-width:calc(100% - 20px);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;gap:4px}.clear-icon{z-index:2}.prizm-input-form-status-button{z-index:1}\n", ":host.has-hidden-control .label-container{height:16px;margin-bottom:2px}:host.has-hidden-control .label-container[data-size=m]{margin-bottom:4px}:host.has-hidden-control .label-container[data-size=l]{margin-bottom:8px}:host.has-hidden-control .label-container.label-container-inner{margin-bottom:0}:host.has-hidden-control .prizm-input-label-inner[data-size=l]{top:0}:host.has-hidden-control .prizm-input-label-inner[data-size=m]{top:0}:host.has-hidden-control .prizm-input-form .prizm-input-form-inner-container{padding:4px 0}:host.has-hidden-control .prizm-input-form .prizm-input-form-inner-container:host-context([data-size=\"l\"]){padding:6px 0}\n", ":host:has(::ng-deep textarea.resizable){display:table;width:auto}:host:hover .label-container-textarea.label-container-outer .prizm-input-label-clear-btn,:host:focus-within .label-container-textarea.label-container-outer .prizm-input-label-clear-btn{display:block}.label-container{display:flex}.label-container-focused.label-container-textarea.label-container-outer .prizm-input-label-clear-btn{display:block}.prizm-input-label-textarea.prizm-input-label-inner{background-color:var(--prizm-v3-form-fill-default);width:100%}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l]{top:0;padding-top:5px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l].prizm-input-label-empty{top:0;padding-top:13px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l].prizm-input-label-focused{top:0;padding-top:5px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m]{top:0;padding-top:1px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m].prizm-input-label-empty{top:0;padding-top:9px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m].prizm-input-label-focused{top:0;padding-top:1px}.prizm-input-form-textarea{height:100%}.prizm-input-form-textarea .prizm-input-button-default{height:auto}.prizm-input-form-textarea .prizm-input-form__first{align-items:flex-start}.prizm-input-form-textarea .prizm-input-form-inner-container{align-self:stretch}.prizm-input-form-textarea .prizm-input-form-body{height:100%}.prizm-input-form-textarea .prizm-input-form-inner-container{align-items:flex-start}.prizm-input-form-textarea.prizm-input-form-inner .prizm-input-button-default{position:absolute;right:0}.prizm-input-form-textarea.prizm-input-form-inner[data-size=m] .prizm-input-button-default{padding-top:1px}.prizm-input-form-textarea.prizm-input-form-inner[data-size=l] .prizm-input-button-default{padding-top:5px}.prizm-input-form-textarea.prizm-input-form-outer .prizm-input-button-default{display:none}.prizm-input-form-textarea.prizm-input-form-outer[data-size=l] .prizm-input-button-default{padding-top:11px}.prizm-input-form-textarea.prizm-input-form-outer[data-size=m] .prizm-input-button-default{padding-top:7px}.prizm-input-form-textarea.prizm-input-form-outer[data-size=s] .prizm-input-button-default{padding-top:4px}.prizm-input-form:has(::ng-deep textarea.resizable){display:table}.prizm-input-form-textarea{display:table}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i1.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: i2.PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "directive", type: i3.PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "directive", type: i4.PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }, { kind: "component", type: i5.PrizmInputIconButtonComponent, selector: "button[prizmInputIconButton]", inputs: ["size", "prizmInputIconButton", "interactive", "disabled", "type"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.PrizmToObservablePipe, name: "prizmToObservable" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmInputLayoutComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-input-layout', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        class: 'prizm-input-layout',
                    }, providers: [PrizmDestroyService], template: "<ng-container\n  *prizmLet=\"{\n    focused: control.focused | prizmToObservable | async,\n    disabled: control.disabled | prizmToObservable | async,\n    empty: control.empty | prizmToObservable | async,\n    touched: control.touched | prizmToObservable | async,\n    invalid: control.invalid | prizmToObservable | async,\n    required: control.required | prizmToObservable | async,\n    emptyLabel: emptyLabel\n  } as $\"\n>\n  <ng-template #labelTemplate>\n    <div\n      class=\"label-container\"\n      *ngIf=\"label$ | async\"\n      [ngClass]=\"[\n        control.nativeElementType ? 'label-container-' + control.nativeElementType : '',\n        'label-container-' + (outer ? 'outer' : 'inner')\n      ]\"\n      [class.label-container-focused]=\"$.focused\"\n      [attr.data-size]=\"size\"\n    >\n      <label\n        class=\"prizm-input-label\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n    {{ control.nativeElementType ? 'prizm-input-label-' + control.nativeElementType : '' }}\n\"\n        [attr.data-size]=\"size\"\n        [class.prizm-input-label-focused]=\"$.focused\"\n        [class.prizm-input-label-empty]=\"$.empty\"\n      >\n        <div class=\"label--title\">\n          {{ label$ | async }}\n        </div>\n        <span class=\"prizm-input-label-required\" *ngIf=\"$.required\">*</span>\n      </label>\n\n      <ng-container [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n        <button\n          class=\"prizm-input-label-clear-btn clear-icon\"\n          *ngSwitchCase=\"true\"\n          [interactive]=\"true\"\n          [disabled]=\"$.disabled\"\n          [prizmInputIconButton]=\"$any(clearButton)\"\n          (click)=\"onClearClick($event)\"\n        ></button>\n\n        <div class=\"prizm-input-label-clear-btn clear-icon\" *ngSwitchDefault>\n          <ng-container\n            *polymorphOutlet=\"\n              clearButton;\n              context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n            \"\n          >\n          </ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-container *ngIf=\"!outer; else labelTemplate\"></ng-container>\n\n  <div\n    class=\"prizm-input-form\n  prizm-input-form-status-{{ correctedStatus }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}\n  prizm-input-form-{{ position }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n  {{ control.nativeElementType ? 'prizm-input-form-' + control.nativeElementType : '' }}\n\"\n    [class.hide-border]=\"!border\"\n    [attr.data-size]=\"size\"\n    [ngClass]=\"{\n      'prizm-input-form-focused': !$.disabled && $.focused,\n      'prizm-input-form-empty': $.empty,\n      'prizm-input-empty-label': emptyLabel,\n      'prizm-input-form-disabled': $.disabled,\n      'prizm-input-form-touched': $.touched,\n      'prizm-input-form-invalid': $.invalid\n    }\"\n  >\n    <div class=\"prizm-input-form__first\">\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutLeft?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-left]\"></ng-content>\n      </ng-container>\n\n      <div class=\"prizm-input-form-inner-container\" (click)=\"innerClick($event)\">\n        <div class=\"prizm-input-form-body\">\n          <ng-container *ngIf=\"outer; else labelTemplate\"></ng-container>\n\n          <ng-content></ng-content>\n          <ng-container>\n            <ng-container *ngIf=\"control.layoutInBody?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n            </ng-container>\n            <ng-content select=\"[prizm-input-in-body]\"></ng-content>\n          </ng-container>\n        </div>\n\n        <ng-container *ngIf=\"showClearButton\" [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n          <button\n            class=\"prizm-input-label-clear-btn prizm-input-button-default clear-icon\"\n            *ngSwitchCase=\"true\"\n            [interactive]=\"true\"\n            [disabled]=\"$.disabled\"\n            [prizmInputIconButton]=\"$any(clearButton) ?? 'cancel-delete-content'\"\n            (click)=\"onClearClick($event)\"\n          ></button>\n\n          <div class=\"prizm-input-button-default clear-icon\" *ngSwitchDefault>\n            <ng-container\n              *polymorphOutlet=\"\n                clearButton;\n                context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n              \"\n            >\n            </ng-container>\n          </div>\n        </ng-container>\n\n        <button\n          class=\"prizm-input-form-status-button\"\n          #statusButton\n          *ngIf=\"showStatusButton\"\n          [prizmInputIconButton]=\"statusIcon\"\n          [prizmHint]=\"statusMessage\"\n          [prizmHintCanShow]=\"!!statusMessage\"\n          [interactive]=\"false\"\n        ></button>\n      </div>\n\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutRight?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-right]\"></ng-content>\n      </ng-container>\n    </div>\n\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutBottom?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-bottom]\"></ng-content>\n    </ng-container>\n  </div>\n\n  <div class=\"prizm-input-form-subtext prizm-input-form-subtext-{{ correctedStatus }}\">\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutSubtext?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-subtext]\"></ng-content>\n    </ng-container>\n  </div>\n</ng-container>\n", styles: [":host{display:block;position:relative;width:var(--prizm-input-layout-width, 100%)}:host .prizm-input-form-status-button,:host .prizm-input-button-default{flex-shrink:0;height:100%}:host .prizm-input-button-default{display:none}:host:hover .prizm-input-button-default,:host:focus-within .prizm-input-button-default{display:block}.label-container{display:flex}.label-container .prizm-input-label-clear-btn{display:none;position:relative;bottom:2px;width:auto;padding-left:5px}.prizm-input-label{font-weight:600;font-size:12px;color:var(--prizm-v3-text-icon-tertiary);line-height:16px;transition:top .2s ease 0s;pointer-events:none;width:100%;display:flex;gap:4px}.prizm-input-label-required{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-label-inner{position:absolute;display:flex;gap:4px;max-width:100%;width:100%}.prizm-input-label-inner[data-size=l]{top:5px}.prizm-input-label-inner[data-size=l].prizm-input-label-empty{top:13px}.prizm-input-label-inner[data-size=l].prizm-input-label-focused{top:5px}.prizm-input-label-inner[data-size=m]{top:1px}.prizm-input-label-inner[data-size=m].prizm-input-label-empty{top:9px}.prizm-input-label-inner[data-size=m].prizm-input-label-focused{top:1px}.prizm-input-label-inner-center{padding:0;left:50%;justify-content:center;transform:translate(-50%)}.prizm-input-form{background-color:var(--prizm-v3-form-fill-default);border:1px solid var(--prizm-v3-form-stroke-default);border-radius:2px;display:flex;flex-direction:column;padding:0 8px;justify-content:center;width:100%}.prizm-input-form.hide-border{border-color:transparent}.prizm-input-form .prizm-input-form-inner-container{flex:1;display:flex;align-items:center;position:relative}.prizm-input-form:hover{border-color:var(--prizm-v3-form-stroke-hover)}.prizm-input-form__first{display:flex;align-items:center;flex-grow:1}.prizm-input-form-body{position:relative;width:100%}.prizm-input-form-status-success{border-color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-status-success:hover{border-color:var(--prizm-v3-status-success-primary-hover)}.prizm-input-form-status-success .prizm-input-form-status-button{color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-status-warning{border-color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-status-warning:hover{border-color:var(--prizm-v3-status-warning-primary-hover)}.prizm-input-form-status-warning .prizm-input-form-status-button{color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-status-danger{border-color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-status-danger:hover{border-color:var(--prizm-v3-status-alarm-primary-hover)}.prizm-input-form-status-danger .prizm-input-form-status-button{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-invalid.prizm-input-form-touched{border-color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-invalid .prizm-input-form-status-button{color:var(--prizm-v3-status-alarm-primary-default)}.prizm-input-form-focused,.prizm-input-form:focus-within{border-color:var(--prizm-v3-form-active);box-shadow:0 0 0 2px var(--prizm-v3-background-stroke-focus);position:relative}.prizm-input-form-focused:hover,.prizm-input-form:focus-within:hover{border-color:var(--prizm-v3-form-active-hover)}.prizm-input-form-focused .prizm-input-button-default,.prizm-input-form:focus-within .prizm-input-button-default{display:block}.prizm-input-form-disabled{border-color:transparent;cursor:not-allowed}.prizm-input-form-disabled:hover{border-color:transparent}.prizm-input-form-disabled ::ng-deep [prizmInputIconButton]{display:none}.prizm-input-form-inner,.prizm-input-form-inner[data-size=l]{min-height:44px}.prizm-input-form-inner[data-size=m]{min-height:36px}.prizm-input-form-outer{min-height:32px}.prizm-input-form-outer[data-size=l]{min-height:40px}.prizm-input-form-outer[data-size=m]{min-height:32px}.prizm-input-form-outer[data-size=s]{min-height:24px}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-form-status-button,.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default{position:absolute;z-index:100;background-color:var(--prizm-v3-form-fill-default)}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default{right:32px}.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-button-default.alone,.prizm-input-form-center .prizm-input-form-inner-container .prizm-input-form-status-button{right:0}.prizm-input-form-subtext{font-size:10px;font-weight:500;line-height:22px}.prizm-input-form-subtext-success{color:var(--prizm-v3-status-success-primary-default)}.prizm-input-form-subtext-warning{color:var(--prizm-v3-status-warning-primary-default)}.prizm-input-form-subtext-danger{color:var(--prizm-v3-status-alarm-primary-default)}.label--title{max-width:calc(100% - 20px);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;gap:4px}.clear-icon{z-index:2}.prizm-input-form-status-button{z-index:1}\n", ":host.has-hidden-control .label-container{height:16px;margin-bottom:2px}:host.has-hidden-control .label-container[data-size=m]{margin-bottom:4px}:host.has-hidden-control .label-container[data-size=l]{margin-bottom:8px}:host.has-hidden-control .label-container.label-container-inner{margin-bottom:0}:host.has-hidden-control .prizm-input-label-inner[data-size=l]{top:0}:host.has-hidden-control .prizm-input-label-inner[data-size=m]{top:0}:host.has-hidden-control .prizm-input-form .prizm-input-form-inner-container{padding:4px 0}:host.has-hidden-control .prizm-input-form .prizm-input-form-inner-container:host-context([data-size=\"l\"]){padding:6px 0}\n", ":host:has(::ng-deep textarea.resizable){display:table;width:auto}:host:hover .label-container-textarea.label-container-outer .prizm-input-label-clear-btn,:host:focus-within .label-container-textarea.label-container-outer .prizm-input-label-clear-btn{display:block}.label-container{display:flex}.label-container-focused.label-container-textarea.label-container-outer .prizm-input-label-clear-btn{display:block}.prizm-input-label-textarea.prizm-input-label-inner{background-color:var(--prizm-v3-form-fill-default);width:100%}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l]{top:0;padding-top:5px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l].prizm-input-label-empty{top:0;padding-top:13px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=l].prizm-input-label-focused{top:0;padding-top:5px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m]{top:0;padding-top:1px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m].prizm-input-label-empty{top:0;padding-top:9px}.prizm-input-label-textarea.prizm-input-label-inner[data-size=m].prizm-input-label-focused{top:0;padding-top:1px}.prizm-input-form-textarea{height:100%}.prizm-input-form-textarea .prizm-input-button-default{height:auto}.prizm-input-form-textarea .prizm-input-form__first{align-items:flex-start}.prizm-input-form-textarea .prizm-input-form-inner-container{align-self:stretch}.prizm-input-form-textarea .prizm-input-form-body{height:100%}.prizm-input-form-textarea .prizm-input-form-inner-container{align-items:flex-start}.prizm-input-form-textarea.prizm-input-form-inner .prizm-input-button-default{position:absolute;right:0}.prizm-input-form-textarea.prizm-input-form-inner[data-size=m] .prizm-input-button-default{padding-top:1px}.prizm-input-form-textarea.prizm-input-form-inner[data-size=l] .prizm-input-button-default{padding-top:5px}.prizm-input-form-textarea.prizm-input-form-outer .prizm-input-button-default{display:none}.prizm-input-form-textarea.prizm-input-form-outer[data-size=l] .prizm-input-button-default{padding-top:11px}.prizm-input-form-textarea.prizm-input-form-outer[data-size=m] .prizm-input-button-default{padding-top:7px}.prizm-input-form-textarea.prizm-input-form-outer[data-size=s] .prizm-input-button-default{padding-top:4px}.prizm-input-form:has(::ng-deep textarea.resizable){display:table}.prizm-input-form-textarea{display:table}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { label: [{
                type: Input
            }], size: [{
                type: Input
            }], status: [{
                type: Input
            }], outer: [{
                type: Input
            }], clearButton: [{
                type: Input
            }], border: [{
                type: Input
            }], position: [{
                type: Input
            }], forceClear: [{
                type: Input
            }], clear: [{
                type: Output
            }], letDirective: [{
                type: ViewChild,
                args: [PrizmLetDirective]
            }], hasHiddenControl: [{
                type: HostBinding,
                args: ['class.has-hidden-control']
            }], hasTextarea: [{
                type: HostBinding,
                args: ['class.has-textarea']
            }], control: [{
                type: ContentChild,
                args: [PrizmInputControl, { static: true }]
            }], inputStatusText: [{
                type: ContentChild,
                args: [PrizmInputStatusTextDirective, { static: false }]
            }], disabled: [{
                type: HostBinding,
                args: ['class.disabled']
            }], enabled: [{
                type: HostBinding,
                args: ['class.enabled']
            }] } });
//# sourceMappingURL=data:application/json;base64,