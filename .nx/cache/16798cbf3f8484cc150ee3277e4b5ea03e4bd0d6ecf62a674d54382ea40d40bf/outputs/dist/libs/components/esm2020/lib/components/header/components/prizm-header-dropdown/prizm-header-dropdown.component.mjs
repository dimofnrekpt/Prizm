import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PrizmIconModule } from '../../../icon';
import { PrizmThemeModule } from '@prizm-ui/theme';
import { PrizmDropdownHostModule } from '../../../dropdowns/dropdown-host';
import { PrizmDataListModule } from '../../../data-list';
import { PrizmButtonModule } from '../../../button';
import { PrizmHintModule } from '../../../../directives';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../icon/icon.component";
import * as i3 from "@prizm-ui/theme";
import * as i4 from "../../../dropdowns/dropdown-host/dropdown-host.component";
import * as i5 from "../../../data-list/data-list.component";
export class PrizmHeaderDropdownComponent {
    constructor() {
        this.data = [];
        this.currentScreenIdx = 0;
        this.screenIdxChange = new EventEmitter();
        this.openDropdown = false;
    }
    changeScreen(idx) {
        if (this.currentScreenIdx === idx)
            return;
        this.currentScreenIdx = idx;
        this.openDropdown = false;
        this.screenIdxChange.emit(idx);
    }
}
PrizmHeaderDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmHeaderDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PrizmHeaderDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmHeaderDropdownComponent, isStandalone: true, selector: "prizm-header-dropdown", inputs: { data: "data", currentScreenIdx: "currentScreenIdx" }, outputs: { screenIdxChange: "screenIdxChange" }, ngImport: i0, template: "<prizm-dropdown-host\n  class=\"dropdown-host\"\n  [(isOpen)]=\"openDropdown\"\n  [content]=\"dropdown\"\n  prizmTheme\n  prizmDropdownHostWidth=\"100%\"\n>\n  <button\n    class=\"dropdown\"\n    *ngIf=\"data.length > 0\"\n    [class.dropdown_active]=\"openDropdown\"\n    (click)=\"openDropdown = !openDropdown\"\n  >\n    <div class=\"screen\">\n      <prizm-icon\n        class=\"screen__icon\"\n        [iconClass]=\"data[currentScreenIdx]?.icon || 'files-folder'\"\n      ></prizm-icon>\n      <span class=\"screen__title\">{{ data[currentScreenIdx]?.title }}</span>\n    </div>\n    <prizm-icon class=\"dropdown__icon\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n  </button>\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <prizm-data-list class=\"screen-list\">\n    <div\n      class=\"screen-list__item\"\n      *ngFor=\"let item of data; let i = index\"\n      [class.selected]=\"i === currentScreenIdx\"\n      (click)=\"changeScreen(i)\"\n    >\n      <div class=\"screen\">\n        <prizm-icon class=\"screen__icon\" [iconClass]=\"item?.icon || 'files-folder'\"></prizm-icon>\n        <span class=\"screen__title\">{{ item?.title }}</span>\n      </div>\n    </div>\n  </prizm-data-list>\n</ng-template>\n", styles: [":host{height:100%;display:block}:host button{border:none;background:transparent;outline:none}:host .dropdown-host{height:100%}:host .dropdown{height:100%;width:200px;padding:0 16px;display:flex;align-items:center;justify-content:space-between;background:var(--prizm-v3-background-fill-panel);cursor:pointer}:host .dropdown__icon{color:var(--prizm-v3-button-secondary-solid-default);transition:.4s}:host .dropdown:hover:not(.dropdown_active){background:var(--prizm-v3-table-fill-row-hover)}:host .dropdown_active{background:var(--prizm-v3-table-fill-row-active)}:host .dropdown_active .dropdown__icon{transform:rotate(90deg);color:var(--prizm-v3-text-icon-primary)}:host .dropdown_active .screen__icon{color:var(--prizm-v3-text-icon-primary)}.screen{display:flex;gap:8px}.screen__icon{color:var(--prizm-v3-status-info-primary-default)}.screen__title{font-weight:600;font-size:14px;line-height:16px;color:var(--prizm-v3-text-icon-primary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.screen-list{padding:16px 0;display:flex;flex-direction:column;background:var(--prizm-v3-background-fill-panel)!important}.screen-list.default{border:none}.screen-list__item{height:40px;display:flex;align-items:center;padding:16px;cursor:pointer}.screen-list__item.selected{background:var(--prizm-header-dropdown-selected-background, var(--prizm-v3-table-fill-row-active));color:var(--prizm-v3-text-icon-primary)}.screen-list__item.selected .screen__icon{color:var(--prizm-v3-text-icon-primary)}.screen-list__item:hover:not(.selected){background:var(--prizm-v3-table-fill-row-hover)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: PrizmIconModule }, { kind: "component", type: i2.PrizmIconComponent, selector: "prizm-icon", inputs: ["iconClass", "size"] }, { kind: "ngmodule", type: PrizmThemeModule }, { kind: "directive", type: i3.PrizmThemeDirective, selector: "[prizmTheme]", inputs: ["prizmTheme"], outputs: ["prizmThemeChange"] }, { kind: "ngmodule", type: PrizmDropdownHostModule }, { kind: "component", type: i4.PrizmDropdownHostComponent, selector: "prizm-dropdown-host", inputs: ["content", "prizmDropdownHostId", "prizmDropdownCustomContext", "delay", "canOpen", "closeByEsc", "closeOnOutsideClick", "prizmDropdownHost", "prizmDropdownHostWidth", "autoReposition", "placement", "isOpen", "dropdownStyles", "dropdownClasses"], outputs: ["isOpenChange"], exportAs: ["prizm-dropdown-host"] }, { kind: "ngmodule", type: PrizmDataListModule }, { kind: "component", type: i5.PrizmDataListComponent, selector: "prizm-data-list", inputs: ["defaultStyle", "iconOff", "content", "scroll"] }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "ngmodule", type: PrizmHintModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmHeaderDropdownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-header-dropdown', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        CommonModule,
                        PrizmIconModule,
                        PrizmThemeModule,
                        PrizmDropdownHostModule,
                        PrizmDataListModule,
                        PrizmButtonModule,
                        PrizmHintModule,
                    ], template: "<prizm-dropdown-host\n  class=\"dropdown-host\"\n  [(isOpen)]=\"openDropdown\"\n  [content]=\"dropdown\"\n  prizmTheme\n  prizmDropdownHostWidth=\"100%\"\n>\n  <button\n    class=\"dropdown\"\n    *ngIf=\"data.length > 0\"\n    [class.dropdown_active]=\"openDropdown\"\n    (click)=\"openDropdown = !openDropdown\"\n  >\n    <div class=\"screen\">\n      <prizm-icon\n        class=\"screen__icon\"\n        [iconClass]=\"data[currentScreenIdx]?.icon || 'files-folder'\"\n      ></prizm-icon>\n      <span class=\"screen__title\">{{ data[currentScreenIdx]?.title }}</span>\n    </div>\n    <prizm-icon class=\"dropdown__icon\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n  </button>\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <prizm-data-list class=\"screen-list\">\n    <div\n      class=\"screen-list__item\"\n      *ngFor=\"let item of data; let i = index\"\n      [class.selected]=\"i === currentScreenIdx\"\n      (click)=\"changeScreen(i)\"\n    >\n      <div class=\"screen\">\n        <prizm-icon class=\"screen__icon\" [iconClass]=\"item?.icon || 'files-folder'\"></prizm-icon>\n        <span class=\"screen__title\">{{ item?.title }}</span>\n      </div>\n    </div>\n  </prizm-data-list>\n</ng-template>\n", styles: [":host{height:100%;display:block}:host button{border:none;background:transparent;outline:none}:host .dropdown-host{height:100%}:host .dropdown{height:100%;width:200px;padding:0 16px;display:flex;align-items:center;justify-content:space-between;background:var(--prizm-v3-background-fill-panel);cursor:pointer}:host .dropdown__icon{color:var(--prizm-v3-button-secondary-solid-default);transition:.4s}:host .dropdown:hover:not(.dropdown_active){background:var(--prizm-v3-table-fill-row-hover)}:host .dropdown_active{background:var(--prizm-v3-table-fill-row-active)}:host .dropdown_active .dropdown__icon{transform:rotate(90deg);color:var(--prizm-v3-text-icon-primary)}:host .dropdown_active .screen__icon{color:var(--prizm-v3-text-icon-primary)}.screen{display:flex;gap:8px}.screen__icon{color:var(--prizm-v3-status-info-primary-default)}.screen__title{font-weight:600;font-size:14px;line-height:16px;color:var(--prizm-v3-text-icon-primary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.screen-list{padding:16px 0;display:flex;flex-direction:column;background:var(--prizm-v3-background-fill-panel)!important}.screen-list.default{border:none}.screen-list__item{height:40px;display:flex;align-items:center;padding:16px;cursor:pointer}.screen-list__item.selected{background:var(--prizm-header-dropdown-selected-background, var(--prizm-v3-table-fill-row-active));color:var(--prizm-v3-text-icon-primary)}.screen-list__item.selected .screen__icon{color:var(--prizm-v3-text-icon-primary)}.screen-list__item:hover:not(.selected){background:var(--prizm-v3-table-fill-row-hover)}\n"] }]
        }], propDecorators: { data: [{
                type: Input
            }], currentScreenIdx: [{
                type: Input
            }], screenIdxChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpem0taGVhZGVyLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29tcG9uZW50cy9zcmMvbGliL2NvbXBvbmVudHMvaGVhZGVyL2NvbXBvbmVudHMvcHJpem0taGVhZGVyLWRyb3Bkb3duL3ByaXptLWhlYWRlci1kcm9wZG93bi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2hlYWRlci9jb21wb25lbnRzL3ByaXptLWhlYWRlci1kcm9wZG93bi9wcml6bS1oZWFkZXItZHJvcGRvd24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7Ozs7Ozs7QUFrQnpELE1BQU0sT0FBTyw0QkFBNEI7SUFoQnpDO1FBaUJrQixTQUFJLEdBQWMsRUFBRSxDQUFDO1FBQ3JCLHFCQUFnQixHQUFHLENBQUMsQ0FBQztRQUMzQixvQkFBZSxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDO1FBRXRFLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0tBUzdCO0lBUFEsWUFBWSxDQUFDLEdBQVc7UUFDN0IsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEtBQUssR0FBRztZQUFFLE9BQU87UUFFMUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEdBQUcsQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDOzt5SEFiVSw0QkFBNEI7NkdBQTVCLDRCQUE0QixrTUMxQnpDLGt0Q0F1Q0EscW1ERHRCSSxZQUFZLCtQQUNaLGVBQWUseUlBQ2YsZ0JBQWdCLG9LQUNoQix1QkFBdUIseWJBQ3ZCLG1CQUFtQiw2S0FDbkIsaUJBQWlCLDhCQUNqQixlQUFlOzJGQUdOLDRCQUE0QjtrQkFoQnhDLFNBQVM7K0JBQ0UsdUJBQXVCLG1CQUdoQix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUDt3QkFDUCxZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQix1QkFBdUI7d0JBQ3ZCLG1CQUFtQjt3QkFDbkIsaUJBQWlCO3dCQUNqQixlQUFlO3FCQUNoQjs4QkFHZSxJQUFJO3NCQUFuQixLQUFLO2dCQUNVLGdCQUFnQjtzQkFBL0IsS0FBSztnQkFDSSxlQUFlO3NCQUF4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJU2NyZWVuIH0gZnJvbSAnLi8uLi8uLi8uLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUHJpem1JY29uTW9kdWxlIH0gZnJvbSAnLi4vLi4vLi4vaWNvbic7XG5pbXBvcnQgeyBQcml6bVRoZW1lTW9kdWxlIH0gZnJvbSAnQHByaXptLXVpL3RoZW1lJztcbmltcG9ydCB7IFByaXptRHJvcGRvd25Ib3N0TW9kdWxlIH0gZnJvbSAnLi4vLi4vLi4vZHJvcGRvd25zL2Ryb3Bkb3duLWhvc3QnO1xuaW1wb3J0IHsgUHJpem1EYXRhTGlzdE1vZHVsZSB9IGZyb20gJy4uLy4uLy4uL2RhdGEtbGlzdCc7XG5pbXBvcnQgeyBQcml6bUJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uLy4uLy4uL2J1dHRvbic7XG5pbXBvcnQgeyBQcml6bUhpbnRNb2R1bGUgfSBmcm9tICcuLi8uLi8uLi8uLi9kaXJlY3RpdmVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHJpem0taGVhZGVyLWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3ByaXptLWhlYWRlci1kcm9wZG93bi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3ByaXptLWhlYWRlci1kcm9wZG93bi5jb21wb25lbnQubGVzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBQcml6bUljb25Nb2R1bGUsXG4gICAgUHJpem1UaGVtZU1vZHVsZSxcbiAgICBQcml6bURyb3Bkb3duSG9zdE1vZHVsZSxcbiAgICBQcml6bURhdGFMaXN0TW9kdWxlLFxuICAgIFByaXptQnV0dG9uTW9kdWxlLFxuICAgIFByaXptSGludE1vZHVsZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgUHJpem1IZWFkZXJEcm9wZG93bkNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHB1YmxpYyBkYXRhOiBJU2NyZWVuW10gPSBbXTtcbiAgQElucHV0KCkgcHVibGljIGN1cnJlbnRTY3JlZW5JZHggPSAwO1xuICBAT3V0cHV0KCkgc2NyZWVuSWR4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPiA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXG4gIHB1YmxpYyBvcGVuRHJvcGRvd24gPSBmYWxzZTtcblxuICBwdWJsaWMgY2hhbmdlU2NyZWVuKGlkeDogbnVtYmVyKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY3VycmVudFNjcmVlbklkeCA9PT0gaWR4KSByZXR1cm47XG5cbiAgICB0aGlzLmN1cnJlbnRTY3JlZW5JZHggPSBpZHg7XG4gICAgdGhpcy5vcGVuRHJvcGRvd24gPSBmYWxzZTtcbiAgICB0aGlzLnNjcmVlbklkeENoYW5nZS5lbWl0KGlkeCk7XG4gIH1cbn1cbiIsIjxwcml6bS1kcm9wZG93bi1ob3N0XG4gIGNsYXNzPVwiZHJvcGRvd24taG9zdFwiXG4gIFsoaXNPcGVuKV09XCJvcGVuRHJvcGRvd25cIlxuICBbY29udGVudF09XCJkcm9wZG93blwiXG4gIHByaXptVGhlbWVcbiAgcHJpem1Ecm9wZG93bkhvc3RXaWR0aD1cIjEwMCVcIlxuPlxuICA8YnV0dG9uXG4gICAgY2xhc3M9XCJkcm9wZG93blwiXG4gICAgKm5nSWY9XCJkYXRhLmxlbmd0aCA+IDBcIlxuICAgIFtjbGFzcy5kcm9wZG93bl9hY3RpdmVdPVwib3BlbkRyb3Bkb3duXCJcbiAgICAoY2xpY2spPVwib3BlbkRyb3Bkb3duID0gIW9wZW5Ecm9wZG93blwiXG4gID5cbiAgICA8ZGl2IGNsYXNzPVwic2NyZWVuXCI+XG4gICAgICA8cHJpem0taWNvblxuICAgICAgICBjbGFzcz1cInNjcmVlbl9faWNvblwiXG4gICAgICAgIFtpY29uQ2xhc3NdPVwiZGF0YVtjdXJyZW50U2NyZWVuSWR4XT8uaWNvbiB8fCAnZmlsZXMtZm9sZGVyJ1wiXG4gICAgICA+PC9wcml6bS1pY29uPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzY3JlZW5fX3RpdGxlXCI+e3sgZGF0YVtjdXJyZW50U2NyZWVuSWR4XT8udGl0bGUgfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gICAgPHByaXptLWljb24gY2xhc3M9XCJkcm9wZG93bl9faWNvblwiIGljb25DbGFzcz1cImNoZXZyb25zLW1lbnUtcmlnaHRcIj48L3ByaXptLWljb24+XG4gIDwvYnV0dG9uPlxuPC9wcml6bS1kcm9wZG93bi1ob3N0PlxuXG48bmctdGVtcGxhdGUgI2Ryb3Bkb3duPlxuICA8cHJpem0tZGF0YS1saXN0IGNsYXNzPVwic2NyZWVuLWxpc3RcIj5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cInNjcmVlbi1saXN0X19pdGVtXCJcbiAgICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIGRhdGE7IGxldCBpID0gaW5kZXhcIlxuICAgICAgW2NsYXNzLnNlbGVjdGVkXT1cImkgPT09IGN1cnJlbnRTY3JlZW5JZHhcIlxuICAgICAgKGNsaWNrKT1cImNoYW5nZVNjcmVlbihpKVwiXG4gICAgPlxuICAgICAgPGRpdiBjbGFzcz1cInNjcmVlblwiPlxuICAgICAgICA8cHJpem0taWNvbiBjbGFzcz1cInNjcmVlbl9faWNvblwiIFtpY29uQ2xhc3NdPVwiaXRlbT8uaWNvbiB8fCAnZmlsZXMtZm9sZGVyJ1wiPjwvcHJpem0taWNvbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJzY3JlZW5fX3RpdGxlXCI+e3sgaXRlbT8udGl0bGUgfX08L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9wcml6bS1kYXRhLWxpc3Q+XG48L25nLXRlbXBsYXRlPlxuIl19