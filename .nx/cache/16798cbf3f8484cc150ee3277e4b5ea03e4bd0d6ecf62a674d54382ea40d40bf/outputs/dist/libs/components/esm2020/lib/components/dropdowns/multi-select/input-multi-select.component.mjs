import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, forwardRef, HostBinding, Inject, Injector, Input, ViewChild, } from '@angular/core';
import { PrizmCallFuncPipe, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';
import { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';
import { PolymorphOutletDirective, PrizmAutoFocusModule, PrizmDropdownControllerModule, PrizmHintDirective, PrizmLifecycleDirective, } from '../../../directives';
import { PRIZM_MULTI_SELECT_OPTIONS } from './multi-select.options';
import { PrizmInputControl, PrizmInputNgControl, PrizmInputTextModule } from '../../input';
import { prizmIsNativeFocused, prizmIsTextOverflow$ } from '../../../util';
import { debounceTime, map, shareReplay, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';
import { BehaviorSubject, combineLatest, Subject, timer } from 'rxjs';
import { prizmDefaultProp } from '@prizm-ui/core';
import { PrizmDropdownHostComponent, } from '../dropdown-host';
import { PrizmOverlayOutsidePlacement } from '../../../modules/overlay/models';
import { PrizmScrollbarComponent } from '../../scrollbar';
import { PrizmChipsModule } from '../../chips';
import { CommonModule } from '@angular/common';
import { PrizmIconComponent } from '../../icon';
import { PrizmDataListComponent } from '../../data-list';
import { PrizmCheckboxComponent } from '../../checkbox';
import { PrizmOverlayComponent } from '../../../modules/overlay/overlay.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../input/common/input-layout/input-layout.component";
import * as i3 from "../../input/common/input-icon-button/input-icon-button.component";
import * as i4 from "../../input/common/input-layout/input-layout-right.directive";
import * as i5 from "../../input/common/input-layout/input-layout-in-body.directive";
import * as i6 from "../../input/input-text/input-text.component";
import * as i7 from "../../chips/chips.component";
import * as i8 from "@angular/forms";
import * as i9 from "../../../directives/auto-focus/autofocus.directive";
import * as i10 from "../../../directives/dropdown-controller/dropdown-controller.directive";
// TODO create abstract select component and move to abstract common logic
export class PrizmInputMultiSelectComponent extends PrizmInputNgControl {
    set items(data) {
        this.items$.next(data ?? []);
    }
    get items() {
        return this.items$.value;
    }
    get display() {
        return this.value?.length ? 'none' : '';
    }
    get inner() {
        return !this.layoutComponent?.outer ?? false;
    }
    get emptyChips() {
        return !this.chipsSet.size;
    }
    get size() {
        return this.layoutComponent?.size ?? 'l';
    }
    get empty() {
        return !this.value?.length;
    }
    constructor(options, injector) {
        super(injector);
        this.options = options;
        this.nativeElementType = 'multiselect';
        this.hasClearButton = true;
        this.defaultLabel = this.options.label;
        this.transformer = this.options.transformer;
        this.dropdownScroll = 'auto';
        this.icon = this.options.icon;
        this.selectAllItem = this.options.chooseAllItem;
        this.searchable = this.options.searchable;
        this.isChipsDeletable = this.options.isChipsDeletable;
        this.minDropdownHeight = this.options.minDropdownHeight;
        this.dropdownWidth = this.options.dropdownWidth;
        this.maxDropdownHeight = this.options.maxDropdownHeight;
        this.placeholder = this.options.placeholder;
        this.searchMatcher = this.options.searchMatcher;
        this.emptyContent = this.options.emptyContent;
        /** need only clear function */
        this.stringify = this.options.stringify;
        this.identityMatcher = this.options.identityMatcher;
        this.valueTemplate = this.options.valueContent;
        this.hidden = true;
        this.button_layout_width = 64;
        this.testId_ = 'ui-muilti-select';
        this.defaultIcon = 'chevrons-dropdown';
        this.prizmIsTextOverflow$ = prizmIsTextOverflow$;
        this.direction = PrizmOverlayOutsidePlacement.RIGHT;
        this.items$ = new BehaviorSubject([]);
        this.requiredInputControl = new UntypedFormControl();
        this.searchInputControl = new UntypedFormControl();
        this.chipsControl = new UntypedFormControl([]);
        this.chipsSet = new Map();
        this.fallbackValue = [];
        this.filteredItems = [];
        this.focused$$ = new Subject();
        this.focused$ = this.focused$$.asObservable();
        this.opened$$ = new BehaviorSubject(false);
        this.opened$ = this.opened$$.asObservable();
    }
    ngAfterViewInit() {
        // NEED for initial sync with parent params
        timer(0)
            .pipe(tap(() => this.changeDetectorRef.markForCheck()))
            .subscribe();
    }
    ngOnInit() {
        super.ngOnInit();
        this.initParentClickListener();
        this.initFilteredItemsObservables();
        this.initSelectedItemsObservables();
        this.selectedItems$
            .pipe(tap(items => {
            this.chipsControl.setValue(items, { emitEvent: true });
        }), tap(() => this.changeDetectorRef.markForCheck()), takeUntil(this.destroy$))
            .subscribe();
    }
    initParentClickListener() {
        this.layoutComponent?.innerClick$
            .pipe(tap(() => this.opened$$.next(this.disabled ? false : !this.opened$$.value)), tap(() => this.changeDetectorRef.markForCheck()), takeUntil(this.destroy$))
            .subscribe();
    }
    initSelectedItemsObservables() {
        this.selectedItems$ = this.value$.pipe(debounceTime(0), startWith(this.value)).pipe(switchMap(() => {
            const selectedItems = this.value;
            return this.items$.pipe(map(items => {
                return (items?.filter(item => (selectedItems ?? []).find(selectedItem => {
                    return this.identityMatcher(selectedItem, this.transformer(item));
                })) ?? []);
            }));
        }), shareReplay(1));
        this.selectedItemsChips$ = this.selectedItems$.pipe(map((selectedItems) => {
            this.chipsSet.clear();
            const result = selectedItems?.map(i => {
                const str = this.stringify({
                    checked: true,
                    obj: i,
                });
                this.chipsSet.set(str, i);
                return str;
            }) ?? [];
            return result;
        }), shareReplay(1));
    }
    initFilteredItemsObservables() {
        this.filteredItems$ = combineLatest([
            this.searchInputControl.valueChanges.pipe(startWith('')),
            this.value$.pipe(debounceTime(0)),
        ]).pipe(switchMap(([searchValue]) => {
            const selectedItems = this.value;
            return this.items$.pipe(map(items => {
                if (!this.searchable || !searchValue?.toString().replace(/[ ]+/g, ''))
                    return items;
                searchValue = this.searchValue = searchValue.toString().trim();
                return items?.filter(item => this.searchMatcher(searchValue, item)) ?? [];
            }), map((items) => {
                const selectItems = items.map((item) => {
                    return {
                        checked: !!selectedItems?.find(selected => this.identityMatcher(selected, this.transformer(item))),
                        obj: item,
                    };
                });
                const selectedCount = this.value?.length;
                const allItem = this.items$.value?.length;
                const currentlySearching = this.searchInputControl.value;
                const addSelectAllItem = allItem && this.selectAllItem && !currentlySearching;
                return [
                    ...(addSelectAllItem ? [this.selectAllItem] : []).map(item => ({
                        checked: allItem === selectedCount,
                        indeterminate: selectedCount && allItem !== this.value.length,
                        obj: item,
                    })),
                    ...selectItems,
                ];
            }), tap(items => {
                this.filteredItems = items;
                this.dropdownHostElement?.reCalculatePositions(1000 / 60);
            }), debounceTime(1000 / 60));
        }));
    }
    get nativeFocusableElement() {
        return this.focusableElement ? this.focusableElement.nativeElement : null;
    }
    get focused() {
        return prizmIsNativeFocused(this.nativeFocusableElement);
    }
    clear(ev) {
        ev.stopImmediatePropagation();
        this.updateValue(null);
        this.markAsTouched();
    }
    isSelectAllItem(item) {
        return Boolean(this.selectAllItem && this.identityMatcher(this.selectAllItem, item.obj));
    }
    select(item) {
        const newItemState = !item.checked;
        let values;
        this.markAsTouched();
        if (this.isSelectAllItem(item)) {
            values = newItemState ? [...this.items] : [];
        }
        else {
            const selectedValue = this.transformer(item.obj);
            values = newItemState
                ? [...(this.value ?? []), selectedValue]
                : this.value.filter(i => !this.identityMatcher(i, selectedValue));
        }
        this.updateValue(values);
        this.dropdownHostElement?.reCalculatePositions();
    }
    safeOpenModal() {
        const inputElement = this.focusableElement?.nativeElement;
        const open = !this.opened$$.value && !this.disabled && !!inputElement;
        this.opened$$.next(open);
    }
    removeChip(str) {
        const item = this.chipsSet.get(str);
        this.select({
            checked: true,
            obj: item,
        });
    }
    trackBy(index) {
        return index;
    }
}
PrizmInputMultiSelectComponent.Éµfac = i0.ÉµÉµngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmInputMultiSelectComponent, deps: [{ token: PRIZM_MULTI_SELECT_OPTIONS }, { token: Injector }], target: i0.ÉµÉµFactoryTarget.Component });
PrizmInputMultiSelectComponent.Éµcmp = i0.ÉµÉµngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmInputMultiSelectComponent, isStandalone: true, selector: "prizm-input-multi-select", inputs: { transformer: "transformer", items: "items", dropdownScroll: "dropdownScroll", dropdownStyles: "dropdownStyles", dropdownClasses: "dropdownClasses", icon: "icon", selectAllItem: "selectAllItem", searchable: "searchable", isChipsDeletable: "isChipsDeletable", minDropdownHeight: "minDropdownHeight", dropdownWidth: "dropdownWidth", maxDropdownHeight: "maxDropdownHeight", placeholder: "placeholder", searchMatcher: "searchMatcher", emptyContent: "emptyContent", stringify: "stringify", identityMatcher: "identityMatcher", valueTemplate: "valueTemplate" }, host: { properties: { "style.display": "this.display", "class.inner": "this.inner", "class.empty": "this.emptyChips", "attr.data-size": "this.size" } }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => PrizmInputMultiSelectComponent),
            multi: true,
        },
        PrizmDestroyService,
        { provide: PrizmInputControl, useExisting: PrizmInputMultiSelectComponent },
    ], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElementRef"], descendants: true, read: ElementRef }, { propertyName: "dropdownHostElement", first: true, predicate: ["dropdownHostRef"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<prizm-dropdown-host\n  #dropdownHostRef\n  [content]=\"dropdown\"\n  [isOpen]=\"$any(opened$ | async)\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [prizmDropdownHostWidth]=\"dropdownWidth\"\n  [prizmDropdownMinHeight]=\"minDropdownHeight\"\n  [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n  [dropdownStyles]=\"dropdownStyles\"\n  [dropdownClasses]=\"dropdownClasses\"\n  [ngSwitch]=\"layoutComponent?.outer\"\n  (isOpenChange)=\"$event && searchInputControl.setValue(''); opened$$.next($event)\"\n>\n  <input\n    #focusableElementRef\n    [style.display]=\"layoutComponent?.outer && value?.length ? 'none' : ''\"\n    [style.visibility]=\"!layoutComponent?.outer && value?.length ? 'hidden' : ''\"\n    [disabled]=\"disabled\"\n    [readonly]=\"true\"\n    [tabIndex]=\"!disabled ? 1 : -1\"\n    [placeholder]=\"placeholder\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"($any(value) | prizmCallFunc : stringify) ?? ''\"\n    prizmInput\n  />\n\n  <ng-template #dropdown>\n    <prizm-data-list\n      class=\"block\"\n      *prizmLet=\"{ filteredItems: filteredItems$ | async } as $\"\n      [scroll]=\"dropdownScroll\"\n      [style.--prizm-data-list-border]=\"0\"\n    >\n      <div class=\"list-search-item\" *ngIf=\"searchable\">\n        <prizm-input-layout size=\"m\" label=\"\u041F\u043E\u0438\u0441\u043A\">\n          <input\n            class=\"input-search\"\n            #input\n            [formControl]=\"searchInputControl\"\n            (input)=\"dropdownHostRef.reCalculatePositions(1000 / 16)\"\n            prizmInput\n            prizmAutoFocus\n          />\n          <button [interactive]=\"true\" prizmInputIconButton=\"sort-zoom-in\" prizm-input-right></button>\n        </prizm-input-layout>\n      </div>\n      <ng-container *ngIf=\"$.filteredItems?.length; else emptyTemplate\">\n        <div\n          class=\"item\"\n          #parent\n          *ngFor=\"let item of $.filteredItems; let idx = index; trackBy: trackBy\"\n          [class.selected]=\"item.checked\"\n          [class.most-relevant]=\"searchable && searchInputControl.value && idx === 0\"\n        >\n          <prizm-checkbox\n            [checked]=\"item.checked\"\n            [ngModel]=\"item.checked\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [host]=\"parent\"\n            [indeterminate]=\"!!item.indeterminate\"\n            (changed)=\"select(item)\"\n          >\n            <div\n              class=\"text\"\n              #elem\n              *prizmLet=\"item | prizmCallFunc : stringify : $any(emptyContent) as text\"\n              [prizmHint]=\"text\"\n              [prizmHintDirection]=\"direction\"\n              [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n            >\n              <ng-container\n                *polymorphOutlet=\"\n                  valueTemplate as content;\n                  context: {\n                    $implicit: {\n                      obj: item.obj,\n                      checked: item.checked,\n                      stringify: item | prizmCallFunc : stringify\n                    }\n                  } as context\n                \"\n              >\n                {{ text }}\n              </ng-container>\n            </div>\n          </prizm-checkbox>\n        </div>\n      </ng-container>\n      <ng-template #emptyTemplate>\n        <ng-container *polymorphOutlet=\"emptyContent as data\">\n          <div class=\"empty-template\">{{ emptyContent }}</div>\n        </ng-container>\n      </ng-template>\n    </prizm-data-list>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <ng-container\n    *polymorphOutlet=\"\n      icon || defaultIcon as iconName;\n      context: $any({ opened: opened$ | async, disabled: disabled })\n    \"\n  >\n    <prizm-icon\n      [class.opened]=\"opened$ | async\"\n      [class.active]=\"(focused$ | async) || (opened$ | async)\"\n      [class.icon-dropdown]=\"iconName === defaultIcon\"\n      [iconClass]=\"$any(iconName)\"\n      [class.disabled]=\"disabled\"\n      (click)=\"safeOpenModal()\"\n    >\n    </prizm-icon>\n  </ng-container>\n</ng-container>\n\n<ng-container *prizmInputLayoutInBody>\n  <div class=\"in-body-chips-box\" *ngIf=\"value?.length\">\n    <ng-container [ngTemplateOutlet]=\"chipsTemplate\"> </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #chipsTemplate>\n  <ng-container *prizmLet=\"selectedItemsChips$ | async as chips\">\n    <prizm-chips\n      [style.max-width.px]=\"\n        layoutComponent?.el?.nativeElement\n          ? layoutComponent!.el!.nativeElement.clientWidth - button_layout_width\n          : 0\n      \"\n      [class.empty]=\"!chips.length\"\n      [size]=\"$any(size)\"\n      [class.inner]=\"inner\"\n      [singleLine]=\"true\"\n      [deletable]=\"!disabled && isChipsDeletable\"\n      [chips]=\"chips\"\n      (removeChipEvent)=\"removeChip($event)\"\n    ></prizm-chips>\n  </ng-container>\n</ng-template>\n", styles: [":host{position:relative;z-index:0;display:inline-block;width:100%}.item{display:flex;align-items:center;padding:var(--prizm-select-item-padding, 8px 16px);min-height:40px;background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));cursor:pointer;font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);gap:var(--prizm-select-item-gap, 8px);color:var(--prizm-select-item-text, var(--prizm-v3-text-icon-secondary))}.item .text{max-width:calc(100% - 16px);width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.item.selected,.item.most-relevant{background:var(--prizm-select-item-selected-background, var(--prizm-v3-table-fill-row-active))}.item.selected .text,.item.most-relevant .text{color:var(--prizm-v3-text-icon-secondary)}.item:not(.selected):not(.most-relevant):hover{background:var(--prizm-select-item-hover-background, var(--prizm-v3-table-fill-row-hover));color:var(--prizm-v3-text-icon-secondary)}.block{background:var(--prizm-select-background, var(--prizm-v3-background-fill-overlay));border-radius:2px;border:none;padding:var(--prizm-select-padding, 8px 0)}.input-chips[readonly]{cursor:pointer}.empty-template{padding:var(--prizm-select-item-padding, 8px 16px);background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-empty-text, var(--prizm-v3-text-icon-secondary))}.icon-dropdown{color:var(--prizm-v3-button-secondary-solid-default);cursor:pointer;transition-property:transform;transition-property:all;transition-property:color,transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.icon-dropdown.active{color:var(--prizm-v3-button-primary-solid-active)}.icon-dropdown.opened{transform:rotate(180deg)}.list-search-item{padding:var(--prizm-select-item-padding, 8px 16px)}.list-search-item prizm-input-layout{width:100%}prizm-checkbox{width:100%;max-width:calc(100% - 8px)}.in-body-chips-box{display:flex;align-items:center;height:100%}.hidden{display:none}prizm-chips,:host{height:20px;margin:1px 0}prizm-chips.inner,:host.inner{margin-top:0}prizm-chips.inner.empty,:host.inner.empty{display:none}prizm-chips[data-size=m],:host[data-size=m]{margin:2px 0}prizm-chips[data-size=l],:host[data-size=l]{margin:4px 0}prizm-dropdown-host{height:100%}prizm-icon.disabled{cursor:not-allowed;pointer-events:none}\n"], dependencies: [{ kind: "directive", type: PolymorphOutletDirective, selector: "[polymorphOutlet]", inputs: ["polymorphOutlet", "polymorphOutletContext", "polymorphOutletInjector"] }, { kind: "ngmodule", type: PrizmInputTextModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "component", type: i2.PrizmInputLayoutComponent, selector: "prizm-input-layout", inputs: ["label", "size", "status", "outer", "clearButton", "border", "position", "forceClear"], outputs: ["clear"] }, { kind: "component", type: i3.PrizmInputIconButtonComponent, selector: "button[prizmInputIconButton]", inputs: ["size", "prizmInputIconButton", "interactive", "disabled", "type"] }, { kind: "directive", type: i4.PrizmInputLayoutRightDirective, selector: "ng-template[prizmInputLayoutRight]" }, { kind: "directive", type: i5.PrizmInputLayoutInBodyDirective, selector: "ng-template[prizmInputLayoutInBody]" }, { kind: "component", type: i6.PrizmInputTextComponent, selector: "input[prizmInput]:not([type=number]), textarea[prizmInput], input[prizmInputPassword]", inputs: ["disabled", "required", "value"], outputs: ["enter", "onClear", "valueChanged"], exportAs: ["prizmInput"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "ngmodule", type: PrizmChipsModule }, { kind: "component", type: i7.PrizmChipsComponent, selector: "prizm-chips", inputs: ["size", "chips", "deletable", "singleLine", "hintCanShow", "hintDirection"], outputs: ["addChipEvent", "removeChipEvent", "clickChipEvent"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i8.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }, { kind: "component", type: PrizmIconComponent, selector: "prizm-icon", inputs: ["iconClass", "size"] }, { kind: "pipe", type: PrizmCallFuncPipe, name: "prizmCallFunc" }, { kind: "ngmodule", type: PrizmAutoFocusModule }, { kind: "directive", type: i9.PrizmAutoFocusDirective, selector: "[prizmAutoFocus]", inputs: ["autoFocus"] }, { kind: "ngmodule", type: PrizmDropdownControllerModule }, { kind: "directive", type: i10.PrizmDropdownControllerDirective, selector: "[prizmDropdownMinHeight], [prizmDropdownMaxHeight], [prizmDropdownAlign], [prizmDropdownLimitWidth]", inputs: ["prizmDropdownMinHeight", "prizmDropdownAlign", "prizmDropdownLimitWidth", "prizmDropdownMaxHeight"] }, { kind: "component", type: PrizmDataListComponent, selector: "prizm-data-list", inputs: ["defaultStyle", "iconOff", "content", "scroll"] }, { kind: "component", type: PrizmCheckboxComponent, selector: "prizm-checkbox", inputs: ["size", "indeterminate", "host", "disabled", "checked"], outputs: ["changed"] }, { kind: "component", type: PrizmDropdownHostComponent, selector: "prizm-dropdown-host", inputs: ["content", "prizmDropdownHostId", "prizmDropdownCustomContext", "delay", "canOpen", "closeByEsc", "closeOnOutsideClick", "prizmDropdownHost", "prizmDropdownHostWidth", "autoReposition", "placement", "isOpen", "dropdownStyles", "dropdownClasses"], outputs: ["isOpenChange"], exportAs: ["prizm-dropdown-host"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Function)
], PrizmInputMultiSelectComponent.prototype, "transformer", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", String)
], PrizmInputMultiSelectComponent.prototype, "dropdownScroll", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "icon", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "selectAllItem", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "searchable", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "isChipsDeletable", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "minDropdownHeight", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "dropdownWidth", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "maxDropdownHeight", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "placeholder", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Function)
], PrizmInputMultiSelectComponent.prototype, "searchMatcher", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "emptyContent", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Function)
], PrizmInputMultiSelectComponent.prototype, "stringify", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Function)
], PrizmInputMultiSelectComponent.prototype, "identityMatcher", void 0);
__decorate([
    prizmDefaultProp(),
    __metadata("design:type", Object)
], PrizmInputMultiSelectComponent.prototype, "valueTemplate", void 0);
i0.ÉµÉµngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmInputMultiSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-input-multi-select', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        PrizmOverlayComponent,
                        PolymorphOutletDirective,
                        PrizmInputTextModule,
                        PrizmChipsModule,
                        FormsModule,
                        ReactiveFormsModule,
                        CommonModule,
                        PrizmLetDirective,
                        PrizmHintDirective,
                        PrizmIconComponent,
                        PrizmCallFuncPipe,
                        PrizmAutoFocusModule,
                        PrizmScrollbarComponent,
                        PrizmDropdownControllerModule,
                        PrizmDataListComponent,
                        PrizmCheckboxComponent,
                        PrizmLifecycleDirective,
                        PrizmDropdownHostComponent,
                    ], providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => PrizmInputMultiSelectComponent),
                            multi: true,
                        },
                        PrizmDestroyService,
                        { provide: PrizmInputControl, useExisting: PrizmInputMultiSelectComponent },
                    ], template: "<prizm-dropdown-host\n  #dropdownHostRef\n  [content]=\"dropdown\"\n  [isOpen]=\"$any(opened$ | async)\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [prizmDropdownHostWidth]=\"dropdownWidth\"\n  [prizmDropdownMinHeight]=\"minDropdownHeight\"\n  [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n  [dropdownStyles]=\"dropdownStyles\"\n  [dropdownClasses]=\"dropdownClasses\"\n  [ngSwitch]=\"layoutComponent?.outer\"\n  (isOpenChange)=\"$event && searchInputControl.setValue(''); opened$$.next($event)\"\n>\n  <input\n    #focusableElementRef\n    [style.display]=\"layoutComponent?.outer && value?.length ? 'none' : ''\"\n    [style.visibility]=\"!layoutComponent?.outer && value?.length ? 'hidden' : ''\"\n    [disabled]=\"disabled\"\n    [readonly]=\"true\"\n    [tabIndex]=\"!disabled ? 1 : -1\"\n    [placeholder]=\"placeholder\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"($any(value) | prizmCallFunc : stringify) ?? ''\"\n    prizmInput\n  />\n\n  <ng-template #dropdown>\n    <prizm-data-list\n      class=\"block\"\n      *prizmLet=\"{ filteredItems: filteredItems$ | async } as $\"\n      [scroll]=\"dropdownScroll\"\n      [style.--prizm-data-list-border]=\"0\"\n    >\n      <div class=\"list-search-item\" *ngIf=\"searchable\">\n        <prizm-input-layout size=\"m\" label=\"\u041F\u043E\u0438\u0441\u043A\">\n          <input\n            class=\"input-search\"\n            #input\n            [formControl]=\"searchInputControl\"\n            (input)=\"dropdownHostRef.reCalculatePositions(1000 / 16)\"\n            prizmInput\n            prizmAutoFocus\n          />\n          <button [interactive]=\"true\" prizmInputIconButton=\"sort-zoom-in\" prizm-input-right></button>\n        </prizm-input-layout>\n      </div>\n      <ng-container *ngIf=\"$.filteredItems?.length; else emptyTemplate\">\n        <div\n          class=\"item\"\n          #parent\n          *ngFor=\"let item of $.filteredItems; let idx = index; trackBy: trackBy\"\n          [class.selected]=\"item.checked\"\n          [class.most-relevant]=\"searchable && searchInputControl.value && idx === 0\"\n        >\n          <prizm-checkbox\n            [checked]=\"item.checked\"\n            [ngModel]=\"item.checked\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [host]=\"parent\"\n            [indeterminate]=\"!!item.indeterminate\"\n            (changed)=\"select(item)\"\n          >\n            <div\n              class=\"text\"\n              #elem\n              *prizmLet=\"item | prizmCallFunc : stringify : $any(emptyContent) as text\"\n              [prizmHint]=\"text\"\n              [prizmHintDirection]=\"direction\"\n              [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n            >\n              <ng-container\n                *polymorphOutlet=\"\n                  valueTemplate as content;\n                  context: {\n                    $implicit: {\n                      obj: item.obj,\n                      checked: item.checked,\n                      stringify: item | prizmCallFunc : stringify\n                    }\n                  } as context\n                \"\n              >\n                {{ text }}\n              </ng-container>\n            </div>\n          </prizm-checkbox>\n        </div>\n      </ng-container>\n      <ng-template #emptyTemplate>\n        <ng-container *polymorphOutlet=\"emptyContent as data\">\n          <div class=\"empty-template\">{{ emptyContent }}</div>\n        </ng-container>\n      </ng-template>\n    </prizm-data-list>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <ng-container\n    *polymorphOutlet=\"\n      icon || defaultIcon as iconName;\n      context: $any({ opened: opened$ | async, disabled: disabled })\n    \"\n  >\n    <prizm-icon\n      [class.opened]=\"opened$ | async\"\n      [class.active]=\"(focused$ | async) || (opened$ | async)\"\n      [class.icon-dropdown]=\"iconName === defaultIcon\"\n      [iconClass]=\"$any(iconName)\"\n      [class.disabled]=\"disabled\"\n      (click)=\"safeOpenModal()\"\n    >\n    </prizm-icon>\n  </ng-container>\n</ng-container>\n\n<ng-container *prizmInputLayoutInBody>\n  <div class=\"in-body-chips-box\" *ngIf=\"value?.length\">\n    <ng-container [ngTemplateOutlet]=\"chipsTemplate\"> </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #chipsTemplate>\n  <ng-container *prizmLet=\"selectedItemsChips$ | async as chips\">\n    <prizm-chips\n      [style.max-width.px]=\"\n        layoutComponent?.el?.nativeElement\n          ? layoutComponent!.el!.nativeElement.clientWidth - button_layout_width\n          : 0\n      \"\n      [class.empty]=\"!chips.length\"\n      [size]=\"$any(size)\"\n      [class.inner]=\"inner\"\n      [singleLine]=\"true\"\n      [deletable]=\"!disabled && isChipsDeletable\"\n      [chips]=\"chips\"\n      (removeChipEvent)=\"removeChip($event)\"\n    ></prizm-chips>\n  </ng-container>\n</ng-template>\n", styles: [":host{position:relative;z-index:0;display:inline-block;width:100%}.item{display:flex;align-items:center;padding:var(--prizm-select-item-padding, 8px 16px);min-height:40px;background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));cursor:pointer;font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);gap:var(--prizm-select-item-gap, 8px);color:var(--prizm-select-item-text, var(--prizm-v3-text-icon-secondary))}.item .text{max-width:calc(100% - 16px);width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.item.selected,.item.most-relevant{background:var(--prizm-select-item-selected-background, var(--prizm-v3-table-fill-row-active))}.item.selected .text,.item.most-relevant .text{color:var(--prizm-v3-text-icon-secondary)}.item:not(.selected):not(.most-relevant):hover{background:var(--prizm-select-item-hover-background, var(--prizm-v3-table-fill-row-hover));color:var(--prizm-v3-text-icon-secondary)}.block{background:var(--prizm-select-background, var(--prizm-v3-background-fill-overlay));border-radius:2px;border:none;padding:var(--prizm-select-padding, 8px 0)}.input-chips[readonly]{cursor:pointer}.empty-template{padding:var(--prizm-select-item-padding, 8px 16px);background:var(--prizm-select-item-background, var(--prizm-v3-background-fill-overlay));font-weight:var(--prizm-select-item-font-weight, 400);font-size:var(--prizm-select-item-font-size, 14px);color:var(--prizm-select-empty-text, var(--prizm-v3-text-icon-secondary))}.icon-dropdown{color:var(--prizm-v3-button-secondary-solid-default);cursor:pointer;transition-property:transform;transition-property:all;transition-property:color,transform;transition-duration:var(--prizm-duration, .3s);transition-timing-function:ease-in-out}.icon-dropdown.active{color:var(--prizm-v3-button-primary-solid-active)}.icon-dropdown.opened{transform:rotate(180deg)}.list-search-item{padding:var(--prizm-select-item-padding, 8px 16px)}.list-search-item prizm-input-layout{width:100%}prizm-checkbox{width:100%;max-width:calc(100% - 8px)}.in-body-chips-box{display:flex;align-items:center;height:100%}.hidden{display:none}prizm-chips,:host{height:20px;margin:1px 0}prizm-chips.inner,:host.inner{margin-top:0}prizm-chips.inner.empty,:host.inner.empty{display:none}prizm-chips[data-size=m],:host[data-size=m]{margin:2px 0}prizm-chips[data-size=l],:host[data-size=l]{margin:4px 0}prizm-dropdown-host{height:100%}prizm-icon.disabled{cursor:not-allowed;pointer-events:none}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [PRIZM_MULTI_SELECT_OPTIONS]
                }] }, { type: i0.Injector, decorators: [{
                    type: Inject,
                    args: [Injector]
                }] }]; }, propDecorators: { focusableElement: [{
                type: ViewChild,
                args: ['focusableElementRef', { read: ElementRef }]
            }], dropdownHostElement: [{
                type: ViewChild,
                args: ['dropdownHostRef']
            }], transformer: [{
                type: Input
            }], items: [{
                type: Input
            }], dropdownScroll: [{
                type: Input
            }], dropdownStyles: [{
                type: Input
            }], dropdownClasses: [{
                type: Input
            }], icon: [{
                type: Input
            }], selectAllItem: [{
                type: Input
            }], searchable: [{
                type: Input
            }], isChipsDeletable: [{
                type: Input
            }], minDropdownHeight: [{
                type: Input
            }], dropdownWidth: [{
                type: Input
            }], maxDropdownHeight: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], searchMatcher: [{
                type: Input
            }], emptyContent: [{
                type: Input
            }], stringify: [{
                type: Input
            }], identityMatcher: [{
                type: Input
            }], valueTemplate: [{
                type: Input
            }], display: [{
                type: HostBinding,
                args: ['style.display']
            }], inner: [{
                type: HostBinding,
                args: ['class.inner']
            }], emptyChips: [{
                type: HostBinding,
                args: ['class.empty']
            }], size: [{
                type: HostBinding,
                args: ['attr.data-size']
            }] } });
//# sourceMappingURL=data:application/json;base64,