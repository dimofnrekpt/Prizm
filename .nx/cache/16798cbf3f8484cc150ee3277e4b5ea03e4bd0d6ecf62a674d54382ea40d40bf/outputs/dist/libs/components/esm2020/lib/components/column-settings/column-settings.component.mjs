import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, ViewChild, } from '@angular/core';
import { PrizmAbstractTestId } from '../../abstract/interactive';
import { CdkDropList, DragDropModule, moveItemInArray, transferArrayItem, } from '@angular/cdk/drag-drop';
import { Observable } from 'rxjs';
import { PRIZM_COLUMN_SETTINGS } from '../../tokens';
import { prizmI18nInitWithKey } from '../../services';
import cloneDeep from 'lodash-es/cloneDeep';
import { CommonModule } from '@angular/common';
import { PrizmCardComponent } from '../card';
import { PrizmButtonComponent } from '../button';
import { PrizmToggleComponent } from '../toggle';
import { PrizmIconComponent } from '../icon';
import { PrizmScrollbarComponent } from '../scrollbar';
import { PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';
import { PrizmHintDirective } from '../../directives';
import { FormsModule } from '@angular/forms';
import { PrizmThemeModule } from '@prizm-ui/theme';
import { PrizmColumnIconPipe } from './pipes/column-icon.pipe';
import { PrizmColumnDropListComponent } from './components/column-drop-list/column-drop-list.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/cdk/drag-drop";
import * as i3 from "@angular/forms";
import * as i4 from "rxjs";
export class PrizmColumnSettingsComponent extends PrizmAbstractTestId {
    set settings(value) {
        this._settings = cloneDeep(value);
    }
    constructor(columnSettings$) {
        super();
        this.columnSettings$ = columnSettings$;
        this.stickySettings = false;
        this.headerSettings = false;
        this.isSettingsChanged = new EventEmitter();
        this.isLastColumnShown = false;
        this.connectedColumns = [];
        this.connectedLeft = [];
        this.connectedRight = [];
        this.testId_ = 'ui_column_settings';
    }
    ngAfterViewInit() {
        if (this.stickySettings) {
            this.connectedColumns = [this.stickyLeftList, this.stickyRightList];
            this.connectedLeft = [this.columnList, this.stickyRightList];
            this.connectedRight = [this.columnList, this.stickyLeftList];
        }
    }
    resetToDeafault() {
        this._settings = cloneDeep(this.defaultSettings);
        this.checkIsLastShown();
    }
    drop(event, status) {
        if (event.previousContainer === event.container) {
            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);
        }
        else {
            event.previousContainer.data[event.previousIndex].status = status;
            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);
            this.checkIsLastShown();
        }
    }
    showAll() {
        this._settings.columns = this._settings.columns.map(el => {
            return { ...el, status: 'default' };
        });
        this.checkIsLastShown();
    }
    close(settings) {
        this.isSettingsChanged.emit(settings);
    }
    checkIsLastShown() {
        this.isLastColumnShown =
            this._settings.columns.filter(el => el.status === 'default').length <= 1 &&
                !(this._settings.stickyLeft.length || this._settings.stickyRight.length);
    }
}
PrizmColumnSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmColumnSettingsComponent, deps: [{ token: PRIZM_COLUMN_SETTINGS }], target: i0.ɵɵFactoryTarget.Component });
PrizmColumnSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmColumnSettingsComponent, isStandalone: true, selector: "prizm-column-settings", inputs: { settings: "settings", defaultSettings: "defaultSettings", stickySettings: "stickySettings", headerSettings: "headerSettings" }, outputs: { isSettingsChanged: "isSettingsChanged" }, providers: [...prizmI18nInitWithKey(PRIZM_COLUMN_SETTINGS, 'columnSettings')], viewQueries: [{ propertyName: "stickyLeftList", first: true, predicate: ["stickyLeftList"], descendants: true, read: CdkDropList }, { propertyName: "columnList", first: true, predicate: ["columnList"], descendants: true, read: CdkDropList }, { propertyName: "stickyRightList", first: true, predicate: ["stickyRightList"], descendants: true, read: CdkDropList }], usesInheritance: true, ngImport: i0, template: "<div class=\"container\" *prizmLet=\"columnSettings$ | async as translations\">\n  <div class=\"header\">\n    <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['title'] }}</div>\n    <button\n      *ngIf=\"defaultSettings\"\n      (click)=\"resetToDeafault()\"\n      prizmButton\n      appearanceType=\"ghost\"\n      appearance=\"danger\"\n      size=\"m\"\n    >\n      {{ translations | prizmPluck : ['resetBtn'] }}\n    </button>\n  </div>\n  <div class=\"section\" *ngIf=\"headerSettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['subTitle'] }}</div>\n    </div>\n    <div class=\"section-toggle\">\n      <prizm-toggle [(ngModel)]=\"_settings.fixHeader\" size=\"m\"></prizm-toggle>\n      <span class=\"prizm-font-main-body-14\">{{ translations | prizmPluck : ['fixHeaderToggle'] }}</span>\n    </div>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyLeft'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      class=\"column-list\"\n      #stickyLeftList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyLeft\"\n      [cdkDropListConnectedTo]=\"connectedLeft\"\n      [columns]=\"_settings.stickyLeft\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\">\n    <div class=\"section-header\">\n      <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['mainColumns'] }}</div>\n      <div class=\"show-all\" (click)=\"showAll()\">\n        {{ translations | prizmPluck : ['showAllBtn'] }}\n      </div>\n    </div>\n    <prizm-column-drop-list\n      #columnList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.columns\"\n      [cdkDropListConnectedTo]=\"connectedColumns\"\n      [columns]=\"_settings.columns\"\n      [isLastColumnShown]=\"isLastColumnShown\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'default')\"\n      (statusChanged)=\"checkIsLastShown()\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyRight'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      #stickyRightList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyRight\"\n      [cdkDropListConnectedTo]=\"connectedRight\"\n      [columns]=\"_settings.stickyRight\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"footer prizm-font-btn-links-14\">\n    <div class=\"buttons\">\n      <button (click)=\"close(null)\" appearance=\"secondary\" appearanceType=\"ghost\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['cancelBtn'] }}\n      </button>\n      <button (click)=\"close(_settings)\" appearance=\"primary\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['saveBtn'] }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".container{width:360px;color:var(--prizm-v3-text-icon-secondary)}.container .header{border-bottom:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-column-settings-header-padding, 16px);display:flex;justify-content:space-between;font-style:var(--prizm-column-settings-header-font-style, normal);font-weight:var(--prizm-column-settings-header-font-weight, 600);font-size:var(--prizm-column-settings-header-font-size, var(--prizm-dialog-font-size, 14px));color:var(--prizm-column-settings-header-text, var(--prizm-v3-text-icon-primary))}.container .title{overflow:hidden;text-overflow:ellipsis;max-width:70%;display:flex;align-items:center}.container .section{border-bottom:1px solid var(--prizm-v3-background-stroke)}.container .section-header{display:flex;justify-content:space-between;align-items:center;gap:16px;padding:var(--prizm-column-settings-header-padding, 0px 16px);margin-top:16px;color:var(--prizm-v3-text-icon-primary)}.container .section-toggle{display:flex;align-items:center;gap:8px;padding:0 16px 16px;margin-top:16px}.container .footer{border-top:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-column-settings-footer-padding, 14px 16px);max-width:100%;color:var(--prizm-column-settings-footer-text, var(--prizm-v3-text-icon-primary))}.container .footer .buttons{display:flex;justify-content:space-between;gap:8px}.container .footer .buttons button{flex-grow:1}.container .show-all{cursor:pointer;font-size:12px;font-weight:600;color:var(--prizm-v3-button-secondary-solid-default)}.container .show-all:hover{color:var(--prizm-v3-button-secondary-solid-hover)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "component", type: PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "component", type: PrizmToggleComponent, selector: "prizm-toggle", inputs: ["singleColor", "iconOn", "iconOff", "showLoader", "size"] }, { kind: "ngmodule", type: DragDropModule }, { kind: "directive", type: i2.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "component", type: PrizmColumnDropListComponent, selector: "prizm-column-drop-list", inputs: ["columns", "translations", "isLastColumnShown"], outputs: ["statusChanged"] }, { kind: "directive", type: PrizmLetDirective, selector: "[prizmLet]", inputs: ["prizmLet"], exportAs: ["prizmLet"] }, { kind: "pipe", type: PrizmPluckPipe, name: "prizmPluck" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: PrizmThemeModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmColumnSettingsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-column-settings', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        CommonModule,
                        PrizmCardComponent,
                        PrizmButtonComponent,
                        PrizmToggleComponent,
                        DragDropModule,
                        PrizmIconComponent,
                        PrizmScrollbarComponent,
                        PrizmColumnDropListComponent,
                        PrizmLetDirective,
                        PrizmPluckPipe,
                        PrizmHintDirective,
                        FormsModule,
                        PrizmThemeModule,
                        PrizmColumnIconPipe,
                    ], providers: [...prizmI18nInitWithKey(PRIZM_COLUMN_SETTINGS, 'columnSettings')], template: "<div class=\"container\" *prizmLet=\"columnSettings$ | async as translations\">\n  <div class=\"header\">\n    <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['title'] }}</div>\n    <button\n      *ngIf=\"defaultSettings\"\n      (click)=\"resetToDeafault()\"\n      prizmButton\n      appearanceType=\"ghost\"\n      appearance=\"danger\"\n      size=\"m\"\n    >\n      {{ translations | prizmPluck : ['resetBtn'] }}\n    </button>\n  </div>\n  <div class=\"section\" *ngIf=\"headerSettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['subTitle'] }}</div>\n    </div>\n    <div class=\"section-toggle\">\n      <prizm-toggle [(ngModel)]=\"_settings.fixHeader\" size=\"m\"></prizm-toggle>\n      <span class=\"prizm-font-main-body-14\">{{ translations | prizmPluck : ['fixHeaderToggle'] }}</span>\n    </div>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyLeft'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      class=\"column-list\"\n      #stickyLeftList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyLeft\"\n      [cdkDropListConnectedTo]=\"connectedLeft\"\n      [columns]=\"_settings.stickyLeft\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\">\n    <div class=\"section-header\">\n      <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['mainColumns'] }}</div>\n      <div class=\"show-all\" (click)=\"showAll()\">\n        {{ translations | prizmPluck : ['showAllBtn'] }}\n      </div>\n    </div>\n    <prizm-column-drop-list\n      #columnList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.columns\"\n      [cdkDropListConnectedTo]=\"connectedColumns\"\n      [columns]=\"_settings.columns\"\n      [isLastColumnShown]=\"isLastColumnShown\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'default')\"\n      (statusChanged)=\"checkIsLastShown()\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyRight'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      #stickyRightList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyRight\"\n      [cdkDropListConnectedTo]=\"connectedRight\"\n      [columns]=\"_settings.stickyRight\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"footer prizm-font-btn-links-14\">\n    <div class=\"buttons\">\n      <button (click)=\"close(null)\" appearance=\"secondary\" appearanceType=\"ghost\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['cancelBtn'] }}\n      </button>\n      <button (click)=\"close(_settings)\" appearance=\"primary\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['saveBtn'] }}\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [".container{width:360px;color:var(--prizm-v3-text-icon-secondary)}.container .header{border-bottom:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-column-settings-header-padding, 16px);display:flex;justify-content:space-between;font-style:var(--prizm-column-settings-header-font-style, normal);font-weight:var(--prizm-column-settings-header-font-weight, 600);font-size:var(--prizm-column-settings-header-font-size, var(--prizm-dialog-font-size, 14px));color:var(--prizm-column-settings-header-text, var(--prizm-v3-text-icon-primary))}.container .title{overflow:hidden;text-overflow:ellipsis;max-width:70%;display:flex;align-items:center}.container .section{border-bottom:1px solid var(--prizm-v3-background-stroke)}.container .section-header{display:flex;justify-content:space-between;align-items:center;gap:16px;padding:var(--prizm-column-settings-header-padding, 0px 16px);margin-top:16px;color:var(--prizm-v3-text-icon-primary)}.container .section-toggle{display:flex;align-items:center;gap:8px;padding:0 16px 16px;margin-top:16px}.container .footer{border-top:1px solid var(--prizm-v3-background-stroke);padding:var(--prizm-column-settings-footer-padding, 14px 16px);max-width:100%;color:var(--prizm-column-settings-footer-text, var(--prizm-v3-text-icon-primary))}.container .footer .buttons{display:flex;justify-content:space-between;gap:8px}.container .footer .buttons button{flex-grow:1}.container .show-all{cursor:pointer;font-size:12px;font-weight:600;color:var(--prizm-v3-button-secondary-solid-default)}.container .show-all:hover{color:var(--prizm-v3-button-secondary-solid-hover)}\n"] }]
        }], ctorParameters: function () { return [{ type: i4.Observable, decorators: [{
                    type: Inject,
                    args: [PRIZM_COLUMN_SETTINGS]
                }] }]; }, propDecorators: { stickyLeftList: [{
                type: ViewChild,
                args: ['stickyLeftList', { read: CdkDropList }]
            }], columnList: [{
                type: ViewChild,
                args: ['columnList', { read: CdkDropList }]
            }], stickyRightList: [{
                type: ViewChild,
                args: ['stickyRightList', { read: CdkDropList }]
            }], settings: [{
                type: Input
            }], defaultSettings: [{
                type: Input
            }], stickySettings: [{
                type: Input
            }], headerSettings: [{
                type: Input
            }], isSettingsChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,