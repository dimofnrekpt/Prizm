import { ChangeDetectorRef, SkipSelf } from '@angular/core';
import { PrizmTableDirective } from '../directives/table.directive';
import { PrizmTableSortPipe } from '../pipes/table-sort.pipe';
import { PrizmDestroyService } from '@prizm-ui/helpers';
import { takeUntil, tap } from 'rxjs/operators';
function prizmWatch(changeDetectorRef) {
    return tap(() => {
        changeDetectorRef.markForCheck();
    });
}
export const PRIZM_TABLE_PROVIDER = [
    PrizmDestroyService,
    PrizmTableSortPipe,
    {
        provide: PrizmTableDirective,
        deps: [[new SkipSelf(), PrizmTableDirective], ChangeDetectorRef, PrizmDestroyService],
        useFactory: (controller, changeDetectorRef, destroy$) => {
            controller.change$.pipe(prizmWatch(changeDetectorRef), takeUntil(destroy$)).subscribe();
            return controller;
        },
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUucHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL3RhYmxlL3Byb3ZpZGVycy90YWJsZS5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQVksUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXhELE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHaEQsU0FBUyxVQUFVLENBQUksaUJBQW9DO0lBQ3pELE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRTtRQUNkLGlCQUFpQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ25DLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFlO0lBQzlDLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEI7UUFDRSxPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxtQkFBbUIsQ0FBQyxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixDQUFDO1FBQ3JGLFVBQVUsRUFBRSxDQUNWLFVBQW1DLEVBQ25DLGlCQUFvQyxFQUNwQyxRQUEwQixFQUNELEVBQUU7WUFDM0IsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7WUFFeEYsT0FBTyxVQUFVLENBQUM7UUFDcEIsQ0FBQztLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBQcm92aWRlciwgU2tpcFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByaXptVGFibGVEaXJlY3RpdmUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL3RhYmxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQcml6bVRhYmxlU29ydFBpcGUgfSBmcm9tICcuLi9waXBlcy90YWJsZS1zb3J0LnBpcGUnO1xuaW1wb3J0IHsgUHJpem1EZXN0cm95U2VydmljZSB9IGZyb20gJ0Bwcml6bS11aS9oZWxwZXJzJztcbmltcG9ydCB7IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbiwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFrZVVudGlsLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBBYnN0cmFjdFByaXptQ29udHJvbGxlciB9IGZyb20gJy4uL2Fic3RyYWN0L2NvbnRyb2xsZXInO1xuXG5mdW5jdGlvbiBwcml6bVdhdGNoPFQ+KGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik6IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxUPiB7XG4gIHJldHVybiB0YXAoKCkgPT4ge1xuICAgIGNoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IFBSSVpNX1RBQkxFX1BST1ZJREVSOiBQcm92aWRlcltdID0gW1xuICBQcml6bURlc3Ryb3lTZXJ2aWNlLFxuICBQcml6bVRhYmxlU29ydFBpcGUsXG4gIHtcbiAgICBwcm92aWRlOiBQcml6bVRhYmxlRGlyZWN0aXZlLFxuICAgIGRlcHM6IFtbbmV3IFNraXBTZWxmKCksIFByaXptVGFibGVEaXJlY3RpdmVdLCBDaGFuZ2VEZXRlY3RvclJlZiwgUHJpem1EZXN0cm95U2VydmljZV0sXG4gICAgdXNlRmFjdG9yeTogKFxuICAgICAgY29udHJvbGxlcjogQWJzdHJhY3RQcml6bUNvbnRyb2xsZXIsXG4gICAgICBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICBkZXN0cm95JDogT2JzZXJ2YWJsZTx2b2lkPlxuICAgICk6IEFic3RyYWN0UHJpem1Db250cm9sbGVyID0+IHtcbiAgICAgIGNvbnRyb2xsZXIuY2hhbmdlJC5waXBlKHByaXptV2F0Y2goY2hhbmdlRGV0ZWN0b3JSZWYpLCB0YWtlVW50aWwoZGVzdHJveSQpKS5zdWJzY3JpYmUoKTtcblxuICAgICAgcmV0dXJuIGNvbnRyb2xsZXI7XG4gICAgfSxcbiAgfSxcbl07XG4iXX0=