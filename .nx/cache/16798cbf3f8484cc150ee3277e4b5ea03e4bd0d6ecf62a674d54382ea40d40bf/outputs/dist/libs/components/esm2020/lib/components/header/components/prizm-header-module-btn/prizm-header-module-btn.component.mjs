import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PrizmButtonModule } from '../../../button';
import { PrizmHintDirective } from '../../../../directives';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../button/button.component";
export class PrizmHeaderModuleBtnComponent {
    constructor() {
        this.icon = 'alerts-bell';
        this.alertsCount = 0;
        this.title = '';
        this.status = 'info';
    }
}
PrizmHeaderModuleBtnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmHeaderModuleBtnComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PrizmHeaderModuleBtnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: PrizmHeaderModuleBtnComponent, isStandalone: true, selector: "prizm-header-module-btn", inputs: { icon: "icon", alertsCount: "alertsCount", title: "title", status: "status" }, ngImport: i0, template: "<div class=\"icon\">\n  <button [icon]=\"icon\" prizmIconButton size=\"l\" appearanceType=\"ghost\" appearance=\"secondary\"></button>\n\n  <div class=\"indicator indicator_{{ status }}\" *ngIf=\"alertsCount\" [prizmHint]=\"alertsCount\">\n    {{ alertsCount }}\n  </div>\n</div>\n\n<span class=\"title\" *ngIf=\"title\">{{ title }}</span>\n", styles: [":host{display:inline-flex;align-items:center}:host .icon{display:flex;position:relative}:host .icon .indicator{min-height:1rem;min-width:1rem;max-width:3rem;padding:0 4px;border-radius:1.25rem;font-size:12px;line-height:16px;font-weight:600;color:var(--prizm-v3-text-icon-exception);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:absolute;top:0;right:0;transform:translate(30%,-30%)}:host .icon .indicator_info{background:var(--prizm-v3-status-info-primary-default)}:host .icon .indicator_secondary{background:var(--prizm-v3-status-none-primary-default)}:host .icon .indicator_success{background:var(--prizm-v3-status-success-primary-default)}:host .icon .indicator_warning{background:var(--prizm-v3-status-warning-primary-default)}:host .icon .indicator_danger{background:var(--prizm-v3-status-alarm-primary-default)}:host .title{margin-left:30px;font-weight:700;font-size:12px;line-height:16px;color:var(--prizm-v3-text-icon-tertiary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: PrizmButtonModule }, { kind: "component", type: i2.PrizmButtonComponent, selector: "button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]", inputs: ["size", "icon", "iconRight", "appearance", "appearanceType", "disabled", "showLoader"] }, { kind: "directive", type: PrizmHintDirective, selector: "[prizmHint]:not(ng-container)", inputs: ["prizmAutoReposition", "prizmHintDirection", "prizmHintId", "prizmHintTheme", "prizmHintShowDelay", "prizmHintHideDelay", "prizmHintHost", "prizmHintContext", "prizmHintCanShow", "prizmHint"], outputs: ["prizmHintShowed"], exportAs: ["prizmHint"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: PrizmHeaderModuleBtnComponent, decorators: [{
            type: Component,
            args: [{ selector: 'prizm-header-module-btn', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CommonModule, PrizmButtonModule, PrizmHintDirective], template: "<div class=\"icon\">\n  <button [icon]=\"icon\" prizmIconButton size=\"l\" appearanceType=\"ghost\" appearance=\"secondary\"></button>\n\n  <div class=\"indicator indicator_{{ status }}\" *ngIf=\"alertsCount\" [prizmHint]=\"alertsCount\">\n    {{ alertsCount }}\n  </div>\n</div>\n\n<span class=\"title\" *ngIf=\"title\">{{ title }}</span>\n", styles: [":host{display:inline-flex;align-items:center}:host .icon{display:flex;position:relative}:host .icon .indicator{min-height:1rem;min-width:1rem;max-width:3rem;padding:0 4px;border-radius:1.25rem;font-size:12px;line-height:16px;font-weight:600;color:var(--prizm-v3-text-icon-exception);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:absolute;top:0;right:0;transform:translate(30%,-30%)}:host .icon .indicator_info{background:var(--prizm-v3-status-info-primary-default)}:host .icon .indicator_secondary{background:var(--prizm-v3-status-none-primary-default)}:host .icon .indicator_success{background:var(--prizm-v3-status-success-primary-default)}:host .icon .indicator_warning{background:var(--prizm-v3-status-warning-primary-default)}:host .icon .indicator_danger{background:var(--prizm-v3-status-alarm-primary-default)}:host .title{margin-left:30px;font-weight:700;font-size:12px;line-height:16px;color:var(--prizm-v3-text-icon-tertiary);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n"] }]
        }], propDecorators: { icon: [{
                type: Input
            }], alertsCount: [{
                type: Input
            }], title: [{
                type: Input
            }], status: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpem0taGVhZGVyLW1vZHVsZS1idG4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy9oZWFkZXIvY29tcG9uZW50cy9wcml6bS1oZWFkZXItbW9kdWxlLWJ0bi9wcml6bS1oZWFkZXItbW9kdWxlLWJ0bi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL2hlYWRlci9jb21wb25lbnRzL3ByaXptLWhlYWRlci1tb2R1bGUtYnRuL3ByaXptLWhlYWRlci1tb2R1bGUtYnRuLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQVU1RCxNQUFNLE9BQU8sNkJBQTZCO0lBUjFDO1FBU2tCLFNBQUksR0FBRyxhQUFhLENBQUM7UUFDckIsZ0JBQVcsR0FBRyxDQUFDLENBQUM7UUFDaEIsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUNYLFdBQU0sR0FBb0IsTUFBTSxDQUFDO0tBQ2xEOzswSEFMWSw2QkFBNkI7OEdBQTdCLDZCQUE2QiwyS0NkMUMsdVZBU0Esa2pDREdZLFlBQVksa0lBQUUsaUJBQWlCLG9SQUFFLGtCQUFrQjsyRkFFbEQsNkJBQTZCO2tCQVJ6QyxTQUFTOytCQUNFLHlCQUF5QixtQkFHbEIsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCLENBQUM7OEJBRzlDLElBQUk7c0JBQW5CLEtBQUs7Z0JBQ1UsV0FBVztzQkFBMUIsS0FBSztnQkFDVSxLQUFLO3NCQUFwQixLQUFLO2dCQUNVLE1BQU07c0JBQXJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5kaWNhdG9yU3RhdHVzIH0gZnJvbSAnLi4vLi4vLi4vaW5kaWNhdG9yL2luZGljYXRvci5tb2RlbHMnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFByaXptQnV0dG9uTW9kdWxlIH0gZnJvbSAnLi4vLi4vLi4vYnV0dG9uJztcbmltcG9ydCB7IFByaXptSGludERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uLy4uL2RpcmVjdGl2ZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwcml6bS1oZWFkZXItbW9kdWxlLWJ0bicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcml6bS1oZWFkZXItbW9kdWxlLWJ0bi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3ByaXptLWhlYWRlci1tb2R1bGUtYnRuLmNvbXBvbmVudC5sZXNzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQcml6bUJ1dHRvbk1vZHVsZSwgUHJpem1IaW50RGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgUHJpem1IZWFkZXJNb2R1bGVCdG5Db21wb25lbnQge1xuICBASW5wdXQoKSBwdWJsaWMgaWNvbiA9ICdhbGVydHMtYmVsbCc7XG4gIEBJbnB1dCgpIHB1YmxpYyBhbGVydHNDb3VudCA9IDA7XG4gIEBJbnB1dCgpIHB1YmxpYyB0aXRsZSA9ICcnO1xuICBASW5wdXQoKSBwdWJsaWMgc3RhdHVzOiBJbmRpY2F0b3JTdGF0dXMgPSAnaW5mbyc7XG59XG4iLCI8ZGl2IGNsYXNzPVwiaWNvblwiPlxuICA8YnV0dG9uIFtpY29uXT1cImljb25cIiBwcml6bUljb25CdXR0b24gc2l6ZT1cImxcIiBhcHBlYXJhbmNlVHlwZT1cImdob3N0XCIgYXBwZWFyYW5jZT1cInNlY29uZGFyeVwiPjwvYnV0dG9uPlxuXG4gIDxkaXYgY2xhc3M9XCJpbmRpY2F0b3IgaW5kaWNhdG9yX3t7IHN0YXR1cyB9fVwiICpuZ0lmPVwiYWxlcnRzQ291bnRcIiBbcHJpem1IaW50XT1cImFsZXJ0c0NvdW50XCI+XG4gICAge3sgYWxlcnRzQ291bnQgfX1cbiAgPC9kaXY+XG48L2Rpdj5cblxuPHNwYW4gY2xhc3M9XCJ0aXRsZVwiICpuZ0lmPVwidGl0bGVcIj57eyB0aXRsZSB9fTwvc3Bhbj5cbiJdfQ==