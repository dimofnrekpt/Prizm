{"version":3,"file":"prizm-ui-components.mjs","sources":["../../../../libs/components/src/lib/constants/always-false-handler.ts","../../../../libs/components/src/lib/constants/always-true-handler.ts","../../../../libs/components/src/lib/constants/default-marker-handler.ts","../../../../libs/components/src/lib/constants/events.ts","../../../../libs/components/src/lib/constants/svg-node-filter.ts","../../../../libs/components/src/lib/constants/unicode-chars.ts","../../../../libs/components/src/lib/constants/regexp.ts","../../../../libs/components/src/lib/constants/stringify.ts","../../../../libs/components/src/lib/constants/matcher.ts","../../../../libs/components/src/lib/constants/polling-time.ts","../../../../libs/components/src/lib/constants/date-time-separator.ts","../../../../libs/components/src/lib/constants/assets-folder.ts","../../../../libs/components/src/lib/constants/max-time-values.ts","../../../../libs/components/src/lib/observables/zone-free.ts","../../../../libs/components/src/lib/observables/typed-from-event.ts","../../../../libs/components/src/lib/util/dom/get-actual-target.ts","../../../../libs/components/src/lib/services/hovered.service.ts","../../../../libs/components/src/lib/services/cron/model.ts","../../../../libs/components/src/lib/services/cron/util.ts","../../../../libs/components/src/lib/services/cron/cron.service.ts","../../../../libs/components/src/lib/services/resize.service.ts","../../../../libs/components/src/lib/services/i18n.service.ts","../../../../libs/components/src/lib/tokens/take-only-trusted-events.ts","../../../../libs/components/src/lib/tokens/month-formatter.ts","../../../../libs/components/src/lib/tokens/animations-duration.ts","../../../../libs/components/src/lib/tokens/animation-options.ts","../../../../libs/components/src/lib/util/dom/prizm-get-document-or-shadow-root.ts","../../../../libs/components/src/lib/tokens/active-element.ts","../../../../libs/components/src/lib/tokens/date-extra-buttons.ts","../../../../libs/components/src/lib/tokens/date-inputs-value-transformers.ts","../../../../libs/components/src/lib/tokens/focusable-item-accessor.ts","../../../../libs/components/src/lib/tokens/scroll-ref.ts","../../../../libs/components/src/lib/tokens/first-day-of-week.ts","../../../../libs/components/src/lib/tokens/textfield-host.tstextfield-host.ts","../../../../libs/components/src/lib/util/get-native-focused.ts","../../../../libs/components/src/lib/util/set-native-focused.ts","../../../../libs/components/src/lib/util/blur-native-focused.ts","../../../../libs/components/src/lib/util/is-native-focused.ts","../../../../libs/components/src/lib/util/is-native-focused-in.ts","../../../../libs/components/src/lib/util/is-native-keyboard-focusable.ts","../../../../libs/components/src/lib/util/is-native-mouse-focusable.ts","../../../../libs/components/src/lib/util/size-bigger.ts","../../../../libs/components/src/lib/util/base/is-present.ts","../../../../libs/components/src/lib/util/browser/is-edge.ts","../../../../libs/components/src/lib/util/browser/is-edge-older-than.ts","../../../../libs/components/src/lib/util/browser/is-firefox.ts","../../../../libs/components/src/lib/util/browser/is-ie.ts","../../../../libs/components/src/lib/util/browser/is-safari.ts","../../../../libs/components/src/lib/util/common/nullable-same.ts","../../../../libs/components/src/lib/util/common/is-string.ts","../../../../libs/components/src/lib/exceptions/value-changes.exception.ts","../../../../libs/components/src/lib/observables/replay-control-value-changes.ts","../../../../libs/components/src/lib/util/common/replay-control-value-changes-factory.ts","../../../../libs/components/src/lib/util/math/clamp.ts","../../../../libs/components/src/lib/util/math/in-range.ts","../../../../libs/components/src/lib/util/math/normalize-to-int-number.ts","../../../../libs/components/src/lib/util/math/quantize.ts","../../../../libs/components/src/lib/util/math/round.ts","../../../../libs/components/src/lib/util/math/sum.ts","../../../../libs/components/src/lib/util/math/to-int.ts","../../../../libs/components/src/lib/util/math/to-px.ts","../../../../libs/components/src/lib/util/math/to-radians.ts","../../../../libs/components/src/lib/util/dom/contains-or-after.ts","../../../../libs/components/src/lib/util/dom/is-current-target.ts","../../../../libs/components/src/lib/util/dom/can-scroll.ts","../../../../libs/components/src/lib/util/dom/get-scroll-parent.ts","../../../../libs/components/src/lib/util/dom/get-element-offset.ts","../../../../libs/components/src/lib/util/dom/is-textoverflow.ts","../../../../libs/components/src/lib/util/os/is-ios.ts","../../../../libs/components/src/lib/util/os/is-apple.ts","../../../../libs/components/src/lib/tokens/is-ios.ts","../../../../libs/components/src/lib/@core/date-time/time.ts","../../../../libs/components/src/lib/exceptions/invalid-day.exception.ts","../../../../libs/components/src/lib/exceptions/invalid-month.exception.ts","../../../../libs/components/src/lib/exceptions/invalid-year.exception.ts","../../../../libs/components/src/lib/@core/date-time/date-fillers.ts","../../../../libs/components/src/lib/@core/date-time/year.ts","../../../../libs/components/src/lib/@core/date-time/month.ts","../../../../libs/components/src/lib/@core/date-time/day.ts","../../../../libs/components/src/lib/@core/date-time/date-time.ts","../../../../libs/components/src/lib/@core/date-time/days.const.ts","../../../../libs/components/src/lib/tokens/input-date-options.ts","../../../../libs/components/src/lib/tokens/is-mobile.ts","../../../../libs/components/src/lib/tokens/removed-element.ts","../../../../libs/components/src/lib/tokens/element-ref.ts","../../../../libs/components/src/lib/tokens/calendar-data-stream.ts","../../../../libs/components/src/lib/tokens/mobile-calendar.ts","../../../../libs/components/src/lib/tokens/value-accessor.ts","../../../../libs/components/src/lib/tokens/ordered-short-week-days.ts","../../../../libs/components/src/lib/tokens/i18n.ts","../../../../libs/components/src/lib/modules/overlay/token.ts","../../../../libs/components/src/lib/modules/overlay/models.ts","../../../../libs/components/src/lib/modules/overlay/utils.ts","../../../../libs/components/src/lib/modules/overlay/position/position.ts","../../../../libs/components/src/lib/modules/overlay/position/overlay-fullscreen-position.ts","../../../../libs/components/src/lib/modules/overlay/position/overlay-global-position.ts","../../../../libs/components/src/lib/modules/overlay/position/overlay-relative-position.ts","../../../../libs/components/src/lib/modules/overlay/position/overlay-slide-position.ts","../../../../libs/components/src/lib/modules/overlay/config.ts","../../../../libs/components/src/lib/modules/overlay/overlay.component.ts","../../../../libs/components/src/lib/modules/overlay/overlay.component.html","../../../../libs/components/src/lib/modules/overlay/overlay-control.ts","../../../../libs/components/src/lib/modules/overlay/overlay.service.ts","../../../../libs/components/src/lib/modules/overlay/overlay.module.ts","../../../../libs/components/src/lib/modules/overlay/const.ts","../../../../libs/components/src/lib/modules/mask/mask.module.ts","../../../../libs/components/src/lib/modules/prizm-ui-root.module.ts","../../../../libs/components/src/lib/@core/date-time/date-format.ts","../../../../libs/components/src/lib/@core/date-time/time-format.ts","../../../../libs/components/src/lib/@core/date-time/date-separator.ts","../../../../libs/components/src/lib/@core/date-time/day-with-status.ts","../../../../libs/components/src/lib/@core/date-time/month-range.ts","../../../../libs/components/src/lib/@core/date-time/day-range.ts","../../../../libs/components/src/lib/@core/date-time/time-range.ts","../../../../libs/components/src/lib/@core/date-time/day-time-range.ts","../../../../libs/components/src/lib/@core/classes/date-time-range-period.ts","../../../../libs/components/src/lib/@core/classes/named-day.ts","../../../../libs/components/src/lib/@core/classes/day-range-period.ts","../../../../libs/components/src/lib/@core/mask/create-time-mask.ts","../../../../libs/components/src/lib/@core/mask/create-date-time-mask.ts","../../../../libs/components/src/lib/@core/mask/create-date-mask.ts","../../../../libs/components/src/lib/@core/mask/create-date-time-range-mask.ts","../../../../libs/components/src/lib/directives/polymorph/tokens/context.ts","../../../../libs/components/src/lib/directives/polymorph/classes/component.ts","../../../../libs/components/src/lib/directives/polymorph/directives/template.ts","../../../../libs/components/src/lib/directives/polymorph/classes/primitive-context.ts","../../../../libs/components/src/lib/directives/polymorph/util.ts","../../../../libs/components/src/lib/directives/polymorph/directives/outlet.ts","../../../../libs/components/src/lib/directives/polymorph/polymorph.module.ts","../../../../libs/components/src/lib/directives/polymorph/index.ts","../../../../libs/components/src/lib/directives/focused/focused.directive.ts","../../../../libs/components/src/lib/directives/focused/focused.module.ts","../../../../libs/components/src/lib/directives/focusable/focusable.directive.ts","../../../../libs/components/src/lib/directives/focusable/focusable.module.ts","../../../../libs/components/src/lib/observables/stop-propagation.ts","../../../../libs/components/src/lib/directives/stop-propagation/stop-propagation.directive.ts","../../../../libs/components/src/lib/directives/stop-propagation/stop-propagation.module.ts","../../../../libs/components/src/lib/exceptions/owner-document.exception.ts","../../../../libs/components/src/lib/observables/mouse-drag-finish-from.ts","../../../../libs/components/src/lib/observables/pressed-observable.ts","../../../../libs/components/src/lib/directives/pressed/pressed.directive.ts","../../../../libs/components/src/lib/directives/pressed/pressed.module.ts","../../../../libs/components/src/lib/observables/prevent-default.ts","../../../../libs/components/src/lib/directives/droppable/droppable.directive.ts","../../../../libs/components/src/lib/directives/droppable/droppable.module.ts","../../../../libs/components/src/lib/directives/event-zone/event-zone.service.ts","../../../../libs/components/src/lib/directives/event-zone/event-zone.directive.ts","../../../../libs/components/src/lib/directives/event-zone/event-zone.module.ts","../../../../libs/components/src/lib/observables/watch.ts","../../../../libs/components/src/lib/observables/is-alive.ts","../../../../libs/components/src/lib/exceptions/table-sort-key.exception.ts","../../../../libs/components/src/lib/exceptions/toast-exist.exception.ts","../../../../libs/components/src/lib/exceptions/toast-not-exist.exception.ts","../../../../libs/components/src/lib/observables/focus-visible-observable.ts","../../../../libs/components/src/lib/directives/focus-visible/focus-visible.service.ts","../../../../libs/components/src/lib/directives/focus-visible/focus-visible.directive.ts","../../../../libs/components/src/lib/directives/focus-visible/focus-visible.module.ts","../../../../libs/components/src/lib/directives/hovered/hovered.directive.ts","../../../../libs/components/src/lib/directives/hovered/hovered.module.ts","../../../../libs/components/src/lib/directives/zone-event/zone-event.service.ts","../../../../libs/components/src/lib/directives/zone-event/zone-event.directive.ts","../../../../libs/components/src/lib/directives/zone-event/zone-event.module.ts","../../../../libs/components/src/lib/directives/overscroll/overscroll.service.ts","../../../../libs/components/src/lib/directives/overscroll/overscroll.directive.ts","../../../../libs/components/src/lib/directives/overscroll/overscroll.module.ts","../../../../libs/components/src/lib/directives/checked/checked.directive.ts","../../../../libs/components/src/lib/directives/checked/checked.module.ts","../../../../libs/components/src/lib/util/get-closest-keyboard-focusable.ts","../../../../libs/components/src/lib/directives/focus-trap/focus-trap.directive.ts","../../../../libs/components/src/lib/directives/focus-trap/focus-trap.module.ts","../../../../libs/components/src/lib/directives/element-ready/element-ready.directive.ts","../../../../libs/components/src/lib/directives/element-ready/element-ready.module.ts","../../../../libs/components/src/lib/directives/prevent-default/prevent-default.directive.ts","../../../../libs/components/src/lib/directives/prevent-default/prevent-default.module.ts","../../../../libs/components/src/lib/directives/hint/hint.service.ts","../../../../libs/components/src/lib/components/scrollbar/scroll-ref.directive.ts","../../../../libs/components/src/lib/components/scrollbar/scrollable.directive.ts","../../../../libs/components/src/lib/abstract/interactive.ts","../../../../libs/components/src/lib/animations/animations.ts","../../../../libs/components/src/lib/components/scrollbar/scrollbar-wrapper.directive.ts","../../../../libs/components/src/lib/components/scrollbar/scrollbar.directive.ts","../../../../libs/components/src/lib/components/scrollbar/scroll-controls.component.ts","../../../../libs/components/src/lib/components/scrollbar/scroll-controls.component.html","../../../../libs/components/src/lib/components/scrollbar/scrollbar.component.ts","../../../../libs/components/src/lib/components/scrollbar/scrollbar.component.html","../../../../libs/components/src/lib/components/scrollbar/scrollbar.module.ts","../../../../libs/components/src/lib/directives/hint/hint-container.component.ts","../../../../libs/components/src/lib/components/button/button-options.ts","../../../../libs/components/src/lib/components/icon/icon.component.ts","../../../../libs/components/src/lib/components/icon/icon.component.html","../../../../libs/components/src/lib/components/icon/icon.module.ts","../../../../libs/components/src/lib/components/icon/icon-definitions.ts","../../../../libs/components/src/lib/components/icon/icon-16-definitions.ts","../../../../libs/components/src/lib/components/loader/loader.component.ts","../../../../libs/components/src/lib/components/loader/loader.component.html","../../../../libs/components/src/lib/components/loader/loader.module.ts","../../../../libs/components/src/lib/directives/wrapper/wrapper.component.ts","../../../../libs/components/src/lib/components/button/button.component.ts","../../../../libs/components/src/lib/components/button/button.component.html","../../../../libs/components/src/lib/directives/confirm-popup/confirm-popup-container.component.ts","../../../../libs/components/src/lib/directives/confirm-popup/confirm-popup-container.component.html","../../../../libs/components/src/lib/directives/confirm-popup/confirm-popup-options.ts","../../../../libs/components/src/lib/components/dialogs/dialog/dialog-options.ts","../../../../libs/components/src/lib/components/button/split-button/split-button.component.ts","../../../../libs/components/src/lib/components/button/split-button/split-button.component.html","../../../../libs/components/src/lib/components/button/button.module.ts","../../../../libs/components/src/lib/components/dialogs/confirm-dialog/confirm-dialog.component.ts","../../../../libs/components/src/lib/components/dialogs/confirm-dialog/confirm-dialog.component.html","../../../../libs/components/src/lib/components/dialogs/confirm-dialog/confirm-dialog.module.ts","../../../../libs/components/src/lib/abstract/dialog.service.ts","../../../../libs/components/src/lib/components/dialogs/confirm-dialog/confirm-dialog.models.ts","../../../../libs/components/src/lib/components/dialogs/confirm-dialog/confirm-dialog.service.ts","../../../../libs/components/src/lib/directives/hint/hint-options.ts","../../../../libs/components/src/lib/directives/hint/hint.directive.ts","../../../../libs/components/src/lib/directives/confirm-popup/confirm-popup.directive.ts","../../../../libs/components/src/lib/directives/hint/hint.module.ts","../../../../libs/components/src/lib/directives/confirm-popup/confirm-popup.module.ts","../../../../libs/components/src/lib/directives/skeleton/skeleton.directive.ts","../../../../libs/components/src/lib/directives/skeleton/skeleton.module.ts","../../../../libs/components/src/lib/directives/lifecycle/lifecycle.directive.ts","../../../../libs/components/src/lib/directives/lifecycle/lifecycle.module.ts","../../../../libs/components/src/lib/directives/auto-focus/handlers/abstract.handler.ts","../../../../libs/components/src/lib/directives/auto-focus/handlers/default.handler.ts","../../../../libs/components/src/lib/directives/auto-focus/handlers/ios.handler.ts","../../../../libs/components/src/lib/directives/auto-focus/autofocus.options.ts","../../../../libs/components/src/lib/directives/auto-focus/autofocus.directive.ts","../../../../libs/components/src/lib/directives/auto-focus/autofocus.module.ts","../../../../libs/components/src/lib/directives/dropdown-controller/dropdown-controller.token.ts","../../../../libs/components/src/lib/directives/dropdown-controller/dropdown-controller.const.ts","../../../../libs/components/src/lib/directives/dropdown-controller/dropdown-controller.directive.ts","../../../../libs/components/src/lib/directives/dropdown-controller/dropdown-controller.module.ts","../../../../libs/components/src/lib/directives/mutation-observer/mutation-observer-options.ts","../../../../libs/components/src/lib/directives/mutation-observer/mutation-observer.directive.ts","../../../../libs/components/src/lib/directives/mutation-observer/mutation-observer.module.ts","../../../../libs/components/src/lib/util/dom/custom-event.ts","../../../../libs/components/src/lib/directives/scroll-into-view/scroll-into-view.directive.ts","../../../../libs/components/src/lib/directives/scroll-into-view/scroll-into-view.module.ts","../../../../libs/components/src/lib/directives/repeat-times/repeat-times.directive.ts","../../../../libs/components/src/lib/directives/repeat-times/repeat-times.module.ts","../../../../libs/components/src/lib/directives/shadow/models.ts","../../../../libs/components/src/lib/directives/shadow/shadow.util.ts","../../../../libs/components/src/lib/directives/shadow/shadow.directive.ts","../../../../libs/components/src/lib/directives/shadow/shadow.module.ts","../../../../libs/components/src/lib/directives/tooltip/tooltip-container.component.ts","../../../../libs/components/src/lib/directives/tooltip/tooltip-options.ts","../../../../libs/components/src/lib/directives/tooltip/tooltip.directive.ts","../../../../libs/components/src/lib/directives/tooltip/tooltip.module.ts","../../../../libs/components/src/lib/providers/value-accessor.provider.ts","../../../../libs/components/src/lib/directives/value-accessor/value-accessor.directive.ts","../../../../libs/components/src/lib/directives/value-accessor/value-accessor.module.ts","../../../../libs/components/src/lib/directives/wrapper/wrapper.module.ts","../../../../libs/components/src/lib/directives/sticky/sticky-relative.service.ts","../../../../libs/components/src/lib/directives/sticky/sticky.directive.ts","../../../../libs/components/src/lib/directives/sticky/sticky-relative.directive.ts","../../../../libs/components/src/lib/directives/sticky/sticky.module.ts","../../../../libs/components/src/lib/directives/native-value/input-native-value.directive.ts","../../../../libs/components/src/lib/directives/native-value/input-native-value.module.ts","../../../../libs/components/src/lib/directives/auto-resize/autoresize.directive.ts","../../../../libs/components/src/lib/directives/auto-resize/autoresize.module.ts","../../../../libs/components/src/lib/directives/input-zone/input-zone.service.ts","../../../../libs/components/src/lib/directives/input-zone/input-zone.directive.ts","../../../../libs/components/src/lib/directives/input-zone/input-in-zone.directive.ts","../../../../libs/components/src/lib/directives/input-zone/input-zone.module.ts","../../../../libs/components/src/lib/components/grid/components/grid-item/grid-item.component.ts","../../../../libs/components/src/lib/components/grid/components/grid-item/grid-item.component.html","../../../../libs/components/src/lib/components/grid/grid.component.ts","../../../../libs/components/src/lib/components/grid/grid.component.html","../../../../libs/components/src/lib/components/grid/grid.module.ts","../../../../libs/components/src/lib/components/switcher/components/switcher-item/switcher-item.component.ts","../../../../libs/components/src/lib/components/switcher/components/switcher-item/switcher-item.component.html","../../../../libs/components/src/lib/components/switcher/directives/switcher-hint.directive.ts","../../../../libs/components/src/lib/components/switcher/switcher.component.ts","../../../../libs/components/src/lib/components/switcher/switcher.component.html","../../../../libs/components/src/lib/components/switcher/switcher.module.ts","../../../../libs/components/src/lib/components/accordion/directives/accordion-content.directive.ts","../../../../libs/components/src/lib/components/accordion/directives/accordion-tools.directive.ts","../../../../libs/components/src/lib/components/accordion/accordion.animation.ts","../../../../libs/components/src/lib/components/accordion/components/accordion-item/accordion-item.component.ts","../../../../libs/components/src/lib/components/accordion/components/accordion-item/accordion-item.component.html","../../../../libs/components/src/lib/components/accordion/accordion.component.ts","../../../../libs/components/src/lib/components/accordion/accordion.component.html","../../../../libs/components/src/lib/components/accordion/accordion.module.ts","../../../../libs/components/src/lib/components/table/pipes/space-number.pipe.ts","../../../../libs/components/src/lib/components/table/directives/cell.service.ts","../../../../libs/components/src/lib/components/table/directives/cell.directive.ts","../../../../libs/components/src/lib/components/table/directives/head.directive.ts","../../../../libs/components/src/lib/components/table/observables/typed-from-event.ts","../../../../libs/components/src/lib/components/table/directives/resized.directive.ts","../../../../libs/components/src/lib/components/table/directives/row.directive.ts","../../../../libs/components/src/lib/components/table/directives/empty.directive.ts","../../../../libs/components/src/lib/components/table/directives/loading.directive.ts","../../../../libs/components/src/lib/components/table/directives/tree-loading.directive.ts","../../../../libs/components/src/lib/components/table/service/table-sorter.service.ts","../../../../libs/components/src/lib/components/table/providers/table.providers.ts","../../../../libs/components/src/lib/components/table/abstract/controller.ts","../../../../libs/components/src/lib/components/table/service/tree.service.ts","../../../../libs/components/src/lib/components/table/service/row.service.ts","../../../../libs/components/src/lib/components/table/table.const.ts","../../../../libs/components/src/lib/components/table/table.service.ts","../../../../libs/components/src/lib/components/table/directives/table.directive.ts","../../../../libs/components/src/lib/components/table/th/th.component.ts","../../../../libs/components/src/lib/components/table/th/th.component.html","../../../../libs/components/src/lib/components/table/directives/sortable.directive.ts","../../../../libs/components/src/lib/components/table/directives/sort-by.directive.ts","../../../../libs/components/src/lib/components/table/directives/thead.directive.ts","../../../../libs/components/src/lib/components/table/pipes/table-sort.pipe.ts","../../../../libs/components/src/lib/components/table/providers/table.provider.ts","../../../../libs/components/src/lib/components/table/td/td.service.ts","../../../../libs/components/src/lib/components/table/tr/tr.component.ts","../../../../libs/components/src/lib/components/table/tr/tr.component.html","../../../../libs/components/src/lib/components/table/directives/row-init.directive.ts","../../../../libs/components/src/lib/components/table/tr/tr.directive.ts","../../../../libs/components/src/lib/components/table/tbody/tbody.component.ts","../../../../libs/components/src/lib/components/table/tbody/tbody.component.html","../../../../libs/components/src/lib/components/table/td/td.component.ts","../../../../libs/components/src/lib/components/table/th-group/th-group.service.ts","../../../../libs/components/src/lib/components/table/th-group/th-group.component.ts","../../../../libs/components/src/lib/components/table/th-group/th-group.template.html","../../../../libs/components/src/lib/pipes/calendar-sheet/utils.ts","../../../../libs/components/src/lib/pipes/calendar-sheet/calendar-sheet.pipe.ts","../../../../libs/components/src/lib/pipes/calendar-sheet/calendar-sheet.module.ts","../../../../libs/components/src/lib/pipes/mapper/mapper.pipe.ts","../../../../libs/components/src/lib/pipes/mapper/mapper.module.ts","../../../../libs/components/src/lib/pipes/month/month.pipe.ts","../../../../libs/components/src/lib/pipes/month/month.module.ts","../../../../libs/components/src/lib/components/table/components/searchable-content/searchable-content.component.ts","../../../../libs/components/src/lib/components/table/components/searchable-content/searchable-content.component.html","../../../../libs/components/src/lib/components/tree-button/tree-button.component.ts","../../../../libs/components/src/lib/components/tree-button/tree-button.component.html","../../../../libs/components/src/lib/components/tree-button/tree-button.module.ts","../../../../libs/components/src/lib/components/table/table.module.ts","../../../../libs/components/src/lib/components/table/data-source.ts","../../../../libs/components/src/lib/@core/value-accessor/prizm-accessor-impl.class.ts","../../../../libs/components/src/lib/@core/value-accessor/prizm-wrapped-form-component.directive.ts","../../../../libs/components/src/lib/components/radio/prizm-radio-button.component.ts","../../../../libs/components/src/lib/components/radio/prizm-radio-button.component.html","../../../../libs/components/src/lib/components/radio/prizm-radio-button.module.ts","../../../../libs/components/src/lib/components/input/common/services/input-invalid-subtext.service.ts","../../../../libs/components/src/lib/components/input/common/base/input-invalid-text-base-class.directive.ts","../../../../libs/components/src/lib/components/input/common/input-invalid-subtext/input-status-subtext.component.ts","../../../../libs/components/src/lib/components/input/common/input-invalid-subtext/input-status-subtext.component.html","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout-bottom.directive.ts","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout-in-body.directive.ts","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout-left.directive.ts","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout-right.directive.ts","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout-subtext.directive.ts","../../../../libs/components/src/lib/components/input/common/base/input-control.class.ts","../../../../libs/components/src/lib/components/input/common/input-status-text/input-status-text.directive.ts","../../../../libs/components/src/lib/components/input/common/input-icon-button/input-icon-button.component.ts","../../../../libs/components/src/lib/components/input/common/input-icon-button/input-icon-button.component.html","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout.component.ts","../../../../libs/components/src/lib/components/input/common/input-layout/input-layout.component.html","../../../../libs/components/src/lib/components/input/common/input-icon-button/input-icon-button.module.ts","../../../../libs/components/src/lib/components/input/common/input-hint/input-hint.directive.ts","../../../../libs/components/src/lib/components/input/common/input-hint/input-hint.module.ts","../../../../libs/components/src/lib/components/input/common/input-allowed-symbols/const.ts","../../../../libs/components/src/lib/components/input/common/input-allowed-symbols/input-allowed-symbols.directive.ts","../../../../libs/components/src/lib/components/input/common/input-allowed-symbols/input-allowed-symbols.module.ts","../../../../libs/components/src/lib/components/input/common/input-corrector/input-corrector.directive.ts","../../../../libs/components/src/lib/components/input/common/input-corrector/input-corrector.module.ts","../../../../libs/components/src/lib/components/input/common/input-common.module.ts","../../../../libs/components/src/lib/components/input/common/base/input-ng-control.class.ts","../../../../libs/components/src/lib/components/input/input-text/input-text.component.ts","../../../../libs/components/src/lib/components/input/input-text/textarea.directive.ts","../../../../libs/components/src/lib/components/input/input-text/input-block.component.ts","../../../../libs/components/src/lib/components/input/input-text/input-text.module.ts","../../../../libs/components/src/lib/components/input/input-number/input-number-auxiliary-control.directive.ts","../../../../libs/components/src/lib/components/input/input-number/input-number-auxiliary-controls.component.ts","../../../../libs/components/src/lib/components/input/input-number/input-number.component.ts","../../../../libs/components/src/lib/components/input/input-number/input-number.module.ts","../../../../libs/components/src/lib/components/input/input-password/input-password-auxiliary-control.component.ts","../../../../libs/components/src/lib/components/input/input-password/input-password.directive.ts","../../../../libs/components/src/lib/components/input/input-password/input-password.module.ts","../../../../libs/components/src/lib/components/input/carousel/carousel.component.ts","../../../../libs/components/src/lib/components/input/carousel/carousel.component.html","../../../../libs/components/src/lib/components/input/carousel/carousel-auxiliary-left.component.ts","../../../../libs/components/src/lib/components/input/carousel/carousel-auxiliary-right.component.ts","../../../../libs/components/src/lib/components/input/carousel/carousel.module.ts","../../../../libs/components/src/lib/components/input/carousel/carousel-content/carousel-content.interface.ts","../../../../libs/components/src/lib/components/input/carousel/carousel-content/carousel-array.class.ts","../../../../libs/components/src/lib/components/input/carousel/carousel-content/carousel-year-month.class.ts","../../../../libs/components/src/lib/components/input/carousel/input-carousel-auxiliary-left.component.ts","../../../../libs/components/src/lib/components/input/carousel/input-carousel-auxiliary-right.component.ts","../../../../libs/components/src/lib/components/input/carousel/input-carousel.component.ts","../../../../libs/components/src/lib/components/input/carousel/input-carousel.component.html","../../../../libs/components/src/lib/components/input/carousel/input-carousel.module.ts","../../../../libs/components/src/lib/components/input/input-date/input-date.transformer.ts","../../../../libs/components/src/lib/providers/specific-dropdown-controllers.ts","../../../../libs/components/src/lib/abstract/control.ts","../../../../libs/components/src/lib/components/input/input-date/input-date.providers.ts","../../../../libs/components/src/lib/components/dialogs/dialog/dialog.component.ts","../../../../libs/components/src/lib/components/dialogs/dialog/dialog.component.html","../../../../libs/components/src/lib/components/dialogs/dialog/dialog.module.ts","../../../../libs/components/src/lib/components/dialogs/dialog/dialog.service.ts","../../../../libs/components/src/lib/abstract/nullable-control.ts","../../../../libs/components/src/lib/components/internal/primitive-calendar/primitive-calendar.component.ts","../../../../libs/components/src/lib/components/internal/primitive-calendar/primitive-calendar.component.html","../../../../libs/components/src/lib/components/internal/primitive-calendar/primitive-calendar.module.ts","../../../../libs/components/src/lib/components/internal/primitive-spin-button/primitive-spin-button.component.ts","../../../../libs/components/src/lib/components/internal/primitive-spin-button/primitive-spin-button.template.html","../../../../libs/components/src/lib/components/internal/primitive-spin-button/primitive-spin-button.module.ts","../../../../libs/components/src/lib/components/link/link.component.ts","../../../../libs/components/src/lib/components/link/link.component.html","../../../../libs/components/src/lib/components/link/link.module.ts","../../../../libs/components/src/lib/components/internal/primitive-year-month-pagination/primitive-year-month-pagination.component.ts","../../../../libs/components/src/lib/components/internal/primitive-year-month-pagination/primitive-year-month-pagination.component.html","../../../../libs/components/src/lib/components/internal/primitive-month-picker/primitive-month-picker.component.ts","../../../../libs/components/src/lib/components/internal/primitive-month-picker/primitive-month-picker.component.html","../../../../libs/components/src/lib/components/internal/primitive-year-picker/primitive-year-picker.component.ts","../../../../libs/components/src/lib/components/internal/primitive-year-picker/primitive-year-picker.component.html","../../../../libs/components/src/lib/components/calendar/calendar.component.ts","../../../../libs/components/src/lib/components/calendar/calendar.component.html","../../../../libs/components/src/lib/components/dropdowns/dropdown-host/dropdown-host.options.ts","../../../../libs/components/src/lib/components/dropdowns/dropdown-host/dropdown-host-control.directive.ts","../../../../libs/components/src/lib/components/dropdowns/dropdown-host/dropdown-host.component.ts","../../../../libs/components/src/lib/components/dropdowns/dropdown-host/dropdown-host.component.html","../../../../libs/components/src/lib/components/input/input-date/date.component.ts","../../../../libs/components/src/lib/components/input/input-date/date.component.html","../../../../libs/components/src/lib/components/internal/primitive-year-month-pagination/primitive-year-month-pagination.module.ts","../../../../libs/components/src/lib/components/internal/primitive-year-picker/primitive-year-picker.module.ts","../../../../libs/components/src/lib/components/internal/primitive-month-picker/primitive-month-picker.module.ts","../../../../libs/components/src/lib/components/internal/primitive-calendar-range/primitive-calendar-range.component.ts","../../../../libs/components/src/lib/components/internal/primitive-calendar-range/primitive-calendar-range.component.html","../../../../libs/components/src/lib/components/internal/primitive-calendar-range/primitive-calendar-range.module.ts","../../../../libs/components/src/lib/components/calendar/calendar.module.ts","../../../../libs/components/src/lib/components/dropdowns/dropdown-host/dropdown-host.module.ts","../../../../libs/components/src/lib/components/input/input-date/date.module.ts","../../../../libs/components/src/lib/components/input/input-date/input-layout-date.component.ts","../../../../libs/components/src/lib/components/input/input-date/input-layout-date.component.html","../../../../libs/components/src/lib/components/input/input-date/input-layout-date.module.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-date-range.providers.ts","../../../../libs/components/src/lib/@core/mask/create-date-range-mask.ts","../../../../libs/components/src/lib/constants/max-day-range-length-mapper.ts","../../../../libs/components/src/lib/components/data-list/data-list-options.ts","../../../../libs/components/src/lib/components/data-list/data-list.directive.ts","../../../../libs/components/src/lib/components/data-list/data-list.component.ts","../../../../libs/components/src/lib/components/data-list/data-list.component.html","../../../../libs/components/src/lib/components/data-list/data-list.module.ts","../../../../libs/components/src/lib/components/calendar-range/calendar-range.component.ts","../../../../libs/components/src/lib/components/calendar-range/calendar-range.component.html","../../../../libs/components/src/lib/components/input/input-date-range/input-date-range.component.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-date-range.component.html","../../../../libs/components/src/lib/components/calendar-range/calendar-range.module.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-date-range.module.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-date-range.transformer.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-layout-date-range.component.ts","../../../../libs/components/src/lib/components/input/input-date-range/input-layout-date-range.component.html","../../../../libs/components/src/lib/components/input/input-date-range/input-layout-date-range.module.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-date-relative.models.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-date-relative.utils.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-date-relative.component.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-date-relative.component.html","../../../../libs/components/src/lib/components/input/input-date-relative/input-date-relative.module.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-layout-date-relative.directive.ts","../../../../libs/components/src/lib/components/listing-item/listing-item.component.ts","../../../../libs/components/src/lib/components/listing-item/listing-item.component.html","../../../../libs/components/src/lib/components/input/input-date-relative/input-layout-date-relative.component.ts","../../../../libs/components/src/lib/components/input/input-date-relative/input-layout-date-relative.component.html","../../../../libs/components/src/lib/components/input/input-date-relative/input-layout-date-relative.module.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time.providers.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time.component.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time.component.html","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time.module.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time-native.transformer.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-date-time-base.transformer.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-layout-date-time.component.ts","../../../../libs/components/src/lib/components/input/input-date-time/input-layout-date-time.component.html","../../../../libs/components/src/lib/components/input/input-date-time/input-layout-date-time.module.ts","../../../../libs/components/src/lib/components/input/input-date-multi/input-date-multi.component.ts","../../../../libs/components/src/lib/components/input/input-date-multi/input-date-multi.component.html","../../../../libs/components/src/lib/components/input/input-date-multi/input-date-multi.module.ts","../../../../libs/components/src/lib/components/input/input-time/input-time-options.ts","../../../../libs/components/src/lib/components/input/input-time/input-time.component.ts","../../../../libs/components/src/lib/components/input/input-time/input-time.component.html","../../../../libs/components/src/lib/components/input/input-time/input-time.module.ts","../../../../libs/components/src/lib/components/input/input-time/input-layout-time.component.ts","../../../../libs/components/src/lib/components/input/input-time/input-layout-time.component.html","../../../../libs/components/src/lib/components/input/input-time/input-layout-time.module.ts","../../../../libs/components/src/lib/providers/month-formatter.provider.ts","../../../../libs/components/src/lib/components/calendar-month/calendar-month.component.ts","../../../../libs/components/src/lib/components/calendar-month/calendar-month.component.html","../../../../libs/components/src/lib/components/table/pipes/mapper/mapper.pipe.ts","../../../../libs/components/src/lib/components/input/input-month/input-month.component.ts","../../../../libs/components/src/lib/components/input/input-month/input-month.component.html","../../../../libs/components/src/lib/abstract/abstract-textfield-host.ts","../../../../libs/components/src/lib/components/input/input-month/input-month.directive.ts","../../../../libs/components/src/lib/components/calendar-month/calendar-month.module.ts","../../../../libs/components/src/lib/components/table/pipes/mapper/mapper.module.ts","../../../../libs/components/src/lib/components/input/input-month/input-month.module.ts","../../../../libs/components/src/lib/components/input/input-month/input-layout-month.component.ts","../../../../libs/components/src/lib/components/input/input-month/input-layout-month.component.html","../../../../libs/components/src/lib/components/input/input-month/input-layout-month.directive.ts","../../../../libs/components/src/lib/components/input/input-month/input-layout-month.module.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-date-range-time.providers.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-date-range-time.component.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-date-range-time.component.html","../../../../libs/components/src/lib/components/input/input-date-time-range/input-date-range-time.module.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-date-range-time.transformer.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-layout-date-time-range.component.ts","../../../../libs/components/src/lib/components/input/input-date-time-range/input-layout-date-time-range.component.html","../../../../libs/components/src/lib/components/input/input-date-time-range/input-layout-date-time-range.module.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-month-range.component.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-month-range.component.html","../../../../libs/components/src/lib/components/input/input-month-range/input-month-range.directive.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-month-range.module.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-layout-month-range.component.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-layout-month-range.component.html","../../../../libs/components/src/lib/components/input/input-month-range/input-layout-month-range.directive.ts","../../../../libs/components/src/lib/components/input/input-month-range/input-layout-month-range.module.ts","../../../../libs/components/src/lib/components/chips/chips-item/chips-item.component.ts","../../../../libs/components/src/lib/components/chips/chips-item/chips-item.component.html","../../../../libs/components/src/lib/components/chips/chips.component.ts","../../../../libs/components/src/lib/components/chips/chips.component.html","../../../../libs/components/src/lib/components/chips/chips.module.ts","../../../../libs/components/src/lib/components/dropdowns/select/select.options.ts","../../../../libs/components/src/lib/components/dropdowns/select/select.component.ts","../../../../libs/components/src/lib/components/dropdowns/select/select.component.html","../../../../libs/components/src/lib/components/dropdowns/select/select.module.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select-option.service.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select-option.directive.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select-item.component.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select-item.component.html","../../../../libs/components/src/lib/components/dropdowns/select/input-select-data-list.directive.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select.component.ts","../../../../libs/components/src/lib/components/dropdowns/select/input-select.component.html","../../../../libs/components/src/lib/components/dropdowns/select/input-select.module.ts","../../../../libs/components/src/lib/components/paginator/prizm-paginator.component.ts","../../../../libs/components/src/lib/components/paginator/prizm-paginator.component.html","../../../../libs/components/src/lib/components/paginator/prizm-paginator.module.ts","../../../../libs/components/src/lib/components/toast/toast-ref.ts","../../../../libs/components/src/lib/components/toast/util.ts","../../../../libs/components/src/lib/components/toast/types.ts","../../../../libs/components/src/lib/components/indicator/indicator.component.ts","../../../../libs/components/src/lib/components/indicator/indicator.component.html","../../../../libs/components/src/lib/components/toast/toast/toast.component.ts","../../../../libs/components/src/lib/components/toast/toast/toast.component.html","../../../../libs/components/src/lib/components/toast/toast-options.ts","../../../../libs/components/src/lib/components/toast/toast.service.ts","../../../../libs/components/src/lib/components/toast/toast-wrapper/toast-wrapper.component.ts","../../../../libs/components/src/lib/components/toast/toast-wrapper/toast-wrapper.component.html","../../../../libs/components/src/lib/components/toast/toast-container/toast-container.component.ts","../../../../libs/components/src/lib/components/toast/toast-container/toast-container.component.html","../../../../libs/components/src/lib/components/indicator/indicator.module.ts","../../../../libs/components/src/lib/components/toast/toast-control.ts","../../../../libs/components/src/lib/components/toast/toast.module.ts","../../../../libs/components/src/lib/components/dialogs/sidebar/util.ts","../../../../libs/components/src/lib/components/dialogs/sidebar/sidebar.component.ts","../../../../libs/components/src/lib/components/dialogs/sidebar/sidebar.component.html","../../../../libs/components/src/lib/components/dialogs/sidebar/sidebar.module.ts","../../../../libs/components/src/lib/components/dialogs/sidebar/sidebar.models.ts","../../../../libs/components/src/lib/components/dialogs/sidebar/sidebar.service.ts","../../../../libs/components/src/lib/components/tree/directives/tree-children.directive.ts","../../../../libs/components/src/lib/components/tree/components/tree-item-content/tree-item-content.component.ts","../../../../libs/components/src/lib/components/tree/components/tree-item-content/tree-item-content.component.html","../../../../libs/components/src/lib/components/tree/misc/tree.constants.ts","../../../../libs/components/src/lib/components/tree/misc/tree.tokens.ts","../../../../libs/components/src/lib/components/tree/components/tree-item/tree-item.providers.ts","../../../../libs/components/src/lib/components/expand/expand-content.directive.ts","../../../../libs/components/src/lib/components/expand/expand.const.ts","../../../../libs/components/src/lib/components/expand/expand.component.ts","../../../../libs/components/src/lib/components/expand/expand.component.html","../../../../libs/components/src/lib/components/tree/components/tree-item/tree-item.component.ts","../../../../libs/components/src/lib/components/tree/components/tree-item/tree-item.component.html","../../../../libs/components/src/lib/components/tree/directives/tree-node.directive.ts","../../../../libs/components/src/lib/components/tree/components/tree/tree.component.ts","../../../../libs/components/src/lib/components/tree/components/tree/tree.component.html","../../../../libs/components/src/lib/components/tree/directives/tree-controller.directive.ts","../../../../libs/components/src/lib/components/tree/directives/tree-item-controller.directive.ts","../../../../libs/components/src/lib/components/tree/misc/tree.service.ts","../../../../libs/components/src/lib/components/expand/expand.module.ts","../../../../libs/components/src/lib/components/tree/tree.module.ts","../../../../libs/components/src/lib/components/card/card.component.ts","../../../../libs/components/src/lib/components/card/card.component.html","../../../../libs/components/src/lib/components/card/card.module.ts","../../../../libs/components/src/lib/components/widget/widget.component.ts","../../../../libs/components/src/lib/components/widget/widget.component.html","../../../../libs/components/src/lib/components/widget/widget.module.ts","../../../../libs/components/src/lib/components/panel/panel.component.ts","../../../../libs/components/src/lib/components/panel/panel.component.html","../../../../libs/components/src/lib/components/panel/panel.module.ts","../../../../libs/components/src/lib/components/progress/progress-bar/progress-bar.component.ts","../../../../libs/components/src/lib/constants/chromium.ts","../../../../libs/components/src/lib/components/progress/progress-bar/progress-color-segments.directive.ts","../../../../libs/components/src/lib/components/progress/progress-circle/progress-circle.component.ts","../../../../libs/components/src/lib/components/progress/progress-circle/progress-circle.component.html","../../../../libs/components/src/lib/components/progress/progress-label/progress-label.component.ts","../../../../libs/components/src/lib/components/progress/progress-label/progress-label.component.html","../../../../libs/components/src/lib/components/progress/progress-segmented/progress-segmented.component.ts","../../../../libs/components/src/lib/components/progress/progress-segmented/progress-segmented.component.html","../../../../libs/components/src/lib/components/progress/progress.module.ts","../../../../libs/components/src/lib/components/navigation/navigation.interfaces.ts","../../../../libs/components/src/lib/components/navigation/services/active-navigation-item.service.ts","../../../../libs/components/src/lib/components/navigation/components/prizm-navigation-item-simple/prizm-navigation-item-simple.component.ts","../../../../libs/components/src/lib/components/navigation/components/prizm-navigation-item-simple/prizm-navigation-item-simple.component.html","../../../../libs/components/src/lib/components/navigation/components/prizm-navigation-item-expandable/prizm-navigation-item-expandable.component.ts","../../../../libs/components/src/lib/components/navigation/components/prizm-navigation-item-expandable/prizm-navigation-item-expandable.component.html","../../../../libs/components/src/lib/components/navigation/prizm-navigation.component.ts","../../../../libs/components/src/lib/components/navigation/prizm-navigation.component.html","../../../../libs/components/src/lib/components/navigation/prizm-navigation.module.ts","../../../../libs/components/src/lib/components/navigation-menu/defaults/prizm-navigation-menu-defaults.interfaces.ts","../../../../libs/components/src/lib/components/navigation-menu/tokens/prizm-navigation-menu-configuration.tokens.ts","../../../../libs/components/src/lib/components/navigation-menu/tokens/prizm-navigation-menu-children-handler.token.ts","../../../../libs/components/src/lib/components/navigation-menu/helpers/prizm-navigation-menu-items-helpers.ts","../../../../libs/components/src/lib/components/navigation-menu/services/prizm-navigation-menu.service.ts","../../../../libs/components/src/lib/components/navigation-menu/services/prizm-navigation-menu-toolbar.service.ts","../../../../libs/components/src/lib/components/navigation-menu/services/prizm-navigation-menu-group.service.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-item/prizm-navigation-menu-item.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-item/prizm-navigation-menu-item.component.html","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-items/prizm-navigation-menu-items.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-items/prizm-navigation-menu-items.component.html","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-search/prizm-navigation-menu-search.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-search/prizm-navigation-menu-search.component.html","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component.html","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-group/prizm-navigation-menu-group.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu-group/prizm-navigation-menu-group.component.html","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu/prizm-navigation-menu.component.ts","../../../../libs/components/src/lib/components/navigation-menu/components/prizm-navigation-menu/prizm-navigation-menu.component.html","../../../../libs/components/src/lib/components/navigation-menu/navigation-menu.module.ts","../../../../libs/components/src/lib/components/header/prizm-header.component.ts","../../../../libs/components/src/lib/components/header/prizm-header.component.html","../../../../libs/components/src/lib/components/header/components/prizm-header-dropdown/prizm-header-dropdown.component.ts","../../../../libs/components/src/lib/components/header/components/prizm-header-dropdown/prizm-header-dropdown.component.html","../../../../libs/components/src/lib/components/header/components/prizm-header-module-btn/prizm-header-module-btn.component.ts","../../../../libs/components/src/lib/components/header/components/prizm-header-module-btn/prizm-header-module-btn.component.html","../../../../libs/components/src/lib/components/header/prizm-header.module.ts","../../../../libs/components/src/lib/components/counter/counter.component.ts","../../../../libs/components/src/lib/components/counter/counter.component.html","../../../../libs/components/src/lib/components/counter/counter.directive.ts","../../../../libs/components/src/lib/components/counter/counter.module.ts","../../../../libs/components/src/lib/components/tabs/tabs.service.ts","../../../../libs/components/src/lib/components/tabs/components/tab.component.ts","../../../../libs/components/src/lib/components/tabs/components/tab.component.html","../../../../libs/components/src/lib/components/tabs/tab-menu-item.directive.ts","../../../../libs/components/src/lib/components/tabs/pipes/icon-tabs.pipe.ts","../../../../libs/components/src/lib/components/tabs/tabs.component.ts","../../../../libs/components/src/lib/components/tabs/tabs.component.html","../../../../libs/components/src/lib/components/tabs/tabs.module.ts","../../../../libs/components/src/lib/components/breadcrumbs/breadcrumbs.directive.ts","../../../../libs/components/src/lib/components/breadcrumbs/breadcrumbs.component.ts","../../../../libs/components/src/lib/components/breadcrumbs/breadcrumbs.component.html","../../../../libs/components/src/lib/components/breadcrumbs/breadcrumbs.module.ts","../../../../libs/components/src/lib/components/dropdowns/multi-select/multi-select.options.ts","../../../../libs/components/src/lib/components/checkbox/checkbox.component.ts","../../../../libs/components/src/lib/components/checkbox/checkbox.component.html","../../../../libs/components/src/lib/components/checkbox/checkbox.module.ts","../../../../libs/components/src/lib/components/dropdowns/multi-select/multi-select.component.ts","../../../../libs/components/src/lib/components/dropdowns/multi-select/multi-select.component.html","../../../../libs/components/src/lib/components/dropdowns/multi-select/multi-select.module.ts","../../../../libs/components/src/lib/components/dropdowns/multi-select/input-multi-select.component.ts","../../../../libs/components/src/lib/components/dropdowns/multi-select/input-multi-select.component.html","../../../../libs/components/src/lib/components/dropdowns/multi-select/input-multi-select.module.ts","../../../../libs/components/src/lib/components/toggle/toggle-options.ts","../../../../libs/components/src/lib/components/toggle/toggle.component.ts","../../../../libs/components/src/lib/components/toggle/toggle.component.html","../../../../libs/components/src/lib/components/toggle/toggle.module.ts","../../../../libs/components/src/lib/components/stepper/stepper-step.directive.ts","../../../../libs/components/src/lib/components/stepper/stepper-selector-item.directive.ts","../../../../libs/components/src/lib/components/stepper/stepper-selector.component.ts","../../../../libs/components/src/lib/components/stepper/stepper-selector.component.html","../../../../libs/components/src/lib/components/stepper/stepper.component.ts","../../../../libs/components/src/lib/components/stepper/stepper.component.html","../../../../libs/components/src/lib/components/stepper/stepper.module.ts","../../../../libs/components/src/lib/components/splitter/splitter.service.ts","../../../../libs/components/src/lib/components/splitter/area/area.component.ts","../../../../libs/components/src/lib/components/splitter/gutter/gutter-default.component.ts","../../../../libs/components/src/lib/components/splitter/gutter/gutter.component.ts","../../../../libs/components/src/lib/components/splitter/gutter/gutter.component.html","../../../../libs/components/src/lib/components/splitter/custom-gutter.directive.ts","../../../../libs/components/src/lib/components/splitter/splitter.component.ts","../../../../libs/components/src/lib/components/splitter/splitter.component.html","../../../../libs/components/src/lib/components/splitter/splitter.module.ts","../../../../libs/components/src/lib/components/slider/slider-cnob.component.ts","../../../../libs/components/src/lib/components/slider/slider.component.ts","../../../../libs/components/src/lib/components/slider/slider.component.html","../../../../libs/components/src/lib/components/slider/slider.module.ts","../../../../libs/components/src/lib/components/cron/model.ts","../../../../libs/components/src/lib/components/cron/const.ts","../../../../libs/components/src/lib/components/cron/util.ts","../../../../libs/components/src/lib/components/cron/cron-ui-base.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-second.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-minute.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-hour.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-month.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-year.state.ts","../../../../libs/components/src/lib/components/cron/cron-ui-day.state.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/string-utilities.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/range-validator.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/cron-parser.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/expression-descriptor.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/i18n/locales/en.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/i18n/locales/ru.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/i18n/all-locales-loader.ts","../../../../libs/components/src/lib/components/cron-human-readable/human-readable/crons-i18n.ts","../../../../libs/components/src/lib/components/cron/pipes/cron-month.pipe.ts","../../../../libs/components/src/lib/components/cron/pipes/cron-week.pipe.ts","../../../../libs/components/src/lib/components/cron/components/schedule/schedule.component.ts","../../../../libs/components/src/lib/components/cron/components/schedule/schedule.component.html","../../../../libs/components/src/lib/components/cron/components/carousel/carousel.component.ts","../../../../libs/components/src/lib/components/cron/components/carousel/carousel.component.html","../../../../libs/components/src/lib/components/cron/components/hour/hour.component.ts","../../../../libs/components/src/lib/components/cron/components/hour/hour.component.html","../../../../libs/components/src/lib/components/cron/components/year/year.component.ts","../../../../libs/components/src/lib/components/cron/components/year/year.component.html","../../../../libs/components/src/lib/components/cron/components/day/day.component.ts","../../../../libs/components/src/lib/components/cron/components/day/day.component.html","../../../../libs/components/src/lib/components/cron/components/month/month.component.ts","../../../../libs/components/src/lib/components/cron/components/month/month.component.html","../../../../libs/components/src/lib/components/cron/components/minute/minute.component.ts","../../../../libs/components/src/lib/components/cron/components/minute/minute.component.html","../../../../libs/components/src/lib/components/cron/components/second/second.component.ts","../../../../libs/components/src/lib/components/cron/components/second/second.component.html","../../../../libs/components/src/lib/components/cron/cron-inner.module.ts","../../../../libs/components/src/lib/components/cron-human-readable/pipe/cron-human-readable.pipe.ts","../../../../libs/components/src/lib/components/cron-human-readable/cron-human-readable.module.ts","../../../../libs/components/src/lib/components/cron/cron.component.ts","../../../../libs/components/src/lib/components/cron/cron.component.html","../../../../libs/components/src/lib/components/cron/cron.module.ts","../../../../libs/components/src/lib/components/error-page/error-page.component.ts","../../../../libs/components/src/lib/components/error-page/error-page.component.html","../../../../libs/components/src/lib/components/error-page/error-page.module.ts","../../../../libs/components/src/lib/components/file-upload/file-upload-options.ts","../../../../libs/components/src/lib/components/file-upload/file-upload.enums.ts","../../../../libs/components/src/lib/components/file-upload/pipes/upload-status.pipe.ts","../../../../libs/components/src/lib/components/file-upload/pipes/file-size.pipe.ts","../../../../libs/components/src/lib/components/file-upload/file-upload.component.ts","../../../../libs/components/src/lib/components/file-upload/file-upload.component.html","../../../../libs/components/src/lib/components/file-upload/file-upload.module.ts","../../../../libs/components/src/lib/components/spinner/spinner.component.ts","../../../../libs/components/src/lib/components/spinner/spinner.component.html","../../../../libs/components/src/lib/components/spinner/spinner.module.ts","../../../../libs/components/src/lib/components/column-settings/pipes/column-icon.pipe.ts","../../../../libs/components/src/lib/components/column-settings/components/column-drop-list/column-drop-list.component.ts","../../../../libs/components/src/lib/components/column-settings/components/column-drop-list/column-drop-list.component.html","../../../../libs/components/src/lib/components/column-settings/column-settings.component.ts","../../../../libs/components/src/lib/components/column-settings/column-settings.component.html","../../../../libs/components/src/lib/components/column-settings/column-settings.module.ts","../../../../libs/components/src/prizm-ui-components.ts"],"sourcesContent":["/**\n * Handler that always returns `false`.\n */\nexport const PRIZM_ALWAYS_FALSE_HANDLER = (): false => false;\n","/**\n * Handler that always returns `true`.\n */\nexport const PRIZM_ALWAYS_TRUE_HANDLER = (): true => true;\n","import { PRIZM_EMPTY_ARRAY } from '@prizm-ui/core';\nimport { PrizmMarkerHandler } from '../types/marker-handler';\n\nexport const PRIZM_DEFAULT_MARKER_HANDLER: PrizmMarkerHandler = (): [] => PRIZM_EMPTY_ARRAY;\n","/**\n * An event for scrolling an element into view within.\n */\nexport const PRIZM_SCROLL_INTO_VIEW = 'prizm-scroll-into-view';\n\n/**\n * An event to notify that\n * it should control a nested element.\n */\nexport const PRIZM_SCROLLABLE = 'prizm-scrollable';\n","// Filtering SVGElements for TreeWalker\n// Filter must be a function in IE, other modern browsers are compliant to this format\nexport const prizmSvgNodeFilter: NodeFilter = ((node: Node) =>\n  'ownerSVGElement' in node ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT) as any;\n","/**\n * {@link https://unicode-table.com/en/00A0/ Non-breaking space}.\n */\nexport const PRIZM_CHAR_NO_BREAK_SPACE = `\\u00A0`;\n\n/**\n * {@link https://unicode-table.com/en/2013/ EN dash}\n * is used to indicate a range of numbers or a span of time.\n * @example 2006–2022\n * ___\n * Don't confuse with {@link CHAR_EM_DASH} or {@link CHAR_HYPHEN}!\n */\nexport const PRIZM_CHAR_EN_DASH = `\\u2013`;\n\n/**\n * {@link https://unicode-table.com/en/2014/ EM dash}\n * is used to mark a break in a sentence.\n * @example Taiga UI — powerful set of open source components for Angular\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_HYPHEN}!\n */\nexport const PRIZM_CHAR_EM_DASH = `\\u2014`;\n\n/**\n * {@link https://unicode-table.com/en/00AB/ Left-Pointing Double Angle Quotation Mark}\n */\nexport const PRIZM_CHAR_LAQUO = `\\u00AB`;\n\n/**\n * {@link https://unicode-table.com/en/00BB/ Right-Pointing Double Angle Quotation Mark}\n */\nexport const PRIZM_CHAR_RAQUO = `\\u00BB`;\n\n/**\n * {@link https://unicode-table.com/en/002D/ Hyphen (minus sign)}\n * is used to combine words.\n * @example well-behaved\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_EM_DASH}!\n */\nexport const PRIZM_CHAR_HYPHEN = `\\u002D`;\n\n/**\n * {@link https://unicode-table.com/en/2212/ Minus}\n * is used as math operator symbol or before negative digits.\n * ---\n * Can be used as `&minus;`. Don't confuse with {@link CHAR_HYPHEN}\n */\nexport const PRIZM_CHAR_MINUS = `\\u2212`;\n\n/**\n * {@link https://unicode-table.com/en/002B/ Plus}\n */\nexport const PRIZM_CHAR_PLUS = `\\u002B`;\n\n/**\n * {@link https://unicode-table.com/en/2022/ Bullet}.\n */\nexport const PRIZM_CHAR_BULLET = `\\u2022`;\n\n/**\n * {@link https://unicode-table.com/en/2026/ Suspension points}.\n */\nexport const PRIZM_CHAR_ELLIPSIS = `\\u2026`;\n\n/**\n * {@link https://unicode-table.com/en/00A4/ Suspension points}.\n */\nexport const PRIZM_CHAR_CURRENCY_SIGN = `\\u00A4`;\n\n/**\n * {@link https://unicode-table.com/en/200b/ Suspension points}.\n */\nexport const PRIZM_CHAR_ZERO_WIDTH_SPACE = `\\u200B`;\n","export const PRIZM_DIGIT_REGEXP = /\\d/;\nexport const PRIZM_NON_DIGIT_REGEXP = /\\D/;\nexport const PRIZM_NON_DIGITS_REGEXP = /\\D+/g;\nexport const PRIZM_LEADING_ZEROES_REGEXP = /^0+/;\nexport const PRIZM_MASK_SYMBOLS_REGEXP = /[ \\-_()]/g;\nexport const PRIZM_LAST_PUNCTUATION_MARK_REGEXP = /[.,\\\\/#!$%\\\\^&\\\\*;:{}=\\\\-_`~()]$/;\nexport const PRIZM_LATIN_REGEXP = /[A-z]/;\nexport const PRIZM_LATIN_AND_NUMBERS_REGEXP = /[A-z|0-9]/;\n","import { PrizmStringHandler } from '../types/handler';\n\n/**\n * Default method to turn arbitrary object into string\n */\nexport const PRIZM_DEFAULT_STRINGIFY: PrizmStringHandler<unknown> = (item: unknown) => String(item);\n","import { PrizmHandler } from '../types/handler';\nimport { PrizmIdentityMatcher } from '../types/matcher';\nimport { PRIZM_DEFAULT_STRINGIFY } from './stringify';\n\n/**\n * Default handler for matching stringified version of an item and a search query\n * @param item arbitrary element to match with a string\n * @param search search query\n * @param stringify handler to turn item into a string\n */\nexport const PRIZM_DEFAULT_MATCHER = <T>(\n  item: T,\n  search: string,\n  stringify: PrizmHandler<T, string> = PRIZM_DEFAULT_STRINGIFY\n): boolean => stringify(item).toLowerCase().includes(search.toLowerCase());\n\n/**\n * Default handler for strict matching stringified version of an item and a search query\n * @param item arbitrary element to match with a string\n * @param search search query\n * @param stringify handler to turn item into a string\n */\nexport const PRIZM_STRICT_MATCHER = <T>(\n  item: T,\n  search: string,\n  stringify: PrizmHandler<T, string> = PRIZM_DEFAULT_STRINGIFY\n): boolean => stringify(item).toLowerCase() === search.toLowerCase();\n\n/**\n * Default handler to match equality of two elements\n * ATTENTION: considers two empty arrays equal\n *\n * @param item1 first element\n * @param item2 second element\n */\nexport const PRIZM_DEFAULT_IDENTITY_MATCHER: PrizmIdentityMatcher<unknown> = (item1, item2) =>\n  item1 === item2 || bothEmpty(item1, item2);\n\nfunction bothEmpty(item1: unknown, item2: unknown): boolean {\n  return Array.isArray(item1) && Array.isArray(item2) && !item1.length && !item2.length;\n}\n","export const PRIZM_POLLING_TIME = 1000 / 15;\n","/**\n * @deprecated\n * use PRIZM_DATE_TIME_SEPARATOR_NGX\n * */\nexport const PRIZM_DATE_TIME_SEPARATOR = ` `;\n\nexport const PRIZM_DATE_TIME_SEPARATOR_NGX = ` `;\n","export const PRIZM_ASSETS_FOLDER = '/assets/prizm-ui/components';\nexport const PRIZM_ASSETS_FONT_FOLDER = '/assets/prizm-ui/fonts';\n","import { PrizmTimeFormatParts } from '../types/time-format-parts';\n\nexport const PRIZM_MAX_TIME_VALUES: Record<PrizmTimeFormatParts, number> = {\n  HH: 23,\n  MM: 59,\n  SS: 59,\n  MS: 999,\n};\n","import { NgZone } from '@angular/core';\nimport { MonoTypeOperatorFunction, Observable, pipe } from 'rxjs';\n\nexport function prizmZoneFull<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n  return (source): Observable<T> =>\n    new Observable(subscriber =>\n      source.subscribe({\n        next: value => ngZone.run(() => subscriber.next(value)),\n        error: (error: unknown) => ngZone.run(() => subscriber.error(error)),\n        complete: () => ngZone.run(() => subscriber.complete()),\n      })\n    );\n}\n\nexport function prizmZoneFree<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n  return (source): Observable<T> =>\n    new Observable(subscriber => ngZone.runOutsideAngular(() => source.subscribe(subscriber)));\n}\n\nexport function prizmZoneOptimized<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n  return pipe(prizmZoneFree(ngZone), prizmZoneFull(ngZone));\n}\n","import { fromEvent, Observable } from 'rxjs';\nimport { PrizmEventWith, PrizmTypedEventTarget } from '../types';\n\nexport function prizmTypedFromEvent<E extends keyof WindowEventMap>(\n  target: Window,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<WindowEventMap[E], typeof target>>;\nexport function prizmTypedFromEvent<E extends keyof DocumentEventMap>(\n  target: Document,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<DocumentEventMap[E], typeof target>>;\nexport function prizmTypedFromEvent<T extends Element, E extends keyof HTMLElementEventMap>(\n  target: T,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<HTMLElementEventMap[E], typeof target>>;\nexport function prizmTypedFromEvent<E extends Event, T extends PrizmTypedEventTarget<PrizmEventWith<E, T>>>(\n  target: T,\n  event: string,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<E, T>>;\nexport function prizmTypedFromEvent<E extends Event>(\n  target: PrizmTypedEventTarget<E>,\n  event: string,\n  options?: AddEventListenerOptions\n): Observable<E>;\nexport function prizmTypedFromEvent<E extends Event>(\n  target: PrizmTypedEventTarget<E>,\n  event: string,\n  options: AddEventListenerOptions = {}\n): Observable<E> {\n  return fromEvent(target as any, event, options);\n}\n","/**\n * Gets actual target from open Shadow DOM if event happened within it\n */\nexport function prizmGetActualTarget(event: Event): Node {\n  if ('composedPath' in event) {\n    return (event as any).composedPath()[0];\n  }\n\n  return (event as any).target;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, NgZone } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, mapTo, startWith, switchMap, take } from 'rxjs/operators';\nimport { prizmZoneOptimized } from '../observables/zone-free';\nimport { prizmTypedFromEvent } from '../observables/typed-from-event';\nimport { prizmGetActualTarget } from '../util/dom/get-actual-target';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmHoveredService {\n  private readonly documentEvents$: Observable<Event>;\n\n  constructor(@Inject(DOCUMENT) documentRef: Document, @Inject(NgZone) private readonly ngZone: NgZone) {\n    this.documentEvents$ = merge(\n      prizmTypedFromEvent(documentRef, 'mousemove'),\n      prizmTypedFromEvent(documentRef, 'touchstart', { capture: true })\n    );\n  }\n\n  public createHovered$(\n    target: Element,\n    options: AddEventListenerOptions = { passive: true }\n  ): Observable<boolean> {\n    return merge(\n      prizmTypedFromEvent(target, 'mouseenter', options),\n      prizmTypedFromEvent(target, 'touchstart', options)\n    ).pipe(\n      switchMap(() =>\n        merge(\n          prizmTypedFromEvent(target, 'mouseleave', options),\n          this.documentEvents$.pipe(\n            filter(event => !target.contains(prizmGetActualTarget(event))),\n            prizmZoneOptimized(this.ngZone),\n            take(1)\n          )\n        ).pipe(mapTo(false), startWith(true))\n      ),\n      distinctUntilChanged()\n    );\n  }\n}\n","export enum PrizmCronDefaultObjectValue {\n  second = '0',\n  minute = '0',\n  hour = '*',\n  month = '*',\n  dayOfMonth = '*',\n  dayOfWeek = '?',\n  year = '*',\n}\n\nexport interface PrizmCronValueObject {\n  second: string;\n  minute: string;\n  hour: string;\n  month: string;\n  dayOfWeek: string;\n  dayOfMonth: string;\n  year: string;\n}\n","import { PrizmCronDefaultObjectValue, PrizmCronValueObject } from './model';\n\nexport function prizmCronConvertToObject(value: string): PrizmCronValueObject {\n  const arr = value?.split(' ') ?? [];\n  return {\n    second: arr[0] ?? PrizmCronDefaultObjectValue.second,\n    minute: arr[1] ?? PrizmCronDefaultObjectValue.minute,\n    hour: arr[2] ?? PrizmCronDefaultObjectValue.hour,\n    dayOfMonth: arr[3] ?? PrizmCronDefaultObjectValue.dayOfMonth,\n    month: arr[4] ?? PrizmCronDefaultObjectValue.month,\n    dayOfWeek: arr[5] ?? PrizmCronDefaultObjectValue.dayOfWeek,\n    year: arr[6] ?? PrizmCronDefaultObjectValue.year,\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, tap } from 'rxjs/operators';\nimport { PrizmCronValueObject } from './model';\nimport { prizmCronConvertToObject } from './util';\n\n@Injectable()\nexport class PrizmCronService {\n  private readonly value$$ = new BehaviorSubject<PrizmCronValueObject>(\n    prizmCronConvertToObject('0 0 * ? * * *')\n  );\n  public readonly value$ = this.value$$.asObservable();\n  get value(): PrizmCronValueObject {\n    return this.value$$.value;\n  }\n  get valueAsString(): string {\n    return this.convertToCronString(this.value);\n  }\n  public readonly valueAsString$ = this.value$.pipe(\n    map(v => this.convertToCronString(v)),\n    shareReplay(1)\n  );\n  public readonly second$ = this.value$.pipe(\n    map(value => value.second),\n    distinctUntilChanged()\n  );\n  public readonly dayOfWeek$ = this.value$.pipe(\n    map(value => value.dayOfWeek),\n    distinctUntilChanged()\n  );\n  public readonly minute$ = this.value$.pipe(\n    map(value => value.minute),\n    distinctUntilChanged()\n  );\n  public readonly hour$ = this.value$.pipe(\n    map(value => value.hour),\n    distinctUntilChanged()\n  );\n  public readonly dayOfMonth$ = this.value$.pipe(\n    map(value => value.dayOfMonth),\n    distinctUntilChanged()\n  );\n  public readonly month$ = this.value$.pipe(\n    map(value => value.month),\n    distinctUntilChanged()\n  );\n  public readonly year$ = this.value$.pipe(\n    map(value => value.year),\n    distinctUntilChanged()\n  );\n\n  public updateWith(ojb: Partial<PrizmCronValueObject>): void;\n  public updateWith(ojb: string): void;\n  public updateWith(value: Partial<PrizmCronValueObject> | string): void {\n    const obj = value && typeof value === 'object' ? value : prizmCronConvertToObject(value as string);\n    this.value$$.next({\n      ...this.value$$.value,\n      ...obj,\n    });\n  }\n  private convertToCronString(v: PrizmCronValueObject): string {\n    return `${v.second} ${v.minute} ${v.hour} ${v.dayOfMonth} ${v.month} ${v.dayOfWeek} ${v.year}`;\n  }\n}\n","import { ElementRef, Inject, Injectable, NgZone } from '@angular/core';\nimport { ANIMATION_FRAME } from '@ng-web-apis/common';\nimport {\n  RESIZE_OBSERVER_SUPPORT,\n  RESIZE_OPTION_BOX,\n  ResizeObserverService,\n} from '@ng-web-apis/resize-observer';\nimport { Observable } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  mapTo,\n  takeUntil,\n  throttleTime,\n} from 'rxjs/operators';\n\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { prizmZoneFree } from '../observables/zone-free';\nimport { PRIZM_POLLING_TIME } from '../constants/polling-time';\n\nimport { PRIZM_EMPTY_ARRAY } from '@prizm-ui/core';\n\n@Injectable()\nexport class PrizmResizeService extends ResizeObserverService {\n  constructor(\n    @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n    @Inject(NgZone) ngZone: NgZone,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>,\n    @Inject(RESIZE_OBSERVER_SUPPORT) support: boolean,\n    @Inject(RESIZE_OPTION_BOX) box: ResizeObserverBoxOptions,\n    @Inject(ANIMATION_FRAME) animationFrame$: Observable<number>\n  ) {\n    super(elementRef, ngZone, support, box);\n\n    return this.pipe(\n      catchError(() =>\n        animationFrame$.pipe(\n          throttleTime(PRIZM_POLLING_TIME),\n          map(() => `${elementRef.nativeElement.clientWidth} ${elementRef.nativeElement.clientHeight}`),\n          distinctUntilChanged(),\n          mapTo(PRIZM_EMPTY_ARRAY)\n        )\n      ),\n      debounceTime(0),\n      prizmZoneFree(ngZone),\n      takeUntil(destroy$)\n    );\n  }\n}\n","import { Inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { PRIZM_LANGUAGE, PrizmLanguage } from '@prizm-ui/i18n';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class PrizmI18nService {\n  constructor(\n    @Inject(PRIZM_LANGUAGE)\n    readonly language$: Observable<PrizmLanguage>\n  ) {}\n  // check local\n  public extract<K extends keyof PrizmLanguage>(key: K): Observable<PrizmLanguage[K]> {\n    return this.language$.pipe(\n      switchMap((streamOrValue: Observable<PrizmLanguage> | PrizmLanguage) =>\n        isObservable(streamOrValue) ? streamOrValue : of(streamOrValue)\n      ),\n      map((lang: PrizmLanguage) => lang[key])\n    );\n  }\n}\n\nexport function prizmI18nInitWithKey<T, K extends keyof PrizmLanguage>(\n  token: InjectionToken<T>,\n  key: K\n): Provider[] {\n  return [\n    PrizmI18nService,\n    {\n      provide: token,\n      useFactory: (service: PrizmI18nService) => {\n        return service.extract(key);\n      },\n      deps: [PrizmI18nService],\n    },\n  ];\n}\nexport function prizmI18nInitWithKeys<T, K extends keyof PrizmLanguage>(\n  keys: Record<K, InjectionToken<T>>\n): Provider[] {\n  return [\n    PrizmI18nService,\n    ...Object.keys(keys).map(key => {\n      return {\n        provide: keys[key as K],\n        useFactory: (service: PrizmI18nService) => {\n          return service.extract(key as K);\n        },\n        deps: [PrizmI18nService],\n      };\n    }),\n  ];\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * @description:\n * The isTrusted read-only property of the Event interface is a boolean value that is true\n * when the event was generated by a user action, and false when the event was created or\n * modified by a script or dispatched via EventTarget.dispatchEvent().\n */\nexport const PRIZM_TAKE_ONLY_TRUSTED_EVENTS: InjectionToken<boolean> = new InjectionToken<boolean>(\n  'This token need for override behavior the `prizmPressedObservable` function',\n  {\n    factory: (): boolean => true,\n  }\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PrizmMonth } from '../@core/date-time/month';\nimport { PrizmHandler } from '../types/handler';\n\nexport const PRIZM_MONTH_FORMATTER = new InjectionToken<PrizmHandler<PrizmMonth | null, Observable<string>>>(\n  `[PRIZM_MONTH_FORMATTER]: A function to get localized formatted month`\n);\n","import { InjectionToken } from '@angular/core';\n\nexport const PRIZM_ANIMATIONS_DURATION = new InjectionToken<number>('Duration of all animations in ms', {\n  factory: (): number => 300,\n});\n","import { AnimationOptions } from '@angular/animations';\nimport { inject, InjectionToken } from '@angular/core';\n\nimport { PRIZM_ANIMATIONS_DURATION } from './animations-duration';\n\nexport const PRIZM_ANIMATION_OPTIONS = new InjectionToken<AnimationOptions>('Options for PRIZM animations', {\n  factory: (): AnimationOptions => ({\n    params: {\n      duration: inject(PRIZM_ANIMATIONS_DURATION),\n    },\n  }),\n});\n","export function prizmGetDocumentOrShadowRoot(node: Node): DocumentOrShadowRoot {\n  return `getRootNode` in node && node.isConnected\n    ? (node.getRootNode() as Document)\n    : // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      node.ownerDocument!;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { merge, Observable, of, timer } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  repeatWhen,\n  share,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { prizmTypedFromEvent } from '../observables/typed-from-event';\nimport { prizmGetActualTarget } from '../util/dom/get-actual-target';\nimport { prizmGetDocumentOrShadowRoot } from '../util/dom/prizm-get-document-or-shadow-root';\n\nexport const PRIZM_ACTIVE_ELEMENT = new InjectionToken<Observable<EventTarget | null>>(\n  `Active element on the document for ActiveZone`,\n  {\n    factory: (): Observable<any> => {\n      const removedElement$ = inject(PRIZM_REMOVED_ELEMENT);\n      const windowRef = inject(WINDOW);\n      const documentRef = inject(DOCUMENT);\n      const focusout$ = prizmTypedFromEvent(windowRef, `focusout`);\n      const focusin$ = prizmTypedFromEvent(windowRef, `focusin`);\n      const blur$ = prizmTypedFromEvent(windowRef, `blur`);\n      const mousedown$ = prizmTypedFromEvent(windowRef, `mousedown`);\n      const mouseup$ = prizmTypedFromEvent(windowRef, `mouseup`);\n\n      return merge(\n        focusout$.pipe(\n          takeUntil(mousedown$),\n          repeatWhen(() => mouseup$),\n          withLatestFrom(removedElement$),\n          filter(([event, removedElement]) =>\n            isValidFocusout(prizmGetActualTarget(event), removedElement as Element)\n          ),\n          map(([{ relatedTarget }]) => relatedTarget)\n        ),\n        blur$.pipe(\n          map(() => documentRef.activeElement),\n          filter(element => !!element && element.matches(`iframe`))\n        ),\n        focusin$.pipe(\n          switchMap(event => {\n            const target = prizmGetActualTarget(event);\n            const root = prizmGetDocumentOrShadowRoot(target) as Document;\n\n            return root === documentRef ? of(target) : shadowRootActiveElement(root).pipe(startWith(target));\n          })\n        ),\n        mousedown$.pipe(\n          switchMap(event =>\n            !documentRef.activeElement || documentRef.activeElement === documentRef.body\n              ? of(prizmGetActualTarget(event))\n              : focusout$.pipe(take(1), mapTo(prizmGetActualTarget(event)), takeUntil(timer(0)))\n          )\n        )\n      ).pipe(distinctUntilChanged(), share());\n    },\n  }\n);\n\n// Checks if focusout event should be considered leaving active zone\nfunction isValidFocusout(target: any, removedElement: Element | null = null): boolean {\n  return (\n    // Not due to switching tabs/going to DevTools\n    prizmGetDocumentOrShadowRoot(target).activeElement !== target &&\n    // Not due to button/input becoming disabled\n    !target.disabled &&\n    // Not due to element being removed from DOM\n    (!removedElement || !removedElement.contains(target))\n  );\n}\n\nfunction shadowRootActiveElement(root: Document): Observable<EventTarget | null> {\n  return merge(\n    prizmTypedFromEvent(root, `focusin`).pipe(map(({ target }) => target)),\n    prizmTypedFromEvent(root, `focusout`).pipe(\n      filter(({ target, relatedTarget }) => !!relatedTarget && isValidFocusout(target)),\n      map(({ relatedTarget }) => relatedTarget)\n    )\n  );\n}\nfunction PRIZM_REMOVED_ELEMENT(PRIZM_REMOVED_ELEMENT: any): never {\n  throw new Error('Function not implemented.');\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PrizmDateButton } from '../types/date-button';\n\nexport const PRIZM_DATE_RIGHT_BUTTONS = new InjectionToken<BehaviorSubject<PrizmDateButton[]>>(\n  `Stream that emits right buttons`,\n  {\n    factory: (): BehaviorSubject<PrizmDateButton[]> => {\n      return new BehaviorSubject<PrizmDateButton[]>([]);\n    },\n  }\n);\n\nexport function getProviderPrizmDateLeftButtons(): Provider {\n  return {\n    provide: PRIZM_DATE_RIGHT_BUTTONS,\n    useFactory: (): BehaviorSubject<PrizmDateButton[]> => {\n      return new BehaviorSubject<PrizmDateButton[]>([]);\n    },\n  };\n}\n","import { InjectionToken } from '@angular/core';\nimport { PrizmControlValueTransformer } from '../types/control-value-transformer';\nimport { PrizmDateTimeRange, PrizmDay, PrizmDayRange, PrizmTime } from '../@core/date-time';\n\nexport const PRIZM_DATE_VALUE_TRANSFORMER = new InjectionToken<PrizmControlValueTransformer<PrizmDay | null>>(\n  `Control value transformer of PrizmDay to custom value format for InputDate* components`\n);\n\nexport const PRIZM_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken<\n  PrizmControlValueTransformer<PrizmDayRange | null>\n>(`Control value transformer for InputDateRange component`);\n\nexport const PRIZM_DATE_TIME_RANGE_VALUE_TRANSFORMER = new InjectionToken<\n  PrizmControlValueTransformer<PrizmDateTimeRange | null>\n>(`Control value transformer for InputDateTimeRange component`);\n\nexport const PRIZM_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken<\n  PrizmControlValueTransformer<[PrizmDay | null, PrizmTime | null]>\n>(`Control value transformer for InputDateTime component`);\n\nexport const PRIZM_TIME_VALUE_TRANSFORMER = new InjectionToken<\n  PrizmControlValueTransformer<[PrizmDay | null, PrizmTime | null]>\n>(`Control value transformer for InputTime component`);\n","import { InjectionToken, Provider, Type } from '@angular/core';\nimport { PrizmFocusableElementAccessor } from '../types';\n\nexport const PRIZM_FOCUSABLE_ITEM_ACCESSOR = new InjectionToken<PrizmFocusableElementAccessor>(\n  'A component that can be focused'\n);\n\nexport function prizmAsFocusableItemAccessor(useExisting: Type<PrizmFocusableElementAccessor>): Provider {\n  return {\n    provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting,\n  };\n}\n","import { ElementRef, InjectionToken } from '@angular/core';\n\nexport const PRIZM_SCROLL_REF = new InjectionToken<ElementRef<HTMLElement>>('Scrollable container');\n","import { InjectionToken } from '@angular/core';\nimport { PrizmDayOfWeek } from '../@core/enums/day-of-week';\n\nexport const PRIZM_FIRST_DAY_OF_WEEK = new InjectionToken<PrizmDayOfWeek>(`The first day of the week index`, {\n  factory: (): PrizmDayOfWeek => PrizmDayOfWeek.Monday,\n});\n","import { InjectionToken, Provider, Type } from '@angular/core';\nimport { PrizmTextfieldHost } from '../types/textfield-host';\n\nexport const PRIZM_TEXTFIELD_HOST = new InjectionToken<PrizmTextfieldHost>(\n  `[PRIZM_TEXTFIELD_HOST]: An interface to communicate with textfield based controls`\n);\n\nexport function prizmAsTextfieldHost(useExisting: Type<PrizmTextfieldHost> | any): Provider {\n  return {\n    provide: PRIZM_TEXTFIELD_HOST,\n    useExisting,\n  };\n}\n","/**\n * Returns current active element, including shadow dom\n *\n * @return element or null\n */\nexport function prizmGetNativeFocused(documentRef: Document): Element | null {\n  if (!documentRef.activeElement || !documentRef.activeElement.shadowRoot) {\n    return documentRef.activeElement;\n  }\n\n  let element = documentRef.activeElement.shadowRoot.activeElement;\n\n  while (element && element.shadowRoot) {\n    element = element.shadowRoot.activeElement;\n  }\n\n  return element;\n}\n","export function prizmSetNativeFocused(\n  element: HTMLOrSVGElement,\n  focused = true,\n  preventScroll = false\n): void {\n  if (focused) {\n    element.focus({ preventScroll });\n  } else {\n    element.blur();\n  }\n}\n","import { prizmGetNativeFocused } from './get-native-focused';\nimport { prizmSetNativeFocused } from './set-native-focused';\n\n/**\n * Finds and blurs current active element, including shadow DOM\n */\nexport function prizmBlurNativeFocused(documentRef: Document): void {\n  const activeElement = prizmGetNativeFocused(documentRef);\n\n  if (activeElement instanceof HTMLElement) {\n    prizmSetNativeFocused(activeElement, false);\n  }\n}\n","import { prizmGetNativeFocused } from './get-native-focused';\n\n/**\n * Checks if element is focused.\n *\n * Could return true even after blur since element remains focused if you switch away from a browser tab.\n *\n * @param node or null (as a common return value of DOM nodes walking)\n * @return true if focused\n */\nexport function prizmIsNativeFocused(node: Node | null): boolean {\n  return !!node && !!node.ownerDocument && prizmGetNativeFocused(node.ownerDocument) === node;\n}\n","import { prizmGetNativeFocused } from './get-native-focused';\n\n/**\n * Checks if focused element is within given element.\n *\n * @param node\n * @return true if focused node is contained within element\n */\nexport function prizmIsNativeFocusedIn(node: Node): boolean {\n  // !node.contains - check for IE11\n  if (!node.ownerDocument || !node.contains) {\n    return false;\n  }\n\n  const nativeFocused = prizmGetNativeFocused(node.ownerDocument);\n\n  return nativeFocused !== null && node.contains(nativeFocused);\n}\n","/**\n * Checks for signs that element can be focused with keyboard. tabIndex above 0 is ignored to\n * only target natural focus order. Not checking the possibility of an element to\n * be focused, for example element can have display: none applied to it or any other\n * circumstances could prevent actual focus.\n */\nexport function prizmIsNativeKeyboardFocusable(element: Element): boolean {\n  if (element.hasAttribute('disabled') || element.getAttribute('tabIndex') === '-1') {\n    return false;\n  }\n\n  if (\n    (element instanceof HTMLElement && element.isContentEditable) ||\n    element.getAttribute('tabIndex') === '0'\n  ) {\n    return true;\n  }\n\n  switch (element.tagName) {\n    case 'BUTTON':\n    case 'SELECT':\n    case 'TEXTAREA':\n      return true;\n    case 'VIDEO':\n    case 'AUDIO':\n      return element.hasAttribute('controls');\n    case 'INPUT':\n      return element.getAttribute('type') !== 'hidden';\n    case 'A':\n    case 'LINK':\n      return element.hasAttribute('href');\n    default:\n      return false;\n  }\n}\n","import { prizmIsNativeKeyboardFocusable } from './is-native-keyboard-focusable';\n\nexport function prizmIsNativeMouseFocusable(element: Element): boolean {\n  return (\n    !element.hasAttribute('disabled') &&\n    (element.getAttribute('tabIndex') === '-1' || prizmIsNativeKeyboardFocusable(element))\n  );\n}\n","export type PrizmSize = PrizmSizeS | PrizmSizeXS | PrizmSizeM | PrizmSizeXM | PrizmSizeL | PrizmSizeXl;\n\nexport type PrizmSizeXS = 'xs';\nexport type PrizmSizeL = 'l';\nexport type PrizmSizeM = 'm';\nexport type PrizmSizeXM = 'xm';\nexport type PrizmSizeS = 's';\nexport type PrizmSizesXl = 'm' | 'l' | 'xl';\nexport type PrizmSizeXl = 'xl';\n/* SIZES asc order */\nconst SIZES: ReadonlyArray<PrizmSize> = ['xs', 's', 'm', 'xm', 'l', 'xl'];\n\n/**\n * Compares size constants to determine if first size is bigger than the second\n *\n * @param size size that we need to compare\n * @param biggerThanSize size to compare with, 's' by default\n */\nexport function prizmSizeBigger(size: PrizmSize, biggerThanSize: PrizmSize = SIZES[0]): boolean {\n  return SIZES.indexOf(size) > SIZES.indexOf(biggerThanSize);\n}\n","export function prizmIsPresent<T>(value?: T | null): value is T {\n  return value !== null && value !== undefined;\n}\n","export function prizmIsEdge(userAgent: string): boolean {\n  return userAgent.toLowerCase().includes('edge');\n}\n","export function prizmIsEdgeOlderThan(version: number, userAgent: string): boolean {\n  const EDGE = 'edge/';\n  const currentVersion = parseInt(userAgent.slice(userAgent.toLowerCase().indexOf(EDGE) + EDGE.length), 10);\n\n  return currentVersion < version;\n}\n","export function prizmIsFirefox(userAgent: string): boolean {\n  return userAgent.toLowerCase().includes('firefox');\n}\n","export function prizmIsIE(userAgent: string): boolean {\n  return userAgent.toLowerCase().includes('trident');\n}\n","export function prizmIsSafari(element: Element): boolean {\n  const documentRef = element.ownerDocument;\n  const windowRef = documentRef && documentRef.defaultView;\n\n  return !!windowRef && 'safari' in windowRef;\n}\n","import { PrizmIdentityMatcher } from '../../types/matcher';\n\n/**\n * Checks identity for nullable elements.\n *\n * @param a element a\n * @param b element b\n * @param handler called if both elements are not null\n * @return true if either both are null or they pass identity handler\n */\nexport function prizmNullableSame<T>(a: T | null, b: T | null, handler: PrizmIdentityMatcher<T>): boolean {\n  if (a === null) {\n    return b === null;\n  }\n\n  if (b === null) {\n    return false;\n  }\n\n  return handler(a, b);\n}\n","export function prizmIsString(value: unknown): value is string {\n  return typeof value === `string`;\n}\n","export class PrizmValueChangesException extends Error {\n  constructor() {\n    super(`Control does not have valueChanges`);\n  }\n}\n","import { AbstractControl, AbstractControlDirective } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { PrizmValueChangesException } from '../exceptions/value-changes.exception';\n\n/**\n * Turns AbstractControl/Abstract-control-directive valueChanges into ReplaySubject(1)\n */\nexport function prizmReplayedValueChangesFrom<T>(\n  control: AbstractControl | AbstractControlDirective\n): Observable<T> {\n  return new Observable(subscriber => {\n    if (!control.valueChanges) {\n      throw new PrizmValueChangesException();\n    }\n\n    control.valueChanges.pipe(startWith(control.value)).subscribe(subscriber);\n  });\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { NgControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PrizmDayRange } from '../../@core/date-time/day-range';\nimport { PrizmTime } from '../../@core/date-time/time';\nimport { prizmReplayedValueChangesFrom } from '../../observables/replay-control-value-changes';\nimport { PrizmControlValueTransformer } from '../../types/control-value-transformer';\n\nexport function prizmReplayControlValueChangesFactory<\n  T extends PrizmDayRange | PrizmDay | [PrizmDay | null, PrizmTime | null]\n>(\n  control: NgControl | null,\n  valueTransformer?: PrizmControlValueTransformer<T> | null\n): Observable<T | null> | null {\n  return control\n    ? prizmReplayedValueChangesFrom(control).pipe(\n        map(value => (valueTransformer ? valueTransformer.fromControlValue(value) : (value as T)))\n      )\n    : of(null);\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Clamps a value between two inclusive limits\n *\n * @param value\n * @param min lower limit\n * @param max upper limit\n */\nexport function prizmClamp(value: number, min: number, max: number): number {\n  prizmAssert.assert(!isNaN(value));\n  prizmAssert.assert(!isNaN(min));\n  prizmAssert.assert(!isNaN(max));\n  prizmAssert.assert(max >= min);\n\n  return Math.min(max, Math.max(min, value));\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Checks if the value is in range\n *\n * @param value\n * @param fromInclude lower inclusive limit\n * @param toExclude upper exclusive limit\n */\nexport function prizmInRange(value: number, fromInclude: number, toExclude: number): boolean {\n  prizmAssert.assert(!isNaN(value));\n  prizmAssert.assert(!isNaN(fromInclude));\n  prizmAssert.assert(!isNaN(toExclude));\n  prizmAssert.assert(fromInclude < toExclude);\n\n  return value >= fromInclude && value < toExclude;\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Normalizes any number to an integer within inclusive range\n *\n * @param value\n * @param min lower inclusive integer\n * @param max upper inclusive integer\n * @return an integer between min and max inclusive\n */\nexport function prizmNormalizeToIntNumber(value: number, min: number, max: number): number {\n  prizmAssert.assert(Number.isInteger(min));\n  prizmAssert.assert(Number.isInteger(max));\n  prizmAssert.assert(min <= max);\n\n  if (isNaN(value) || value <= min) {\n    return min;\n  }\n\n  if (value >= max) {\n    return max;\n  }\n\n  return Math.round(value);\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Rounds a number to the closest value in a fixed discrete series\n *\n * @param value\n * @param quantum series step\n */\nexport function prizmQuantize(value: number, quantum: number): number {\n  prizmAssert.assert(Number.isFinite(value));\n  prizmAssert.assert(Number.isFinite(quantum));\n  prizmAssert.assert(quantum > 0);\n\n  const remainder = value % quantum;\n\n  return remainder < quantum / 2 ? value - remainder : value + quantum - remainder;\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\nconst MAX_PRECISION = 292;\n\nexport function prizmRound(value: number, precision = 0): number {\n  return calculate(value, precision, Math.round);\n}\n\nexport function prizmCeil(value: number, precision = 0): number {\n  return calculate(value, precision, Math.ceil);\n}\n\nexport function prizmFloor(value: number, precision = 0): number {\n  return calculate(value, precision, Math.floor);\n}\n\n/**\n * Rounding number to the set precision\n *\n * @param value\n * @param precision number of digits in a float part\n * @param func rounding function (round, floor, ceil)\n */\nfunction calculate(value: number, precision: number, func: (x: number) => number): number {\n  if (value === Infinity) {\n    return value;\n  }\n\n  prizmAssert.assert(!isNaN(value), `Value must be number`);\n  prizmAssert.assert(Number.isInteger(precision), `Precision must be integer`);\n\n  precision = Math.min(precision, MAX_PRECISION);\n\n  const pair = `${value}e`.split(`e`);\n  const tempValue = func(Number(`${pair[0]}e${Number(pair[1]) + precision}`));\n  const processedPair = `${tempValue}e`.split(`e`);\n\n  return Number(`${processedPair[0]}e${Number(processedPair[1]) - precision}`);\n}\n","/**\n * Calculates sum of any number of passed arguments\n */\nexport function prizmSum(...args: number[]): number {\n  return args.reduce((a, b) => a + b, 0);\n}\n","export function prizmToInt(bool: boolean): 1 | 0 {\n  return bool ? 1 : 0;\n}\n","export function prizmToPx(n: number): string {\n  return `${n || 0}px`;\n}\n","/**\n * Converts angle in degrees to radians\n */\nexport function prizmToRadians(deg: number): number {\n  return (deg * Math.PI) / 180;\n}\n","export function prizmContainsOrAfter(current: Node, node: Node): boolean {\n  return (\n    current.contains(node) || !!(node.compareDocumentPosition(current) & Node.DOCUMENT_POSITION_PRECEDING)\n  );\n}\n","export function prizmIsCurrentTarget({ target, currentTarget }: Event): boolean {\n  return target === currentTarget;\n}\n","export function prizmCanScroll(\n  element: Element,\n  rootElement: Element,\n  vertical: boolean,\n  scrollEnd: boolean\n): boolean {\n  return vertical\n    ? canScrollVertical(element, rootElement, scrollEnd)\n    : canScrollHorizontal(element, rootElement, scrollEnd);\n}\n\nfunction canScrollVertical(element: Element, rootElement: Element, scrollEnd: boolean): boolean {\n  let currentElement = element;\n\n  while (currentElement !== rootElement.parentElement) {\n    if (\n      (Math.floor(currentElement.scrollTop) > 0 && !scrollEnd) ||\n      (Math.ceil(currentElement.scrollTop + currentElement.clientHeight) < currentElement.scrollHeight &&\n        scrollEnd)\n    ) {\n      return true;\n    }\n\n    if (currentElement.parentElement) {\n      currentElement = currentElement.parentElement;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction canScrollHorizontal(element: Element, rootElement: Element, scrollEnd: boolean): boolean {\n  let currentElement = element;\n\n  while (currentElement !== rootElement.parentElement) {\n    if (\n      (Math.floor(currentElement.scrollLeft) > 0 && !scrollEnd) ||\n      (Math.ceil(currentElement.scrollLeft + currentElement.clientWidth) < currentElement.scrollWidth &&\n        scrollEnd)\n    ) {\n      return true;\n    }\n\n    if (currentElement.parentElement) {\n      currentElement = currentElement.parentElement;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n","/**\n * Finds the nearest parent with scroll in it\n */\nexport function prizmGetScrollParent(element: Element | null, vertical = true): Element | null {\n  if (element === null) {\n    return null;\n  }\n\n  if (vertical && element.scrollHeight > element.clientHeight) {\n    return element;\n  }\n\n  if (!vertical && element.scrollWidth > element.clientWidth) {\n    return element;\n  }\n\n  return prizmGetScrollParent(element.parentElement, vertical);\n}\n","import { prizmAssert } from '@prizm-ui/core';\n\nexport function prizmGetElementOffset(\n  host: Element,\n  element: HTMLElement\n): { offsetTop: number; offsetLeft: number } {\n  prizmAssert.assert(host.contains(element), 'Host must contain element');\n\n  let { offsetTop, offsetLeft, offsetParent } = element;\n\n  while (offsetParent && offsetParent instanceof HTMLElement && offsetParent !== host) {\n    offsetTop += offsetParent.offsetTop;\n    offsetLeft += offsetParent.offsetLeft;\n    offsetParent = offsetParent.offsetParent;\n  }\n\n  return { offsetTop, offsetLeft };\n}\n","import { isObservable, Observable, of } from 'rxjs';\nimport { delay, delayWhen, map } from 'rxjs/operators';\n\nexport function prizmIsTextOverflow(element: HTMLElement): boolean {\n  if (element) {\n    return element.offsetWidth < element.scrollWidth;\n  } else {\n    return false;\n  }\n}\n\nexport function prizmIsTextOverflow$(elem: HTMLElement, delayWhen: Observable<unknown>): Observable<boolean>;\nexport function prizmIsTextOverflow$(elem: HTMLElement, delayTime?: number): Observable<boolean>;\nexport function prizmIsTextOverflow$(\n  elem: HTMLElement,\n  delaySource: number | Observable<unknown> = 0\n): Observable<boolean> {\n  return of(0).pipe(\n    (source$: Observable<number>) => {\n      if (isObservable(delaySource)) return source$.pipe(delayWhen(() => delaySource));\n      else {\n        return source$.pipe(delay(delaySource ?? 0));\n      }\n    },\n    map(() => prizmIsTextOverflow(elem))\n  );\n}\n","const IOS_REG_EXP = /ipad|iphone|ipod/;\n\nexport function prizmIsIos(navigator: Navigator): boolean {\n  const userAgentValue = navigator.userAgent.toLowerCase();\n\n  return (\n    IOS_REG_EXP.test(userAgentValue) || (userAgentValue.includes('apple') && navigator.maxTouchPoints > 1)\n  );\n}\n","import { prizmIsIos } from './is-ios';\n\nconst SAFARI_REG_EXP = /^((?!chrome|android).)*safari/i;\n\nexport function prizmIsApple(navigator: Navigator): boolean {\n  return prizmIsIos(navigator) || SAFARI_REG_EXP.test(navigator.userAgent.toLowerCase());\n}\n","import { inject, InjectionToken } from '@angular/core';\nimport { NAVIGATOR } from '@ng-web-apis/common';\nimport { prizmIsIos } from '../util';\n\nexport const PRIZM_IS_IOS = new InjectionToken<boolean>('iOS browser detection', {\n  factory: (): boolean => prizmIsIos(inject(NAVIGATOR)),\n});\n","import { PrizmTimeLike } from '../../types/time-like';\nimport { PrizmTimeMode } from '../../types/time-mode';\nimport { prizmInRange } from '../../util/math/in-range';\nimport {\n  PRIZM_HOURS_IN_DAY,\n  PRIZM_MILLISECONDS_IN_DAY,\n  PRIZM_MILLISECONDS_IN_HOUR,\n  PRIZM_MILLISECONDS_IN_MINUTE,\n  PRIZM_MINUTES_IN_HOUR,\n  PRIZM_SECONDS_IN_MINUTE,\n} from './date-time';\nimport { prizmAssert, prizmPadStart } from '@prizm-ui/core';\n\n/**\n * Immutable time object with hours, minutes, seconds and ms\n */\nexport class PrizmTime implements PrizmTimeLike {\n  public static correctTime(parsedTime: PrizmTime): PrizmTime {\n    let { hours, minutes, seconds } = parsedTime;\n    if (hours > 23) hours = 23;\n    if (minutes > 59) minutes = 59;\n    if (seconds > 59) seconds = 59;\n    return new PrizmTime(hours, minutes, seconds, parsedTime.ms);\n  }\n\n  constructor(\n    readonly hours: number,\n    readonly minutes: number,\n    readonly seconds: number = 0,\n    readonly ms: number = 0\n  ) {\n    prizmAssert.assert(\n      PrizmTime.isValidTime(hours, minutes, seconds, ms),\n      `Time must be real, but got:`,\n      hours,\n      minutes,\n      seconds,\n      ms\n    );\n  }\n\n  /**\n   * Checks if time is valid\n   */\n  public static isValidTime(hours: number, minutes: number, seconds = 0, ms = 0): boolean {\n    return (\n      Number.isInteger(hours) &&\n      prizmInRange(hours, 0, PRIZM_HOURS_IN_DAY) &&\n      Number.isInteger(minutes) &&\n      prizmInRange(minutes, 0, PRIZM_MINUTES_IN_HOUR) &&\n      Number.isInteger(seconds) &&\n      prizmInRange(seconds, 0, PRIZM_SECONDS_IN_MINUTE) &&\n      Number.isInteger(ms) &&\n      prizmInRange(ms, 0, 1000)\n    );\n  }\n\n  /**\n   * Current UTC time.\n   */\n  public static current(): PrizmTime {\n    return PrizmTime.fromAbsoluteMilliseconds(Date.now() % PRIZM_MILLISECONDS_IN_DAY);\n  }\n\n  /**\n   * Current time in local timezone\n   */\n  public static currentLocal(): PrizmTime {\n    const date = new Date();\n\n    return PrizmTime.fromAbsoluteMilliseconds(\n      (Date.now() - date.getTimezoneOffset() * PRIZM_MILLISECONDS_IN_MINUTE) % PRIZM_MILLISECONDS_IN_DAY\n    );\n  }\n\n  /**\n   * Calculates PrizmTime from milliseconds\n   */\n  public static fromAbsoluteMilliseconds(milliseconds: number): PrizmTime {\n    prizmAssert.assert(Number.isInteger(milliseconds));\n    prizmAssert.assert(\n      prizmInRange(milliseconds, 0, PRIZM_MILLISECONDS_IN_DAY),\n      `Milliseconds must be below ${PRIZM_MILLISECONDS_IN_DAY} (milliseconds in a day).`\n    );\n\n    const hours = Math.floor(milliseconds / PRIZM_MILLISECONDS_IN_HOUR);\n    const minutes = Math.floor((milliseconds % PRIZM_MILLISECONDS_IN_HOUR) / PRIZM_MILLISECONDS_IN_MINUTE);\n    const seconds =\n      Math.floor(((milliseconds % PRIZM_MILLISECONDS_IN_HOUR) % PRIZM_MILLISECONDS_IN_MINUTE) / 1000) || 0;\n    const ms =\n      Math.floor(((milliseconds % PRIZM_MILLISECONDS_IN_HOUR) % PRIZM_MILLISECONDS_IN_MINUTE) % 1000) || 0;\n\n    return new PrizmTime(hours, minutes, seconds, ms);\n  }\n\n  /**\n   * Parses string into PrizmTime object\n   */\n  public static fromString(time: string): PrizmTime {\n    const hours = Number(time.slice(0, 2));\n    const minutes = Number(time.slice(3, 5));\n    const seconds = Number(time.slice(6, 8)) || 0;\n    const ms = Number(time.slice(9, 12)) || 0;\n\n    return new PrizmTime(hours, minutes, seconds, ms);\n  }\n\n  /**\n   * Converts Date object into PrizmTime\n   * @param date\n   */\n  public static fromLocalNativeDate(date: Date): PrizmTime {\n    return new PrizmTime(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n  }\n\n  /**\n   * Shifts time by hours and minutes\n   */\n  public shift({ hours = 0, minutes = 0, seconds = 0, ms = 0 }: PrizmTimeLike): PrizmTime {\n    const newMs = (1000 + this.ms + (ms % 1000)) % 1000;\n\n    const secondsInMs = ms < 0 ? Math.ceil(ms / 1000) : Math.floor(ms / 1000);\n    const secondsToAdd = secondsInMs + seconds;\n    const newSeconds = (60 + this.seconds + (secondsToAdd % 60)) % 60;\n\n    const minutesInSeconds = secondsToAdd < 0 ? Math.ceil(secondsToAdd / 60) : Math.floor(secondsToAdd / 60);\n    const minutesToAdd = minutesInSeconds + minutes;\n    const newMinutes = (60 + this.minutes + (minutesToAdd % 60)) % 60;\n\n    const hoursInMinutes = minutesToAdd < 0 ? Math.ceil(minutesToAdd / 60) : Math.floor(minutesToAdd / 60);\n    const hoursToAdd = hoursInMinutes + hours;\n    const newHours = (24 + this.hours + (hoursToAdd % 24)) % 24;\n\n    return new PrizmTime(newHours, newMinutes, newSeconds, newMs);\n  }\n\n  public timeLimit(minTime: PrizmTime | null, maxTime: PrizmTime | null): PrizmTime {\n    let result: PrizmTime = new PrizmTime(this.hours, this.minutes, this.seconds, this.ms);\n\n    if (minTime && minTime?.toAbsoluteMilliseconds() > result.toAbsoluteMilliseconds()) result = minTime;\n\n    if (maxTime && maxTime?.toAbsoluteMilliseconds() < result.toAbsoluteMilliseconds()) result = maxTime;\n\n    return result;\n  }\n\n  /**\n   * Converts PrizmTime to string\n   */\n  public toString(mode?: PrizmTimeMode): string {\n    const needAddMs = mode === `HH:MM:SS.MSS` || (!mode && this.ms > 0);\n    const needAddSeconds = needAddMs || mode === `HH:MM:SS` || (!mode && this.seconds > 0);\n\n    return (\n      `${this.formatTime(this.hours)}:${this.formatTime(this.minutes)}` +\n      `${needAddSeconds ? `:${this.formatTime(this.seconds)}` : ``}` +\n      `${needAddMs ? `.${this.formatTime(this.ms, 3)}` : ``}`\n    );\n  }\n\n  public valueOf(): number {\n    return this.toAbsoluteMilliseconds();\n  }\n\n  /**\n   * Returns the primitive value of the given Date object.\n   * Depending on the argument, the method can return either a string or a number.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\n   */\n  public [Symbol.toPrimitive](hint: string): string | number {\n    return Date.prototype[Symbol.toPrimitive].call(this, hint);\n  }\n\n  /**\n   * Converts PrizmTime to milliseconds\n   */\n  public toAbsoluteMilliseconds(): number {\n    return (\n      this.hours * PRIZM_MILLISECONDS_IN_HOUR +\n      this.minutes * PRIZM_MILLISECONDS_IN_MINUTE +\n      this.seconds * 1000 +\n      this.ms\n    );\n  }\n\n  private formatTime(time: number, digits = 2): string {\n    return prizmPadStart(String(time), digits, `0`);\n  }\n\n  public isSameTime(time: PrizmTime): boolean {\n    return (\n      this.ms === time.ms &&\n      this.seconds === time.seconds &&\n      this.hours === time.hours &&\n      this.minutes === time.minutes\n    );\n  }\n}\n","export class PrizmInvalidDayException extends Error {\n  constructor(day: number) {\n    super(`Invalid day: ${day}`);\n  }\n}\n","export class PrizmInvalidMonthException extends Error {\n  constructor(month: number) {\n    super(`Invalid month: ${month}`);\n  }\n}\n","export class PrizmInvalidYearException extends Error {\n  constructor(year: number) {\n    super(`Invalid year: ${year}`);\n  }\n}\n","import { inject, InjectionToken } from '@angular/core';\nimport { PRIZM_RANGE_SEPARATOR_CHAR } from './date-time';\n\nexport const PRIZM_DATE_FILLER = new InjectionToken<string>(`date filler for Prizm UI`, {\n  factory: (): string => `dd.mm.yyyy`,\n});\n\n/**\n * @deprecated dont use it\n */\nexport const PRIZM_DATE_RANGE_FILLER = new InjectionToken<string>(`date range filler for Prizm UI`, {\n  factory: (): string => {\n    const dateFiller = inject(PRIZM_DATE_FILLER);\n\n    return `${dateFiller}${PRIZM_RANGE_SEPARATOR_CHAR}${dateFiller}`;\n  },\n});\n\n/**\n * @internal 'dd.mm.yyyy'.length\n * Used in:\n * - {@link PrizmInputDateComponent}\n * - {@link PrizmInputDateRangeComponent}\n * - {@link PrizmInputDateTimeComponent}\n */\nexport const PRIZM_DATE_FILLER_LENGTH = 10;\n/**\n * @internal\n * Used in {@link PrizmInputDateRangeComponent}\n */\nexport const PRIZM_DATE_RANGE_FILLER_LENGTH =\n  // TODO PRIZM_RANGE_SEPARATOR_CHAR instead of 3\n  2 * PRIZM_DATE_FILLER_LENGTH + 3; // + PRIZM_RANGE_SEPARATOR_CHAR.length;\n","import { PrizmYearLike } from '../../types/year-like';\nimport { prizmInRange } from '../../util/math/in-range';\nimport { prizmNormalizeToIntNumber } from '../../util/math/normalize-to-int-number';\n\nimport {\n  PRIZM_DAYS_IN_LEAP_YEAR,\n  PRIZM_DAYS_IN_NORMAL_YEAR,\n  PRIZM_DAYS_IN_WEEK,\n  PRIZM_MAX_YEAR,\n  PRIZM_MIN_YEAR,\n} from './date-time';\nimport { prizmAssert, prizmPadStart } from '@prizm-ui/core';\n\n/**\n * Immutable year object\n * @nosideeffects\n */\nexport class PrizmYear implements PrizmYearLike {\n  constructor(readonly year: number) {\n    prizmAssert.assert(PrizmYear.isValidYear(year));\n  }\n\n  /**\n   * Checks year for validity\n   */\n  public static isValidYear(year: number): boolean {\n    return Number.isInteger(year) && prizmInRange(year, PRIZM_MIN_YEAR, PRIZM_MAX_YEAR + 1);\n  }\n\n  /**\n   * Check if passed year is a leap year\n   */\n  public static isLeapYear(year: number): boolean {\n    prizmAssert.assert(PrizmYear.isValidYear(year));\n\n    return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n  }\n\n  /**\n   * Returns amount of leap years from year 0 to the passed one\n   */\n  public static getAbsoluteLeapYears(year: number): number {\n    prizmAssert.assert(PrizmYear.isValidYear(year));\n\n    return Math.ceil(year / 400) + (Math.ceil(year / 4) - Math.ceil(year / 100));\n  }\n\n  /**\n   * @deprecated DONT USE IT (will be deleted soon)\n   *\n   * Returns day of week offset of the beginning of the passed year\n   *\n   * @param year\n   * @param absoluteLeapYears amount of leap years prior to the passed one\n   * @return offset in days\n   */\n  public static getYearStartDaysOffset(year: number, absoluteLeapYears: number): number {\n    prizmAssert.assert(PrizmYear.isValidYear(year));\n    prizmAssert.assert(Number.isInteger(absoluteLeapYears));\n    prizmAssert.assert(year >= absoluteLeapYears);\n    prizmAssert.assert(absoluteLeapYears >= 0);\n\n    return (\n      (absoluteLeapYears * PRIZM_DAYS_IN_LEAP_YEAR +\n        (year - absoluteLeapYears) * PRIZM_DAYS_IN_NORMAL_YEAR +\n        5) %\n      PRIZM_DAYS_IN_WEEK\n    );\n  }\n\n  public static lengthBetween(from: PrizmYear, to: PrizmYear): number {\n    return to.year - from.year;\n  }\n\n  /**\n   * Normalizes year by clamping it between min and max years\n   */\n  protected static normalizeYearPart(year: number): number {\n    return prizmNormalizeToIntNumber(year, PRIZM_MIN_YEAR, PRIZM_MAX_YEAR);\n  }\n\n  public get formattedYear(): string {\n    return prizmPadStart(String(this.year), 4, `0`);\n  }\n\n  public get isLeapYear(): boolean {\n    return PrizmYear.isLeapYear(this.year);\n  }\n\n  /**\n   * Returns amount of leap years from year 0 to current\n   */\n  public get absoluteLeapYears(): number {\n    return PrizmYear.getAbsoluteLeapYears(this.year);\n  }\n\n  /**\n   * @deprecated DONT USE IT (will be deleted soon)\n   *\n   * Returns day of week offset of the beginning of the current year\n   */\n  public get yearStartDaysOffset(): number {\n    return PrizmYear.getYearStartDaysOffset(this.year, this.absoluteLeapYears);\n  }\n\n  /**\n   * Passed year is after current\n   */\n  public yearBefore({ year }: PrizmYear): boolean {\n    return this.year < year;\n  }\n\n  /**\n   * Passed year is the same or after current\n   */\n  public yearSameOrBefore({ year }: PrizmYear): boolean {\n    return this.year <= year;\n  }\n\n  /**\n   * Passed year is the same as current\n   */\n  public yearSame({ year }: PrizmYear): boolean {\n    return this.year === year;\n  }\n\n  /**\n   * Passed year is either the same of before the current\n   */\n  public yearSameOrAfter({ year }: PrizmYear): boolean {\n    return this.year >= year;\n  }\n\n  /**\n   * Passed year is before current\n   */\n  public yearAfter({ year }: PrizmYear): boolean {\n    return this.year > year;\n  }\n\n  // TODO: 2.0 Consider removing `backwards` option\n  /**\n   * Immutably offsets year\n   */\n  public append({ year = 0 }: PrizmYearLike, backwards = false): PrizmYear {\n    prizmAssert.assert(Number.isInteger(year));\n\n    if (backwards) {\n      year *= -1;\n    }\n\n    const resultYear = this.year + year;\n\n    prizmAssert.assert(PrizmYear.isValidYear(resultYear));\n\n    return new PrizmYear(resultYear);\n  }\n\n  public toString(): string {\n    return this.formattedYear;\n  }\n\n  public valueOf(): number {\n    return this.year;\n  }\n\n  /**\n   * Returns the primitive value of the given Date object.\n   * Depending on the argument, the method can return either a string or a number.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\n   */\n  public [Symbol.toPrimitive](hint: string): string | number {\n    return Date.prototype[Symbol.toPrimitive].call(this, hint);\n  }\n\n  public toJSON(): string {\n    return this.formattedYear;\n  }\n}\n","import { PrizmMonthLike } from '../../types/month-like';\nimport { prizmInRange } from '../../util/math/in-range';\nimport { prizmNormalizeToIntNumber } from '../../util/math/normalize-to-int-number';\nimport { PrizmMonthNumber } from '../enums/month-number';\n\nimport { PRIZM_DAYS_IN_WEEK, PRIZM_MAX_MONTH, PRIZM_MIN_MONTH, PRIZM_MONTHS_IN_YEAR } from './date-time';\nimport { PrizmYear } from './year';\nimport { prizmAssert, prizmPadStart } from '@prizm-ui/core';\n\n/**\n * Immutable object consisting of year and month\n */\nexport class PrizmMonth extends PrizmYear implements PrizmMonthLike {\n  /**\n   * @param year\n   * @param month (starting with 0)\n   */\n  constructor(year: number, readonly month: number) {\n    super(year);\n    prizmAssert.assert(PrizmMonth.isValidMonth(year, month));\n  }\n\n  /**\n   * Tests month and year for validity\n   */\n  public static isValidMonth(year: number, month: number): boolean {\n    return PrizmYear.isValidYear(year) && PrizmMonth.isValidMonthPart(month);\n  }\n\n  /**\n   * Returns number of days in a month\n   */\n  public static getMonthDaysCount(month: number, isLeapYear: boolean): number {\n    prizmAssert.assert(PrizmMonth.isValidMonthPart(month));\n\n    switch (month) {\n      case PrizmMonthNumber.February:\n        return isLeapYear ? 29 : 28;\n      case PrizmMonthNumber.April:\n      case PrizmMonthNumber.June:\n      case PrizmMonthNumber.September:\n      case PrizmMonthNumber.November:\n        return 30;\n      default:\n        return 31;\n    }\n  }\n\n  /**\n   * Returns current month and year based on local time zone\n   * @nosideeffects\n   */\n  public static currentLocal(): PrizmMonth {\n    const nativeDate = new Date();\n\n    return new PrizmMonth(nativeDate.getFullYear(), nativeDate.getMonth());\n  }\n\n  /**\n   * Returns current month and year based on UTC\n   */\n  public static currentUtc(): PrizmMonth {\n    const nativeDate = new Date();\n\n    return new PrizmMonth(nativeDate.getUTCFullYear(), nativeDate.getUTCMonth());\n  }\n\n  public static override lengthBetween(from: PrizmMonth, to: PrizmMonth): number {\n    const absoluteFrom = from.month + from.year * 12;\n    const absoluteTo = to.month + to.year * 12;\n\n    return absoluteTo - absoluteFrom;\n  }\n\n  /**\n   * Normalizes number by clamping it between min and max month\n   */\n  protected static normalizeMonthPart(month: number): number {\n    return prizmNormalizeToIntNumber(month, PRIZM_MIN_MONTH, PRIZM_MAX_MONTH);\n  }\n\n  /**\n   * Tests month for validity\n   */\n  private static isValidMonthPart(month: number): boolean {\n    return Number.isInteger(month) && prizmInRange(month, PRIZM_MIN_MONTH, PRIZM_MAX_MONTH + 1);\n  }\n\n  get formattedMonthPart(): string {\n    return prizmPadStart(String(this.month + 1), 2, `0`);\n  }\n\n  /**\n   * @deprecated\n   * Formatter month and year\n   */\n  get formattedMonth(): string {\n    return `${this.formattedMonthPart}.${this.formattedYear}`;\n  }\n\n  /**\n   * @deprecated DONT USE IT (will be deleted soon)\n   *\n   * Calculates number of weeks in a month (counting non-full weeks)\n   */\n  get weeksRowsCount(): number {\n    return Math.ceil((this.monthStartDaysOffset + this.daysCount) / PRIZM_DAYS_IN_WEEK);\n  }\n\n  /**\n   * Returns days in a month\n   */\n  public get daysCount(): number {\n    return PrizmMonth.getMonthDaysCount(this.month, this.isLeapYear);\n  }\n\n  /**\n   * @deprecated DONT USE IT (will be deleted soon)\n   *\n   * Computes day of week offset of the beginning of the month\n   */\n  public get monthStartDaysOffset(): number {\n    let result = this.yearStartDaysOffset;\n\n    for (let currentMonth = 0; currentMonth <= this.month - 1; currentMonth++) {\n      result += PrizmMonth.getMonthDaysCount(currentMonth, this.isLeapYear);\n    }\n\n    return result % PRIZM_DAYS_IN_WEEK;\n  }\n\n  /**\n   * Passed month and year are after current\n   */\n  public monthBefore(another: PrizmMonth): boolean {\n    return this.yearBefore(another) || (this.yearSame(another) && this.month < another.month);\n  }\n\n  /**\n   * Passed month and year are after or the same as current\n   */\n  public monthSameOrBefore(another: PrizmMonth): boolean {\n    return this.yearBefore(another) || (this.yearSame(another) && this.month <= another.month);\n  }\n\n  /**\n   * Passed month and year are the same as current\n   */\n  public monthSame(another: PrizmMonth): boolean {\n    return this.yearSame(another) && this.month === another.month;\n  }\n\n  /**\n   * Passed month and year are either before or equal to current\n   */\n  public monthSameOrAfter(another: PrizmMonth): boolean {\n    return this.yearAfter(another) || (this.yearSame(another) && this.month >= another.month);\n  }\n\n  /**\n   * Passed month and year are before current\n   */\n  public monthAfter(another: PrizmMonth): boolean {\n    return this.yearAfter(another) || (this.yearSame(another) && this.month > another.month);\n  }\n\n  // TODO: 2.0 Consider removing `backwards` option\n  /**\n   * Immutably alters current month and year by passed offset\n   *\n   * @param offset\n   * @param backwards shift date backwards\n   * @return new month and year object as a result of offsetting current\n   */\n  public override append({ year = 0, month = 0 }: PrizmMonthLike, backwards = false): PrizmMonth {\n    if (backwards) {\n      year *= -1;\n      month *= -1;\n    }\n\n    const totalMonths = (this.year + year) * PRIZM_MONTHS_IN_YEAR + this.month + month;\n\n    return new PrizmMonth(Math.floor(totalMonths / PRIZM_MONTHS_IN_YEAR), totalMonths % PRIZM_MONTHS_IN_YEAR);\n  }\n\n  public override toString(): string {\n    return this.formattedMonth;\n  }\n\n  public override valueOf(): number {\n    return this.toLocalNativeDate().valueOf();\n  }\n\n  public override toJSON(): string {\n    return `${super.toJSON()}-${this.formattedMonthPart}`;\n  }\n\n  /**\n   * Returns native {@link Date} based on local time zone\n   */\n  public toLocalNativeDate(): Date {\n    return new Date(this.year, this.month);\n  }\n\n  /**\n   * Returns native {@link Date} based on UTC\n   */\n  public toUtcNativeDate(): Date {\n    return new Date(Date.UTC(this.year, this.month));\n  }\n}\n","import { PrizmInvalidDayException } from '../../exceptions/invalid-day.exception';\nimport { PrizmInvalidMonthException } from '../../exceptions/invalid-month.exception';\nimport { PrizmInvalidYearException } from '../../exceptions/invalid-year.exception';\nimport { PrizmDateMode } from '../../types/date-mode';\nimport { PrizmDayLike } from '../../types/day-like';\nimport { prizmInRange, prizmNormalizeToIntNumber } from '../../util/math';\nimport { PrizmDayOfWeek } from '../enums/day-of-week';\nimport { PrizmMonthNumber } from '../enums/month-number';\nimport { PRIZM_DATE_FILLER_LENGTH } from './date-fillers';\nimport { PRIZM_DAYS_IN_WEEK, PRIZM_MIN_DAY, PRIZM_MONTHS_IN_YEAR } from './date-time';\nimport { PrizmMonth } from './month';\nimport { PrizmYear } from './year';\nimport { prizmAssert, prizmPadStart } from '@prizm-ui/core';\n\n// TODO: Localized formatting\n/**\n * Immutable date object, consisting of day, month and year\n */\nexport class PrizmDay extends PrizmMonth {\n  constructor(year: number, month: number, readonly day: number) {\n    super(year, month);\n    prizmAssert.assert(PrizmDay.isValidDay(year, month, day), {\n      year,\n      month,\n      day,\n    });\n  }\n\n  /**\n   * Creates {@link PrizmDay} from native {@link Date} based on local time zone\n   */\n  public static fromLocalNativeDate(date: Date): PrizmDay {\n    return new PrizmDay(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Creates {@link PrizmDay} from native {@link Date} using UTC\n   */\n  public static fromUtcNativeDate(date: Date): PrizmDay {\n    return new PrizmDay(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  }\n\n  /**\n   * Check validity of year, month and day\n   *\n   * @param year\n   * @param month\n   * @param day\n   * @return boolean validity\n   */\n  public static isValidDay(year: number, month: number, day: number): boolean {\n    return (\n      PrizmMonth.isValidMonth(year, month) &&\n      Number.isInteger(day) &&\n      prizmInRange(day, PRIZM_MIN_DAY, PrizmMonth.getMonthDaysCount(month, PrizmYear.isLeapYear(year)) + 1)\n    );\n  }\n\n  /**\n   * @deprecated DONT USE IT (will be deleted soon)\n   *\n   * Calculated day on a calendar grid\n   *\n   * @param month\n   * @param row row in a calendar\n   * @param col column in a calendar\n   * @return resulting day on these coordinates (could exceed passed month)\n   */\n  public static getDayFromMonthRowCol(month: PrizmMonth, row: number, col: number): PrizmDay {\n    prizmAssert.assert(Number.isInteger(row));\n    prizmAssert.assert(prizmInRange(row, 0, 6));\n    prizmAssert.assert(Number.isInteger(col));\n    prizmAssert.assert(prizmInRange(col, 0, PRIZM_DAYS_IN_WEEK));\n\n    let day = row * PRIZM_DAYS_IN_WEEK + col - month.monthStartDaysOffset + 1;\n\n    if (day > month.daysCount) {\n      day = day - month.daysCount;\n      month = month.append({ month: 1 });\n    }\n\n    if (day <= 0) {\n      month = month.append({ month: -1 });\n      day = month.daysCount + day;\n    }\n\n    return new PrizmDay(month.year, month.month, day);\n  }\n\n  /**\n   * Current day based on local time zone\n   */\n  public static override currentLocal(): PrizmDay {\n    const nativeDate = new Date();\n    const year = nativeDate.getFullYear();\n    const month = nativeDate.getMonth();\n    const day = nativeDate.getDate();\n\n    return new PrizmDay(year, month, day);\n  }\n\n  /**\n   * Returns current day based on UTC\n   */\n  public static override currentUtc(): PrizmDay {\n    const nativeDate = new Date();\n    const year = nativeDate.getUTCFullYear();\n    const month = nativeDate.getUTCMonth();\n    const day = nativeDate.getUTCDate();\n\n    return new PrizmDay(year, month, day);\n  }\n\n  /**\n   * Calculates {@link PrizmDay} normalizing year, month and day. {@link NaN} is turned into minimal value.\n   *\n   * @param year any year value, including invalid\n   * @param month any month value, including invalid (months start with 0)\n   * @param day any day value, including invalid\n   * @return normalized date\n   */\n  public static normalizeOf(year: number, month: number, day: number): PrizmDay {\n    const normalizedYear = PrizmYear.normalizeYearPart(year);\n    const normalizedMonth = PrizmMonth.normalizeMonthPart(month);\n    const normalizedDay = PrizmDay.normalizeDayPart(day, normalizedMonth, normalizedYear);\n\n    return new PrizmDay(normalizedYear, normalizedMonth, normalizedDay);\n  }\n\n  public static override lengthBetween(from: PrizmDay, to: PrizmDay): number {\n    return Math.round(\n      (to.toLocalNativeDate().getTime() - from.toLocalNativeDate().getTime()) / (1000 * 60 * 60 * 24)\n    );\n  }\n\n  public static parseRawDateString(\n    date: string,\n    dateMode: PrizmDateMode = `DMY`\n  ): { day: number; month: number; year: number } {\n    prizmAssert.assert(\n      date.length === PRIZM_DATE_FILLER_LENGTH,\n      `[parseRawDateString]: wrong date string length`\n    );\n\n    switch (dateMode) {\n      case `YMD`:\n        return {\n          day: parseInt(date.slice(8, 10), 10),\n          month: parseInt(date.slice(5, 7), 10) - 1,\n          year: parseInt(date.slice(0, 4), 10),\n        };\n\n      case `MDY`:\n        return {\n          day: parseInt(date.slice(3, 5), 10),\n          month: parseInt(date.slice(0, 2), 10) - 1,\n          year: parseInt(date.slice(6, 10), 10),\n        };\n\n      default:\n      case `DMY`:\n        return {\n          day: parseInt(date.slice(0, 2), 10),\n          month: parseInt(date.slice(3, 5), 10) - 1,\n          year: parseInt(date.slice(6, 10), 10),\n        };\n    }\n  }\n\n  // TODO: Move month and year related code corresponding classes\n  /**\n   * Parsing a string with date with normalization\n   *\n   * @param rawDate date string\n   * @param dateMode date format of the date string (DMY | MDY | YMD)\n   * @return normalized date\n   */\n  public static normalizeParse(rawDate: string, dateMode: PrizmDateMode = `DMY`): PrizmDay {\n    const { day, month, year } = this.parseRawDateString(rawDate, dateMode);\n\n    return PrizmDay.normalizeOf(year, month, day);\n  }\n\n  /**\n   * Parsing a date stringified in a toJSON format\n   * @param yearMonthDayString date string in format of YYYY-MM-DD\n   * @return date\n   * @throws exceptions if any part of the date is invalid\n   */\n  public static jsonParse(yearMonthDayString: string): PrizmDay {\n    const { day, month, year } = this.parseRawDateString(yearMonthDayString, `YMD`);\n\n    if (!PrizmYear.isValidYear(year)) {\n      throw new PrizmInvalidYearException(year);\n    }\n\n    if (!PrizmMonth.isValidMonth(year, month)) {\n      throw new PrizmInvalidMonthException(month);\n    }\n\n    if (\n      !Number.isInteger(day) ||\n      !prizmInRange(day, PRIZM_MIN_DAY, PrizmMonth.getMonthDaysCount(month, PrizmYear.isLeapYear(year)) + 1)\n    ) {\n      throw new PrizmInvalidDayException(day);\n    }\n\n    return new PrizmDay(year, month, day);\n  }\n\n  protected static normalizeDayPart(day: number, month: number, year: number): number {\n    prizmAssert.assert(PrizmMonth.isValidMonth(year, month));\n\n    const monthDaysCount = PrizmMonth.getMonthDaysCount(month, PrizmYear.isLeapYear(year));\n\n    return prizmNormalizeToIntNumber(day, 1, monthDaysCount);\n  }\n\n  get formattedDayPart(): string {\n    return prizmPadStart(String(this.day), 2, `0`);\n  }\n\n  /**\n   * @deprecated use {@link getFormattedDay} instead\n   * Formatted whole date\n   */\n  public get formattedDay(): string {\n    return `${this.formattedDayPart}.${this.formattedMonth}`;\n  }\n\n  public get isWeekend(): boolean {\n    const dayOfWeek = this.dayOfWeek(false);\n\n    return dayOfWeek === PrizmDayOfWeek.Saturday || dayOfWeek === PrizmDayOfWeek.Sunday;\n  }\n\n  /**\n   * Returns day of week\n   *\n   * @param startFromMonday whether week starts from Monday and not from Sunday\n   * @return day of week (from 0 to 6)\n   */\n  public dayOfWeek(startFromMonday = true): number {\n    const dayOfWeek = startFromMonday\n      ? this.toLocalNativeDate().getDay() - 1\n      : this.toLocalNativeDate().getDay();\n\n    return dayOfWeek < 0 ? 6 : dayOfWeek;\n  }\n\n  /**\n   * Passed date is after current\n   */\n  public dayBefore(another: PrizmDay): boolean {\n    return this.monthBefore(another) || (this.monthSame(another) && this.day < another.day);\n  }\n\n  /**\n   * Passed date is after or equals to current\n   */\n  public daySameOrBefore(another: PrizmDay): boolean {\n    return this.monthBefore(another) || (this.monthSame(another) && this.day <= another.day);\n  }\n\n  /**\n   * Passed date is the same as current\n   */\n  public daySame(another: PrizmDay): boolean {\n    return this.monthSame(another) && this.day === another.day;\n  }\n\n  /**\n   * Passed date is either before or the same as current\n   */\n  public daySameOrAfter(another: PrizmDay): boolean {\n    return this.monthAfter(another) || (this.monthSame(another) && this.day >= another.day);\n  }\n\n  /**\n   * Passed date is before current\n   */\n  public dayAfter(another: PrizmDay): boolean {\n    return this.monthAfter(another) || (this.monthSame(another) && this.day > another.day);\n  }\n\n  /**\n   * Clamping date between two limits\n   *\n   * @param min\n   * @param max\n   * @return clamped date\n   */\n  public dayLimit(min: PrizmDay | null, max: PrizmDay | null): PrizmDay {\n    if (min !== null && this.dayBefore(min)) {\n      return min;\n    }\n\n    if (max !== null && this.dayAfter(max)) {\n      return max;\n    }\n\n    return this;\n  }\n\n  // TODO: 2.0 Consider removing `backwards` option\n  /**\n   * Immutably alters current day by passed offset\n   *\n   * If resulting month has more days than original one, date is rounded to the maximum day\n   * in the resulting month. Offset of days will be calculated based on the resulted year and month\n   * to not interfere with parent classes methods\n   *\n   * @param offset\n   * @param backwards shift date backwards\n   * @return new date object as a result of offsetting current\n   */\n  public override append({ year = 0, month = 0, day = 0 }: PrizmDayLike, backwards = false): PrizmDay {\n    if (backwards) {\n      year *= -1;\n      month *= -1;\n      day *= -1;\n    }\n\n    const totalMonths = (this.year + year) * PRIZM_MONTHS_IN_YEAR + this.month + month;\n    let years = Math.floor(totalMonths / PRIZM_MONTHS_IN_YEAR);\n    let months = totalMonths % PRIZM_MONTHS_IN_YEAR;\n\n    let days = Math.min(this.day, PrizmMonth.getMonthDaysCount(months, PrizmYear.isLeapYear(years))) + day;\n\n    while (days > PrizmMonth.getMonthDaysCount(months, PrizmYear.isLeapYear(years))) {\n      days -= PrizmMonth.getMonthDaysCount(months, PrizmYear.isLeapYear(years));\n\n      if (months === PrizmMonthNumber.December) {\n        years++;\n        months = PrizmMonthNumber.January;\n      } else {\n        months++;\n      }\n    }\n\n    while (days < PRIZM_MIN_DAY) {\n      if (months === PrizmMonthNumber.January) {\n        years--;\n        months = PrizmMonthNumber.December;\n      } else {\n        months--;\n      }\n\n      days += PrizmMonth.getMonthDaysCount(months, PrizmYear.isLeapYear(years));\n    }\n\n    return new PrizmDay(years, months, days);\n  }\n\n  /**\n   * Returns formatted whole date\n   */\n  public getFormattedDay(dateFormat: PrizmDateMode, separator: string): string {\n    prizmAssert.assert(separator.length === 1, `Separator should consist of only 1 symbol`);\n\n    const dd = this.formattedDayPart;\n    const mm = this.formattedMonthPart;\n    const yyyy = this.formattedYear;\n\n    switch (dateFormat) {\n      case `YMD`:\n        return `${yyyy}${separator}${mm}${separator}${dd}`;\n      case `MDY`:\n        return `${mm}${separator}${dd}${separator}${yyyy}`;\n      case `DMY`:\n      default:\n        return `${dd}${separator}${mm}${separator}${yyyy}`;\n    }\n  }\n\n  public override toString(dateFormat: PrizmDateMode = `DMY`, separator = `.`): string {\n    return this.getFormattedDay(dateFormat, separator);\n  }\n\n  public override toJSON(): string {\n    return `${super.toJSON()}-${this.formattedDayPart}`;\n  }\n\n  /**\n   * Returns native {@link Date} based on local time zone\n   */\n  public override toLocalNativeDate(): Date {\n    return new Date(this.year, this.month, this.day);\n  }\n\n  /**\n   * Returns native {@link Date} based on UTC\n   */\n  public override toUtcNativeDate(): Date {\n    return new Date(Date.UTC(this.year, this.month, this.day));\n  }\n}\n","import { PRIZM_CHAR_EN_DASH, PRIZM_CHAR_NO_BREAK_SPACE } from '../../constants/unicode-chars';\nimport { PrizmTime } from './time';\nimport { PrizmDay } from './day';\n\nexport const PRIZM_DAYS_IN_WEEK = 7;\n\nexport const PRIZM_DAYS_IN_NORMAL_YEAR = 365;\n\nexport const PRIZM_DAYS_IN_LEAP_YEAR = 366;\n\nexport const PRIZM_MONTHS_IN_YEAR = 12;\n\nexport const PRIZM_MIN_DAY = 1;\n\nexport const PRIZM_MIN_MONTH = 0;\n\nexport const PRIZM_MAX_MONTH = 11;\n\nexport const PRIZM_MIN_YEAR = 0;\n\nexport const PRIZM_MAX_YEAR = 9999;\n\n// export const PRIZM_RANGE_SEPARATOR_CHAR = `${PRIZM_CHAR_NO_BREAK_SPACE}${PRIZM_CHAR_EN_DASH}${PRIZM_CHAR_NO_BREAK_SPACE}`;\nexport const PRIZM_RANGE_SEPARATOR_CHAR = ` - `;\n\nexport const PRIZM_MILLISECONDS_IN_SECOND = 1000;\n\nexport const PRIZM_SECONDS_IN_MINUTE = 60;\n\nexport const PRIZM_MINUTES_IN_HOUR = 60;\n\nexport const PRIZM_HOURS_IN_DAY = 24;\n\nexport const PRIZM_MILLISECONDS_IN_MINUTE = PRIZM_MILLISECONDS_IN_SECOND * PRIZM_SECONDS_IN_MINUTE;\n\nexport const PRIZM_MILLISECONDS_IN_HOUR = PRIZM_MILLISECONDS_IN_MINUTE * PRIZM_MINUTES_IN_HOUR;\n\nexport const PRIZM_MILLISECONDS_IN_DAY = PRIZM_MILLISECONDS_IN_HOUR * PRIZM_HOURS_IN_DAY;\n\nexport class PrizmDateTime {\n  public static fromLocalNativeDate(date: Date): PrizmDateTime {\n    return new PrizmDateTime(PrizmDay.fromLocalNativeDate(date), PrizmTime.fromLocalNativeDate(date));\n  }\n\n  constructor(public day: PrizmDay, public time: PrizmTime | null = new PrizmTime(0, 0)) {}\n\n  public toLocalNativeDate(): Date {\n    return new Date(\n      this.day.year,\n      this.day.month,\n      this.day.day,\n      this.time?.hours ?? 0,\n      this.time?.minutes ?? 0,\n      this.time?.seconds ?? 0,\n      this.time?.ms ?? 0\n    );\n  }\n}\n","import {\n  PrizmDateTime,\n  PRIZM_MAX_MONTH,\n  PRIZM_MAX_YEAR,\n  PRIZM_MIN_DAY,\n  PRIZM_MIN_MONTH,\n  PRIZM_MIN_YEAR,\n} from './date-time';\nimport { PrizmDay } from './day';\nimport { PrizmTime } from './time';\n\nexport const PRIZM_FIRST_DAY = new PrizmDay(PRIZM_MIN_YEAR, PRIZM_MIN_MONTH, PRIZM_MIN_DAY);\nexport const PRIZM_FIRST_TIME = new PrizmTime(0, 0, 0, 0);\nexport const PRIZM_FIRST_DAY_WITH_TIME = new PrizmDateTime(PRIZM_FIRST_DAY, PRIZM_FIRST_TIME);\n\nexport const PRIZM_LAST_DAY = new PrizmDay(PRIZM_MAX_YEAR, PRIZM_MAX_MONTH, 31);\nexport const PRIZM_LAST_TIME = new PrizmTime(23, 59, 0, 0);\n\nexport const PRIZM_LAST_DAY_WITH_TIME = new PrizmDateTime(PRIZM_LAST_DAY, PRIZM_LAST_TIME);\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PrizmDay } from '../@core/date-time/day';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../@core/date-time/days.const';\nimport { PolymorphContent } from '../directives/polymorph/types/content';\n\nexport interface PrizmInputDateOptions {\n  readonly icon: PolymorphContent<any>;\n  readonly min: PrizmDay;\n  readonly max: PrizmDay;\n  readonly readonly: boolean;\n}\n\nexport const PRIZM_INPUT_DATE_DEFAULT_OPTIONS: PrizmInputDateOptions = {\n  icon: () => `date-calendar-blank`,\n  min: PRIZM_FIRST_DAY,\n  max: PRIZM_LAST_DAY,\n  readonly: true,\n};\n\nexport const PRIZM_INPUT_DATE_OPTIONS = new InjectionToken<PrizmInputDateOptions>(\n  `[PRIZM_INPUT_DATE_OPTIONS]: Default parameters for date input component`,\n  {\n    factory: (): PrizmInputDateOptions => PRIZM_INPUT_DATE_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmInputDateOptionsProvider: (options: Partial<PrizmInputDateOptions>) => ValueProvider = (\n  options: Partial<PrizmInputDateOptions>\n) => ({\n  provide: PRIZM_INPUT_DATE_OPTIONS,\n  useValue: { ...PRIZM_INPUT_DATE_DEFAULT_OPTIONS, ...options },\n});\n","import { inject, InjectionToken } from '@angular/core';\nimport { USER_AGENT } from '@ng-web-apis/common';\n\n// https://stackoverflow.com/a/11381730/2706426 http://detectmobilebrowsers.com/\nconst firstRegex =\n  /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/;\nconst secondRegex =\n  /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/;\n\nexport const PRIZM_IS_MOBILE = new InjectionToken<boolean>(`Mobile browser detection`, {\n  factory: (): boolean =>\n    firstRegex.test(inject(USER_AGENT).toLowerCase()) ||\n    secondRegex.test(inject(USER_AGENT).slice(0, 4).toLowerCase()),\n});\n","import { ɵAnimationEngine } from '@angular/animations/browser';\nimport { inject, InjectFlags, InjectionToken } from '@angular/core';\nimport { BehaviorSubject, Observable, timer } from 'rxjs';\nimport { mapTo, share, startWith, switchMap } from 'rxjs/operators';\n\nexport const PRIZM_REMOVED_ELEMENT = new InjectionToken<Observable<Element | null>>(\n  `Element currently being removed by AnimationEngine`,\n  {\n    factory: (): Observable<Element | null> => {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      const stub = { onRemovalComplete: (): void => {} };\n      const element$ = new BehaviorSubject<Element | null>(null);\n      const engine = inject(ɵAnimationEngine, InjectFlags.Optional) ?? stub;\n      const { onRemovalComplete = stub.onRemovalComplete } = engine;\n\n      engine.onRemovalComplete = (element, context): void => {\n        element$.next(element);\n        onRemovalComplete(element, context);\n      };\n\n      return element$.pipe(\n        switchMap(element => timer(0).pipe(mapTo(null), startWith(element))),\n        share()\n      );\n    },\n  }\n);\n","import { ElementRef, InjectionToken } from '@angular/core';\n\nexport const PRIZM_ELEMENT_REF = new InjectionToken<ElementRef>(\n  'ElementRef when you cannot use @Input for single time injection'\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PrizmDay } from '../@core/date-time/day';\nimport { PrizmDayRange } from '../@core/date-time/day-range';\n\nexport const PRIZM_CALENDAR_DATA_STREAM = new InjectionToken<Observable<PrizmDay | PrizmDayRange | null>>(\n  `Stream that emits calendar data change`\n);\n","import { InjectionToken, Type } from '@angular/core';\n\nexport const PRIZM_MOBILE_CALENDAR = new InjectionToken<Type<unknown>>(`A component for mobile data picker`);\n","import { InjectionToken } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport const PRIZM_VALUE_ACCESSOR = new InjectionToken<ControlValueAccessor>(\n  `Buffer token to pass NG_VALUE_ACCESSOR to a different Injector`\n);\n","import { inject, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PRIZM_FIRST_DAY_OF_WEEK } from './first-day-of-week';\nimport { PRIZM_SHORT_WEEK_DAYS } from './i18n';\nimport { PrizmLanguageCore } from '@prizm-ui/i18n';\n\nexport type PRIZM_WEEK_DAYS_NAMES = [string, string, string, string, string, string, string];\n\n// TODO: 2.0 Remove export in ivy compilation\nexport const prizmConvertToSundayFirstWeekFormat = (\n  weekDaysNames: PRIZM_WEEK_DAYS_NAMES\n): PRIZM_WEEK_DAYS_NAMES => {\n  const sundayIndex = weekDaysNames.length - 1;\n\n  return [weekDaysNames[sundayIndex], ...weekDaysNames.slice(0, sundayIndex)] as PRIZM_WEEK_DAYS_NAMES;\n};\n\nexport const PRIZM_ORDERED_SHORT_WEEK_DAYS = new InjectionToken<Observable<PRIZM_WEEK_DAYS_NAMES>>(\n  `Ordered calendars i18n texts`\n);\n\nexport const getShortWeekDays = (\n  days: Observable<PrizmLanguageCore['shortWeekDays']>\n): Observable<PRIZM_WEEK_DAYS_NAMES> => {\n  const firstDayOfWeekIndex = inject(PRIZM_FIRST_DAY_OF_WEEK);\n\n  return days.pipe(\n    map(prizmConvertToSundayFirstWeekFormat),\n    map(\n      weekDays =>\n        [\n          ...weekDays.slice(firstDayOfWeekIndex),\n          ...weekDays.slice(0, firstDayOfWeekIndex),\n        ] as PRIZM_WEEK_DAYS_NAMES\n    )\n  );\n};\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PrizmLanguageColumnSettings,\n  PrizmLanguageCore,\n  PrizmLanguageCron,\n  PrizmLanguageFileUpload,\n  PrizmLanguageInputLayoutDateRelative,\n  PrizmLanguageKit,\n  PrizmLanguagePaginator,\n} from '@prizm-ui/i18n';\n\nexport const PRIZM_FILE_UPLOAD = new InjectionToken<Observable<PrizmLanguageFileUpload['fileUpload']>>(\n  `Localized for file upload component`\n);\n\nexport const PRIZM_INPUT_LAYOUT_DATE_RELATIVE = new InjectionToken<\n  Observable<PrizmLanguageInputLayoutDateRelative['inputLayoutDateRelative']>\n>(`Localized for input layout date relative component`);\n\nexport const PRIZM_CRON = new InjectionToken<Observable<PrizmLanguageCron['cron']>>(\n  `Localized for cron component`\n);\n\nexport const PRIZM_MONTHS = new InjectionToken<Observable<PrizmLanguageCore['months']>>(\n  `Localized months names`\n);\n\nexport const PRIZM_TIME_TEXTS = new InjectionToken<Observable<PrizmLanguageKit['time']>>(`time i18n texts`);\n\nexport const PRIZM_CALENDAR_MONTHS = new InjectionToken<Observable<PrizmLanguageKit['shortCalendarMonths']>>(\n  `[PRIZM_CALENDAR_MONTHS]: short calendar months i18n`\n);\n\nexport const PRIZM_OTHER_DATE_TEXT = new InjectionToken<Observable<PrizmLanguageKit['otherDate']>>(\n  `i18n 'Other date' text`\n);\n\nexport const PRIZM_DATE_TEXTS = new InjectionToken<Observable<PrizmLanguageKit['dateTexts']>>(\n  `date format i18n texts`\n);\n\nexport const PRIZM_SPIN_TEXTS = new InjectionToken<Observable<PrizmLanguageCore['spinTexts']>>(\n  `spin i18n texts`\n);\n\nexport const PRIZM_SHORT_WEEK_DAYS = new InjectionToken<Observable<PrizmLanguageCore['shortWeekDays']>>(\n  `calendars i18n texts`\n);\n\nexport const PRIZM_COLUMN_SETTINGS = new InjectionToken<\n  Observable<PrizmLanguageColumnSettings['columnSettings']>\n>(`column settings texts`);\n\nexport const PRIZM_PAGINATOR = new InjectionToken<Observable<PrizmLanguagePaginator['paginator']>>(\n  `paginator texts`\n);\n","import { InjectionToken } from '@angular/core';\n\nexport const PrizmOverlayContentToken = new InjectionToken('params for overlay');\n","import { TemplateRef } from '@angular/core';\nimport { PrizmOverlayAbstractPosition } from './position/position';\n\nexport interface PrizmOverlayPositionMeta {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  height?: number | string;\n  width?: number | string;\n  position?: string;\n  extra?: string;\n}\n\nenum prizmOverlayBaseType {\n  TOP = 't',\n  LEFT = 'l',\n  RIGHT = 'r',\n  BOTTOM = 'b',\n}\n\ntype PrizmOverlayBaseType = 't' | 'l' | 'r' | 'b';\n\nenum prizmOverlayYSide {\n  TOP = 't',\n  LEFT = 'l',\n  RIGHT = 'r',\n  BOTTOM = 'b',\n  TOP_LEFT = 'tl',\n  TOP_RIGHT = 'tr',\n  BOTTOM_LEFT = 'bl',\n  BOTTOM_RIGHT = 'br',\n}\n\ntype PrizmOverlayYSideType = 't' | 'l' | 'r' | 'b' | 'tl' | 'tr' | 'bl' | 'br';\n\nenum prizmOverlayLeftSide {\n  LEFT_TOP = 'lt',\n  RIGHT_TOP = 'rt',\n  LEFT_BOTTOM = 'lb',\n  RIGHT_BOTTOM = 'rb',\n}\n\nexport type PrizmOverlayLeftSideType = 'lt' | 'rt' | 'lb' | 'rb';\n\nenum prizmOverlayInnerSide {\n  CENTER = 'c',\n}\n\nexport type PrizmOverlayInnerSideType = 'c';\n\nexport const PrizmOverlayOutsidePlacement = {\n  ...prizmOverlayYSide,\n  ...prizmOverlayLeftSide,\n};\nexport type PrizmOverlayOutsidePlacement = PrizmOverlayYSideType | PrizmOverlayLeftSideType;\n\nexport const PrizmOverlayBasePlacement = {\n  ...prizmOverlayBaseType,\n};\nexport type PrizmOverlayBasePlacement = PrizmOverlayBaseType;\n\nexport const PrizmOverlayInsidePlacement = {\n  ...prizmOverlayYSide,\n  ...prizmOverlayInnerSide,\n};\nexport type PrizmOverlayInsidePlacement = PrizmOverlayYSideType | PrizmOverlayInnerSideType;\n\nexport enum PrizmOverlaySlidePlacement {\n  LEFT = 'l',\n  RIGHT = 'r',\n}\n\nexport interface PrizmOverlayContainerSize {\n  width: string | number;\n  height: string | number;\n}\n\nexport interface PrizmOverlayConfig {\n  backdrop: boolean;\n  styleVars?: Record<string, unknown>;\n  containerClass: string;\n  wrapperClass: string;\n  backdropClass: string;\n  listenWindowEvents: boolean;\n  closeOnDocClick: boolean;\n  bodyClass: string;\n  closeOnEsc: boolean;\n  windowResizeCallback: () => void;\n  docClickCallback: () => void;\n}\n\nexport interface PrizmOverlayComponentType<T> {\n  new (...args: any[]): T;\n}\n\nexport type PrizmOverlayId = string;\n\nexport type PrizmOverlayEventName =\n  | 'z_open'\n  | 'z_close'\n  | 'z_dynpos'\n  | 'z_detach'\n  | 'z_posupdate'\n  | 'z_compins';\n\nexport interface PrizmOverlayEvent {\n  from: PrizmOverlayId;\n  name: PrizmOverlayEventName;\n  data?: any;\n}\n\nexport const enum PrizmOverlayContentType {\n  STRING = 's',\n  HTML = 'h',\n  TEMPLATE = 't',\n  COMPONENT = 'c',\n}\nexport type PrizmOverlayContentData = string | TemplateRef<any> | PrizmOverlayComponentType<any>;\nexport type PrizmOverlayContentProps = { [x: string]: any } | any;\n\nexport interface PrizmOverlayContent {\n  type?: PrizmOverlayContentType;\n  data: PrizmOverlayContentData;\n  props?: PrizmOverlayContentProps;\n}\n\nexport interface PrizmOverlayInputs {\n  position: PrizmOverlayAbstractPosition | null;\n  config: PrizmOverlayConfig;\n  content: PrizmOverlayContent;\n  parentContainer: HTMLElement | undefined;\n  zid: PrizmOverlayId | null;\n}\n","import { TemplateRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport {\n  PrizmOverlayContent,\n  PrizmOverlayContentData,\n  PrizmOverlayContentProps,\n  PrizmOverlayContentType,\n  PrizmOverlayEvent,\n  PrizmOverlayEventName,\n} from './models';\n\nexport function getContent(\n  data: PrizmOverlayContentData,\n  props: PrizmOverlayContentProps = {}\n): PrizmOverlayContent {\n  let type: PrizmOverlayContentType = PrizmOverlayContentType.COMPONENT;\n\n  if (typeof data === 'string' && props['hasHTML']) type = PrizmOverlayContentType.HTML;\n  else if (typeof data === 'string') type = PrizmOverlayContentType.STRING;\n  else if (data instanceof TemplateRef) type = PrizmOverlayContentType.TEMPLATE;\n\n  return { data, type, props };\n}\n\n/* html dom utils */\nexport function cssClass(method: 'add' | 'remove', cls: string[], target = 'body'): void {\n  document.querySelector(target)?.classList[method](...cls);\n}\n\nexport function objToCss(styleObj: Record<string, any>): string {\n  return Object.keys(styleObj)\n    .map(x => `${x}:${styleObj[x]}${typeof styleObj[x] === 'number' ? 'px' : ''}`)\n    .join(';');\n}\n\nexport function percentToCss(max: number, percentage: string): string {\n  let number = Number(percentage.slice(0, -1));\n  if (number > 100) {\n    number = 100;\n  }\n  return `calc(${max}px - ${100 - number}%)`;\n}\n\nexport function setWidthHeight(\n  src: Record<string, any>,\n  host: Record<string, any>,\n  key: string,\n  value: number | string\n): number | string {\n  if (typeof value === 'number') {\n    host[key] = value = Math.abs(value);\n  }\n\n  if (typeof value === 'string' && value.endsWith('%')) {\n    value = percentToCss(src[key], value);\n  }\n\n  return value;\n}\n\nexport const BODY_ELEMENT = document.querySelector('body');\n\nclass EventBusClass {\n  private _e: Subject<PrizmOverlayEvent> = new Subject();\n  public send(from: string, name: PrizmOverlayEventName, data: any = null): void {\n    this._e.next({ from, name, data });\n  }\n  public listen(from: string, name: PrizmOverlayEventName): Observable<any> {\n    return this._e.asObservable().pipe(\n      filter(e => e.from === from && e.name === name),\n      map(e => e.data)\n    );\n  }\n\n  public stop(): void {\n    this._e.complete();\n  }\n}\nexport const EventBus = new EventBusClass();\n","import { ReplaySubject } from 'rxjs';\nimport { PrizmOverlayPositionMeta } from '../models';\nimport { EventBus } from '../utils';\n\nexport abstract class PrizmOverlayAbstractPosition<T extends Record<string, any> = Record<string, any>> {\n  protected config: T = {} as T;\n  private configSource$: ReplaySubject<T> = new ReplaySubject<T>(1);\n  readonly config$ = this.configSource$.asObservable();\n  private readonly positionSource$ = new ReplaySubject<PrizmOverlayPositionMeta>();\n  readonly pos$ = this.positionSource$.asObservable();\n  private _zid!: string;\n  public get zid(): string {\n    return this._zid;\n  }\n\n  public calculate(): void {\n    if (this.zid) EventBus.send(this.zid, 'z_dynpos');\n  }\n\n  public abstract getPositions(host: HTMLElement, parentElement?: HTMLElement): Record<string, any>;\n\n  public getClassName(): string {\n    return this.constructor.name.replace('Pos', '-pos').toLowerCase();\n  }\n\n  public updateConfig(config: Partial<T>): void {\n    this.config = { ...this.config, ...config };\n    this.configSource$.next(this.config);\n  }\n\n  public savePosition(position: PrizmOverlayPositionMeta): void {\n    this.positionSource$.next(position);\n  }\n\n  public init(zid: string): void {\n    this._zid = zid;\n  }\n}\n","import { PrizmOverlayConfig, PrizmOverlayPositionMeta } from '../models';\nimport { PrizmOverlayAbstractPosition } from './position';\n\nexport class PrizmOverlayFullscreenPosition extends PrizmOverlayAbstractPosition {\n  public getPositions(): PrizmOverlayPositionMeta {\n    return { top: 0, left: 0, width: '100%', height: '100%', position: 'fixed' };\n  }\n}\n","import { PrizmOverlayInsidePlacement } from '../models';\nimport { setWidthHeight } from '../utils';\nimport { PrizmOverlayAbstractPosition } from './position';\n\ninterface PrizmOverlayGlobalPositionConfig {\n  placement?: PrizmOverlayInsidePlacement;\n  offset?: number;\n  width?: string | number;\n  height?: string | number;\n  element?: HTMLElement;\n}\n\ninterface OverlayOffsetPosition {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport class PrizmOverlayGlobalPosition extends PrizmOverlayAbstractPosition<PrizmOverlayGlobalPositionConfig> {\n  constructor(config: PrizmOverlayGlobalPositionConfig) {\n    super();\n    this.updateConfig({\n      ...{ placement: PrizmOverlayInsidePlacement.CENTER, width: 100, height: 100, offset: 0 },\n      ...config,\n    });\n  }\n\n  public getPositions(hostEl?: HTMLElement, parent?: HTMLElement): any {\n    const host = hostEl?.getBoundingClientRect() as any;\n    const src = {\n      width: parent?.offsetWidth ?? window['innerWidth'],\n      height: parent?.offsetHeight ?? window['innerHeight'],\n    };\n    let { width: w, height: h } = this.config;\n\n    w = setWidthHeight(src, host, 'width', w as any);\n    h = setWidthHeight(src, host, 'height', h as any);\n\n    const props = this.calc(this.config.placement as any, src, host);\n    return {\n      ...props,\n      width: w,\n      height: h,\n      position: parent ? 'absolute' : 'fixed',\n      extra: this.config.placement,\n    };\n  }\n\n  private calc(placement: PrizmOverlayInsidePlacement, src: any, host: any): Partial<OverlayOffsetPosition> {\n    const [main, sub] = placement.split('');\n    const result: Partial<OverlayOffsetPosition> = {};\n\n    if (main === 't') {\n      result.top = this.config.offset;\n    }\n    if (main === 'b') {\n      result.bottom = this.config.offset;\n    }\n    if ((main === 'l' || main === 'r' || main === 'c') && !sub) {\n      result.top = (src.height - host.height) / 2;\n    }\n\n    if ((main === 't' || main === 'b' || main === 'c') && !sub) {\n      result.left = (src.width - host.width) / 2;\n    }\n    if ((main === 'l' && !sub) || sub === 'l') {\n      result.left = this.config.offset;\n    }\n    if ((main === 'r' && !sub) || sub === 'r') {\n      result.right = this.config.offset;\n    }\n\n    return result;\n  }\n}\n","import { PrizmOverlayOutsidePlacement, PrizmOverlayPositionMeta } from '../models';\nimport { EventBus, setWidthHeight } from '../utils';\nimport { PrizmOverlayAbstractPosition } from './position';\n\nexport interface PrizmOverlayRelativePositionConfig {\n  element: HTMLElement;\n  placement?: PrizmOverlayOutsidePlacement;\n  // re-calculate position on scroll, resize\n  autoReposition?: boolean;\n  width?: string | number;\n  height?: string | number;\n}\n\nconst HINT_DIRECTIONS = ['t', 'b', 'l', 'r', 'tl', 'bl', 'tr', 'br', 'lt', 'rt', 'lb', 'rb'] as const;\n\nexport class PrizmOverlayRelativePosition extends PrizmOverlayAbstractPosition<PrizmOverlayRelativePositionConfig> {\n  obs!: MutationObserver;\n  constructor(config: PrizmOverlayRelativePositionConfig) {\n    super();\n    this.updateConfig({\n      ...{\n        element: null,\n        placement: PrizmOverlayOutsidePlacement.TOP,\n        autoReposition: false,\n        width: 'auto',\n        height: 'auto',\n      },\n      ...config,\n    });\n  }\n\n  public override init(zid: string): void {\n    super.init(zid);\n    if (this.config.autoReposition) this.listenDrag(this.zid);\n  }\n\n  public override getPositions(targetEl: HTMLElement): Pick<PrizmOverlayPositionMeta, any> {\n    const s = this.getCoords(this.config.element);\n    const h = this.getCoords(targetEl);\n    let { width: w, height: ht } = this.config;\n\n    w = setWidthHeight(s, h, 'width', w as any);\n    ht = setWidthHeight(s, h, 'height', ht as any);\n\n    const { pos, props } = this.calculatePos(this.config.placement as any, s, h);\n\n    // Try to keep hint host within viewport.\n    const { innerHeight, innerWidth } = window;\n    const coord = {\n      top: Math.min(Math.max(0, props.top), innerHeight - h.height),\n      left: Math.min(Math.max(0, props.left), innerWidth - h.width),\n    };\n\n    return { ...this.round(coord), width: w, height: ht, extra: pos };\n  }\n\n  public reCalc(): void {\n    EventBus.send(this.zid, 'z_dynpos');\n  }\n\n  private getCoords(elem: HTMLElement): DOMRect {\n    return elem.getBoundingClientRect();\n  }\n\n  private calc(placement: PrizmOverlayOutsidePlacement, src: any, host: any): { left: number; top: number } {\n    const [main, sub] = placement.split('');\n    const p = { left: 0, top: 0 };\n    if ((main === 't' || main === 'b') && !sub) {\n      p.left = src.left + (src.width - host.width) / 2;\n    }\n\n    if ((main === 't' || main === 'b') && sub) {\n      p.left = src.left;\n    }\n    if ((main === 't' || main === 'b') && sub === 'r') {\n      p.left = src.left + src.width - host.width;\n    }\n    if (main === 'l') {\n      p.left = src.left - host.width;\n    }\n    if (main === 'r') {\n      p.left = src.right;\n    }\n\n    if (main === 't') {\n      p.top = src.top - host.height;\n    }\n    if (main === 'b') {\n      p.top = src.top + src.height;\n    }\n    if (main === 'l' || main === 'r') {\n      p.top = src.top + (src.height - host.height) / 2;\n    }\n    if (sub === 't' && (main === 'l' || main === 'r')) {\n      p.top = src.top;\n    }\n    if (sub === 'b' && (main === 'l' || main === 'r')) {\n      p.top = src.top + src.height - host.height;\n    }\n\n    return p;\n  }\n\n  private calculatePos(\n    pos: PrizmOverlayOutsidePlacement,\n    s: any,\n    h: any\n  ): { pos: string; props: { left: number; top: number } } {\n    const props = this.calc(pos, s, h);\n\n    if (!this.config.autoReposition || !this.isOverflowed({ ...props, width: h.width, height: h.height })) {\n      return { pos, props };\n    }\n\n    const fallback = this.oppositeDirection(pos);\n\n    // First - check the opposite direction (for backward compatibility and most likely correct value),\n    // if still overflows - check all available placements\n    pos =\n      [fallback, ...HINT_DIRECTIONS].find(direction => {\n        // Already checked?\n        if (direction === pos) return false;\n\n        const props = this.calc(direction, s, h);\n        return !this.isOverflowed({ ...props, width: h.width, height: h.height });\n      }) ?? fallback;\n\n    return { pos, props: this.calc(pos, s, h) };\n  }\n\n  private isOverflowed(props: { [x: string]: any }): boolean {\n    const { innerHeight, innerWidth } = window;\n\n    props.bottom = props.top + props.height;\n    props.right = props.left + props.width;\n\n    return props.bottom > innerHeight || props.top < 0 || props.left < 0 || props.right > innerWidth;\n  }\n\n  private oppositeDirection(current: PrizmOverlayOutsidePlacement): any {\n    const index = HINT_DIRECTIONS.indexOf(current);\n    const even = index % 2 === 0;\n\n    return even ? HINT_DIRECTIONS[index + 1] : HINT_DIRECTIONS[index - 1];\n  }\n\n  private round(props: Record<string, any>): typeof props {\n    Object.keys(props).forEach(x => (props[x] = Math.round(props[x])));\n    return props;\n  }\n\n  private listenDrag(zid: string): void {\n    if (this.obs) this.obs.disconnect();\n    this.obs = new MutationObserver(mutationsList => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') EventBus.send(zid, 'z_dynpos');\n      }\n    });\n\n    this.obs.observe(this.config.element, {\n      attributeFilter: ['style'],\n    });\n  }\n}\n","import { PrizmOverlayPositionMeta, PrizmOverlaySlidePlacement } from '../models';\nimport { PrizmOverlayAbstractPosition } from './position';\n\ninterface SlidePlacementConfig {\n  placement?: PrizmOverlaySlidePlacement;\n  width?: string;\n}\n\nexport class PrizmOverlaySlidePosition extends PrizmOverlayAbstractPosition<SlidePlacementConfig> {\n  constructor(config: SlidePlacementConfig) {\n    super();\n    this.config = { ...{ placement: PrizmOverlaySlidePlacement.LEFT, width: '30%' }, ...config };\n  }\n  public getPositions(): PrizmOverlayPositionMeta {\n    const props = this.config.placement === PrizmOverlaySlidePlacement.LEFT ? { left: 0 } : { right: 0 };\n    return {\n      ...props,\n      top: 0,\n      width: this.config.width,\n      height: '100%',\n      position: 'fixed',\n      extra: this.config.placement,\n    };\n  }\n}\n","import { PrizmOverlayConfig } from './models';\nimport { noop } from 'rxjs';\n\nexport const PrizmOverlayDefaultConfig: PrizmOverlayConfig = {\n  containerClass: 'z-overlay',\n  bodyClass: 'z-open',\n  wrapperClass: '',\n  backdropClass: '',\n  backdrop: false,\n  closeOnDocClick: false,\n  listenWindowEvents: true,\n  closeOnEsc: false,\n  windowResizeCallback: noop,\n  docClickCallback: noop,\n};\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  HostBinding,\n  Injector,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PrizmDestroyService, prizmStyleGetVars } from '@prizm-ui/helpers';\nimport { PrizmThemeModule, PrizmThemeService } from '@prizm-ui/theme';\nimport { Observable, timer } from 'rxjs';\nimport { startWith, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmOverlayConfig, PrizmOverlayContent, PrizmOverlayContentType, PrizmOverlayId } from './models';\nimport { PrizmOverlayAbstractPosition } from './position/position';\nimport { cssClass, EventBus, objToCss } from './utils';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: ['./overlay.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [CommonModule, PrizmThemeModule],\n})\nexport class PrizmOverlayComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('compOutlet', { read: ViewContainerRef }) compOutlet!: ViewContainerRef;\n  content: PrizmOverlayContent = {\n    type: PrizmOverlayContentType.STRING,\n    data: '',\n    props: {},\n  };\n  config!: PrizmOverlayConfig;\n  position!: PrizmOverlayAbstractPosition;\n  zid!: PrizmOverlayId;\n  @HostBinding('style.zIndex')\n  zIndex!: number;\n  el: HTMLElement | any;\n  wrapperEl: HTMLElement | any;\n  extra!: string;\n  parentInjector: any;\n  compInstance: any;\n  parentContainer!: HTMLElement;\n\n  @HostBinding('style.position')\n  get stylePosition(): string {\n    return this.parentContainer ? 'absolute' : 'fixed';\n  }\n\n  constructor(\n    public readonly inj: Injector,\n    public readonly theme: PrizmThemeService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly compResolver: ComponentFactoryResolver,\n    private readonly overlayElRef: ElementRef<HTMLElement>\n  ) {\n    this.parentInjector = Injector;\n  }\n\n  public ngOnInit(): void {\n    this.el = this.overlayElRef.nativeElement;\n    this.wrapperEl = this.el.querySelector('.z-overlay-wrapper');\n    const cls = [\n      'z-container',\n      ...(this.config.containerClass || 'z-overlay').split(' '),\n      this.position.getClassName(),\n    ];\n    if (this.config.closeOnDocClick) {\n      // cls = cls.concat(['no-pointers']);\n    }\n    this.el.setAttribute('data-zid', this.zid);\n    cssClass('add', cls, `[data-zid='${[this.zid]}']`);\n    cssClass('add', [this.config.bodyClass]);\n\n    this.initStyleVars();\n  }\n\n  ngAfterViewInit(): void {\n    this.listenPos().subscribe();\n    if (this.content.type === PrizmOverlayContentType.COMPONENT) {\n      this.compInstance = this.setComponent(this.content.props);\n      EventBus.send(this.zid, 'z_compins', this.compInstance);\n    }\n  }\n\n  private initStyleVars(): void {\n    if (this.config.styleVars) {\n      Object.entries(prizmStyleGetVars(this.config.styleVars)).forEach(([key, value]) => {\n        this.overlayElRef.nativeElement.style.setProperty(key, value);\n      });\n    }\n  }\n\n  public setComponent(props: Record<string, unknown>): Record<string, any> {\n    const compRef = this.compOutlet.createComponent(\n      this.compResolver.resolveComponentFactory(this.content.data as any)\n    );\n    Object.assign(compRef.instance as any, props);\n    compRef.changeDetectorRef.detectChanges();\n    return compRef.instance as any;\n  }\n\n  public updateTextContent(data: string): void {\n    if (this.content.type === PrizmOverlayContentType.STRING) {\n      this.content.data = data;\n      this.cd.detectChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    cssClass('remove', [this.config.bodyClass]);\n    EventBus.send(this.zid, 'z_detach');\n  }\n\n  private listenPos(): Observable<any> {\n    return EventBus.listen(this.zid, 'z_dynpos').pipe(\n      startWith(1),\n      takeUntil(this.destroy$),\n      tap(e => {\n        if (!e || !e.x) return this.setPos();\n        const coords = { left: e.x, top: e.y };\n        this.wrapperEl.style = objToCss(coords);\n      })\n    );\n  }\n\n  private updatePos(): void {\n    const positions = this.position.getPositions(this.wrapperEl, this.parentContainer);\n    const { extra, ...coords } = positions;\n    if (this.extra !== extra) {\n      this.extra = extra;\n      this.cd.detectChanges();\n    }\n    Object.assign(coords, { visibility: 'visible', opacity: '1' });\n    this.wrapperEl.style = objToCss(coords);\n    this.position.savePosition(positions);\n    EventBus.send(this.zid, 'z_posupdate');\n\n    this.cd.markForCheck();\n  }\n\n  private setPos(): void {\n    this.updatePos();\n\n    /** if position will be changed after render > we re-update position */\n    timer(0)\n      .pipe(\n        tap(() => this.updatePos()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","<div class=\"z-backdrop\" *ngIf=\"config.backdrop\" [ngClass]=\"config.backdropClass\"></div>\n<div class=\"z-overlay-wrapper\" #wrapperEl [ngClass]=\"config.wrapperClass\" [class]=\"extra\" prizmTheme>\n  <ng-container [ngSwitch]=\"content.type\">\n    <ng-container *ngSwitchCase=\"'s'\">\n      <div [class]=\"content.props.class\">{{ content.data }}</div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'h'\"> <div [innerHTML]=\"content.data\"></div> </ng-container>\n    <ng-container *ngSwitchCase=\"'t'\">\n      <ng-container\n        *ngTemplateOutlet=\"$any(content.data); context: { $implicit: content.props }\"\n      ></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'c'\"> <ng-template #compOutlet></ng-template> </ng-container>\n  </ng-container>\n</div>\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injector,\n  ViewRef,\n} from '@angular/core';\nimport { animationFrameScheduler, fromEvent, merge as mergeObs, Observable, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  observeOn,\n  skipWhile,\n  startWith,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport {\n  PrizmOverlayConfig,\n  PrizmOverlayContent,\n  PrizmOverlayContentData,\n  PrizmOverlayContentProps,\n  PrizmOverlayEventName,\n  PrizmOverlayId,\n} from './models';\nimport { PrizmOverlayAbstractPosition } from './position/position';\nimport { PrizmOverlayComponent } from './overlay.component';\nimport { BODY_ELEMENT, EventBus, getContent } from './utils';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { raceEmit } from '@prizm-ui/helpers';\n\nexport class PrizmOverlayControl {\n  position!: PrizmOverlayAbstractPosition;\n  readonly config!: PrizmOverlayConfig;\n  content!: PrizmOverlayContent;\n  zid!: PrizmOverlayId;\n  zIndex = 9999;\n  comp!: PrizmOverlayComponent | null;\n  updateTextContent: Subject<string> = new Subject();\n  hostView!: ViewRef | null;\n  parentContainer!: HTMLElement | null;\n  compRef!: ComponentRef<PrizmOverlayComponent>;\n\n  public viewEl!: HTMLElement | null;\n  isOpen = false;\n  private compFac!: ComponentFactory<PrizmOverlayComponent>;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private appRef: ApplicationRef,\n    private compResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    @Inject(WINDOW) private readonly window: Window\n  ) {\n    this.updateTextContent.pipe(takeUntil(this.destroy$)).subscribe(content => {\n      if (this.isOpen) this.comp?.updateTextContent(content);\n    });\n  }\n\n  public open(): void {\n    if (this.isOpen) return;\n    this.destroy$.next();\n\n    this.attach();\n    if (this.viewEl) {\n      mergeObs(this.onDocumentClick(), this.onWindowResize(), this.onEscClick())\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n      setTimeout(() => EventBus.send(this.zid, 'z_dynpos'), 1);\n    }\n\n    EventBus.send(this.zid, 'z_open');\n    this.isOpen = true;\n  }\n\n  public close(): void {\n    if (!this.isOpen) return;\n\n    this.detach();\n    this.destroy$.next();\n    EventBus.send(this.zid, 'z_close');\n    this.isOpen = false;\n  }\n\n  public toggle(): void {\n    return this.isOpen ? this.close() : this.open();\n  }\n\n  public onEscClick(): Observable<any> {\n    return fromEvent<KeyboardEvent>(BODY_ELEMENT as any, 'keydown').pipe(\n      takeUntil(this.destroy$),\n      skipWhile(() => !this.config.closeOnEsc),\n      filter(\n        (e: KeyboardEvent) =>\n          (e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27) &&\n          (e.target as HTMLElement).nodeName === 'BODY'\n      ),\n      tap(e => e.preventDefault()),\n      map(e => e.target),\n      tap(() => this.close())\n    );\n  }\n\n  public onDocumentClick(): Observable<any> {\n    const insideClick = fromEvent<MouseEvent>(\n      this.viewEl?.querySelector('.z-overlay-wrapper') as any,\n      'click'\n    ).pipe(\n      // first init for block closing\n      startWith(null as any)\n    );\n    const outsideClick = fromEvent<MouseEvent>(document.body as any, 'click');\n\n    return raceEmit<[MouseEvent, boolean]>(\n      100,\n      insideClick.pipe(map((e: MouseEvent) => [e, false])),\n      outsideClick.pipe(map((e: MouseEvent) => [e, true]))\n    ).pipe(\n      filter(([, isOutsideClick]) => isOutsideClick),\n      map(([e]: [MouseEvent, boolean]) => e.target),\n      skipWhile(() => !this.config.closeOnDocClick),\n      tap(() => {\n        this.config.docClickCallback();\n        this.close();\n      })\n    );\n  }\n\n  public onWindowResize(): Observable<any> {\n    const onResize = fromEvent(window, 'resize');\n    const onScroll = fromEvent(window, 'scroll', { passive: true });\n    return mergeObs(onResize, onScroll).pipe(\n      skipWhile(() => !this.config.listenWindowEvents),\n      takeUntil(this.destroy$),\n      debounceTime(5),\n      observeOn(animationFrameScheduler),\n      distinctUntilChanged(),\n      tap(() => {\n        EventBus.send(this.zid, 'z_dynpos');\n        this.reCalculatePositions();\n        this.config.windowResizeCallback();\n      })\n    );\n  }\n\n  public changePosition(newPosition: PrizmOverlayAbstractPosition): void {\n    this.position = newPosition;\n  }\n\n  public updatePosition(positionConfig: PrizmOverlayAbstractPosition): void {\n    this.position.updateConfig(positionConfig);\n  }\n\n  public updateContent(content: PrizmOverlayContentData, props: PrizmOverlayContentProps = {}): void {\n    this.content = getContent(content, { ...this.content.props, ...props });\n  }\n\n  public updateParentContainer(node: HTMLElement): void {\n    this.parentContainer = node instanceof HTMLElement ? node : null;\n  }\n\n  public listen<T = any>(eventName: PrizmOverlayEventName): Observable<T> {\n    return EventBus.listen(this.zid, eventName);\n  }\n\n  public reCalculatePositions(): void {\n    EventBus.send(this.zid, 'z_dynpos');\n  }\n\n  private isNotHostElement(el: HTMLElement): boolean {\n    const wrapperEl = this.viewEl?.querySelector('.z-overlay-wrapper');\n    return el !== wrapperEl && !wrapperEl?.contains(el);\n  }\n\n  private attach(): void {\n    /* create component */\n    this.compFac = this.compResolver.resolveComponentFactory(PrizmOverlayComponent);\n    this.compRef = this.compFac.create(this.injector);\n    this.comp = this.compRef.instance;\n\n    /* assign props */\n    const { position, content, config, zid, zIndex, parentContainer } = this;\n    content.props.close = this.close.bind(this);\n    Object.assign(this.comp, { position, content, config, zid: zid, zIndex: zIndex, parentContainer });\n\n    /* attach view */\n    this.hostView = this.compRef.hostView;\n    this.appRef.attachView(this.hostView);\n    this.viewEl = (this.hostView as any).rootNodes[0];\n    (parentContainer ?? (BODY_ELEMENT as HTMLElement)).appendChild(this.viewEl as any);\n  }\n\n  private detach(): void {\n    if (!this.hostView) return;\n\n    this.appRef.detachView(this.hostView);\n    this.compRef.destroy();\n    this.hostView = this.viewEl = this.comp = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from '@angular/core';\nimport { PrizmOverlayDefaultConfig } from './config';\nimport {\n  PrizmOverlayConfig,\n  PrizmOverlayContent,\n  PrizmOverlayContentData,\n  PrizmOverlayContentProps,\n  PrizmOverlayContentType,\n  PrizmOverlayId,\n  PrizmOverlayInputs,\n  PrizmOverlayInsidePlacement,\n} from './models';\nimport { PrizmOverlayGlobalPosition } from './position';\nimport { PrizmOverlayAbstractPosition } from './position/position';\nimport { EventBus, getContent } from './utils';\nimport { PrizmOverlayControl } from './overlay-control';\nimport { PrizmOverlayContentToken } from './token';\nimport { prizmGenerateId } from '@prizm-ui/helpers';\n\nconst DEFAULT_PRIZM_OVERLAY_INPUTS = {\n  position: null,\n  config: PrizmOverlayDefaultConfig,\n  content: { type: PrizmOverlayContentType.STRING, data: '', props: {} },\n  zid: null,\n  parentContainer: undefined,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmOverlayService {\n  static controls: { [key: string]: PrizmOverlayControl } = {};\n  private zid!: PrizmOverlayId;\n  private inputs: PrizmOverlayInputs = { ...DEFAULT_PRIZM_OVERLAY_INPUTS };\n\n  constructor(private injector: Injector) {\n    this.clearCache();\n  }\n\n  public clearCache(): PrizmOverlayService {\n    this.inputs = {\n      ...DEFAULT_PRIZM_OVERLAY_INPUTS,\n      position: new PrizmOverlayGlobalPosition({ placement: PrizmOverlayInsidePlacement.TOP }),\n    };\n    return this;\n  }\n\n  public position<T extends PrizmOverlayAbstractPosition<any>>(position: T): PrizmOverlayService {\n    this.inputs.position = position;\n    return this;\n  }\n\n  public config(config: Partial<PrizmOverlayConfig>): PrizmOverlayService {\n    this.inputs.config = { ...PrizmOverlayDefaultConfig, ...config };\n    return this;\n  }\n\n  public content(data: PrizmOverlayContentData, props: PrizmOverlayContentProps = {}): PrizmOverlayService {\n    this.inputs.content = getContent(data, props);\n    return this;\n  }\n\n  public parentContainer(node: HTMLElement | undefined): PrizmOverlayService {\n    this.inputs.parentContainer = node instanceof HTMLElement ? node : undefined;\n    return this;\n  }\n\n  public create({\n    key,\n    parentInjector,\n  }: {\n    key?: string;\n    parentInjector?: Injector;\n  } = {}): PrizmOverlayControl {\n    this.zid = this.inputs.zid = key ?? prizmGenerateId();\n    const inputsClone = { ...this.inputs };\n\n    const injector = Injector.create({\n      providers: [\n        {\n          provide: PrizmOverlayContentToken,\n          useFactory: (): PrizmOverlayContent => inputsClone.content,\n        },\n        {\n          provide: PrizmOverlayControl,\n          deps: [ApplicationRef, ComponentFactoryResolver, Injector],\n        },\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n\n    const tc = injector.get(PrizmOverlayControl);\n    if (PrizmOverlayService.controls[this.zid]) {\n      this.zid = prizmGenerateId();\n    }\n    this.inputs.position?.init(this.zid);\n    PrizmOverlayService.controls[this.zid] = Object.assign(tc, { ...this.inputs });\n    this.clearCache();\n    return tc;\n  }\n\n  public getCtrl(zid: PrizmOverlayId): PrizmOverlayControl {\n    return PrizmOverlayService.controls[zid];\n  }\n\n  public destroy(): void {\n    for (const key in PrizmOverlayService.controls) {\n      PrizmOverlayService.controls[key].close();\n    }\n    PrizmOverlayService.controls = {};\n    EventBus.stop();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmOverlayComponent } from './overlay.component';\n\n// TODO move to seperated lib\n/**\n * @deprecated\n * use standalone component instead\n * */\n@NgModule({\n  imports: [PrizmOverlayComponent],\n  declarations: [],\n})\nexport class PrizmOverlayModule {}\n","export const PRIZM_OVERLAY_BACKDROP_NO_POINTERS = 'no-pointers';\n","import { NgModule } from '@angular/core';\n\nimport { IConfig, NgxMaskDirective, NgxMaskPipe, provideEnvironmentNgxMask } from 'ngx-mask';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n  clearIfNotMatch: true,\n};\n\n@NgModule({\n  imports: [NgxMaskDirective, NgxMaskPipe],\n  exports: [NgxMaskDirective, NgxMaskPipe],\n  providers: [provideEnvironmentNgxMask(maskConfig)],\n})\nexport class PrizmMaskModule {}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport class PrizmUiRootModule {}\n","import { InjectionToken } from '@angular/core';\nimport { PrizmDateMode } from '../../types/date-mode';\n\nexport const PRIZM_DATE_FORMAT = new InjectionToken<PrizmDateMode>(`Active date format for Prizm UI`, {\n  factory: (): PrizmDateMode => `DMY`,\n});\n","import { InjectionToken } from '@angular/core';\nimport { PrizmTimeMode } from '../../types';\n\nexport const PRIZM_TIME_FORMAT = new InjectionToken<PrizmTimeMode>(`Active time format for Prizm UI`, {\n  factory: (): PrizmTimeMode => `HH:MM`,\n});\n","import { InjectionToken } from '@angular/core';\n\nexport const PRIZM_DATE_SEPARATOR = new InjectionToken<string>(`Date separator for Prizm UI components`, {\n  factory: (): string => `.`,\n});\n\nexport const prizmChangeDateSeparator = (dateString: string, newDateSeparator: string): string =>\n  dateString.replace(/[^0-9A-Za-zА-Яа-я]/gi, newDateSeparator);\n","import { PrizmDay } from './day';\n\nexport type PrizmDayWithStatusColor = 'index' | 'warning' | 'success' | 'danger' | string;\n\nexport class PrizmDayWithStatus extends PrizmDay {\n  constructor(year: number, month: number, day: number, readonly status: PrizmDayWithStatusColor) {\n    super(year, month, day);\n  }\n}\n","import { PRIZM_RANGE_SEPARATOR_CHAR } from './date-time';\nimport { PrizmMonth } from './month';\nimport { PrizmYear } from './year';\nimport { prizmAssert } from '@prizm-ui/core';\n\n/**\n * An immutable range of two {@link PrizmMonth} objects\n */\nexport class PrizmMonthRange {\n  constructor(readonly from: PrizmMonth, readonly to: PrizmMonth) {\n    if (from && to) prizmAssert.assert(from.monthSameOrBefore(to));\n  }\n\n  public static sort(month1: PrizmMonth, month2: PrizmMonth): PrizmMonthRange {\n    return month1.monthSameOrBefore(month2)\n      ? new PrizmMonthRange(month1, month2)\n      : new PrizmMonthRange(month2, month1);\n  }\n\n  public get isSingleMonth(): boolean {\n    return this.from.monthSame(this.to);\n  }\n\n  /**\n   * @deprecated\n   */\n  public get formattedMonthRange(): string {\n    return `${this.from.formattedMonth}${PRIZM_RANGE_SEPARATOR_CHAR}${this.to.formattedMonth}`;\n  }\n\n  public isMonthInRange(month: PrizmMonth): boolean {\n    return month.monthSameOrAfter(this.from) && month.monthSameOrBefore(this.to);\n  }\n\n  public isYearInRange(month: PrizmYear): boolean {\n    return month.yearSameOrAfter(this.from) && month.yearSameOrBefore(this.to);\n  }\n\n  public monthSame(another: PrizmMonthRange): boolean {\n    return this.from.monthSame(another.from) && this.to.monthSame(another.to);\n  }\n\n  public toString(): string {\n    return `${this.from}${PRIZM_RANGE_SEPARATOR_CHAR}${this.to}`;\n  }\n}\n","import { PrizmDateMode } from '../../types/date-mode';\nimport { PRIZM_DATE_FILLER_LENGTH, PRIZM_DATE_RANGE_FILLER_LENGTH } from './date-fillers';\nimport { PRIZM_RANGE_SEPARATOR_CHAR } from './date-time';\nimport { PrizmDay } from './day';\nimport { PrizmMonthRange } from './month-range';\n\nimport { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Temporary type guard to satisfy ts-overloading of normalizeParse method\n * @deprecated\n */\nexport const prizmIsDateMode = (dateMode: string): dateMode is PrizmDateMode =>\n  [`DMY`, `YMD`, `MDY`].includes(dateMode);\n\n/**\n * An immutable range of two {@link PrizmDay} objects\n */\nexport class PrizmDayRange extends PrizmMonthRange {\n  constructor(override readonly from: PrizmDay, override readonly to: PrizmDay) {\n    super(from, to);\n\n    if (from && to) prizmAssert.assert(from.daySameOrBefore(to));\n  }\n\n  /**\n   * Creates range from two days after sorting them\n   *\n   * @param day1\n   * @param day2\n   * @return new range with sorted days\n   */\n  public static override sort(day1: PrizmDay, day2: PrizmDay): PrizmDayRange {\n    return day1.daySameOrBefore(day2) ? new PrizmDayRange(day1, day2) : new PrizmDayRange(day2, day1);\n  }\n\n  public static fromLocalNativeDate(date1: Date, date2: Date): PrizmDayRange {\n    return new PrizmDayRange(PrizmDay.fromLocalNativeDate(date1), PrizmDay.fromLocalNativeDate(date2));\n  }\n\n  /**\n   * @deprecated\n   */\n  public static normalizeParse(\n    rangeString: string,\n    dateFiller: string,\n    dateRangeFiller: string\n  ): PrizmDayRange;\n  public static normalizeParse(rangeString: string, dateMode?: PrizmDateMode): PrizmDayRange;\n\n  /**\n   * Parse and correct a day range in string format\n   *\n   * @param rangeString a string of dates in a format dd.mm.yyyy - dd.mm.yyyy\n   * @param dateMode {@link PrizmDateMode}\n   * @return normalized day range object\n   */\n  public static normalizeParse(rangeString: string, dateMode: string | PrizmDateMode = `DMY`): PrizmDayRange {\n    const dateFormat = prizmIsDateMode(dateMode) ? dateMode : `DMY`;\n\n    const leftDay = PrizmDay.normalizeParse(rangeString.slice(0, PRIZM_DATE_FILLER_LENGTH), dateFormat);\n\n    if (rangeString.length < PRIZM_DATE_RANGE_FILLER_LENGTH) {\n      return new PrizmDayRange(leftDay, leftDay);\n    }\n\n    return PrizmDayRange.sort(\n      leftDay,\n      PrizmDay.normalizeParse(\n        rangeString.slice(PRIZM_DATE_FILLER_LENGTH + PRIZM_RANGE_SEPARATOR_CHAR.length),\n        dateFormat\n      )\n    );\n  }\n\n  get isSingleDay(): boolean {\n    return this.from.daySame(this.to);\n  }\n\n  /**\n   * Human readable format.\n   * @deprecated use {@link getFormattedDayRange} instead\n   */\n  public get formattedDayRange(): string {\n    const from = this.from.getFormattedDay(`DMY`, `.`);\n    const to = this.to.getFormattedDay(`DMY`, `.`);\n\n    return `${from}${PRIZM_RANGE_SEPARATOR_CHAR}${to}`;\n  }\n\n  public isDayInRange(day: PrizmDay): boolean {\n    return day.daySameOrAfter(this.from) && day.daySameOrBefore(this.to);\n  }\n\n  /**\n   * Tests ranges for identity\n   *\n   * @param another second range to test against current\n   * @return `true` if days are identical\n   */\n  public daySame(another: PrizmDayRange): boolean {\n    return this.from.daySame(another.from) && this.to.daySame(another.to);\n  }\n\n  /**\n   * Locks range between two days included, or limits from one side if the other is null\n   *\n   * @param min\n   * @param max\n   * @return range — clamped range\n   */\n  public dayLimit(min: PrizmDay | null, max: PrizmDay | null): PrizmDayRange {\n    return new PrizmDayRange(this.from.dayLimit(min, max), this.to.dayLimit(min, max));\n  }\n\n  /**\n   * Human readable format.\n   */\n  public getFormattedDayRange(dateFormat: PrizmDateMode, dateSeparator: string): string {\n    const from = this.from.getFormattedDay(dateFormat, dateSeparator);\n    const to = this.to?.getFormattedDay(dateFormat, dateSeparator) ?? '';\n\n    return `${from}${PRIZM_RANGE_SEPARATOR_CHAR}${to}`;\n  }\n\n  public toLocalNativeDate(): [Date | null, Date | null] {\n    return [this.from?.toLocalNativeDate() ?? null, this.to?.toLocalNativeDate() ?? null];\n  }\n\n  public override toString(dateFormat: PrizmDateMode = `DMY`, dateSeparator = `.`): string {\n    const from = this.from.getFormattedDay(dateFormat, dateSeparator);\n    const to = this.to?.getFormattedDay(dateFormat, dateSeparator) ?? '';\n\n    return `${from}${PRIZM_RANGE_SEPARATOR_CHAR}${to}`;\n  }\n}\n","import { PrizmTimeLike } from '../../types/time-like';\nimport { PrizmTimeMode } from '../../types/time-mode';\nimport { prizmInRange } from '../../util/math/in-range';\nimport {\n  PRIZM_HOURS_IN_DAY,\n  PRIZM_MILLISECONDS_IN_DAY,\n  PRIZM_MILLISECONDS_IN_HOUR,\n  PRIZM_MILLISECONDS_IN_MINUTE,\n  PRIZM_MINUTES_IN_HOUR,\n  PRIZM_SECONDS_IN_MINUTE,\n} from './date-time';\nimport { prizmPadStart } from '@prizm-ui/core';\nimport { PrizmTime } from './time';\n\n/**\n * Immutable time object with hours, minutes, seconds and ms\n */\nexport class PrizmTimeRange {\n  constructor(public from: PrizmTime, public to: PrizmTime) {}\n\n  public toString(timeMode: PrizmTimeMode, timeSeparator = ' - '): string {\n    return `${this.from.toString(timeMode)}${timeSeparator}${this.to.toString(timeMode)}`;\n  }\n}\n","import { PRIZM_RANGE_SEPARATOR_CHAR } from './date-time';\nimport { PrizmDayRange } from './day-range';\nimport { PrizmDateMode, PrizmTimeMode } from '../../types';\nimport { PrizmTimeRange } from './time-range';\nimport { PrizmTime } from './time';\n\nexport class PrizmDateTimeRange {\n  constructor(\n    public dayRange: PrizmDayRange,\n    public timeRange: PrizmTimeRange | null = new PrizmTimeRange(new PrizmTime(0, 0), new PrizmTime(0, 0))\n  ) {}\n\n  public static safeUpdateTimeFrom(origin: PrizmDateTimeRange | null, time: PrizmTime): PrizmDateTimeRange {\n    origin = PrizmDateTimeRange.createIfNotExist(origin);\n    if (!origin.timeRange) origin.timeRange = new PrizmTimeRange(new PrizmTime(0, 0), new PrizmTime(0, 0));\n    origin.timeRange.from = time;\n    return origin;\n  }\n\n  public static safeUpdateTimeTo(origin: PrizmDateTimeRange | null, time: PrizmTime): PrizmDateTimeRange {\n    origin = PrizmDateTimeRange.createIfNotExist(origin);\n    if (!origin.timeRange) origin.timeRange = new PrizmTimeRange(new PrizmTime(0, 0), new PrizmTime(23, 59));\n    origin.timeRange.to = time;\n    return origin;\n  }\n\n  public static createIfNotExist(origin: PrizmDateTimeRange | null): PrizmDateTimeRange {\n    if (!origin || !(origin instanceof PrizmDateTimeRange))\n      origin = new PrizmDateTimeRange(\n        PrizmDayRange.fromLocalNativeDate(new Date(), new Date()),\n        new PrizmTimeRange(new PrizmTime(0, 0), new PrizmTime(0, 0))\n      );\n\n    return origin;\n  }\n\n  public copy(): PrizmDateTimeRange {\n    return new PrizmDateTimeRange(this.dayRange, this.timeRange);\n  }\n\n  public toString(\n    dateFormat: PrizmDateMode = `DMY`,\n    timeFormat: PrizmTimeMode = `HH:MM`,\n    dateSeparator = `.`\n  ): string {\n    if (!this.dayRange?.from || !this.dayRange?.to || !this.timeRange?.from || !this.timeRange?.to) return '';\n\n    const from = this.dayRange.from.getFormattedDay(dateFormat, dateSeparator);\n    const fromTime = this.timeRange.from.toString(timeFormat);\n    const to = this.dayRange.to.getFormattedDay(dateFormat, dateSeparator);\n    const toTime = this.timeRange.to.toString(timeFormat);\n    return `${from} ${fromTime}${PRIZM_RANGE_SEPARATOR_CHAR}${to} ${toTime}`;\n  }\n\n  public updateDayRange(dayRange: PrizmDayRange): void {\n    this.dayRange = dayRange;\n  }\n}\n","import { PrizmDateTimeRange } from '../date-time/day-time-range';\n\nexport class PrizmDateTimeRangePeriod {\n  constructor(readonly range: PrizmDateTimeRange, private readonly name: string) {}\n\n  public toString(): string {\n    return this.name;\n  }\n}\n","import { PrizmDay } from '../date-time';\n\nexport class PrizmNamedDay {\n  constructor(readonly day: PrizmDay, private readonly name: string, readonly displayDay: PrizmDay = day) {}\n\n  public toString(): string {\n    return this.name;\n  }\n}\n","import { PrizmDayRange } from '../date-time/day-range';\n\nexport class PrizmDayRangePeriod {\n  constructor(readonly range: PrizmDayRange, private readonly name: string) {}\n\n  public toString(): string {\n    return this.name;\n  }\n}\n","import { PRIZM_MAX_TIME_VALUES } from '../../constants/max-time-values';\nimport { PRIZM_DIGIT_REGEXP } from '../../constants/regexp';\nimport { PrizmTimeFormatParts } from '../../types/time-format-parts';\nimport { PrizmTimeMode } from '../../types/time-mode';\nimport { PrizmTextMaskList } from './text-mask-list';\n\nfunction prizmCreateTimePartMask(maxPartValue: number, prefix?: string): Array<string | RegExp> {\n  const { length } = String(maxPartValue);\n  const regExp = new Array(length).fill(PRIZM_DIGIT_REGEXP);\n\n  if (prefix) {\n    regExp.unshift(prefix);\n  }\n\n  return regExp;\n}\n\n/**\n * @deprecated\n * use prizmCreateTimeNgxMask\n * */\nexport function prizmCreateTimeMask(\n  mode: PrizmTimeMode,\n  maxValues: Partial<Record<PrizmTimeFormatParts, number>> = {}\n): PrizmTextMaskList {\n  const { HH, MM, SS, MS } = {\n    ...PRIZM_MAX_TIME_VALUES,\n    ...maxValues,\n  };\n\n  return [\n    ...prizmCreateTimePartMask(HH),\n    ...prizmCreateTimePartMask(MM, `:`),\n    ...(mode.includes(`HH:MM:SS`) ? prizmCreateTimePartMask(SS, `:`) : []),\n    ...(mode === `HH:MM:SS.MSS` ? prizmCreateTimePartMask(MS, `.`) : []),\n  ];\n}\n\nexport function prizmCreateTimeNgxMask(\n  mode: PrizmTimeMode,\n  maxValues: Partial<Record<PrizmTimeFormatParts, number>> = {}\n): string {\n  return `00:00${mode.includes(`HH:MM:SS`) ? `:00` : ``}${mode === `HH:MM:SS.MSS` ? `.000` : ``}`;\n}\n","import { PrizmDateMode } from '../../types/date-mode';\nimport { prizmCreateTimeNgxMask } from './create-time-mask';\nimport { PrizmTimeMode } from '../../types';\n\nexport function prizmCreateDateTimeNgxMask(\n  mode: PrizmDateMode,\n  timeMode: PrizmTimeMode,\n  separator: string\n): any {\n  console.assert(separator.length === 1, `Separator should consist of only 1 symbol`);\n\n  switch (mode) {\n    case `YMD`:\n      return `0000${separator}00${separator}00 ${prizmCreateTimeNgxMask(timeMode)}`;\n    case `MDY`:\n    case `DMY`:\n    default:\n      return `00${separator}00${separator}0000 ${prizmCreateTimeNgxMask(timeMode)}`;\n  }\n}\n","import { PRIZM_DIGIT_REGEXP } from '../../constants';\nimport { PrizmDateMode } from '../../types/date-mode';\nimport { PrizmTextMaskList } from './text-mask-list';\nimport { prizmAssert } from '@prizm-ui/core';\n\nconst TWO_DIGITS = new Array(2).fill(PRIZM_DIGIT_REGEXP);\nconst FOUR_DIGITS = new Array(4).fill(PRIZM_DIGIT_REGEXP);\n\n/**\n * @deprecated\n * use prizmCreateDateNgxMask\n * */\nexport function prizmCreateDateMask(mode: PrizmDateMode, separator: string): PrizmTextMaskList {\n  prizmAssert.assert(separator.length === 1, `Separator should consist of only 1 symbol`);\n\n  switch (mode) {\n    case `YMD`:\n      return [...FOUR_DIGITS, separator, ...TWO_DIGITS, separator, ...TWO_DIGITS];\n    case `MDY`:\n    case `DMY`:\n    default:\n      return [...TWO_DIGITS, separator, ...TWO_DIGITS, separator, ...FOUR_DIGITS];\n  }\n}\n\nexport function prizmCreateDateNgxMask(mode: PrizmDateMode, separator: string): any {\n  console.assert(separator.length === 1, `Separator should consist of only 1 symbol`);\n\n  switch (mode) {\n    case `YMD`:\n      return `0000${separator}00${separator}00`;\n    case `MDY`:\n    case `DMY`:\n    default:\n      return `00${separator}00${separator}0000`;\n  }\n}\n","import { PrizmDateMode } from '../../types/date-mode';\nimport { prizmAssert } from '@prizm-ui/core';\nimport { prizmCreateDateTimeNgxMask } from './create-date-time-mask';\nimport { PrizmTimeMode } from '../../types';\n\nexport function prizmCreateDateTimeRangeMask(\n  dateMode: PrizmDateMode,\n  timeMode: PrizmTimeMode,\n  dateSeparator: string\n): string {\n  prizmAssert.assert(dateSeparator.length === 1, `Separator should consist of only 1 symbol`);\n\n  const dateMask = prizmCreateDateTimeNgxMask(dateMode, timeMode, dateSeparator);\n\n  return `${dateMask} - ${dateMask}`;\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Use this token to access context within your components when\n * instantiating them through {@link PolymorphOutletDirective}\n */\nexport const POLYMORPH_CONTEXT = new InjectionToken<Record<string, unknown>>('Context from *polymorphOutlet');\n","import { Injector, Type } from '@angular/core';\nimport { POLYMORPH_CONTEXT } from '../tokens/context';\n\n/**\n * Wrapper class for a component that will be used as content for {@link PolymorphOutletDirective}\n *\n * @param component — an Angular component to be dynamically created\n * @param injector — optional {@link Injector} for lazy loaded module case\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport class PolymorphComponent<T extends object, C = any> {\n  constructor(readonly component: Type<T>, private readonly injector: Injector | null = null) {}\n\n  public createInjector(injector: Injector, context: C): Injector {\n    return Injector.create({\n      parent: this.injector || injector,\n      providers: [\n        {\n          provide: POLYMORPH_CONTEXT,\n          useValue: context,\n        },\n      ],\n    });\n  }\n}\n","import { ChangeDetectorRef, Directive, Inject, Input, Self, TemplateRef } from '@angular/core';\n\n/**\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\n */\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'ng-template[polymorph]',\n  // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n  inputs: ['polymorph'],\n  exportAs: 'polymorph',\n  standalone: true,\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class PolymorphTemplate<C = any> {\n  @Input() polymorph: C | '' = '';\n\n  constructor(\n    @Inject(TemplateRef)\n    @Self()\n    readonly template: TemplateRef<C>,\n    @Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  public static ngTemplateContextGuard<T>(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    _dir: PolymorphTemplate<T>,\n    _ctx: any\n  ): _ctx is T extends string ? any : T {\n    return true;\n  }\n\n  public check(): void {\n    this.changeDetectorRef.markForCheck();\n  }\n}\n","export class PrimitiveContext {\n  constructor(public $implicit: unknown) {}\n\n  get polymorphOutlet(): unknown {\n    return this.$implicit;\n  }\n}\n","import { TemplateRef } from '@angular/core';\nimport { PolymorphContent } from './types/content';\nimport { PolymorphTemplate } from './directives/template';\nimport { PolymorphComponent } from './classes/component';\n\nexport const isPolymorphPrimitive = <T = any>(content: PolymorphContent<T>): boolean => {\n  if (isPolymorphTemplate(content)) return false;\n  if (isPolymorphComponent(content)) return false;\n  return true;\n};\n\nexport const isPolymorphTemplate = <T = any>(content: PolymorphContent<T>) => {\n  if (isPolymorphDirective(content)) {\n    return true;\n  }\n\n  return content instanceof TemplateRef ? true : false;\n};\n\nexport const isPolymorphDirective = <C = any>(\n  content: PolymorphContent<C> | null\n): content is PolymorphTemplate<C> => {\n  return content instanceof PolymorphTemplate;\n};\n\nexport const isPolymorphComponent = <C = any>(\n  content: PolymorphContent<C> | null\n): content is PolymorphComponent<Record<string, unknown>, C> => {\n  return content instanceof PolymorphComponent;\n};\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Injector,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PolymorphComponent } from '../classes/component';\nimport { PrimitiveContext } from '../classes/primitive-context';\nimport { PolymorphContent } from '../types/content';\nimport { PolymorphTemplate } from './template';\nimport { isPolymorphComponent, isPolymorphDirective } from '../util';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[polymorphOutlet]',\n  standalone: true,\n})\n// eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle,@typescript-eslint/ban-types\nexport class PolymorphOutletDirective<C extends object> implements OnChanges, DoCheck {\n  private viewRef?: EmbeddedViewRef<unknown>;\n\n  private componentRef?: ComponentRef<unknown>;\n\n  @Input('polymorphOutlet')\n  content: PolymorphContent<C> = '';\n\n  @Input('polymorphOutletContext')\n  context!: C;\n\n  @Input('polymorphOutletInjector')\n  injector: Injector = this.currentInjector;\n\n  constructor(\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly currentInjector: Injector,\n    private readonly templateRef: TemplateRef<PrimitiveContext>\n  ) {}\n\n  private get template(): TemplateRef<unknown> {\n    if (isPolymorphDirective(this.content)) {\n      return this.content.template;\n    }\n\n    return this.content instanceof TemplateRef ? this.content : this.templateRef;\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngOnChanges({ content }: SimpleChanges): void {\n    if (this.viewRef) {\n      this.viewRef.context = this.getContext();\n    }\n\n    if (this.componentRef) {\n      this.componentRef.injector.get(ChangeDetectorRef).markForCheck();\n    }\n\n    if (!content) {\n      return;\n    }\n\n    this.viewContainerRef.clear();\n\n    if (isPolymorphComponent(this.content)) {\n      const proxy = new Proxy(this.context ?? ({} as unknown as C), {\n        get: (_, key): unknown => this.context[key as keyof C],\n      });\n      const injector = this.content.createInjector(this.injector, proxy);\n      this.componentRef = this.viewContainerRef.createComponent(this.content.component, {\n        injector: injector,\n      });\n    } else {\n      this.viewRef = this.viewContainerRef.createEmbeddedView(this.template, this.getContext(), {\n        injector: this.injector,\n      });\n    }\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-conflicting-lifecycle\n  ngDoCheck(): void {\n    if (isPolymorphDirective(this.content)) {\n      this.content.check();\n    }\n  }\n\n  private getContext(): unknown {\n    return isTemplate(this.content)\n      ? this.context\n      : new PrimitiveContext(typeof this.content === 'function' ? this.content(this.context) : this.content);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isTemplate<C extends object>(\n  content: PolymorphContent<C> | null\n): content is PolymorphTemplate<C> | TemplateRef<C> {\n  return isPolymorphDirective(content) || content instanceof TemplateRef;\n}\n","import { NgModule } from '@angular/core';\nimport { PolymorphOutletDirective } from './directives/outlet';\nimport { PolymorphTemplate } from './directives/template';\n\n/**\n * @deprecated\n * use standalone instead of\n * */\n@NgModule({\n  imports: [PolymorphOutletDirective, PolymorphTemplate],\n  exports: [PolymorphOutletDirective, PolymorphTemplate],\n})\nexport class PolymorphModule {}\n","/**\n * Forked from ng-polymorph\n */\nexport * from './classes/component';\nexport * from './directives/template';\nexport * from './directives/outlet';\nexport * from './tokens/context';\nexport * from './types/content';\nexport * from './types/handler';\nexport * from './types/primitive';\nexport * from './polymorph.module';\nexport * from './util';\n","import { Directive, ElementRef, Inject, NgZone, Output } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, skip, startWith } from 'rxjs/operators';\nimport { prizmZoneOptimized } from '../../observables/zone-free';\nimport { prizmTypedFromEvent } from '../../observables/typed-from-event';\nimport { prizmIsNativeFocused } from '../../util';\n\n/**\n * Directive to monitor focus/blur status, works with focusIn/focus-out\n * instead of focus/blur to sync events order with Internet Explorer and\n * other focus related directives that require bubbling\n */\n@Directive({\n  selector: '[prizmFocusedChange]',\n})\nexport class PrizmFocusedDirective {\n  @Output()\n  readonly prizmFocusedChange: Observable<boolean>;\n\n  constructor(\n    @Inject(ElementRef)\n    { nativeElement }: ElementRef<HTMLElement>,\n    @Inject(NgZone) ngZone: NgZone\n  ) {\n    this.prizmFocusedChange = merge(\n      prizmTypedFromEvent(nativeElement, 'focusin'),\n      prizmTypedFromEvent(nativeElement, 'focusout')\n    ).pipe(\n      map(() => prizmIsNativeFocused(nativeElement)),\n      startWith(false),\n      distinctUntilChanged(),\n      skip(1),\n      prizmZoneOptimized(ngZone)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmFocusedDirective } from './focused.directive';\n\n@NgModule({\n  declarations: [PrizmFocusedDirective],\n  exports: [PrizmFocusedDirective],\n})\nexport class PrizmFocusedModule {}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\n/**\n * Abstraction over `tabindex`\n */\n@Directive({\n  selector: '[prizmFocusable]',\n})\nexport class PrizmFocusableDirective {\n  /**\n   * Element can be focused with keyboard\n   */\n  @Input('prizmFocusable')\n  focusable = true;\n\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.focusable ? 0 : -1;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmFocusableDirective } from './focusable.directive';\n\n@NgModule({\n  declarations: [PrizmFocusableDirective],\n  exports: [PrizmFocusableDirective],\n})\nexport class PrizmFocusableModule {}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport function prizmStopPropagation<T extends Event>(): MonoTypeOperatorFunction<T> {\n  return tap(e => {\n    e.stopPropagation();\n  });\n}\n","import { Attribute, Directive, ElementRef, Inject, NgZone } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { fromEvent, Observable } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { prizmStopPropagation } from '../../observables/stop-propagation';\nimport { prizmZoneFree } from '../../observables/zone-free';\n\n/**\n * Simple prevent default on event directive when you do not need anything\n * else on event and do not want to trigger change detection\n */\n@Directive({\n  selector: `[prizmStopPropagation]`,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmStopPropagationDirective {\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<HTMLElement>,\n    @Inject(NgZone) ngZone: NgZone,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>,\n    @Attribute(`prizmStopPropagation`) eventName: string\n  ) {\n    fromEvent(nativeElement, eventName, { passive: false })\n      .pipe(prizmZoneFree(ngZone), prizmStopPropagation(), takeUntil(destroy$))\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmStopPropagationDirective } from './stop-propagation.directive';\n\n@NgModule({\n  declarations: [PrizmStopPropagationDirective],\n  exports: [PrizmStopPropagationDirective],\n})\nexport class PrizmStopPropagationModule {}\n","export class PrizmOwnerDocumentException extends Error {\n  constructor() {\n    super('Element does not have ownerDocument');\n  }\n}\n","import { merge, Observable } from 'rxjs';\n\nimport { prizmTypedFromEvent } from './typed-from-event';\n\n/**\n * Letting go of the mouse after it was pressed\n * @param target\n */\nexport function prizmMouseDragFinishFrom(target: any): Observable<any> {\n  return merge(prizmTypedFromEvent(target, 'mouseup'), prizmTypedFromEvent(target, 'dragend'));\n}\n","import { Observable } from 'rxjs';\nimport { filter, mapTo, startWith, switchMapTo, take } from 'rxjs/operators';\nimport { PrizmOwnerDocumentException } from '../exceptions/owner-document.exception';\n\nimport { prizmMouseDragFinishFrom } from './mouse-drag-finish-from';\nimport { prizmTypedFromEvent } from './typed-from-event';\n\nexport interface PrizmPressedObservableOptions {\n  onlyTrusted: boolean;\n}\n\nexport function prizmPressedObservable(\n  element: Element,\n  { onlyTrusted }: PrizmPressedObservableOptions = { onlyTrusted: true }\n): Observable<boolean> {\n  const { ownerDocument } = element;\n\n  if (!ownerDocument) {\n    throw new PrizmOwnerDocumentException();\n  }\n\n  return prizmTypedFromEvent(element, 'mousedown').pipe(\n    filter(({ isTrusted }) => isTrusted || !onlyTrusted),\n    switchMapTo(prizmMouseDragFinishFrom(ownerDocument).pipe(mapTo(false), take(1), startWith(true)))\n  );\n}\n","import { Directive, ElementRef, Inject, Output } from '@angular/core';\nimport { prizmPressedObservable } from '../../observables/pressed-observable';\nimport { PRIZM_TAKE_ONLY_TRUSTED_EVENTS } from '../../tokens/take-only-trusted-events';\n\n/**\n *\n * */\n@Directive({\n  selector: '[prizmPressedChange]',\n  standalone: true,\n})\nexport class PrizmPressedDirective {\n  @Output()\n  readonly prizmPressedChange = prizmPressedObservable(this.elementRef.nativeElement, {\n    onlyTrusted: this.takeOnlyTrustedEvents,\n  });\n\n  constructor(\n    @Inject(ElementRef) private readonly elementRef: ElementRef<Element>,\n    @Inject(PRIZM_TAKE_ONLY_TRUSTED_EVENTS)\n    private readonly takeOnlyTrustedEvents: boolean\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmPressedDirective } from './pressed.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPressedDirective],\n  exports: [PrizmPressedDirective],\n})\nexport class PrizmPressedModule {}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport function prizmPreventDefault<T extends Event>(): MonoTypeOperatorFunction<T> {\n  return tap(event => event.preventDefault());\n}\n","import { Directive, ElementRef, Inject, Output } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, mapTo, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { filterNotNullish, PrizmDestroyService } from '@prizm-ui/helpers';\nimport { prizmTypedFromEvent } from '../../observables/typed-from-event';\nimport { prizmPreventDefault } from '../../observables/prevent-default';\n\n@Directive({\n  selector: '[prizmDroppableDropped], [prizmDroppableDragOverChange]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmDroppableDirective {\n  @Output()\n  readonly prizmDroppableDropped: Observable<DataTransfer>;\n\n  @Output()\n  readonly prizmDroppableDragOverChange: Observable<DataTransfer | null>;\n\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<HTMLElement>,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>\n  ) {\n    this.prizmDroppableDropped = prizmTypedFromEvent(nativeElement, 'drop').pipe(\n      prizmPreventDefault(),\n      map(event => event.dataTransfer as any),\n      filterNotNullish()\n    );\n\n    this.prizmDroppableDragOverChange = prizmTypedFromEvent(nativeElement, 'dragenter').pipe(\n      switchMap(({ target, dataTransfer }) =>\n        merge(\n          prizmTypedFromEvent(nativeElement, 'dragleave').pipe(filter(event => event.target === target)),\n          prizmTypedFromEvent(nativeElement, 'drop')\n        ).pipe(mapTo(null), startWith(dataTransfer))\n      ),\n      distinctUntilChanged((a, b) => (!!a && !!b) || (!a && !b))\n    );\n\n    // Required by Drag and Drop API to stop redirecting\n    prizmTypedFromEvent(nativeElement, 'dragover')\n      .pipe(prizmPreventDefault(), takeUntil(destroy$))\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmDroppableDirective } from './droppable.directive';\n\n@NgModule({\n  declarations: [PrizmDroppableDirective],\n  exports: [PrizmDroppableDirective],\n})\nexport class PrizmDroppableModule {}\n","import { Injectable, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, fromEvent, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class PrizmEventZoneService implements OnDestroy {\n  private readonly eventSource$ = new BehaviorSubject<number>(Date.now());\n  public readonly event$ = this.eventSource$.asObservable();\n  private el_!: HTMLElement;\n  private parent?: PrizmEventZoneService;\n  get el(): HTMLElement {\n    return this.el_;\n  }\n\n  get rootEl(): HTMLElement {\n    if (this.parent) return this.parent.rootEl;\n    if (this.parentDropdownZoneService) return this.parentDropdownZoneService.rootEl;\n    return this.el_;\n  }\n\n  get rootService(): PrizmEventZoneService {\n    if (this.parent) return this.parent.rootService;\n    if (this.parentDropdownZoneService) return this.parentDropdownZoneService.rootService;\n    return this;\n  }\n\n  private readonly destroyListener$ = new Subject<void>();\n\n  constructor(@Optional() @SkipSelf() private readonly parentDropdownZoneService: PrizmEventZoneService) {}\n\n  public init(el: HTMLElement, eventType: string, parent?: PrizmEventZoneService): void {\n    this.el_ = el;\n    this.parent = parent;\n    this.destroyListener$.next();\n\n    fromEvent(el, eventType, {\n      capture: true,\n    })\n      .pipe(\n        tap(() => this.emit()),\n        takeUntil(this.destroyListener$)\n      )\n      .subscribe();\n  }\n\n  private emit(): void {\n    const time = Date.now();\n    if (this.parent) this.parent.emit();\n    this.eventSource$.next(time);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyListener$.next();\n    this.destroyListener$.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport { PrizmEventZoneService } from './event-zone.service';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\n\n/**\n * TODO change after migrate to Angular 13\n * injector support for ng-template\n * */\n@Directive({\n  selector: `[prizmEventZone]:not(ng-container), [prizmEventZoneChange]:not(ng-container), [prizmEventZoneParent]:not(ng-container)`,\n  exportAs: `prizmEventZone`,\n  providers: [PrizmEventZoneService, PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmDropdownZoneDirective implements OnInit, OnChanges {\n  @Output() prizmEventZoneEvent = new EventEmitter<number>();\n  @Input() prizmEventZoneParent?: PrizmDropdownZoneDirective;\n  @Input() prizmEventZoneHost?: HTMLElement;\n\n  get host(): HTMLElement {\n    return this.prizmEventZoneHost ?? this.elementRef.nativeElement;\n  }\n\n  constructor(\n    @Self() private readonly dz: PrizmEventZoneService,\n    @Optional() @SkipSelf() public readonly parentDropdownZoneService: PrizmEventZoneService,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly elementRef: ElementRef,\n    public readonly injector: Injector\n  ) {}\n\n  public ngOnInit(): void {\n    this.dz.init(this.host, 'click', this.prizmEventZoneParent?.dz ?? this.parentDropdownZoneService);\n    this.dz.event$\n      .pipe(\n        tap(time => this.prizmEventZoneEvent.next(time)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.prizmEventZoneElement) this.dz.init(this.host, 'click', this.prizmEventZoneParent?.dz);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmDropdownZoneDirective } from './event-zone.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmDropdownZoneDirective],\n  exports: [PrizmDropdownZoneDirective],\n})\nexport class PrizmDropdownZoneModule {}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { MonoTypeOperatorFunction } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport function prizmWatch<T>(changeDetectorRef: ChangeDetectorRef): MonoTypeOperatorFunction<T> {\n  return tap(() => {\n    changeDetectorRef.markForCheck();\n  });\n}\n","import { OperatorFunction, pipe, timer } from 'rxjs';\nimport { distinctUntilChanged, mapTo, startWith, switchMapTo } from 'rxjs/operators';\n\n/**\n * Operator to set lifespan after which current value is considered obsolete\n */\nexport function prizmIsAlive(lifespan = 0): OperatorFunction<any, boolean> {\n  return pipe(switchMapTo(timer(lifespan).pipe(mapTo(false), startWith(true))), distinctUntilChanged());\n}\n","export class PrizmTableSortKeyException extends Error {\n  constructor() {\n    super(`Trying to sort with no key`);\n  }\n}\n","import { PRIZM_TOAST_ID } from '../components/toast/types';\n\nexport class PrizmToastExistException extends Error {\n  constructor(id: PRIZM_TOAST_ID) {\n    super(`Toast with id <${id}> already exist`);\n  }\n}\n","import { PRIZM_TOAST_ID } from '../components/toast/types';\n\nexport class PrizmToastNotExistException extends Error {\n  constructor(id: PRIZM_TOAST_ID) {\n    super(`Toast with id <${id}> does not exist`);\n  }\n}\n","import { concat, merge, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  ignoreElements,\n  mapTo,\n  repeat,\n  shareReplay,\n  startWith,\n  switchMapTo,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { prizmIsAlive } from './is-alive';\nimport { PrizmOwnerDocumentException } from '../exceptions';\nimport { prizmIsNativeFocused } from '../util';\nimport { prizmTypedFromEvent } from './typed-from-event';\n\nlet documentMouseUpIsAlive$: Observable<boolean>;\nlet documentMouseDownIsAlive$: Observable<boolean>;\n\nexport function prizmFocusVisibleObservable(element: Element): Observable<boolean> {\n  const elementBlur$ = prizmTypedFromEvent(element, 'blur');\n  const { ownerDocument } = element;\n\n  if (!ownerDocument) {\n    throw new PrizmOwnerDocumentException();\n  }\n\n  if (!documentMouseDownIsAlive$ || !documentMouseUpIsAlive$) {\n    documentMouseUpIsAlive$ = prizmTypedFromEvent(ownerDocument, 'mouseup', {\n      capture: true,\n    }).pipe(prizmIsAlive(), startWith(false), shareReplay({ bufferSize: 1, refCount: true }));\n    documentMouseDownIsAlive$ = prizmTypedFromEvent(ownerDocument, 'mousedown', {\n      capture: true,\n    }).pipe(prizmIsAlive(), startWith(false), shareReplay({ bufferSize: 1, refCount: true }));\n  }\n\n  return merge(\n    // focus events excluding ones that came right after mouse action\n    concat(\n      prizmTypedFromEvent(element, 'focus').pipe(take(1)),\n      // filtering out blur events when element remains focused so that we ignore browser tab focus loss\n      elementBlur$.pipe(\n        filter(() => !prizmIsNativeFocused(element)),\n        take(1),\n        ignoreElements()\n      )\n    ).pipe(\n      repeat(),\n      withLatestFrom(\n        documentMouseDownIsAlive$,\n        documentMouseUpIsAlive$,\n        (_event, elementActual, documentActual) => elementActual || documentActual\n      ),\n      filter(isUserFocus => !isUserFocus)\n    )\n  ).pipe(switchMapTo(elementBlur$.pipe(mapTo(false), take(1), startWith(true))), distinctUntilChanged());\n}\n","import { ChangeDetectorRef, ElementRef, Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { prizmWatch } from '../../observables/watch';\nimport { prizmFocusVisibleObservable } from '../../observables/focus-visible-observable';\n\n/**\n * Service to imitate :focus-visible\n * (https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible)\n * in browsers that do not support it\n */\n@Injectable()\nexport class PrizmFocusVisibleService extends Observable<boolean> {\n  private readonly focusVisible$: Observable<boolean>;\n\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<Element>,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>\n  ) {\n    super(subscriber => this.focusVisible$.subscribe(subscriber));\n\n    this.focusVisible$ = prizmFocusVisibleObservable(nativeElement).pipe(\n      prizmWatch(changeDetectorRef),\n      takeUntil(destroy$)\n    );\n  }\n}\n","import { Directive, Inject } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { Observable } from 'rxjs';\nimport { PrizmFocusVisibleService } from './focus-visible.service';\n\n/**\n * Directive to imitate :focus-visible\n * (https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible)\n * in browsers that do not support it\n */\n@Directive({\n  selector: '[prizmFocusVisibleChange]',\n  // eslint-disable-next-line @angular-eslint/no-outputs-metadata-property\n  outputs: ['prizmFocusVisibleChange'],\n  providers: [PrizmDestroyService, PrizmFocusVisibleService],\n})\nexport class PrizmFocusVisibleDirective {\n  constructor(\n    @Inject(PrizmFocusVisibleService)\n    readonly prizmFocusVisibleChange: Observable<boolean>\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmFocusVisibleDirective } from './focus-visible.directive';\n\n@NgModule({\n  declarations: [PrizmFocusVisibleDirective],\n  exports: [PrizmFocusVisibleDirective],\n})\nexport class PrizmFocusVisibleModule {}\n","import { Directive, ElementRef, Inject, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PrizmHoveredService } from '../../services/hovered.service';\n\n@Directive({\n  selector: '[prizmHoveredChange]',\n  standalone: true,\n})\nexport class PrizmHoveredDirective {\n  @Output()\n  readonly prizmHoveredChange: Observable<boolean>;\n\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<Element>,\n    @Inject(PrizmHoveredService) hoveredService: PrizmHoveredService\n  ) {\n    this.prizmHoveredChange = hoveredService.createHovered$(nativeElement);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmHoveredDirective } from './hovered.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmHoveredDirective],\n  exports: [PrizmHoveredDirective],\n})\nexport class PrizmHoveredModule {}\n","import { Inject, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, fromEvent, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, mapTo, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmZoneEvent } from './model';\nimport { DOCUMENT } from '@angular/common';\nimport { prizmRaceInEmit } from '@prizm-ui/helpers';\n\n@Injectable()\nexport class PrizmZoneEventService {\n  private readonly childrenSet = new Set<PrizmZoneEventService>();\n  private readonly childrenChanges$$ = new Subject<void>();\n  private readonly childrenChanges$: Observable<Set<PrizmZoneEventService>> = this.childrenChanges$$.pipe(\n    mapTo(this.childrenSet)\n  );\n  private parents = new Set<PrizmZoneEventService>();\n  public readonly destroyPrevious$ = new Subject<void>();\n  public readonly destroy$ = new Subject<void>();\n  public readonly inside$$ = new Subject<PrizmZoneEvent>();\n  public readonly outside$$ = new Subject<PrizmZoneEvent>();\n  public hostElement$$ = new BehaviorSubject<HTMLElement | null>(null);\n  private readonly innerEvent$$ = new Subject<{\n    service: PrizmZoneEventService;\n    name: string;\n    event: UIEvent;\n  }>();\n  get children(): PrizmZoneEventService[] {\n    return [...this.childrenSet];\n  }\n\n  constructor(\n    @SkipSelf() @Optional() private zoneService: PrizmZoneEventService,\n    @Inject(DOCUMENT) private readonly documentRef: Document\n  ) {\n    if (this.zoneService) this.parents.add(this.zoneService);\n  }\n\n  public triggerEvent(\n    name: string,\n    event: UIEvent,\n    service: PrizmZoneEventService,\n    guardFromRecursiveCall: Set<PrizmZoneEventService>\n  ): void {\n    this.innerEvent$$.next({\n      name,\n      event,\n      service,\n    });\n    guardFromRecursiveCall.add(this);\n    this.parents.forEach(parent => {\n      if (guardFromRecursiveCall.has(parent)) return;\n      parent.triggerEvent(name, event, service, guardFromRecursiveCall);\n    });\n  }\n\n  public setParent(parent: PrizmZoneEventService): void {\n    if (!parent) return;\n    this.parents.add(parent);\n  }\n\n  public safeAddListener(eventName: string, hostElement: HTMLElement): void {\n    this.hostElement$$.next(hostElement);\n    this.destroy();\n    if (eventName && hostElement) {\n      this.initListener(eventName);\n    }\n  }\n\n  public getInOutSideEvents(eventName: string): Observable<{ event: UIEvent; inside: boolean }> {\n    return prizmRaceInEmit(\n      [\n        this.innerEvent$$.pipe(map(({ event }) => ({ event, inside: true }))),\n        fromEvent<UIEvent>(this.documentRef, eventName).pipe(map(event => ({ event, inside: false }))),\n      ],\n      0\n    ).pipe(takeUntil(this.destroy$));\n  }\n\n  private initListener(eventName: string): void {\n    if (this.hostElement$$.value)\n      fromEvent(this.hostElement$$.value, eventName)\n        .pipe(\n          tap(event => {\n            this.triggerEvent(eventName, event as UIEvent, this, new Set());\n          }),\n          takeUntil(this.destroyPrevious$)\n        )\n        .subscribe();\n\n    const repeat$ = new BehaviorSubject<void>(void 0);\n    this.getInOutSideEvents(eventName)\n      .pipe(\n        tap(({ event, inside }) => {\n          const time = performance.now();\n          const emit = { event, time } as PrizmZoneEvent;\n          if (inside) this.inside$$.next(emit);\n          else {\n            this.outside$$.next(emit);\n          }\n        }),\n        debounceTime(0),\n        tap(() => repeat$.next()),\n        takeUntil(this.destroyPrevious$)\n      )\n      .subscribe();\n  }\n\n  public destroy(): void {\n    this.destroyPrevious$.next();\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmZoneEventService } from './zone-event.service';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n/**\n * listening inside/ouside events in zone\n * also can use in none nested elements to create common zone and detect events\n * TODO: add example to doc\n * */\n@Directive({\n  selector: '[prizmZoneEvent]',\n  exportAs: 'prizmZoneEvent',\n  providers: [PrizmZoneEventService, PrizmDestroyService],\n})\nexport class PrizmZoneEventDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() zoneElement?: HTMLElement;\n  @Input() parentZone?: PrizmZoneEventDirective;\n  @Input() childrenZones: PrizmZoneEventService[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  zoneEventName = 'click';\n\n  @Input()\n  @prizmDefaultProp()\n  zoneActive = true;\n\n  @Output() readonly zoneOutsideEvent = new EventEmitter<UIEvent>();\n  @Output() readonly zoneInsideEvent = new EventEmitter<UIEvent>();\n  public readonly destroyPrevious$ = new Subject<void>();\n\n  get htmlElement(): HTMLElement {\n    return this.zoneElement ?? this.elementRef.nativeElement;\n  }\n  private readonly elementRef: ElementRef = inject(ElementRef);\n  private readonly destroyService: PrizmDestroyService = inject(PrizmDestroyService);\n  private readonly eventZoneService: PrizmZoneEventService = inject(PrizmZoneEventService, {\n    self: true,\n  });\n  private readonly parentEventZoneService: PrizmZoneEventService | null = inject(PrizmZoneEventService, {\n    skipSelf: true,\n    optional: true,\n  });\n\n  constructor() {\n    if (this.parentEventZoneService) {\n      this.eventZoneService.setParent(this.parentEventZoneService);\n    }\n  }\n\n  public ngOnInit(): void {\n    if (this.parentZone) {\n      this.eventZoneService.setParent(this.parentZone.eventZoneService);\n    }\n    this.childrenZones.map(childrenZone => {\n      childrenZone.setParent(this.eventZoneService);\n    });\n    this.safeInit();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.safeInit();\n  }\n\n  public async safeInit(): Promise<void> {\n    this.destroyPrevious$.next();\n    this.eventZoneService.destroy();\n    if (!this.zoneActive) return;\n    this.eventZoneService.safeAddListener(this.zoneEventName, this.htmlElement);\n\n    this.eventZoneService.outside$$\n      .pipe(\n        tap(event => {\n          this.zoneOutsideEvent.next(event?.event);\n        }),\n        takeUntil(this.destroyService),\n        takeUntil(this.destroyPrevious$)\n      )\n      .subscribe();\n\n    this.eventZoneService.inside$$\n      .pipe(\n        tap(event => {\n          this.zoneInsideEvent.next(event?.event);\n        }),\n        takeUntil(this.destroyService),\n        takeUntil(this.destroyPrevious$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyPrevious$.next();\n    this.destroyPrevious$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmZoneEventDirective } from './zone-event.directive';\n\n@NgModule({\n  exports: [PrizmZoneEventDirective],\n  declarations: [PrizmZoneEventDirective],\n})\nexport class PrizmZoneEventModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { filter, mapTo, switchMap, tap } from 'rxjs/operators';\nimport { prizmTypedFromEvent, prizmZoneFree } from '../../observables';\nimport { PrizmEventWith } from '../../types';\nimport { prizmCanScroll, prizmGetScrollParent } from '../../util/dom';\nimport { PrizmOverscrollMode } from './overscroll.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmOverscrollService {\n  constructor(private readonly ngZone: NgZone) {}\n\n  public run(mode: PrizmOverscrollMode | '', nativeElement: HTMLElement): Observable<void> {\n    return merge(\n      prizmTypedFromEvent(nativeElement, 'wheel', { passive: false }).pipe(\n        filter(() => this.isEnabled(mode)),\n        prizmZoneFree(this.ngZone),\n        tap(event => {\n          this.processEvent(mode, event, !!event.deltaY, event.deltaY ? event.deltaY < 0 : event.deltaX < 0);\n        })\n      ),\n      prizmTypedFromEvent(nativeElement, 'touchstart', { passive: true }).pipe(\n        switchMap(({ touches }: { touches: TouchList }) => {\n          let { clientX, clientY } = touches[0];\n          let deltaX = 0;\n          let deltaY = 0;\n          let vertical: boolean;\n\n          return prizmTypedFromEvent(nativeElement, 'touchmove', {\n            passive: false,\n          }).pipe(\n            filter(() => this.isEnabled(mode)),\n            tap(event => {\n              // We have to have it in tap instead of subscribe due to variables in closure\n              const changedTouch = event.changedTouches[0];\n\n              deltaX = clientX - changedTouch.clientX;\n              deltaY = clientY - changedTouch.clientY;\n              clientX = changedTouch.clientX;\n              clientY = changedTouch.clientY;\n\n              if (vertical === undefined) {\n                vertical = Math.abs(deltaY) > Math.abs(deltaX);\n              }\n\n              this.processEvent(mode, event, vertical, vertical ? deltaY < 0 : deltaX < 0);\n            })\n          );\n        }),\n        prizmZoneFree(this.ngZone)\n      )\n    ).pipe(mapTo(void 0));\n  }\n\n  private isEnabled(mode: PrizmOverscrollMode | ''): boolean {\n    return mode !== 'none';\n  }\n\n  private processEvent(\n    mode: PrizmOverscrollMode | '',\n    event: PrizmEventWith<Event, HTMLElement>,\n    vertical: boolean,\n    negative: boolean\n  ): void {\n    const { target, currentTarget, cancelable } = event;\n\n    if (!cancelable || !(target instanceof Element) || (target as HTMLInputElement)?.type === 'range') {\n      return;\n    }\n\n    // This is all what's needed in Chrome/Firefox thanks to CSS overscroll-behavior\n    if (\n      mode === 'all' &&\n      ((vertical && !currentTarget.contains(prizmGetScrollParent(target))) ||\n        (!vertical && !currentTarget.contains(prizmGetScrollParent(target, false))))\n    ) {\n      event.preventDefault();\n\n      return;\n    }\n\n    // This is Safari/IE/Edge fallback\n    if (\n      vertical &&\n      ((negative && !prizmCanScroll(target, currentTarget, true, false)) ||\n        (!negative && !prizmCanScroll(target, currentTarget, true, true)))\n    ) {\n      event.preventDefault();\n\n      return;\n    }\n\n    if (\n      !vertical &&\n      ((negative && !prizmCanScroll(target, currentTarget, false, false)) ||\n        (!negative && !prizmCanScroll(target, currentTarget, false, true)))\n    ) {\n      event.preventDefault();\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input, OnInit } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmOverscrollMode } from './overscroll.model';\nimport { PrizmOverscrollService } from './overscroll.service';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Directive to isolate scrolling, i.e. prevent body scroll behind modal dialog\n */\n@Directive({\n  selector: '[prizmOverscroll]',\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmOverscrollDirective implements OnInit {\n  @Input('prizmOverscroll')\n  public mode: PrizmOverscrollMode | '' = 'scroll';\n\n  public get enabled(): boolean {\n    return this.mode !== 'none';\n  }\n\n  @HostBinding('style.overscrollBehavior')\n  public get overscrollBehavior(): 'contain' | null {\n    return this.enabled ? 'contain' : null;\n  }\n\n  constructor(\n    private readonly elRef: ElementRef<HTMLElement>,\n    private readonly overscrollService: PrizmOverscrollService,\n    private readonly destroy$: PrizmDestroyService\n  ) {}\n\n  public ngOnInit(): void {\n    this.overscrollService\n      .run(this.mode, this.elRef.nativeElement)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmOverscrollDirective } from './overscroll.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmOverscrollDirective],\n  exports: [PrizmOverscrollDirective],\n})\nexport class PrizmOverscrollModule {}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: 'input[prizmChecked], input[prizmCheckedChange]',\n})\nexport class PrizmCheckedDirective {\n  @Input()\n  set prizmChecked(checked: null | boolean) {\n    this.updateProperty('checked', checked || false);\n    this.updateProperty('indeterminate', checked === null);\n  }\n\n  @Output()\n  readonly prizmCheckedChange = new EventEmitter<boolean>();\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly element: ElementRef<HTMLInputElement>,\n    @Inject(Renderer2) private readonly renderer: Renderer2\n  ) {\n    this.updateProperty('checked', false);\n  }\n\n  @HostListener('change', ['$event.target'])\n  public onChange({ checked }: HTMLInputElement): void {\n    this.updateProperty('indeterminate', false);\n    this.prizmCheckedChange.emit(checked);\n  }\n\n  private updateProperty(property: 'checked' | 'indeterminate', value: boolean): void {\n    this.renderer.setProperty(this.element.nativeElement, property, value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmCheckedDirective } from './checked.directive';\n\n@NgModule({\n  declarations: [PrizmCheckedDirective],\n  exports: [PrizmCheckedDirective],\n})\nexport class PrizmCheckedModule {}\n","import { prizmSvgNodeFilter } from '../constants/svg-node-filter';\nimport { prizmIsNativeKeyboardFocusable } from './is-native-keyboard-focusable';\nimport { prizmIsNativeMouseFocusable } from './is-native-mouse-focusable';\n\n/**\n * Finds the closest element that can be focused with a keyboard or mouse\n */\nexport function prizmGetClosestFocusable(\n  initial: HTMLElement,\n  prev = false,\n  root: Node,\n  keyboard = true\n): HTMLElement | null {\n  if (!root.ownerDocument) {\n    return null;\n  }\n\n  const check = keyboard ? prizmIsNativeKeyboardFocusable : prizmIsNativeMouseFocusable;\n\n  const treeWalker = root.ownerDocument.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, prizmSvgNodeFilter);\n\n  treeWalker.currentNode = initial;\n\n  while (prev ? treeWalker.previousNode() : treeWalker.nextNode()) {\n    if (treeWalker.currentNode instanceof HTMLElement) {\n      initial = treeWalker.currentNode;\n    }\n\n    if (check(initial)) {\n      return initial;\n    }\n  }\n\n  return null;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { prizmBlurNativeFocused, prizmGetNativeFocused, prizmSetNativeFocused } from '../../util';\nimport { prizmContainsOrAfter } from '../../util/dom';\nimport { prizmGetClosestFocusable } from '../../util/get-closest-keyboard-focusable';\n\n@Directive({\n  selector: '[prizmFocusTrap]',\n})\nexport class PrizmFocusTrapDirective implements OnDestroy {\n  private readonly activeElement = prizmGetNativeFocused(this.documentRef);\n\n  @HostBinding('tabIndex') public tabIndex = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(ElementRef)\n    private readonly elementRef: ElementRef<HTMLElement>,\n    private readonly cdRef: ChangeDetectorRef,\n    @Inject(Renderer2) private readonly renderer: Renderer2\n  ) {\n    /**\n     * This would cause currently focused element to lose focus,\n     * but it might cause ExpressionChanged error due to potential HostBinding.\n     * Microtask keeps it in the same frame but allows change detection to run\n     */\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => {\n      prizmSetNativeFocused(this.elementRef.nativeElement);\n    });\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, 'tabIndex');\n  }\n\n  @HostListener('window:focusin.silent', ['$event.target'])\n  public onFocusIn(node: Node): void {\n    if (prizmContainsOrAfter(this.elementRef.nativeElement, node)) {\n      this.cdRef.markForCheck();\n      return;\n    }\n\n    const focusable = prizmGetClosestFocusable(\n      this.elementRef.nativeElement,\n      false,\n      this.elementRef.nativeElement\n    );\n\n    if (focusable) {\n      prizmSetNativeFocused(focusable);\n    }\n  }\n\n  ngOnDestroy(): void {\n    prizmBlurNativeFocused(this.documentRef);\n\n    /**\n     * HostListeners are triggered even after ngOnDestroy\n     * {@link https://github.com/angular/angular/issues/38100}\n     * so we need to delay it but stay in the same sync cycle,\n     * therefore using Promise instead of setTimeout\n     */\n    // eslint-disable-next-line\n    Promise.resolve().then(() => {\n      if (this.activeElement instanceof HTMLElement) {\n        prizmSetNativeFocused(this.activeElement);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmFocusTrapDirective } from './focus-trap.directive';\n\n@NgModule({\n  declarations: [PrizmFocusTrapDirective],\n  exports: [PrizmFocusTrapDirective],\n})\nexport class PrizmFocusTrapModule {}\n","import { Directive, ElementRef, Inject, Input, OnInit, Output } from '@angular/core';\nimport { interval, ReplaySubject } from 'rxjs';\nimport { filter, take, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: '[prizmElementReady]',\n  exportAs: 'prizmElementReady',\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmElementReadyDirective implements OnInit {\n  @Output()\n  readonly ready$ = new ReplaySubject<boolean>();\n\n  @Input()\n  readonly interval = 1000 / 60;\n\n  @Input()\n  checker: (el: ElementRef) => boolean = () => true;\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly element: ElementRef<HTMLInputElement>,\n    private destroy$: PrizmDestroyService\n  ) {}\n\n  ngOnInit(): void {\n    interval(this.interval)\n      .pipe(\n        filter(() => this.checker(this.element)),\n        tap(() => this.ready$.next(true)),\n        take(1),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmElementReadyDirective } from './element-ready.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmElementReadyDirective],\n  exports: [PrizmElementReadyDirective],\n})\nexport class PrizmElementReadyModule {}\n","import { Attribute, Directive, ElementRef, Inject, NgZone } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { fromEvent, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { prizmPreventDefault } from '../../observables/prevent-default';\nimport { prizmZoneFree } from '../../observables/zone-free';\n\n/**\n * Simple prevent default on event directive when you do not need anything\n * else on event and do not want to trigger change detection\n */\n@Directive({\n  selector: `[prizmPreventDefault]`,\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmPreventDefaultDirective {\n  constructor(\n    @Inject(ElementRef) { nativeElement }: ElementRef<HTMLElement>,\n    @Inject(NgZone) ngZone: NgZone,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>,\n    @Attribute(`prizmPreventDefault`) eventName: string\n  ) {\n    fromEvent(nativeElement, eventName, { passive: false })\n      .pipe(prizmZoneFree(ngZone), prizmPreventDefault(), takeUntil(destroy$))\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmPreventDefaultDirective } from './prevent-default.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPreventDefaultDirective],\n  exports: [PrizmPreventDefaultDirective],\n})\nexport class PrizmPreventDefaultModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class PrizmHintService {\n  private readonly subHoveredSource$ = new ReplaySubject<{ id: string; hovered: boolean }>();\n\n  public childHovered(hintId: string): Observable<boolean> {\n    return this.subHoveredSource$.pipe(\n      filter(({ id }) => id === hintId),\n      map(({ hovered }) => hovered),\n      startWith(false)\n    );\n  }\n\n  public emit(hintId: string, hovered: boolean): void {\n    this.subHoveredSource$.next({ id: hintId, hovered });\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { PRIZM_SCROLL_REF } from '../../tokens';\n\n@Directive({\n  selector: '[prizmScrollRef]',\n  providers: [\n    {\n      provide: PRIZM_SCROLL_REF,\n      useExisting: ElementRef,\n    },\n  ],\n  standalone: true,\n})\nexport class PrizmScrollRefDirective {}\n","import { Directive, ElementRef, inject, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { PRIZM_SCROLLABLE } from '../../constants/events';\n\n@Directive({\n  selector: '[prizmScrollable]',\n  standalone: true,\n})\nexport class PrizmScrollableDirective implements OnInit {\n  readonly elementRef = inject(ElementRef<HTMLElement>);\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.dispatchEvent(\n      new CustomEvent(PRIZM_SCROLLABLE, {\n        bubbles: true,\n        detail: this.elementRef.nativeElement,\n      })\n    );\n  }\n}\n","import { Directive, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n// TODO remove !ng16\nexport { PrizmAbstractTestId };\n\n/**\n * The most basic class for interactive components\n */\n@Directive()\nexport abstract class AbstractPrizmInteractive extends PrizmAbstractTestId {\n  abstract disabled: BooleanInput;\n\n  abstract focused: boolean;\n\n  private readonly autoIdString!: string;\n\n  @Input()\n  pseudoHovered: boolean | null = null;\n\n  @Input()\n  pseudoPressed: boolean | null = null;\n\n  @Input()\n  pseudoFocused: boolean | null = null;\n\n  @Input()\n  focusable = true;\n\n  @Input()\n  pseudoState!: string;\n\n  @Output()\n  readonly focusedChange = new EventEmitter<boolean>();\n\n  @Output()\n  readonly pressedChange = new EventEmitter<boolean>();\n\n  @Output()\n  readonly hoveredChange = new EventEmitter<boolean>();\n\n  @Output()\n  readonly focusVisibleChange = new EventEmitter<boolean>();\n\n  hovered = false;\n\n  pressed = false;\n\n  focusVisible = false;\n\n  @HostBinding('class._disabled')\n  get computedDisabled(): boolean {\n    return coerceBooleanProperty(this.disabled);\n  }\n\n  @HostBinding('class._hovered')\n  get computedHovered(): boolean {\n    return !this.computedDisabled && (this.pseudoHovered ?? this.hovered);\n  }\n\n  @HostBinding('class._pressed')\n  get computedPressed(): boolean {\n    return !this.computedDisabled && (this.pseudoPressed ?? this.pressed);\n  }\n\n  get computedFocusable(): boolean {\n    return !this.computedDisabled && (this.focusable || this.focused);\n  }\n\n  @HostBinding('class._focused')\n  get computedFocused(): boolean {\n    return !this.computedDisabled && (this.pseudoFocused ?? this.focused);\n  }\n\n  @HostBinding('class._focus-visible')\n  get computedFocusVisible(): boolean {\n    return !this.computedDisabled && (this.pseudoFocused ?? this.focusVisible);\n  }\n\n  protected updateHovered(hovered: boolean): void {\n    if (this.disabled) return;\n    if (this.hovered === hovered) {\n      return;\n    }\n\n    this.hovered = hovered;\n    this.hoveredChange.emit(hovered);\n  }\n\n  protected updatePressed(pressed: boolean): void {\n    if (this.pressed === pressed) {\n      return;\n    }\n\n    this.pressed = pressed;\n    this.pressedChange.emit(pressed);\n  }\n\n  protected updateFocused(focused: boolean): void {\n    this.focusedChange.emit(focused);\n  }\n\n  protected updateFocusVisible(focusVisible: boolean): void {\n    if (this.focusVisible === focusVisible) {\n      return;\n    }\n\n    this.focusVisible = focusVisible;\n    this.focusVisibleChange.emit(focusVisible);\n  }\n}\n","import { animate, query, stagger, style, transition, trigger } from '@angular/animations';\nimport { PrizmDropdownAnimation } from './types';\n\nconst TRANSITION = '{{duration}}ms ease-in-out';\nconst DURATION = { params: { duration: 300 } };\nconst STAGGER = 300;\n\nexport interface PrizmDurationOptions {\n  value: string;\n  params: { duration: number };\n}\n\nexport const prizmFadeIn = trigger('prizmFadeIn', [\n  transition(':enter', [style({ opacity: 0 }), animate(TRANSITION, style({ opacity: 1 }))], DURATION),\n  transition(':leave', [style({ opacity: 1 }), animate(TRANSITION, style({ opacity: 0 }))], DURATION),\n]);\n\nexport const prizmHeightCollapse = trigger('prizmHeightCollapse', [\n  transition(':enter', [style({ height: 0 }), animate(TRANSITION, style({ height: '*' }))], DURATION),\n  transition(':leave', [style({ height: '*' }), animate(TRANSITION, style({ height: 0 }))], DURATION),\n]);\n\nexport const prizmHeightCollapseList = trigger('prizmHeightCollapseList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [style({ height: 0 }), stagger(STAGGER, [animate(TRANSITION, style({ height: '*' }))])],\n        {\n          optional: true,\n        }\n      ),\n      query(\n        ':leave',\n        [style({ height: '*' }), stagger(STAGGER, [animate(TRANSITION, style({ height: 0 }))])],\n        {\n          optional: true,\n        }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmWidthCollapse = trigger('prizmWidthCollapse', [\n  transition(':enter', [style({ width: 0 }), animate(TRANSITION, style({ width: '*' }))], DURATION),\n  transition(':leave', [style({ width: '*' }), animate(TRANSITION, style({ width: 0 }))], DURATION),\n]);\n\nexport const prizmWidthCollapseList = trigger('prizmWidthCollapseList', [\n  transition(\n    '* => *',\n    [\n      query(':enter', [style({ width: 0 }), stagger(STAGGER, [animate(TRANSITION, style({ width: '*' }))])], {\n        optional: true,\n      }),\n      query(':leave', [style({ width: '*' }), stagger(STAGGER, [animate(TRANSITION, style({ width: 0 }))])], {\n        optional: true,\n      }),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmFadeInList = trigger('prizmFadeInList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [style({ opacity: 0 }), stagger(STAGGER, [animate(TRANSITION, style({ opacity: 1 }))])],\n        {\n          optional: true,\n        }\n      ),\n      query(\n        ':leave',\n        [style({ opacity: 1 }), stagger(STAGGER, [animate(TRANSITION, style({ opacity: 0 }))])],\n        {\n          optional: true,\n        }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmFadeInTop = trigger('prizmFadeInTop', [\n  transition(\n    ':enter',\n    [\n      style({ transform: 'translateY(-10px)', opacity: 0 }),\n      animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),\n    ],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [\n      style({ transform: 'translateY(0)', opacity: 1 }),\n      animate(TRANSITION, style({ transform: 'translateY(-10px)', opacity: 0 })),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmFadeInBottom = trigger('prizmFadeInBottom', [\n  transition(\n    ':enter',\n    [\n      style({ transform: 'translateY(10px)', opacity: 0 }),\n      animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),\n    ],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [\n      style({ transform: 'translateY(0)', opacity: 1 }),\n      animate(TRANSITION, style({ transform: 'translateY(10px)', opacity: 0 })),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmDropdownAnimation = trigger('prizmDropdownAnimation', [\n  transition(\n    `* => ${PrizmDropdownAnimation.FadeInTop}`,\n    [\n      style({ transform: 'translateY(-10px)', opacity: 0 }),\n      animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),\n    ],\n    DURATION\n  ),\n  transition(\n    `* => ${PrizmDropdownAnimation.FadeInBottom}`,\n    [\n      style({ transform: 'translateY(10px)', opacity: 0 }),\n      animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),\n    ],\n    DURATION\n  ),\n  transition(\n    `${PrizmDropdownAnimation.FadeInBottom} => *`,\n    [\n      style({ transform: 'translateY(0)', opacity: 1 }),\n      animate(TRANSITION, style({ transform: 'translateY(10px)', opacity: 0 })),\n    ],\n    DURATION\n  ),\n  transition(\n    `${PrizmDropdownAnimation.FadeInTop} => *`,\n    [\n      style({ transform: 'translateY(0)', opacity: 1 }),\n      animate(TRANSITION, style({ transform: 'translateY(-10px)', opacity: 0 })),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmScaleIn = trigger('prizmScaleIn', [\n  transition(\n    ':enter',\n    [style({ transform: 'scale(0)' }), animate(TRANSITION, style({ transform: 'scale(1)' }))],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [style({ transform: 'scale(1)' }), animate(TRANSITION, style({ transform: 'scale(0)' }))],\n    DURATION\n  ),\n]);\n\nexport const prizmScaleInList = trigger('prizmScaleInList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [\n          style({ transform: 'scale(0)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'scale(1)' }))]),\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'scale(1)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'scale(0)' }))]),\n        ],\n        { optional: true }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideIn = trigger('prizmSlideIn', [\n  transition(\n    `* => left`,\n    [style({ transform: 'translateX(-100%)' }), animate(TRANSITION, style({ transform: 'translateX(0)' }))],\n    DURATION\n  ),\n  transition(\n    'left => *',\n    [style({ transform: 'translateX(0)' }), animate(TRANSITION, style({ transform: 'translateX(-100%)' }))],\n    DURATION\n  ),\n  transition(\n    '* => right',\n    [style({ transform: 'translateX(100%)' }), animate(TRANSITION, style({ transform: 'translateX(0)' }))],\n    DURATION\n  ),\n  transition(\n    'right => *',\n    [style({ transform: 'translateX(0)' }), animate(TRANSITION, style({ transform: 'translateX(100%)' }))],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInLeft = trigger('prizmSlideInLeft', [\n  transition(\n    ':enter',\n    [style({ transform: 'translateX(-100%)' }), animate(TRANSITION, style({ transform: 'translateX(0)' }))],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [style({ transform: 'translateX(0)' }), animate(TRANSITION, style({ transform: 'translateX(-100%)' }))],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInLeftList = trigger('prizmSlideInLeftList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(-100%)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateX(0)' }))]),\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateX(-100%)' }))]),\n        ],\n        { optional: true }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInRight = trigger('prizmSlideInRight', [\n  transition(\n    ':enter',\n    [style({ transform: 'translateX(100%)' }), animate(TRANSITION, style({ transform: 'translateX(0)' }))],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [style({ transform: 'translateX(0)' }), animate(TRANSITION, style({ transform: 'translateX(100%)' }))],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInRightList = trigger('prizmSlideInRightList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateX(100%)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateX(0)' }))]),\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateX(0)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateX(100%)' }))]),\n        ],\n        { optional: true }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInTop = trigger('prizmSlideInTop', [\n  transition(\n    ':enter',\n    [\n      style({ transform: 'translate3d(0,{{start}},0)' }),\n      animate(TRANSITION, style({ transform: 'translate3d(0,{{end}},0)' })),\n    ],\n    { params: { end: 0, start: '100%', duration: 300 } }\n  ),\n  transition(\n    ':leave',\n    [\n      style({ transform: 'translate3d(0,{{end}},0)' }),\n      animate(TRANSITION, style({ transform: 'translate3d(0,{{start}},0)' })),\n    ],\n    { params: { end: 0, start: '100%', duration: 300 } }\n  ),\n]);\n\nexport const prizmSlideInTopList = trigger('prizmSlideInTopList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateY(100%)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateY(0)' }))]),\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateY(0)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateY(100%)' }))]),\n        ],\n        { optional: true }\n      ),\n    ],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInBottom = trigger('prizmSlideInBottom', [\n  transition(\n    ':enter',\n    [style({ transform: 'translateY(-100%)' }), animate(TRANSITION, style({ transform: 'translateY(0)' }))],\n    DURATION\n  ),\n  transition(\n    ':leave',\n    [style({ transform: 'translateY(0)' }), animate(TRANSITION, style({ transform: 'translateY(-100%)' }))],\n    DURATION\n  ),\n]);\n\nexport const prizmSlideInBottomList = trigger('prizmSlideInBottomList', [\n  transition(\n    '* => *',\n    [\n      query(\n        ':enter',\n        [\n          style({ transform: 'translateY(-100%)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateY(0)' }))]),\n        ],\n        { optional: true }\n      ),\n      query(\n        ':leave',\n        [\n          style({ transform: 'translateY(0)' }),\n          stagger(STAGGER, [animate(TRANSITION, style({ transform: 'translateY(-100%)' }))]),\n        ],\n        { optional: true }\n      ),\n    ],\n    DURATION\n  ),\n]);\n","import { Directive, ElementRef } from '@angular/core';\nimport { PRIZM_ELEMENT_REF } from '../../tokens/element-ref';\n\n@Directive({\n  selector: '[prizmScrollbarWrapper]',\n  providers: [\n    {\n      provide: PRIZM_ELEMENT_REF,\n      useExisting: ElementRef,\n    },\n  ],\n  standalone: true,\n})\nexport class PrizmScrollbarWrapperDirective {}\n","import { DOCUMENT, ViewportScroller } from '@angular/common';\nimport { Directive, ElementRef, Inject, Input, NgZone, Optional, Renderer2 } from '@angular/core';\nimport { ANIMATION_FRAME, WINDOW } from '@ng-web-apis/common';\nimport { fromEvent, merge, Observable } from 'rxjs';\nimport { map, switchMap, takeUntil, throttleTime } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PRIZM_ELEMENT_REF, PRIZM_SCROLL_REF } from '../../tokens';\nimport {\n  prizmPreventDefault,\n  prizmStopPropagation,\n  prizmTypedFromEvent,\n  prizmZoneFree,\n} from '../../observables';\nimport { PrizmOrientation } from '../../types';\n\nconst MIN_WIDTH = 24;\nconst POLLING_TIME = 1000 / 15;\n\n@Directive({\n  selector: '[prizmScrollbar]',\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmScrollbarDirective {\n  @Input()\n  public prizmScrollbar: PrizmOrientation = 'vertical';\n\n  constructor(\n    @Inject(NgZone) ngZone: NgZone,\n    @Inject(Renderer2) renderer: Renderer2,\n    @Inject(PrizmDestroyService) destroy$: Observable<void>,\n    @Inject(ANIMATION_FRAME) animationFrame$: Observable<number>,\n    @Inject(PRIZM_ELEMENT_REF) private readonly wrapper: ElementRef<HTMLElement>,\n    @Optional()\n    @Inject(PRIZM_SCROLL_REF)\n    private readonly container: ElementRef<HTMLElement> | null,\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(WINDOW) private readonly windowRef: Window,\n    @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    @Inject(ViewportScroller) private readonly viewportScroller: ViewportScroller\n  ) {\n    const { nativeElement } = this.elementRef;\n    const mousedown$ = prizmTypedFromEvent(nativeElement, 'mousedown');\n    const mousemove$ = prizmTypedFromEvent(this.documentRef, 'mousemove');\n    const mouseup$ = prizmTypedFromEvent(this.documentRef, 'mouseup');\n    const mousedownWrapper$ = prizmTypedFromEvent(wrapper.nativeElement, 'mousedown');\n\n    merge(\n      mousedownWrapper$.pipe(\n        prizmPreventDefault(),\n        map(event => this.getScrolled(event, 0.5, 0.5))\n      ),\n      mousedown$.pipe(\n        prizmPreventDefault(),\n        prizmStopPropagation(),\n        switchMap(event => {\n          const rect = nativeElement.getBoundingClientRect();\n          const vertical = getOffsetVertical(event, rect);\n          const horizontal = getOffsetHorizontal(event, rect);\n\n          return mousemove$.pipe(\n            map(event => this.getScrolled(event, vertical, horizontal)),\n            takeUntil(mouseup$)\n          );\n        })\n      )\n    )\n      .pipe(prizmZoneFree(ngZone), takeUntil(destroy$))\n      .subscribe(([scrollTop, scrollLeft]) => {\n        const [x, y] = this.viewportScroller.getScrollPosition();\n\n        if (!this.container) {\n          this.viewportScroller.scrollToPosition([\n            this.prizmScrollbar === 'vertical' ? x : scrollLeft,\n            this.prizmScrollbar === 'vertical' ? scrollTop : y,\n          ]);\n\n          return;\n        }\n\n        if (this.prizmScrollbar === 'vertical') {\n          renderer.setProperty(this.container.nativeElement, 'scrollTop', scrollTop);\n        } else {\n          renderer.setProperty(this.container.nativeElement, 'scrollLeft', scrollLeft);\n        }\n      });\n\n    merge(\n      fromEvent(this.container ? this.container.nativeElement : this.windowRef, 'scroll'),\n      animationFrame$.pipe(throttleTime(POLLING_TIME))\n    )\n      .pipe(prizmZoneFree(ngZone), takeUntil(destroy$))\n      .subscribe(() => {\n        if (this.prizmScrollbar === 'vertical') {\n          renderer.setStyle(nativeElement, 'top', `${this.thumb * 100}%`);\n          renderer.setStyle(nativeElement, 'height', `${this.view * 100}%`);\n        } else {\n          renderer.setStyle(nativeElement, 'left', `${this.thumb * 100}%`);\n          renderer.setStyle(nativeElement, 'width', `${this.view * 100}%`);\n        }\n      });\n  }\n\n  private get scrolled(): number {\n    const { scrollTop, scrollHeight, clientHeight, scrollLeft, scrollWidth, clientWidth } =\n      this.computedContainer;\n\n    return this.prizmScrollbar === 'vertical'\n      ? scrollTop / (scrollHeight - clientHeight)\n      : scrollLeft / (scrollWidth - clientWidth);\n  }\n\n  private get compensation(): number {\n    const { clientHeight, scrollHeight, clientWidth, scrollWidth } = this.computedContainer;\n\n    if (\n      ((clientHeight * clientHeight) / scrollHeight > MIN_WIDTH && this.prizmScrollbar === 'vertical') ||\n      ((clientWidth * clientWidth) / scrollWidth > MIN_WIDTH && this.prizmScrollbar === 'horizontal')\n    ) {\n      return 0;\n    }\n\n    return this.prizmScrollbar === 'vertical' ? MIN_WIDTH / clientHeight : MIN_WIDTH / clientWidth;\n  }\n\n  private get thumb(): number {\n    const compensation = this.compensation || this.view;\n\n    return this.scrolled * (1 - compensation);\n  }\n\n  private get view(): number {\n    const { clientHeight, scrollHeight, clientWidth, scrollWidth } = this.computedContainer;\n\n    return this.prizmScrollbar === 'vertical'\n      ? Math.ceil((clientHeight / scrollHeight) * 100) / 100\n      : Math.ceil((clientWidth / scrollWidth) * 100) / 100;\n  }\n\n  private get computedContainer(): Element {\n    const el = this.container ? this.container.nativeElement : this.documentRef.scrollingElement;\n    return el as Element;\n  }\n\n  private getScrolled(\n    { clientY, clientX }: MouseEvent,\n    offsetVertical: number,\n    offsetHorizontal: number\n  ): [number, number] {\n    const { offsetHeight, offsetWidth } = this.elementRef.nativeElement;\n    const { top, left, width, height } = this.wrapper.nativeElement.getBoundingClientRect();\n\n    const maxTop = this.computedContainer.scrollHeight - height;\n    const maxLeft = this.computedContainer.scrollWidth - width;\n    const scrolledTop = (clientY - top - offsetHeight * offsetVertical) / (height - offsetHeight);\n    const scrolledLeft = (clientX - left - offsetWidth * offsetHorizontal) / (width - offsetWidth);\n\n    return [maxTop * scrolledTop, maxLeft * scrolledLeft];\n  }\n}\n\nfunction getOffsetVertical({ clientY }: MouseEvent, { top, height }: ClientRect): number {\n  return (clientY - top) / height;\n}\n\nfunction getOffsetHorizontal({ clientX }: MouseEvent, { left, width }: ClientRect): number {\n  return (clientX - left) / width;\n}\n","import { AsyncPipe, DOCUMENT, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ElementRef, Inject, NgZone, Optional } from '@angular/core';\nimport { ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, throttleTime } from 'rxjs/operators';\nimport { prizmFadeIn } from '../../animations';\nimport { prizmZoneOptimized } from '../../observables';\nimport { PRIZM_ANIMATION_OPTIONS, PRIZM_SCROLL_REF } from '../../tokens';\nimport { AnimationOptions } from '@angular/animations';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmScrollbarWrapperDirective } from './scrollbar-wrapper.directive';\nimport { PrizmScrollbarDirective } from './scrollbar.directive';\n\n@Component({\n  selector: 'prizm-scroll-controls',\n  templateUrl: './scroll-controls.component.html',\n  styleUrls: ['./scroll-controls.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [prizmFadeIn],\n  standalone: true,\n  imports: [\n    NgIf,\n    AsyncPipe,\n    PrizmLetDirective,\n    PrizmThemeModule,\n    PrizmScrollbarWrapperDirective,\n    PrizmScrollbarDirective,\n  ],\n})\nexport class PrizmScrollControlsComponent extends PrizmAbstractTestId {\n  override readonly testId_ = 'ui_scroll_controls';\n\n  readonly refresh$ = this.animationFrame$.pipe(\n    throttleTime(300),\n    map(() => this.scrollbars),\n    startWith([false, false]),\n    distinctUntilChanged((a, b) => a[0] === b[0] && a[1] === b[1]),\n    prizmZoneOptimized(this.ngZone)\n  );\n\n  readonly animation = {\n    value: '',\n    ...this.options,\n  } as const;\n\n  constructor(\n    @Inject(PRIZM_ANIMATION_OPTIONS) private readonly options: AnimationOptions,\n    @Inject(NgZone) private readonly ngZone: NgZone,\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Optional()\n    @Inject(PRIZM_SCROLL_REF)\n    private readonly scrollRef: ElementRef<HTMLElement> | null,\n    @Inject(ANIMATION_FRAME) private readonly animationFrame$: Observable<number>\n  ) {\n    super();\n  }\n\n  private get scrollbars(): [boolean, boolean] {\n    const { clientHeight, scrollHeight, clientWidth, scrollWidth } = this.scrollRef\n      ? this.scrollRef.nativeElement\n      : this.documentRef.documentElement;\n\n    return [\n      Math.ceil((clientHeight / scrollHeight) * 100) < 100,\n      Math.ceil((clientWidth / scrollWidth) * 100) < 100,\n    ];\n  }\n}\n","<ng-container *prizmLet=\"refresh$ | async as bars\">\n  <div\n    class=\"bar bar_vertical\"\n    *ngIf=\"bars[0]\"\n    [@prizmFadeIn]=\"animation\"\n    [class.bar_has-horizontal]=\"bars[1]\"\n    prizmScrollbarWrapper\n  >\n    <div class=\"thumb\" prizmScrollbar=\"vertical\" prizmTheme></div>\n  </div>\n  <div\n    class=\"bar bar_horizontal\"\n    *ngIf=\"bars[1]\"\n    [@prizmFadeIn]=\"animation\"\n    [class.bar_has-vertical]=\"bars[0]\"\n    prizmScrollbarWrapper\n  >\n    <div class=\"thumb\" prizmScrollbar=\"horizontal\" prizmTheme></div>\n  </div>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n} from '@angular/core';\nimport { PRIZM_IS_IOS, PRIZM_SCROLL_REF } from '../../tokens';\nimport { CSS, USER_AGENT } from '@ng-web-apis/common';\nimport { prizmIsFirefox } from '../../util/browser';\nimport { PRIZM_SCROLL_INTO_VIEW, PRIZM_SCROLLABLE } from '../../constants/events';\nimport { prizmGetElementOffset } from '../../util/dom';\nimport { PrizmHoveredService } from '../../services';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { shareReplay, switchMap } from 'rxjs/operators';\nimport { PrizmScrollbarVisibility } from './scrollbar.model';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PrizmScrollControlsComponent } from './scroll-controls.component';\nimport { AsyncPipe } from '@angular/common';\n\nexport function scrollRefFactory({ browserScrollRef }: PrizmScrollbarComponent): ElementRef<HTMLElement> {\n  return browserScrollRef;\n}\n\n@Component({\n  selector: 'prizm-scrollbar',\n  templateUrl: './scrollbar.component.html',\n  styleUrls: ['./scrollbar.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PrizmScrollControlsComponent, AsyncPipe],\n  providers: [\n    {\n      provide: PRIZM_SCROLL_REF,\n      useFactory: scrollRefFactory,\n      deps: [PrizmScrollbarComponent],\n    },\n  ],\n})\nexport class PrizmScrollbarComponent extends PrizmAbstractTestId {\n  @Input()\n  set visibility(visibility: PrizmScrollbarVisibility) {\n    this.visibility$.next(visibility);\n  }\n  get visibility(): PrizmScrollbarVisibility {\n    return this.visibility$.value;\n  }\n\n  override readonly testId_ = 'ui_scrollbar';\n\n  private delegated = false;\n\n  private readonly isLegacy: boolean =\n    !this.cssRef.supports('position', 'sticky') ||\n    (prizmIsFirefox(this.userAgent) && !this.cssRef.supports('scrollbar-width', 'none'));\n\n  private readonly visibility$: BehaviorSubject<PrizmScrollbarVisibility> =\n    new BehaviorSubject<PrizmScrollbarVisibility>('auto');\n\n  public readonly showScrollbars$: Observable<boolean> = this.visibility$.pipe(\n    switchMap<PrizmScrollbarVisibility, Observable<boolean>>((visibility: PrizmScrollbarVisibility) => {\n      const canShow = !this.isIos && (!this.isLegacy || this.delegated);\n      if (!canShow) return of(false);\n\n      switch (visibility) {\n        case 'hidden':\n          return of(false);\n\n        case 'auto':\n          return this.hoveredService.createHovered$(this.elementRef.nativeElement);\n        default:\n          return of(true);\n      }\n    }),\n    shareReplay(1)\n  );\n\n  readonly browserScrollRef = new ElementRef(this.elementRef.nativeElement);\n\n  constructor(\n    private readonly hoveredService: PrizmHoveredService,\n    @Inject(CSS) private readonly cssRef: any,\n    private readonly elementRef: ElementRef,\n    @Inject(USER_AGENT) private readonly userAgent: string,\n    @Inject(PRIZM_IS_IOS) private readonly isIos: boolean\n  ) {\n    super();\n  }\n\n  @HostBinding('class._legacy')\n  public get showNative(): boolean {\n    return this.isLegacy && this.visibility === 'visible' && !this.delegated;\n  }\n\n  @HostListener(`${PRIZM_SCROLLABLE}`, ['$event.detail'])\n  public onScrollable(element: HTMLElement, $event: Event): void {\n    this.delegated = true;\n    this.browserScrollRef.nativeElement = element;\n  }\n\n  @HostListener(`${PRIZM_SCROLL_INTO_VIEW}`, ['$event.detail', '$event'])\n  public scrollIntoView(detail: HTMLElement, event: Event): void {\n    if (this.delegated) {\n      return;\n    }\n\n    const { nativeElement } = this.browserScrollRef;\n    const { offsetTop, offsetLeft } = prizmGetElementOffset(nativeElement, detail);\n    nativeElement.scrollTop = offsetTop + detail.offsetHeight / 2 - nativeElement.clientHeight / 2;\n    nativeElement.scrollLeft = offsetLeft + detail.offsetWidth / 2 - nativeElement.clientWidth / 2;\n  }\n}\n","<prizm-scroll-controls [style.visibility]=\"(showScrollbars$ | async) ? '' : 'hidden'\"></prizm-scroll-controls>\n<div class=\"content\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmScrollRefDirective } from './scroll-ref.directive';\nimport { PrizmScrollbarComponent } from './scrollbar.component';\nimport { PrizmScrollableDirective } from './scrollable.directive';\nimport { PrizmScrollControlsComponent } from './scroll-controls.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmScrollControlsComponent,\n    PrizmScrollbarComponent,\n    PrizmScrollRefDirective,\n    PrizmScrollableDirective,\n  ],\n  exports: [PrizmScrollbarComponent, PrizmScrollRefDirective, PrizmScrollableDirective],\n})\nexport class PrizmScrollbarModule {}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmHoveredService } from '../../services';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmHintService } from './hint.service';\nimport { PrizmOverlayControl } from '../../modules/overlay';\nimport { animationFrameScheduler, timer } from 'rxjs';\nimport { PolymorphContent } from '../polymorph/types/content';\nimport { PrizmTheme, PrizmThemeInvertedDirective, PrizmThemeInvertedValuesService } from '@prizm-ui/theme';\nimport { PolymorphModule } from '../polymorph';\nimport { PrizmScrollbarModule } from '../../components/scrollbar';\n\n@Component({\n  selector: 'prizm-hint-container',\n  template: `\n    <div class=\"prizm-font-main-body-12\">\n      <prizm-scrollbar visibility=\"hidden\">\n        <ng-container *polymorphOutlet=\"content() as data; context: context\">\n          <div class=\"content\">{{ data }}</div>\n        </ng-container>\n      </prizm-scrollbar>\n    </div>\n  `,\n  styleUrls: ['./hint-container.component.less'],\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [PolymorphModule, PrizmScrollbarModule],\n})\nexport class PrizmHintContainerComponent<CONTEXT extends Record<string, unknown> = Record<string, unknown>>\n  implements OnInit, AfterViewInit\n{\n  @Input()\n  @HostListener('attr.id')\n  id!: string;\n\n  @Input()\n  content!: () => PolymorphContent;\n\n  @Input()\n  @prizmDefaultProp()\n  context: CONTEXT = {} as CONTEXT;\n\n  @Input()\n  set hintTheme(theme: PrizmTheme) {\n    this.themeInvertedValuesService.value$$.next({\n      ...this.themeInvertedValuesService.value$$.value,\n      '*': theme ?? null,\n    });\n  }\n\n  readonly themeInvertedDirective = new PrizmThemeInvertedDirective();\n\n  constructor(\n    protected readonly destroy$: PrizmDestroyService,\n    protected readonly el: ElementRef,\n    protected readonly renderer2: Renderer2,\n    protected readonly prizmOverlayControl: PrizmOverlayControl,\n    public readonly themeInvertedValuesService: PrizmThemeInvertedValuesService,\n    @Inject(PrizmHintService) private readonly hintService: PrizmHintService,\n    @Inject(PrizmHoveredService) private readonly hoveredService: PrizmHoveredService\n  ) {}\n\n  public ngOnInit(): void {\n    this.initPositionListener();\n    this.initHoverListener();\n    this.themeInvertedDirective.ngOnInit();\n  }\n\n  public ngAfterViewInit(): void {\n    // re-calc positions after fist get container sizes\n    timer(10, animationFrameScheduler)\n      .pipe(\n        tap(() => this.prizmOverlayControl.position.calculate()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private initPositionListener(): void {\n    this.prizmOverlayControl.position.pos$\n      .pipe(\n        tap(data => {\n          if (!data.extra) return;\n          this.renderer2.setAttribute(this.el.nativeElement, 'position', data.extra);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private initHoverListener(): void {\n    this.hoveredService\n      .createHovered$(this.el.nativeElement)\n      .pipe(\n        tap(state => this.hintService.emit(this.id, state)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { InjectionToken, TemplateRef, ValueProvider } from '@angular/core';\nimport { PrizmSize } from '../../util/size-bigger';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../types/appearance.types';\n\nexport interface PrizmButtonOptions {\n  readonly size: PrizmSize;\n  readonly appearance: PrizmAppearance;\n  readonly appearanceType: PrizmAppearanceType;\n}\n\nexport const PRIZM_BUTTON_DEFAULT_OPTIONS: PrizmButtonOptions = {\n  size: 'l',\n  appearance: 'primary',\n  appearanceType: 'fill',\n};\n\nexport const PRIZM_BUTTON_OPTIONS = new InjectionToken<PrizmButtonOptions>(\n  'Default parameters for button component',\n  {\n    factory: (): PrizmButtonOptions => PRIZM_BUTTON_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmButtonOptionsProvider: (options: Partial<PrizmButtonOptions>) => ValueProvider = (\n  options: Partial<PrizmButtonOptions>\n) => ({\n  provide: PRIZM_BUTTON_OPTIONS,\n  useValue: { ...PRIZM_BUTTON_DEFAULT_OPTIONS, ...options },\n});\n\nexport type PrizmContent<T = unknown> = TemplateRef<T> | string;\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n/**\n * @deprecated\n * */\n@Component({\n  selector: 'prizm-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmIconComponent extends PrizmAbstractTestId {\n  @Input() iconClass: string | null = null;\n  @Input() size: string | number = 16;\n\n  override get generateManeTestId(): string {\n    return 'ui_icon' + this.iconClass;\n  }\n}\n\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const IconComponent = PrizmIconComponent;\n","<span class=\"prizm-icon prizm-icon-{{ size }} {{ iconClass }}\"></span>\n","import { NgModule } from '@angular/core';\nimport { PrizmIconComponent } from './icon.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmIconComponent],\n  exports: [PrizmIconComponent],\n})\nexport class PrizmIconModule {}\n","export const IconDefs = [\n  {\n    dir: 'account',\n    data: [\n      'account-card-details',\n      'account-circle',\n      'account-contact-sync',\n      'account-done',\n      'account-down-list-open',\n      'account-down-list',\n      'account-edit',\n      'account-group',\n      'account-key',\n      'account-location',\n      'account-lock',\n      'account-log-in',\n      'account-logout',\n      'account-minus',\n      'account-multiple-minus',\n      'account-multiple-plus',\n      'account-multiple-shield',\n      'account-plus',\n      'account-remove',\n      'account-role',\n      'account-search',\n      'account-setting-1',\n      'account-setting',\n      'account-shield-1',\n      'account-shield-alarm',\n      'account-shield-off',\n      'account-shield',\n      'account-switch',\n      'account-unlock',\n      'account-worker',\n      'account',\n    ],\n  },\n  {\n    dir: 'add',\n    data: [\n      'add-alarm',\n      'add-bell-plus',\n      'add-bookmark-plus',\n      'add-cart-plus',\n      'add-circle-fill',\n      'add-circle',\n      'add-file-plus',\n      'add-folder-plus',\n      'add-label-add',\n      'add-language',\n      'add-library-plus',\n      'add-line-add',\n      'add-map-marker-plus',\n      'add-phone',\n      'add-plus-box-fill',\n      'add-plus-box',\n      'add-plus-circle-multiple',\n      'add-plus-drop-down-list',\n      'add-plus',\n      'add-shape-square-plus',\n    ],\n  },\n  {\n    dir: 'alerts',\n    data: [\n      'alerts-alarm-light',\n      'alerts-bell-fill',\n      'alerts-bell-off',\n      'alerts-bell-ring-fill',\n      'alerts-bell-ring',\n      'alerts-bell',\n      'alerts-box-fill',\n      'alerts-circle-fill',\n      'alerts-circle-mini-1',\n      'alerts-circle-mini',\n      'alerts-circle',\n      'alerts-decagram-fill',\n      'alerts-decagram',\n      'alerts-false_alerts1',\n      'alerts-false_alerts2',\n      'alerts-flag-fill',\n      'alerts-flag',\n      'alerts-help-box-fill',\n      'alerts-help-box',\n      'alerts-help-circle-outline',\n      'alerts-info-add-incongruity',\n      'alerts-info-circle-fill',\n      'alerts-info-square-fill',\n      'alerts-info-square',\n      'alerts-info-triangle-fill',\n      'alerts-info-triangle',\n      'alerts-inform-fill-mini',\n      'alerts-inform-mini',\n      'alerts-inform',\n      'alerts-information-variant',\n      'alerts-mark',\n      'alerts-octagon-fill',\n      'alerts-octagon',\n      'alerts-pulse',\n      'alerts-question-mark',\n      'alerts-square',\n      'alerts-warning',\n      'alerts',\n      'success-circle-fill',\n      'success-circle-outline',\n      'success-decagram-fill',\n      'success-decagram-outline',\n    ],\n  },\n  {\n    dir: 'arrows',\n    data: [\n      'arrows-all',\n      'arrows-arrow-circle-down',\n      'arrows-arrow-circle-left',\n      'arrows-arrow-circle-right',\n      'arrows-arrow-circle-up',\n      'arrows-arrow-expand-horizontal',\n      'arrows-arrow-expand-vertical',\n      'arrows-arrow-left',\n      'arrows-arrow-right',\n      'arrows-arrow-up-level',\n      'arrows-autorenew-1',\n      'arrows-autorenew',\n      'arrows-back',\n      'arrows-cached-1',\n      'arrows-cached',\n      'arrows-chevron-left',\n      'arrows-chevron-right',\n      'arrows-collapse-four-arrows',\n      'arrows-collapse',\n      'arrows-compare',\n      'arrows-corner-chek-in',\n      'arrows-corner-down-left',\n      'arrows-corner-down-right',\n      'arrows-corner-left-down',\n      'arrows-corner-left-up',\n      'arrows-corner-right-down',\n      'arrows-corner-right-up',\n      'arrows-corner-up-left',\n      'arrows-corner-up-right',\n      'arrows-diagonal-arrow-left-down',\n      'arrows-diagonal-arrow-left-up',\n      'arrows-diagonal-arrow-right-down',\n      'arrows-diagonal-arrow-right-up',\n      'arrows-down-2',\n      'arrows-down-bold',\n      'arrows-down-double-2',\n      'arrows-down-double-top-2',\n      'arrows-down-limit-1',\n      'arrows-down-limit-double-1',\n      'arrows-down',\n      'arrows-download',\n      'arrows-expand-all',\n      'arrows-expand',\n      'arrows-left-bold',\n      'arrows-next',\n      'arrows-refresh',\n      'arrows-replay',\n      'arrows-right-bold',\n      'arrows-shuffle-variant',\n      'arrows-shuffle',\n      'arrows-swap-horiz-2',\n      'arrows-swap-horiz',\n      'arrows-swap-vert-2',\n      'arrows-swap-vert',\n      'arrows-up-2',\n      'arrows-up-bold',\n      'arrows-up-double-2',\n      'arrows-up-double-top-2',\n      'arrows-up-limit-1',\n      'arrows-up-limit-double-1',\n      'arrows-up',\n    ],\n  },\n  {\n    dir: 'audio',\n    data: [\n      'audio-add-library-music',\n      'audio-artist',\n      'audio-bookmark-music',\n      'audio-file-music',\n      'audio-microphone-off',\n      'audio-microphone',\n      'audio-music-box',\n      'audio-music-circle',\n      'audio-music-off',\n      'audio-music',\n      'audio-volume-high',\n      'audio-volume-low',\n      'audio-volume-medium',\n      'audio-volume-minus',\n      'audio-volume-mute',\n      'audio-volume-off',\n      'audio-volume-plus',\n    ],\n  },\n  {\n    dir: 'badges',\n    data: [\n      'badges-clipboard-tex',\n      'badges-clipboard',\n      'badges-code-download',\n      'badges-code',\n      'badges-tag-badges-tag-archve',\n      'badges-tag-fill',\n      'badges-tag-multiple',\n      'badges-tag-plus',\n      'badges-tag-remove',\n      'badges-tag-search',\n      'badges-tag-with-an-exclamation-mark',\n      'badges-tag-with-binding-to-data',\n      'badges-tag-without-binding-to-data',\n      'badges-tag',\n    ],\n  },\n  {\n    dir: 'battery',\n    data: [\n      'battery-10',\n      'battery-30',\n      'battery-50',\n      'battery-80',\n      'battery-alert',\n      'battery-charging',\n      'battery-flash-off',\n      'battery-flash-ok',\n      'battery-flash',\n      'battery-minus',\n      'battery-plus',\n      'battery',\n    ],\n  },\n  {\n    dir: 'bookmarks',\n    data: [\n      'bookmarks-book-open-page-variant',\n      'bookmarks-book-open-plus',\n      'bookmarks-book-open-re-1',\n      'bookmarks-book-open-re',\n      'bookmarks-book-open-variant',\n      'bookmarks-book-open',\n      'bookmarks-book',\n      'bookmarks-bookmark-check-fill',\n      'bookmarks-bookmark-check',\n      'bookmarks-bookmark-fill',\n      'bookmarks-bookmark-music-fill',\n      'bookmarks-bookmark-music',\n      'bookmarks-bookmark-plus-fill',\n      'bookmarks-bookmark-plus',\n      'bookmarks-bookmark-remove-2',\n      'bookmarks-bookmark-remove-fill',\n      'bookmarks-bookmark-remove',\n      'bookmarks-bookmark',\n    ],\n  },\n  {\n    dir: 'camera',\n    data: [\n      'camera-camera',\n      'camera-clapperboard-close',\n      'camera-clapperboard',\n      'camera-close',\n      'camera-film-close',\n      'camera-film',\n      'camera-image',\n      'camera-video-close',\n      'camera-video-off',\n      'camera-video',\n      'camera',\n    ],\n  },\n  {\n    dir: 'cancel',\n    data: [\n      'cancel-block',\n      'cancel-close-box-fill',\n      'cancel-close-box',\n      'cancel-close-circle-fill',\n      'cancel-close-circle',\n      'cancel-close-small',\n      'cancel-close',\n      'cancel-delete-line',\n      'cancel-delete-content',\n      'cansel-delete-file',\n    ],\n  },\n  {\n    dir: 'charts',\n    data: [\n      'charts-arc-1',\n      'charts-arc',\n      'charts-areaspline',\n      'charts-bar-graph',\n      'charts-bar-stacked',\n      'charts-bar',\n      'charts-bubble-line',\n      'charts-bubble',\n      'charts-chart-donut-variant-half',\n      'charts-chart-donut-variant',\n      'charts-discharge',\n      'charts-donut',\n      'charts-elevation-decline',\n      'charts-elevation-rise',\n      'charts-finance',\n      'charts-gantt',\n      'charts-google-analytics',\n      'charts-google-assistant',\n      'charts-hexagon-multiple',\n      'charts-histogram-chart-dashed-2',\n      'charts-histogram-chart-dashed',\n      'charts-histogram',\n      'charts-line-variant',\n      'charts-pie-1',\n      'charts-pie-2',\n      'charts-pie',\n      'charts-poll-box',\n      'charts-poll',\n      'charts-scatterplot-hexbin',\n      'charts-signal',\n      'charts-smart-trend',\n      'charts-trending-down',\n      'charts-trending-up',\n    ],\n  },\n  {\n    dir: 'chevrons',\n    data: [\n      'chevron-middle',\n      'chevrons-close-all',\n      'chevrons-double-down',\n      'chevrons-double-left-mini',\n      'chevrons-double-left',\n      'chevrons-double-right-mini',\n      'chevrons-double-right',\n      'chevrons-double-up',\n      'chevrons-down',\n      'chevrons-dropdown-small',\n      'chevrons-dropdown',\n      'chevrons-dropup',\n      'chevrons-input',\n      'chevrons-left-mini',\n      'chevrons-left',\n      'chevrons-menu-left-small',\n      'chevrons-menu-left',\n      'chevrons-menu-right',\n      'chevrons-open-all',\n      'chevrons-right-mini',\n      'chevrons-right',\n      'chevrons-unfold-less-horizontal',\n      'chevrons-unfold-less-verica',\n      'chevrons-unfold-more-horizontal',\n      'chevrons-unfold-more-vertical',\n      'chevrons-up',\n    ],\n  },\n  {\n    dir: 'date',\n    data: [\n      'date-access-alarm',\n      'date-asterisk',\n      'date-calendar-blank',\n      'date-calendar-check',\n      'date-calendar-clock',\n      'date-calendar-plus',\n      'date-calendar-question',\n      'date-calendar-range',\n      'date-calendar-remove',\n      'date-calendar-text',\n      'date-calendar-today',\n      'date-calendar',\n      'date-clock-alert',\n      'date-clock-end',\n      'date-clock-in',\n      'date-clock-out',\n      'date-clock-start',\n      'date-clock',\n      'date-day',\n      'date-history',\n      'date-hour',\n      'date-inform-add',\n      'date-inform-delete',\n      'date-midnight',\n      'date-minute',\n      'date-month',\n      'date-now',\n      'date-period-dropdown-list-open',\n      'date-period-dropdown-list',\n      'date-range',\n      'date-second',\n      'date-time-add-2',\n      'date-time-add',\n      'date-time-remove-2',\n      'date-time-remove',\n      'date-timer-sand-empty',\n      'date-timer',\n      'date-update',\n      'date-year',\n    ],\n  },\n  {\n    dir: 'delete',\n    data: [\n      'delete-do-not-disturb',\n      'delete-drop',\n      'delete-empty',\n      'delete-forever',\n      'delete-label-delete',\n      'delete-minus-circle',\n      'delete-minus-square',\n      'delete-minus',\n      'delete-restore',\n      'delete',\n    ],\n  },\n  {\n    dir: 'devices',\n    data: [\n      'devices-android-debug-bridge',\n      'devices-android',\n      'devices-camera-front',\n      'devices-cellphone-basic',\n      'devices-cellphone-link-off',\n      'devices-cellphone-link',\n      'devices-cellphone-wireless',\n      'devices-cellphone',\n      'devices-desktop-tower',\n      'devices-hard-drive-outline',\n      'devices-headphones',\n      'devices-input-device',\n      'devices-laptop-off-1',\n      'devices-laptop-off',\n      'devices-laptop',\n      'devices-monitor',\n      'devices-printer-dropdown-list',\n      'devices-printer',\n      'devices-sensor',\n      'devices-speaker',\n      'devices-tablet',\n      'devices-touchpad',\n      'devices-transmitter',\n      'devices-tv',\n      'devices-watch-variant',\n    ],\n  },\n  {\n    dir: 'editor',\n    data: [\n      'editor-add-column',\n      'editor-add-row',\n      'editor-alfavit',\n      'editor-attach-2',\n      'editor-attach-file',\n      'editor-auto',\n      'editor-auto1',\n      'editor-border-all',\n      'editor-border-bottom',\n      'editor-border-clear',\n      'editor-border-color',\n      'editor-border-horizontal',\n      'editor-border-inner',\n      'editor-border-left',\n      'editor-border-outer',\n      'editor-border-right',\n      'editor-border-style',\n      'editor-border-top',\n      'editor-border-vertical',\n      'editor-brace-left',\n      'editor-brace-right',\n      'editor-copy-column',\n      'editor-copy-drop',\n      'editor-copy-row',\n      'editor-copy',\n      'editor-crop',\n      'editor-cross-out',\n      'editor-curly-brace-left',\n      'editor-curly-brace-right',\n      'editor-delete-column',\n      'editor-delete-row',\n      'editor-disconnect-link',\n      'editor-discrete-set-1',\n      'editor-discrete-set',\n      'editor-division',\n      'editor-dots',\n      'editor-down-1',\n      'editor-down',\n      'editor-drag-and-drop',\n      'editor-dropdown-list-open',\n      'editor-dropdown-list',\n      'editor-droplet',\n      'editor-format-align-center',\n      'editor-format-align-justify',\n      'editor-format-align-left',\n      'editor-format-align-right',\n      'editor-format-bold',\n      'editor-format-color-fill',\n      'editor-format-color-reset',\n      'editor-format-color-text',\n      'editor-format-indent',\n      'editor-format-indent1',\n      'editor-format-italic',\n      'editor-format-list-bulleted',\n      'editor-format-list-numbered',\n      'editor-format-textdirection-l-to-r',\n      'editor-format-underlined',\n      'editor-formula',\n      'editor-functions',\n      'editor-group-choose',\n      'editor-group-dropdown',\n      'editor-group-panel',\n      'editor-group',\n      'editor-hash',\n      'editor-horizontal-align-center-',\n      'editor-insert-emoticon-sad',\n      'editor-insert-emoticon',\n      'editor-insert-link-add',\n      'editor-insert-link-delete',\n      'editor-insert-link',\n      'editor-line-height',\n      'editor-link',\n      'editor-list-dushed-2',\n      'editor-merge-type',\n      'editor-mini',\n      'editor-minus',\n      'editor-mode',\n      'editor-multiplication',\n      'editor-panel-down',\n      'editor-panel-left',\n      'editor-panel-right',\n      'editor-panel-top',\n      'editor-percent-1',\n      'editor-percent',\n      'editor-plus',\n      'editor-right-1',\n      'editor-right',\n      'editor-screen',\n      'editor-search-hierarchy',\n      'editor-search-tags-words',\n      'editor-sort-asc',\n      'editor-subskrit-text',\n      'editor-superskrit-text',\n      'editor-table-lookup',\n      'editor-table',\n      'editor-tag',\n      'editor-template',\n      'editor-title',\n      'editor-transpose-right',\n      'editor-transpose-top',\n      'editor-transpose',\n      'editor-ungroup',\n      'editor-vertical-align-bottom',\n      'editor-vertical-align-center',\n      'editor-vertical-align-center1',\n      'editor-vertical-align-top',\n      'editor-window',\n      'editor-wrap-text',\n    ],\n  },\n  {\n    dir: 'files',\n    data: [\n      'files-alarm',\n      'files-archive',\n      'files-box',\n      'files-cloud-check',\n      'files-cloud',\n      'files-cloup-upload',\n      'files-collection-2',\n      'files-confirmation',\n      'files-correct',\n      'files-description-properties',\n      'files-document-image',\n      'files-document-text',\n      'files-excel-box',\n      'files-export-1',\n      'files-export-arr',\n      'files-export-csv',\n      'files-export-pdf',\n      'files-export-sap',\n      'files-export-xlsx',\n      'files-export',\n      'files-file-close',\n      'files-file-doc',\n      'files-file-docx',\n      'files-file-open',\n      'files-file-pdf',\n      'files-file-play',\n      'files-file-ppt',\n      'files-file-pptx',\n      'files-file-remove',\n      'files-file-txt',\n      'files-file-video',\n      'files-file-xls',\n      'files-file-xlsx',\n      'files-file',\n      'files-find-1',\n      'files-find',\n      'files-folder-1',\n      'files-folder-add',\n      'files-folder-close',\n      'files-folder-delete',\n      'files-folder-open-1',\n      'files-folder-open',\n      'files-folder-remove',\n      'files-folder-root-add',\n      'files-folder-root-remove',\n      'files-folder',\n      'files-import-1',\n      'files-import-arr',\n      'files-import-csv',\n      'files-import-pdf',\n      'files-import-xlsx',\n      'files-import',\n      'files-import1с',\n      'files-in-group',\n      'files-incorrect',\n      'files-indicator',\n      'files-loader',\n      'files-method',\n      'files-mnemo',\n      'files-mode',\n      'files-multi',\n      'files-norm',\n      'files-plus',\n      'files-powerpoint',\n      'files-specification',\n      'files-view-document',\n      'files-word-box',\n      'files-просмотр',\n    ],\n  },\n  {\n    dir: 'finance',\n    data: [\n      'finance-barcode',\n      'finance-calculator-auto',\n      'finance-calculator',\n      'finance-credit-card-of',\n      'finance-credit-card-plus',\n      'finance-credit-card',\n      'finance-currency-btc',\n      'finance-currency-usd-off',\n      'finance-currency-usd',\n      'finance-qr-code-auto-1',\n      'finance-qr-code-auto-2',\n      'finance-qr-code-auto-3',\n      'finance-qr-code-search',\n      'finance-qr-code',\n      'finance-scanner',\n      'finance-wallet',\n    ],\n  },\n  {\n    dir: 'location',\n    data: [\n      'location-compass',\n      'location-crosshairs-gps',\n      'location-crosshairs',\n      'location-language',\n      'location-localization-down-list',\n      'location-map-2',\n      'location-map-marker-date-1',\n      'location-map-marker-date-2',\n      'location-map-marker-minus',\n      'location-map-marker-off',\n      'location-map-marker-plus',\n      'location-map-marker',\n      'location-map',\n      'location-navigation-1',\n      'location-navigation',\n      'location-person-pin-circle',\n      'location-pin-1',\n      'location-pin-2',\n      'location-pin',\n    ],\n  },\n  {\n    dir: 'messaging',\n    data: [\n      'editor-add-comment',\n      'messaging-add-comment',\n      'messaging-alert',\n      'messaging-at',\n      'messaging-emai-down-list',\n      'messaging-emai',\n      'messaging-email-open',\n      'messaging-forward',\n      'messaging-inbox',\n      'messaging-message-circle',\n      'messaging-message-off',\n      'messaging-message',\n      'messaging-processing',\n      'messaging-question-ask',\n      'messaging-reply',\n      'messaging-send',\n      'messaging-text',\n    ],\n  },\n  {\n    dir: 'network',\n    data: [\n      'network-close',\n      'network-cloud-download',\n      'network-cloud-upload',\n      'network-database-administration',\n      'network-database-delete',\n      'network-database-json',\n      'network-database-minus',\n      'network-database-plus',\n      'network-database-search',\n      'network-database-sql',\n      'network-database',\n      'network-download',\n      'network-ethernet-open',\n      'network-external-link',\n      'network-lan-connect',\n      'network-lan-disconnect',\n      'network-lan-pending',\n      'network-lan',\n      'network-layers',\n      'network-library',\n      'network-minus',\n      'network-no-layers',\n      'network-object',\n      'network-plus',\n      'network-scheme-2',\n      'network-scheme',\n      'network-security',\n      'network-server-1',\n      'network-server-network-off',\n      'network-server-network',\n      'network-server-off',\n      'network-server-security',\n      'network-server',\n      'network-upload',\n    ],\n  },\n  {\n    dir: 'phone',\n    data: [\n      'phone-call-missed',\n      'phone-in-talk',\n      'phone-minus',\n      'phone-missed',\n      'phone-off',\n      'phone-paused',\n      'phone-plus',\n      'phone',\n    ],\n  },\n  {\n    dir: 'player',\n    data: [\n      'player-loop',\n      'player-pause',\n      'player-play-back',\n      'player-play',\n      'player-skip-backward',\n      'player-skip-forward',\n      'player-skip-next-circle-outline',\n      'player-skip-previous',\n      'player-stop',\n      'player-voicemail',\n    ],\n  },\n  {\n    dir: 'poi',\n    data: [\n      'burn',\n      'cargo-box-2',\n      'cargo-box',\n      'cargo-container',\n      'cargo',\n      'fire',\n      'freeze',\n      'gas',\n      'loading',\n      'location-map-marker-minus',\n      'poi-achive-Mir',\n      'poi-article-1',\n      'poi-barley',\n      'poi-bdrv-administration',\n      'poi-boiler-hot-water-gas-and-oil',\n      'poi-cancel-sample-reject',\n      'poi-coal',\n      'poi-crane',\n      'poi-difference',\n      'poi-early-version',\n      'poi-ecopost-circle',\n      'poi-ecopost-rectangle',\n      'poi-electrics',\n      'poi-factory pipe',\n      'poi-factory-pipes',\n      'poi-factory',\n      'poi-fan',\n      'poi-flask-1',\n      'poi-flask-2',\n      'poi-flask-3',\n      'poi-flask-4',\n      'poi-flask-5',\n      'poi-fuel-oil-tank',\n      'poi-fuel',\n      'poi-gas-balloon',\n      'poi-gas-monitoring',\n      'poi-gas-station',\n      'poi-gear-cooling',\n      'poi-generator',\n      'poi-git-lab',\n      'poi-heat-exchanger',\n      'poi-heat-recovery-boiler',\n      'poi-high-speed-reduction-cooling',\n      'poi-lng-storage',\n      'poi-medicine',\n      'poi-ni-fi',\n      'poi-nuclear-station',\n      'poi-oil-factory',\n      'poi-oil-field',\n      'poi-oil-storage',\n      'poi-oil-tank',\n      'poi-owl',\n      'poi-pipe-sensor',\n      'poi-pipe-valve',\n      'poi-pipeline',\n      'poi-plus',\n      'poi-press',\n      'poi-pump-drop',\n      'poi-pump',\n      'poi-reject-the-sample',\n      'poi-respirator-2-1',\n      'poi-respirator-2',\n      'poi-respirator-3',\n      'poi-respirator-4',\n      'poi-respirator-5',\n      'poi-respirator',\n      'poi-separator',\n      'poi-steam-boiler',\n      'poi-steam-turbine',\n      'poi-steam',\n      'poi-strit',\n      'poi-tank',\n      'poi-water-heater',\n      'poi-water-pump',\n      'product-grade-according-to-specification',\n      'snowflake',\n    ],\n  },\n  {\n    dir: 'selection',\n    data: [\n      'selection-check-all',\n      'selection-check-simple',\n      'selection-checkbox-blank-circle',\n      'selection-checkbox-blank',\n      'selection-checkbox-marked-circle-chanel',\n      'selection-checkbox-marked-circle',\n      'selection-checked-1',\n      'selection-checked-2',\n      'selection-checked-empty',\n      'selection-checked',\n      'selection-choice',\n      'selection-halfchoice',\n      'selection-process',\n      'selection-radio-off',\n      'selection-radio-on',\n      'selection-success',\n      'selection-toggle-left',\n      'selection-toggle-right',\n      'selection-unchoice',\n    ],\n  },\n  {\n    dir: 'settings',\n    data: [\n      'settings-2',\n      'settings-apps',\n      'settings-more-horiz',\n      'settings-more-vert',\n      'settings-power',\n      'settings-tune-vertical',\n      'settings-tune',\n      'settings',\n    ],\n  },\n  {\n    dir: 'shapes',\n    data: [\n      'shapes-Key',\n      'shapes-Star',\n      'shapes-animation',\n      'shapes-arrange-bring-forward',\n      'shapes-arrange-send-backward',\n      'shapes-arrange-send-to-back',\n      'shapes-box-shadow',\n      'shapes-checkbox-intermediate',\n      'shapes-checkerboard',\n      'shapes-collage',\n      'shapes-collector',\n      'shapes-cube-3',\n      'shapes-cube-outline',\n      'shapes-cube',\n      'shapes-drawing-box',\n      'shapes-drawing-outline',\n      'shapes-drawing',\n      'shapes-hexagon-fill',\n      'shapes-hexagon',\n      'shapes-layers-off',\n      'shapes-layers',\n      'shapes-nest-protec',\n      'shapes-nut',\n      'shapes-ontology-2',\n      'shapes-ontology',\n      'shapes-pentagon-fill',\n      'shapes-pentagon',\n      'shapes-rhombus-fill',\n      'shapes-rhombus',\n      'shapes-shape-1-f',\n      'shapes-shape-1',\n      'shapes-shape-2-f',\n      'shapes-shape-2',\n      'shapes-shape-3-f',\n      'shapes-shape-3',\n      'shapes-shape-4-f',\n      'shapes-shape-4',\n      'shapes-shape-5-f',\n      'shapes-shape-5',\n      'shapes-shape-6',\n      'shapes-shape-7',\n      'shapes-shape-fill',\n      'shapes-shape-plus-1',\n      'shapes-shape-plus',\n      'shapes-shape',\n      'shapes-square-inc',\n      'shapes-triangle-fill',\n      'shapes-triangle',\n    ],\n  },\n  {\n    dir: 'shopping',\n    data: ['shopping-box', 'shopping-cart', 'shopping-gift', 'shopping'],\n  },\n  {\n    dir: 'signal',\n    data: [\n      'signal-access-point',\n      'signal-bluetooth',\n      'signal-cast',\n      'signal-off',\n      'signal-radio-tower',\n      'signal-rss-box',\n      'signal-wifi-off',\n      'signal-wifi',\n      'signal',\n    ],\n  },\n  {\n    dir: 'social',\n    data: [\n      'social-browser',\n      'social-globe-2',\n      'social-heart-fill',\n      'social-heart',\n      'social-home-breadcrumbs',\n      'social-home',\n      'social-instagram',\n      'social-moon',\n      'social-share',\n      'social-star-fill',\n      'social-star-half',\n      'social-star',\n      'social-sun',\n      'social-tab',\n      'social-telegram',\n      'social-thumb-down',\n      'social-thumb-up',\n    ],\n  },\n  {\n    dir: 'sort',\n    data: [\n      'sort-abc-ru-up',\n      'sort-abc-ru',\n      'sort-alphabetical-up',\n      'sort-alphabetical',\n      'sort-apps',\n      'sort-asc-arr',\n      'sort-desc-arr',\n      'sort-eye-off-2',\n      'sort-eye-off',\n      'sort-eye',\n      'sort-filter-remove',\n      'sort-filter-setting',\n      'sort-filter',\n      'sort-funnel-drop-down-list-open',\n      'sort-funnel-drop-down-list',\n      'sort-look-into-the-buffer',\n      'sort-maximize',\n      'sort-numeric',\n      'sort-real-size',\n      'sort-search-mistake',\n      'sort-time-down',\n      'sort-time-up',\n      'sort-version',\n      'sort-zoom-in-dropdown',\n      'sort-zoom-in',\n      'sort-zoom-out',\n    ],\n  },\n  {\n    dir: 'tools',\n    data: [\n      'tools-auto-fix',\n      'tools-award',\n      'tools-briefcase',\n      'tools-broom',\n      'tools-brush',\n      'tools-content-cut',\n      'tools-content-save-as',\n      'tools-content-save',\n      'tools-content-unsave',\n      'tools-earth-work',\n      'tools-eraser',\n      'tools-eyedropper',\n      'tools-keyboard-close-1',\n      'tools-keyboard-close',\n      'tools-keyboard',\n      'tools-lightbulb',\n      'tools-npm',\n      'tools-palette',\n      'tools-pantone',\n      'tools-ruler',\n      'tools-save-all',\n      'tools-save-back',\n      'tools-solver',\n      'tools-thermometer-minus',\n      'tools-thermometer-plus',\n      'tools-thermometer',\n      'tools-umbrella',\n    ],\n  },\n  {\n    dir: 'transport',\n    data: [\n      'transport-airplane',\n      'transport-ambulance',\n      'transport-truck-1',\n      'transport-truck-2',\n      'transport-truck-3',\n      'transport-truck-4',\n      'transport-truck-5',\n      'transport-truck',\n    ],\n  },\n  {\n    dir: 'vectors',\n    data: [\n      'vectors-arrange-above',\n      'vectors-arrange-below',\n      'vectors-circle-variant',\n      'vectors-circle',\n      'vectors-combine-1',\n      'vectors-combine',\n      'vectors-curve',\n      'vectors-default-24',\n      'vectors-difference-ab',\n      'vectors-difference-ba',\n      'vectors-difference',\n      'vectors-ellipse',\n      'vectors-intersection',\n      'vectors-line',\n      'vectors-point',\n      'vectors-polygon',\n      'vectors-polyline',\n      'vectors-radius',\n      'vectors-rectangle',\n      'vectors-selection',\n      'vectors-square',\n      'vectors-triangle',\n    ],\n  },\n  {\n    dir: 'view',\n    data: [\n      'view-agenda',\n      'view-array',\n      'view-carousel',\n      'view-column',\n      'view-component',\n      'view-dashboard-variant',\n      'view-dashboard',\n      'view-day',\n      'view-grid-outline',\n      'view-grid',\n      'view-headline',\n      'view-list',\n      'view-logo-grey-z',\n      'view-logo-s.grey',\n      'view-menu-2',\n      'view-menu-arrow-down',\n      'view-menu-arrow-left',\n      'view-menu-arrow-right',\n      'view-menu-arrow-up',\n      'view-menu',\n      'view-module',\n      'view-quilt',\n      'view-sequential',\n    ],\n  },\n];\n","export const Icon16Defs = [\n  {\n    dir: 'account',\n    data: [\n      'account-card-details',\n      'account-circle',\n      'account-contact-sync',\n      'account-done',\n      'account-down-list-open',\n      'account-down-list',\n      'account-edit',\n      'account-group',\n      'account-key',\n      'account-location',\n      'account-lock',\n      'account-log-in',\n      'account-logout',\n      'account-minus',\n      'account-multiple-minus',\n      'account-multiple-plus',\n      'account-multiple-shield',\n      'account-plus',\n      'account-remove',\n      'account-role',\n      'account-search',\n      'account-setting-1',\n      'account-setting',\n      'account-shield-1',\n      'account-shield-alarm',\n      'account-shield-off',\n      'account-shield',\n      'account-switch',\n      'account-unlock',\n      'account-worker',\n      'account',\n    ],\n  },\n  {\n    dir: 'add',\n    data: [\n      'add-alarm',\n      'add-bell-plus',\n      'add-bookmark-plus',\n      'add-cart-plus',\n      'add-circle-fill',\n      'add-circle',\n      'add-file-plus',\n      'add-folder-plus',\n      'add-label-add',\n      'add-language',\n      'add-library-plus',\n      'add-line-add',\n      'add-map-marker-plus',\n      'add-phone',\n      'add-plus-box-fill',\n      'add-plus-box',\n      'add-plus-circle-multiple',\n      'add-plus-drop-down-list',\n      'add-plus',\n      'add-shape-square-plus',\n    ],\n  },\n  {\n    dir: 'alerts',\n    data: [\n      'alerts-alarm-light',\n      'alerts-bell-fill',\n      'alerts-bell-off',\n      'alerts-bell-ring-fill',\n      'alerts-bell-ring',\n      'alerts-bell',\n      'alerts-box-fill',\n      'alerts-circle-fill',\n      'alerts-circle-mini-1',\n      'alerts-circle-mini',\n      'alerts-circle',\n      'alerts-decagram-fill',\n      'alerts-decagram',\n      'alerts-false_alerts1',\n      'alerts-false_alerts2',\n      'alerts-flag-fill',\n      'alerts-flag',\n      'alerts-help-box-fill',\n      'alerts-help-box',\n      'alerts-help-circle-outline',\n      'alerts-help-fill',\n      'alerts-info-add-incongruity',\n      'alerts-info-circle-fill',\n      'alerts-info-square-fill',\n      'alerts-info-square',\n      'alerts-info-triangle-fill',\n      'alerts-info-triangle',\n      'alerts-inform-fill-mini',\n      'alerts-inform-mini',\n      'alerts-inform',\n      'alerts-information-variant',\n      'alerts-mark',\n      'alerts-octagon-fill',\n      'alerts-octagon',\n      'alerts-pulse',\n      'alerts-question-mark',\n      'alerts-square',\n      'alerts-warning',\n      'alerts',\n      'success-circle-fill',\n      'success-circle-outline',\n      'success-decagram-fill',\n      'success-decagram-outline',\n    ],\n  },\n  {\n    dir: 'arrows',\n    data: [\n      'arrows-all',\n      'arrows-arrow-circle-down',\n      'arrows-arrow-circle-left',\n      'arrows-arrow-circle-right',\n      'arrows-arrow-circle-up',\n      'arrows-arrow-expand-horizontal',\n      'arrows-arrow-expand-vertical',\n      'arrows-arrow-left',\n      'arrows-arrow-right',\n      'arrows-arrow-up-level',\n      'arrows-autorenew-1',\n      'arrows-autorenew-circle',\n      'arrows-autorenew',\n      'arrows-back',\n      'arrows-cached-1',\n      'arrows-cached',\n      'arrows-chevron-left',\n      'arrows-chevron-right',\n      'arrows-collapse-four-arrows',\n      'arrows-collapse',\n      'arrows-compare',\n      'arrows-corner-chek-in',\n      'arrows-corner-down-left',\n      'arrows-corner-down-right',\n      'arrows-corner-left-down',\n      'arrows-corner-left-up',\n      'arrows-corner-right-down',\n      'arrows-corner-right-up',\n      'arrows-corner-up-left',\n      'arrows-corner-up-right',\n      'arrows-diagonal-arrow-left-down',\n      'arrows-diagonal-arrow-left-up',\n      'arrows-diagonal-arrow-right-down',\n      'arrows-diagonal-arrow-right-up',\n      'arrows-down-2',\n      'arrows-down-bold',\n      'arrows-down-double-2',\n      'arrows-down-double-top-2',\n      'arrows-down-limit-1',\n      'arrows-down-limit-double-1',\n      'arrows-down',\n      'arrows-download',\n      'arrows-expand-all',\n      'arrows-expand',\n      'arrows-left-bold',\n      'arrows-next',\n      'arrows-refresh',\n      'arrows-replay',\n      'arrows-right-bold',\n      'arrows-shuffle-variant',\n      'arrows-shuffle',\n      'arrows-swap-horiz-2',\n      'arrows-swap-horiz',\n      'arrows-swap-vert-2',\n      'arrows-swap-vert',\n      'arrows-up-2',\n      'arrows-up-bold',\n      'arrows-up-double-2',\n      'arrows-up-double-top-2',\n      'arrows-up-limit-1',\n      'arrows-up-limit-double-1',\n      'arrows-up',\n    ],\n  },\n  {\n    dir: 'audio',\n    data: [\n      'audio-add-library-music',\n      'audio-artist',\n      'audio-bookmark-music',\n      'audio-file-music',\n      'audio-microphone-off',\n      'audio-microphone',\n      'audio-music-box',\n      'audio-music-circle',\n      'audio-music-off',\n      'audio-music',\n      'audio-volume-high',\n      'audio-volume-low',\n      'audio-volume-medium',\n      'audio-volume-minus',\n      'audio-volume-mute',\n      'audio-volume-off',\n      'audio-volume-plus',\n    ],\n  },\n  {\n    dir: 'bages',\n    data: [\n      'badges-clipboard-tex',\n      'badges-clipboard',\n      'badges-code-download',\n      'badges-code',\n      'badges-tag-badges-tag-archve',\n      'badges-tag-fill',\n      'badges-tag-multiple',\n      'badges-tag-plus',\n      'badges-tag-remove',\n      'badges-tag-search',\n      'badges-tag-with-an-exclamation-mark',\n      'badges-tag-with-binding-to-data',\n      'badges-tag-without-binding-to-data',\n      'badges-tag',\n    ],\n  },\n  {\n    dir: 'battery',\n    data: [\n      'battery-10',\n      'battery-30',\n      'battery-50',\n      'battery-80',\n      'battery-alert',\n      'battery-charging',\n      'battery-flash-off',\n      'battery-flash-ok',\n      'battery-flash',\n      'battery-minus',\n      'battery-plus',\n      'battery',\n    ],\n  },\n  {\n    dir: 'bookmarks',\n    data: [\n      'bookmarks-book-open-page-variant',\n      'bookmarks-book-open-plus',\n      'bookmarks-book-open-re-1',\n      'bookmarks-book-open-re-2',\n      'bookmarks-book-open-re',\n      'bookmarks-book-open-variant',\n      'bookmarks-book-open',\n      'bookmarks-book',\n      'bookmarks-bookmark-check-fill',\n      'bookmarks-bookmark-check',\n      'bookmarks-bookmark-fill',\n      'bookmarks-bookmark-music-fill',\n      'bookmarks-bookmark-music',\n      'bookmarks-bookmark-plus-fill',\n      'bookmarks-bookmark-plus',\n      'bookmarks-bookmark-remove-2',\n      'bookmarks-bookmark-remove-fill',\n      'bookmarks-bookmark-remove',\n      'bookmarks-bookmark',\n    ],\n  },\n  {\n    dir: 'camera',\n    data: [\n      'camera-camera',\n      'camera-clapperboard-close',\n      'camera-clapperboard',\n      'camera-close',\n      'camera-film-close',\n      'camera-film',\n      'camera-image',\n      'camera-video-close',\n      'camera-video-off',\n      'camera-video',\n      'camera',\n    ],\n  },\n  {\n    dir: 'cancel',\n    data: [\n      'cancel-block',\n      'cancel-close-box-fill',\n      'cancel-close-box',\n      'cancel-close-circle-fill',\n      'cancel-close-circle',\n      'cancel-close',\n      'cancel-delete-line',\n      'cancel-delete-content',\n      'cansel-delete-file',\n    ],\n  },\n  {\n    dir: 'charts',\n    data: [\n      'charts-arc-1',\n      'charts-arc',\n      'charts-areaspline',\n      'charts-bar-graph',\n      'charts-bar-stacked',\n      'charts-bar',\n      'charts-bubble-line',\n      'charts-bubble',\n      'charts-chart-donut-variant-half',\n      'charts-chart-donut-variant',\n      'charts-discharge',\n      'charts-donut',\n      'charts-elevation-decline',\n      'charts-elevation-rise',\n      'charts-finance',\n      'charts-gantt',\n      'charts-google-analytics',\n      'charts-google-assistant',\n      'charts-hexagon-multiple',\n      'charts-histogram-chart-dashed-2',\n      'charts-histogram-chart-dashed',\n      'charts-histogram',\n      'charts-line-variant',\n      'charts-pie-1',\n      'charts-pie-2',\n      'charts-pie',\n      'charts-poll-box',\n      'charts-poll',\n      'charts-scatterplot-hexbin',\n      'charts-signal',\n      'charts-smart-trend',\n      'charts-trending-down',\n      'charts-trending-up',\n    ],\n  },\n  {\n    dir: 'chevrons',\n    data: [\n      'chevron-middle',\n      'chevrons-close-all',\n      'chevrons-double-down',\n      'chevrons-double-left-mini',\n      'chevrons-double-left',\n      'chevrons-double-right-mini',\n      'chevrons-double-right',\n      'chevrons-double-up',\n      'chevrons-down',\n      'chevrons-dropdown-small',\n      'chevrons-dropdown',\n      'chevrons-dropup',\n      'chevrons-input',\n      'chevrons-left-mini',\n      'chevrons-left',\n      'chevrons-menu-left-small',\n      'chevrons-menu-left',\n      'chevrons-menu-right',\n      'chevrons-open-all',\n      'chevrons-right-mini',\n      'chevrons-right',\n      'chevrons-unfold-less-horizontal',\n      'chevrons-unfold-less-verica',\n      'chevrons-unfold-more-horizontal',\n      'chevrons-unfold-more-vertical',\n      'chevrons-up',\n    ],\n  },\n  {\n    dir: 'date-calendar',\n    data: [\n      'date-access-alarm',\n      'date-asterisk',\n      'date-calendar-blank',\n      'date-calendar-check',\n      'date-calendar-clock',\n      'date-calendar-plus',\n      'date-calendar-question',\n      'date-calendar-range',\n      'date-calendar-remove',\n      'date-calendar-text',\n      'date-calendar-today',\n      'date-calendar',\n      'date-clock-alert',\n      'date-clock-end',\n      'date-clock-in',\n      'date-clock-out',\n      'date-clock-start',\n      'date-clock',\n      'date-day',\n      'date-history',\n      'date-hour',\n      'date-inform-add',\n      'date-inform-delete',\n      'date-midnight',\n      'date-minute',\n      'date-month',\n      'date-now',\n      'date-period-dropdown-list-open',\n      'date-period-dropdown-list',\n      'date-range',\n      'date-second',\n      'date-time-add-2',\n      'date-time-add',\n      'date-time-remove-2',\n      'date-time-remove',\n      'date-timer-sand-empty',\n      'date-timer',\n      'date-update',\n      'date-year',\n    ],\n  },\n  {\n    dir: 'delete',\n    data: [\n      'delete-do-not-disturb',\n      'delete-drop',\n      'delete-empty',\n      'delete-forever',\n      'delete-label-delete',\n      'delete-minus-circle',\n      'delete-minus-square',\n      'delete-minus',\n      'delete-restore',\n      'delete',\n    ],\n  },\n  {\n    dir: 'devices',\n    data: [\n      'devices-android-debug-bridge',\n      'devices-android',\n      'devices-camera-front',\n      'devices-cellphone-basic',\n      'devices-cellphone-link-off',\n      'devices-cellphone-link',\n      'devices-cellphone-wireless',\n      'devices-cellphone',\n      'devices-desktop-tower',\n      'devices-hard-drive-outline',\n      'devices-headphones',\n      'devices-input-device',\n      'devices-laptop-off',\n      'devices-laptop',\n      'devices-monitor',\n      'devices-printer-dropdown-list',\n      'devices-printer',\n      'devices-sensor',\n      'devices-speaker',\n      'devices-tablet',\n      'devices-touchpad',\n      'devices-transmitter',\n      'devices-tv',\n      'devices-watch-variant',\n    ],\n  },\n  {\n    dir: 'editor',\n    data: [\n      'editor-add-column',\n      'editor-add-row',\n      'editor-alfavit',\n      'editor-attach-2',\n      'editor-attach-file',\n      'editor-auto',\n      'editor-auto1',\n      'editor-border-all',\n      'editor-border-bottom',\n      'editor-border-clear',\n      'editor-border-color',\n      'editor-border-horizontal',\n      'editor-border-inner',\n      'editor-border-left',\n      'editor-border-outer',\n      'editor-border-right',\n      'editor-border-style',\n      'editor-border-top',\n      'editor-border-vertical',\n      'editor-brace-left',\n      'editor-brace-right',\n      'editor-copy-column',\n      'editor-copy-drop',\n      'editor-copy-row',\n      'editor-copy',\n      'editor-crop',\n      'editor-cross-out',\n      'editor-curly-brace-left',\n      'editor-curly-brace-right',\n      'editor-delete-column',\n      'editor-delete-row',\n      'editor-disconnect-link',\n      'editor-discrete-set-1',\n      'editor-discrete-set',\n      'editor-division',\n      'editor-dots',\n      'editor-down-1',\n      'editor-down',\n      'editor-drag-and-drop',\n      'editor-dropdown-list-open',\n      'editor-dropdown-list',\n      'editor-droplet',\n      'editor-format-align-center',\n      'editor-format-align-justify',\n      'editor-format-align-left',\n      'editor-format-align-right',\n      'editor-format-bold',\n      'editor-format-color-fill',\n      'editor-format-color-reset',\n      'editor-format-color-text',\n      'editor-format-indent',\n      'editor-format-indent1',\n      'editor-format-italic',\n      'editor-format-list-bulleted',\n      'editor-format-list-numbered',\n      'editor-format-textdirection-l-to-r',\n      'editor-format-underlined',\n      'editor-formula',\n      'editor-functions',\n      'editor-group-choose',\n      'editor-group-dropdown',\n      'editor-group-panel',\n      'editor-group',\n      'editor-hash',\n      'editor-horizontal-align-center-',\n      'editor-insert-emoticon-sad',\n      'editor-insert-emoticon',\n      'editor-insert-link-add',\n      'editor-insert-link-delete',\n      'editor-insert-link',\n      'editor-line-height',\n      'editor-link',\n      'editor-list-dushed-2',\n      'editor-merge-type',\n      'editor-mini',\n      'editor-minus',\n      'editor-mode',\n      'editor-multiplication',\n      'editor-panel-down',\n      'editor-panel-left',\n      'editor-panel-right',\n      'editor-panel-top',\n      'editor-percent-1',\n      'editor-percent',\n      'editor-plus',\n      'editor-right-1',\n      'editor-right',\n      'editor-screen',\n      'editor-search-hierarchy',\n      'editor-search-tags-words',\n      'editor-sort-asc',\n      'editor-subskrit-text',\n      'editor-superskrit-text',\n      'editor-table-lookup',\n      'editor-table',\n      'editor-tag',\n      'editor-template',\n      'editor-title',\n      'editor-transpose-right',\n      'editor-transpose-top',\n      'editor-transpose',\n      'editor-ungroup',\n      'editor-vertical-align-bottom',\n      'editor-vertical-align-center 2',\n      'editor-vertical-align-center',\n      'editor-vertical-align-top',\n      'editor-window',\n      'editor-wrap-text',\n    ],\n  },\n  {\n    dir: 'files',\n    data: [\n      'export-files-csv',\n      'export-files-pdf',\n      'export-files-sap',\n      'export-files-xlsx',\n      'files-alarm',\n      'files-archive',\n      'files-box',\n      'files-cloud-check',\n      'files-cloud',\n      'files-cloup-upload',\n      'files-collection-2',\n      'files-confirmation',\n      'files-correct',\n      'files-description-properties',\n      'files-document-image',\n      'files-document-text',\n      'files-excel-box',\n      'files-export-1',\n      'files-export-arr',\n      'files-export',\n      'files-file-close',\n      'files-file-doc',\n      'files-file-docx',\n      'files-file-open',\n      'files-file-pdf',\n      'files-file-play',\n      'files-file-ppt',\n      'files-file-pptx',\n      'files-file-remove',\n      'files-file-txt',\n      'files-file-video',\n      'files-file-xls',\n      'files-file-xlsx',\n      'files-file',\n      'files-find-1',\n      'files-find',\n      'files-folder-1',\n      'files-folder-add',\n      'files-folder-close',\n      'files-folder-delete',\n      'files-folder-mode',\n      'files-folder-open-1',\n      'files-folder-open',\n      'files-folder-remove',\n      'files-folder-root-add',\n      'files-folder-root-remove',\n      'files-folder',\n      'files-import-1',\n      'files-import-arr',\n      'files-import',\n      'files-in-group',\n      'files-incorrect',\n      'files-indicator',\n      'files-loader',\n      'files-method',\n      'files-mnemo',\n      'files-mode',\n      'files-multi',\n      'files-norm',\n      'files-plus',\n      'files-powerpoint',\n      'files-specification',\n      'files-view-document',\n      'files-word-box',\n      'files-просмотр',\n      'import-files-1с',\n      'import-files-csv',\n      'import-files-pdf',\n      'import-files-xlsx',\n    ],\n  },\n  {\n    dir: 'finance',\n    data: [\n      'finance-barcode',\n      'finance-calculator-auto',\n      'finance-calculator',\n      'finance-credit-card-of',\n      'finance-credit-card-plus',\n      'finance-credit-card',\n      'finance-currency-btc',\n      'finance-currency-usd-off',\n      'finance-currency-usd',\n      'finance-qr-code-auto-1',\n      'finance-qr-code-auto-2',\n      'finance-qr-code-auto-3',\n      'finance-qr-code-search',\n      'finance-qr-code',\n      'finance-scanner',\n      'finance-wallet',\n    ],\n  },\n  {\n    dir: 'location',\n    data: [\n      'location-compass',\n      'location-crosshairs-gps',\n      'location-crosshairs',\n      'location-language',\n      'location-localization-down-list',\n      'location-map-2',\n      'location-map-marker-date-1',\n      'location-map-marker-date-2',\n      'location-map-marker-minus',\n      'location-map-marker-off',\n      'location-map-marker-plus',\n      'location-map-marker',\n      'location-map',\n      'location-navigation-1',\n      'location-navigation',\n      'location-person-pin-circle',\n      'location-pin-1',\n      'location-pin-2',\n      'location-pin',\n    ],\n  },\n  {\n    dir: 'messaging',\n    data: [\n      'messaging-add-comment',\n      'messaging-alert',\n      'messaging-at',\n      'messaging-emai-down-list',\n      'messaging-emai',\n      'messaging-email-open',\n      'messaging-forward',\n      'messaging-inbox',\n      'messaging-message-circle',\n      'messaging-message-off',\n      'messaging-message',\n      'messaging-processing',\n      'messaging-question-ask',\n      'messaging-reply',\n      'messaging-send',\n      'messaging-text',\n    ],\n  },\n  {\n    dir: 'network',\n    data: [\n      'network-close',\n      'network-cloud-download',\n      'network-cloud-upload',\n      'network-database-administration',\n      'network-database-delete',\n      'network-database-json',\n      'network-database-minus',\n      'network-database-plus',\n      'network-database-search',\n      'network-database-sql',\n      'network-database',\n      'network-download',\n      'network-ethernet-open',\n      'network-external-link',\n      'network-lan-connect',\n      'network-lan-disconnect',\n      'network-lan-pending',\n      'network-lan',\n      'network-layers',\n      'network-library',\n      'network-minus',\n      'network-no-layers',\n      'network-object',\n      'network-plus',\n      'network-scheme-2',\n      'network-scheme',\n      'network-security',\n      'network-server-1',\n      'network-server-network-off',\n      'network-server-network',\n      'network-server-off',\n      'network-server-security',\n      'network-server',\n      'network-upload',\n    ],\n  },\n  {\n    dir: 'phone',\n    data: [\n      'phone-call-missed',\n      'phone-in-talk',\n      'phone-minus',\n      'phone-missed',\n      'phone-off',\n      'phone-paused',\n      'phone-plus',\n      'phone',\n    ],\n  },\n  {\n    dir: 'player',\n    data: [\n      'player-loop',\n      'player-pause',\n      'player-play-back',\n      'player-play',\n      'player-skip-backward',\n      'player-skip-forward',\n      'player-skip-next-circle-outline',\n      'player-skip-previous',\n      'player-stop',\n      'player-voicemail',\n    ],\n  },\n  {\n    dir: 'poi',\n    data: [\n      'burn',\n      'cargo-box-2',\n      'cargo-box',\n      'cargo-container',\n      'cargo',\n      'fire',\n      'freeze',\n      'gas',\n      'loading',\n      'location-map-marker-minus',\n      'poi-achive-Mir',\n      'poi-article-1',\n      'poi-barley',\n      'poi-bdrv-administration',\n      'poi-boiler-hot-water-gas-and-oil',\n      'poi-cancel sample reject',\n      'poi-coal',\n      'poi-crane',\n      'poi-difference',\n      'poi-early-version',\n      'poi-ecopost-circle',\n      'poi-ecopost-rectangle',\n      'poi-electrics',\n      'poi-factory pipe',\n      'poi-factory-pipes',\n      'poi-factory',\n      'poi-fan',\n      'poi-flask-1',\n      'poi-flask-2',\n      'poi-flask-3',\n      'poi-flask-4',\n      'poi-flask-5',\n      'poi-fuel-oil-tank',\n      'poi-fuel',\n      'poi-gas-balloon',\n      'poi-gas-monitoring',\n      'poi-gas-station',\n      'poi-gear-cooling',\n      'poi-generator',\n      'poi-git-lab',\n      'poi-heat-exchanger',\n      'poi-heat-recovery-boiler',\n      'poi-high-speed-reduction-cooling',\n      'poi-lng-storage',\n      'poi-medicine',\n      'poi-ni-fi',\n      'poi-nuclear-station',\n      'poi-oil-factory',\n      'poi-oil-field',\n      'poi-oil-storage',\n      'poi-oil-tank',\n      'poi-owl',\n      'poi-pipe-sensor',\n      'poi-pipe-valve',\n      'poi-pipeline',\n      'poi-plus',\n      'poi-press',\n      'poi-pump-drop',\n      'poi-pump',\n      'poi-respirator-2.1',\n      'poi-respirator-2',\n      'poi-respirator-3',\n      'poi-respirator-4',\n      'poi-respirator-5',\n      'poi-respirator',\n      'poi-separator',\n      'poi-steam-boiler',\n      'poi-steam-turbine',\n      'poi-steam',\n      'poi-strit',\n      'poi-tank',\n      'poi-water-heater',\n      'poi-water-pump',\n      'product-grade-according-to-specification',\n      'snowflake',\n    ],\n  },\n  {\n    dir: 'selection',\n    data: [\n      'selection-check-all',\n      'selection-check-simple',\n      'selection-checkbox-blank-circle',\n      'selection-checkbox-blank',\n      'selection-checkbox-marked-circle-chanel',\n      'selection-checkbox-marked-circle',\n      'selection-checked-1',\n      'selection-checked-2',\n      'selection-checked-empty',\n      'selection-checked',\n      'selection-choice',\n      'selection-halfchoice',\n      'selection-process',\n      'selection-radio-off',\n      'selection-radio-on',\n      'selection-success',\n      'selection-toggle-left',\n      'selection-toggle-right',\n      'selection-unchoice',\n    ],\n  },\n  {\n    dir: 'settings',\n    data: [\n      'settings-2',\n      'settings-apps',\n      'settings-more-horiz',\n      'settings-more-vert',\n      'settings-power',\n      'settings-tune-vertical',\n      'settings-tune',\n      'settings',\n    ],\n  },\n  {\n    dir: 'shapes',\n    data: [\n      'shapes-Key',\n      'shapes-Star',\n      'shapes-animation',\n      'shapes-arrange-bring-forward',\n      'shapes-arrange-send-backward',\n      'shapes-arrange-send-to-back',\n      'shapes-box-shadow',\n      'shapes-checkbox-intermediate',\n      'shapes-checkerboard',\n      'shapes-collage',\n      'shapes-collector',\n      'shapes-cube-3',\n      'shapes-cube-outline',\n      'shapes-cube',\n      'shapes-drawing-box',\n      'shapes-drawing-outline',\n      'shapes-drawing',\n      'shapes-hexagon-fill',\n      'shapes-hexagon',\n      'shapes-layers-off',\n      'shapes-layers',\n      'shapes-nest-protec',\n      'shapes-nut',\n      'shapes-ontology-2',\n      'shapes-ontology',\n      'shapes-pentagon-fill',\n      'shapes-pentagon',\n      'shapes-rhombus-fill',\n      'shapes-rhombus',\n      'shapes-shape-1-f',\n      'shapes-shape-1',\n      'shapes-shape-2-f',\n      'shapes-shape-2',\n      'shapes-shape-3-f',\n      'shapes-shape-3',\n      'shapes-shape-4-f',\n      'shapes-shape-4',\n      'shapes-shape-5-f',\n      'shapes-shape-5',\n      'shapes-shape-6',\n      'shapes-shape-7',\n      'shapes-shape-fill',\n      'shapes-shape-plus-1',\n      'shapes-shape-plus',\n      'shapes-shape',\n      'shapes-square-inc',\n      'shapes-triangle-fill',\n      'shapes-triangle',\n    ],\n  },\n  {\n    dir: 'shopping',\n    data: ['shopping-box', 'shopping-cart', 'shopping-gift', 'shopping'],\n  },\n  {\n    dir: 'signal',\n    data: [\n      'signal-access-point',\n      'signal-bluetooth',\n      'signal-cast',\n      'signal-off',\n      'signal-radio-tower',\n      'signal-rss-box',\n      'signal-wifi-off',\n      'signal-wifi',\n      'signal',\n    ],\n  },\n  {\n    dir: 'social',\n    data: [\n      'social-browser',\n      'social-globe-2',\n      'social-heart-fill',\n      'social-heart',\n      'social-home-breadcrumbs',\n      'social-home',\n      'social-instagram',\n      'social-moon',\n      'social-share',\n      'social-star-fill',\n      'social-star-half',\n      'social-star',\n      'social-sun',\n      'social-tab',\n      'social-telegram',\n      'social-thumb-down',\n      'social-thumb-up',\n    ],\n  },\n  {\n    dir: 'sort',\n    data: [\n      'sort-abc-ru-up',\n      'sort-abc-ru',\n      'sort-alphabetical-up',\n      'sort-alphabetical',\n      'sort-apps',\n      'sort-asc-arr',\n      'sort-desc-arr',\n      'sort-eye-off-2',\n      'sort-eye-off',\n      'sort-eye',\n      'sort-filter-remove',\n      'sort-filter-setting',\n      'sort-filter',\n      'sort-funnel-drop-down-list-open',\n      'sort-funnel-drop-down-list',\n      'sort-look-into-the-buffer',\n      'sort-maximize',\n      'sort-numeric',\n      'sort-real-size',\n      'sort-search-mistake',\n      'sort-time-down',\n      'sort-time-up',\n      'sort-version',\n      'sort-zoom-in-dropdown',\n      'sort-zoom-in',\n      'sort-zoom-out',\n    ],\n  },\n  {\n    dir: 'tools',\n    data: [\n      'tools-auto-fix',\n      'tools-award',\n      'tools-briefcase',\n      'tools-broom',\n      'tools-brush',\n      'tools-content-cut',\n      'tools-content-save-as',\n      'tools-content-save',\n      'tools-content-unsave',\n      'tools-earth-work',\n      'tools-eraser',\n      'tools-eyedropper',\n      'tools-keyboard-close-1',\n      'tools-keyboard-close',\n      'tools-keyboard',\n      'tools-lightbulb',\n      'tools-npm',\n      'tools-palette',\n      'tools-pantone',\n      'tools-ruler',\n      'tools-save-all',\n      'tools-save-back',\n      'tools-solver',\n      'tools-thermometer-minus',\n      'tools-thermometer-plus',\n      'tools-thermometer',\n      'tools-umbrella',\n    ],\n  },\n  {\n    dir: 'transport',\n    data: [\n      'transport-airplane',\n      'transport-ambulance',\n      'transport-truck-1',\n      'transport-truck-2',\n      'transport-truck-3',\n      'transport-truck-4',\n      'transport-truck-5',\n      'transport-truck',\n    ],\n  },\n  {\n    dir: 'vectors',\n    data: [\n      'vectors-arrange-above',\n      'vectors-arrange-below',\n      'vectors-circle-variant',\n      'vectors-circle',\n      'vectors-combine-1',\n      'vectors-combine',\n      'vectors-curve',\n      'vectors-default-16',\n      'vectors-difference-ab',\n      'vectors-difference-ba',\n      'vectors-difference',\n      'vectors-ellipse',\n      'vectors-empty-16',\n      'vectors-intersection',\n      'vectors-line',\n      'vectors-point',\n      'vectors-polygon',\n      'vectors-polyline',\n      'vectors-radius',\n      'vectors-rectangle',\n      'vectors-selection',\n      'vectors-square',\n      'vectors-triangle',\n    ],\n  },\n  {\n    dir: 'view',\n    data: [\n      'view-agenda',\n      'view-array',\n      'view-carousel',\n      'view-column',\n      'view-component',\n      'view-dashboard-variant',\n      'view-dashboard',\n      'view-day',\n      'view-grid-outline',\n      'view-grid',\n      'view-headline',\n      'view-list',\n      'view-logo-grey-z',\n      'view-logo-s.grey',\n      'view-menu-2',\n      'view-menu-arrow-down',\n      'view-menu-arrow-left',\n      'view-menu-arrow-right',\n      'view-menu-arrow-up',\n      'view-menu',\n      'view-module',\n      'view-quilt',\n      'view-sequential',\n    ],\n  },\n];\n","import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { prizmIsNativeFocusedIn } from '../../util/is-native-focused-in';\nimport { prizmBlurNativeFocused } from '../../util/blur-native-focused';\nimport { PrizmSize, prizmSizeBigger } from '../../util/size-bigger';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class PrizmLoaderComponent extends PrizmAbstractTestId {\n  @Input()\n  size: PrizmSize = 's';\n\n  @Input()\n  inheritColor = false;\n\n  @Input()\n  overlay = false;\n\n  @Input()\n  textContent: TemplateRef<unknown> | null = null;\n\n  @Input()\n  set showLoader(value: boolean) {\n    if (value && this.focused) {\n      prizmBlurNativeFocused(this.documentRef);\n    }\n\n    this.loading = value;\n  }\n\n  @HostBinding('class._loading')\n  loading = true;\n\n  override readonly testId_ = 'ui_loader';\n\n  constructor(\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>\n  ) {\n    super();\n  }\n\n  get hasOverlay(): boolean {\n    return this.overlay && this.loading;\n  }\n\n  get hasText(): boolean {\n    return !!this.textContent;\n  }\n\n  get isHorizontal(): boolean {\n    return !prizmSizeBigger(this.size);\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocusedIn(this.elementRef.nativeElement);\n  }\n}\n","<fieldset\n  class=\"z-content\"\n  [class.z-content_has-overlay]=\"hasOverlay\"\n  [class.z-content_loading]=\"loading\"\n  [disabled]=\"loading\"\n>\n  <ng-content></ng-content>\n</fieldset>\n\n<div\n  class=\"z-loader\"\n  *ngIf=\"loading\"\n  [class.z-loader_horizontal]=\"isHorizontal\"\n  [class.z-loader_inherit-color]=\"inheritColor\"\n  [attr.data-prizm-element-size]=\"size\"\n>\n  <svg class=\"z-icon\" focusable=\"false\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle class=\"z-circle\" cx=\"50\" cy=\"50\" r=\"50\" stroke-dasharray=\"314\"></circle>\n  </svg>\n\n  <div class=\"z-text\" *ngIf=\"hasText\" [class.z-text_horizontal]=\"isHorizontal\">\n    <ng-container [ngTemplateOutlet]=\"textContent\"></ng-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmLoaderComponent } from './loader.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmLoaderComponent],\n  exports: [PrizmLoaderComponent],\n})\nexport class PrizmLoaderModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { PrizmThemeService } from '@prizm-ui/theme';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\nexport enum PrizmInteractiveState {\n  Disabled = 'disabled',\n  Readonly = 'readonly',\n  Pressed = 'pressed',\n  Hovered = 'hovered',\n}\n\n@Component({\n  selector: 'prizm-wrapper',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./wrapper.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmWrapperComponent {\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  readOnly = false;\n\n  @Input()\n  pseudoState!: string;\n\n  @Input()\n  hovered: boolean | null = null;\n\n  @Input()\n  pressed: boolean | null = null;\n\n  @Input()\n  focused = false;\n\n  @Input()\n  invalid = false;\n\n  @Input()\n  @HostBinding('attr.data-appearance')\n  appearance = '';\n\n  @HostBinding('class._invalid')\n  get computedInvalid(): boolean {\n    return !this.disabled && !this.readOnly && this.invalid;\n  }\n\n  @HostBinding('class._focused')\n  get computedFocused(): boolean {\n    return this.focused && !this.disabled;\n  }\n\n  @HostBinding('attr.data-state')\n  get interactiveState(): PrizmInteractiveState | string | null {\n    if (this.pseudoState) {\n      return this.pseudoState;\n    }\n    if (this.disabled) {\n      return PrizmInteractiveState.Disabled;\n    }\n\n    if (this.readOnly) {\n      return PrizmInteractiveState.Readonly;\n    }\n\n    if (this.pressed) {\n      return PrizmInteractiveState.Pressed;\n    }\n\n    if (this.hovered) {\n      return PrizmInteractiveState.Hovered;\n    }\n\n    return null;\n  }\n\n  @HostBinding('class._no-hover')\n  get noHover(): boolean {\n    return this.readOnly || this.hovered === false;\n  }\n\n  @HostBinding('class._no-active')\n  get noActive(): boolean {\n    return this.readOnly || this.hovered === false;\n  }\n\n  constructor(\n    public readonly themeService: PrizmThemeService,\n    public readonly destroy$: PrizmDestroyService,\n    public readonly elRef: ElementRef\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { PRIZM_BUTTON_OPTIONS, PrizmButtonOptions, PrizmContent } from './button-options';\nimport { AbstractPrizmInteractive } from '../../abstract/interactive';\nimport { prizmIsNativeFocused } from '../../util/is-native-focused';\nimport { PrizmSize } from '../../util/size-bigger';\nimport { PrizmCallFuncPipe, PrizmDestroyService } from '@prizm-ui/helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { prizmPressedObservable } from '../../observables/pressed-observable';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../types/appearance.types';\nimport { prizmWatch } from '../../observables/watch';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../tokens';\nimport { PrizmFocusableElementAccessor } from '../../types';\nimport { PrizmFocusVisibleService } from '../../directives/focus-visible/focus-visible.service';\nimport { PrizmHoveredService } from '../../services';\nimport { PolymorphContent } from '../../directives/polymorph/types/content';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { PrizmIconComponent, PrizmIconModule } from '../icon';\nimport { PrizmLoaderComponent, PrizmLoaderModule } from '../loader';\nimport { PrizmWrapperComponent } from '../../directives/wrapper/wrapper.component';\nimport { PolymorphOutletDirective } from '../../directives/polymorph/directives/outlet';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'button[prizmButton], button[prizmIconButton], a[prizmButton], a[prizmIconButton]',\n  styleUrls: ['./button.component.less'],\n  templateUrl: './button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    NgIf,\n    NgTemplateOutlet,\n    PrizmWrapperComponent,\n    PolymorphOutletDirective,\n    PrizmIconComponent,\n    PrizmLoaderComponent,\n    PrizmCallFuncPipe,\n  ],\n  providers: [\n    PrizmDestroyService,\n    {\n      provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n      useExisting: forwardRef(() => PrizmButtonComponent),\n    },\n    PrizmFocusVisibleService,\n  ],\n})\nexport class PrizmButtonComponent extends AbstractPrizmInteractive implements PrizmFocusableElementAccessor {\n  @Input()\n  @HostBinding('attr.data-size')\n  @prizmDefaultProp()\n  size: PrizmSize = this.options.size;\n\n  /** can pass template or icon class */\n  @Input()\n  icon!: PolymorphContent<{ size: PrizmSize }>;\n\n  /** can pass template or icon class */\n  @Input()\n  iconRight!: PolymorphContent<{ size: PrizmSize }>;\n\n  @Input()\n  @HostBinding('attr.data-appearance')\n  @prizmDefaultProp()\n  appearance: PrizmAppearance = this.options.appearance;\n\n  @Input()\n  @HostBinding('attr.data-appearance-type')\n  @prizmDefaultProp()\n  appearanceType: PrizmAppearanceType = this.options.appearanceType;\n\n  @Input()\n  @prizmDefaultProp()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  @HostBinding('class._loading')\n  @prizmDefaultProp()\n  showLoader = false;\n\n  @HostBinding('attr.disabled')\n  get nativeDisabled(): '' | null {\n    return this.computedDisabled || this.showLoader ? '' : null;\n  }\n\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.focusable ? 0 : -1;\n  }\n\n  override get generateManeTestId() {\n    return this.hasIcon ? 'ui_button' : 'ui_icon_button';\n  }\n\n  @HostListener('focusin', ['true'])\n  @HostListener('focusout', ['false'])\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n  }\n\n  get focused(): boolean {\n    return !this.showLoader && prizmIsNativeFocused(this.elementRef.nativeElement);\n  }\n\n  constructor(\n    @Inject(PRIZM_BUTTON_OPTIONS) private readonly options: PrizmButtonOptions,\n    private readonly elementRef: ElementRef,\n    private readonly focusVisible$: PrizmFocusVisibleService,\n    private readonly hoveredService: PrizmHoveredService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly destroy$: PrizmDestroyService\n  ) {\n    super();\n\n    this.hoveredService\n      .createHovered$(this.elementRef.nativeElement)\n      .pipe(\n        tap(hovered => this.updateHovered(hovered)),\n        tap(() => this.changeDetectorRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    focusVisible$.pipe(takeUntil(destroy$)).subscribe(focusVisible => {\n      this.updateFocusVisible(focusVisible);\n    });\n\n    prizmPressedObservable(elementRef.nativeElement, {\n      onlyTrusted: true,\n    })\n      .pipe(\n        tap(pressed => {\n          this.updatePressed(pressed);\n        }),\n        prizmWatch(changeDetectorRef),\n        takeUntil(destroy$)\n      )\n      .subscribe();\n  }\n\n  get nativeFocusableElement(): HTMLElement | null {\n    return this.nativeDisabled ? null : this.elementRef.nativeElement;\n  }\n  public isTemplateRef(icon: PrizmContent): icon is TemplateRef<unknown> {\n    return icon instanceof TemplateRef;\n  }\n\n  get loaderSize(): PrizmSize {\n    return this.size === 'l' || this.size === 'xl' ? 'm' : 's';\n  }\n\n  get hasIcon(): boolean {\n    return !!(this.icon || this.iconRight);\n  }\n}\n","<prizm-wrapper\n  class=\"z-wrapper\"\n  [attr.data-appearance-type]=\"appearanceType\"\n  [appearance]=\"appearance\"\n  [hovered]=\"computedHovered\"\n  [pseudoState]=\"pseudoState\"\n  [pressed]=\"computedPressed\"\n  [disabled]=\"computedDisabled\"\n  [focused]=\"computedFocusVisible\"\n>\n  <span class=\"z-content\" [style.visibility]=\"showLoader ? 'hidden' : ''\">\n    <ng-container\n      *ngIf=\"icon\"\n      [ngTemplateOutlet]=\"showIconTemp\"\n      [ngTemplateOutletContext]=\"{ icon: icon }\"\n    ></ng-container>\n    <div class=\"text prizm-font-btn-links-14\"><ng-content></ng-content></div>\n    <ng-container\n      *ngIf=\"iconRight\"\n      [ngTemplateOutlet]=\"showIconTemp\"\n      [ngTemplateOutletContext]=\"{ icon: iconRight }\"\n    ></ng-container>\n  </span>\n  <prizm-loader class=\"z-loader\" *ngIf=\"showLoader\" [size]=\"loaderSize\" [inheritColor]=\"true\"></prizm-loader>\n</prizm-wrapper>\n\n<ng-template #showIconTemp let-icon=\"icon\">\n  <ng-container *polymorphOutlet=\"icon as content; context: { size: size }\">\n    <prizm-icon [iconClass]=\"content\" [size]=\"16\"></prizm-icon>\n  </ng-container>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmHintContainerComponent } from '../hint/hint-container.component';\n\n@Component({\n  selector: 'prizm-confirm-popup-container',\n  templateUrl: './confirm-popup-container.component.html',\n  styleUrls: ['./confirm-popup-container.component.less'],\n  providers: [PrizmDestroyService],\n})\nexport class PrizmConfirmPopupContainerComponent extends PrizmHintContainerComponent<any> {}\n","<div class=\"box prizm-font-main-body-14\" prizmFocusTrap>\n  <div class=\"content\">\n    <div class=\"title prizm-font-dynamic-title-h4\" *ngIf=\"context.title\">\n      <ng-container *polymorphOutlet=\"context.title as data; context: context\">\n        {{ data }}\n      </ng-container>\n    </div>\n    <div class=\"description prizm-font-main-body-14\">\n      <ng-container *polymorphOutlet=\"content() as data; context: context\">\n        {{ data }}\n      </ng-container>\n\n      <div class=\"footer prizm-font-btn-links-14\">\n        <ng-container>\n          <div class=\"vertical\">\n            <div class=\"top\">\n              <ng-container\n                *ngIf=\"context.confirmButton\"\n                [ngTemplateOutlet]=\"buttonTemplate\"\n                [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n              >\n              </ng-container>\n              <ng-container\n                *ngIf=\"context.supportButton\"\n                [ngTemplateOutlet]=\"buttonTemplate\"\n                [ngTemplateOutletContext]=\"$any({ button: context.supportButton })\"\n              >\n              </ng-container>\n            </div>\n            <div class=\"bottom\">\n              <ng-container\n                *ngIf=\"context.cancelButton\"\n                [ngTemplateOutlet]=\"buttonTemplate\"\n                [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n              >\n              </ng-container>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-template #buttonTemplate let-button=\"button\">\n          <button\n            [style]=\"button.style\"\n            [appearance]=\"button.appearance\"\n            [appearanceType]=\"button.appearanceType ?? 'fill'\"\n            [size]=\"button.size\"\n            [disabled]=\"$any(button.disabled ?? false | prizmToObservable | async)\"\n            [showLoader]=\"$any(button.showLoader ?? false | prizmToObservable | async)\"\n            (click)=\"button.action(context)\"\n            prizmButton\n          >\n            {{ button.text }}\n          </button>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PrizmOverlayOutsidePlacement } from '../../modules/overlay/models';\nimport { PrizmDialogButton } from '../../components/dialogs/dialog';\nimport { PrizmSizeL, PrizmSizeM } from '../../util';\nimport { PrizmConfirmDialogResultDefaultType } from '../../components/dialogs/confirm-dialog';\nimport { PrizmHintContext, PrizmHintOptions } from '../hint/hint-options';\n\nexport type PrizmConfirmPopupButton = Omit<PrizmDialogButton, 'action'> &\n  Partial<Pick<PrizmDialogButton, 'action'>>;\n\nexport type PrizmConfirmPopupMode = 'error' | 'dark' | 'light' | null;\n\nexport interface PrizmConfirmPopupOptions extends PrizmHintOptions {\n  readonly showDelay: number;\n  readonly hideDelay: number;\n  readonly size: PrizmSizeM | PrizmSizeL;\n  confirmButton?: PrizmConfirmPopupButton | string;\n  supportButton?: PrizmConfirmPopupButton | string;\n  cancelButton?: PrizmConfirmPopupButton | string;\n  readonly mode: PrizmConfirmPopupMode;\n  readonly autoReposition: boolean;\n  readonly direction: PrizmOverlayOutsidePlacement;\n}\nexport interface PrizmConfirmPopupContext extends PrizmHintContext {\n  readonly size: PrizmSizeM | PrizmSizeL;\n  readonly completeWith: (ctx: PrizmConfirmDialogResultDefaultType | unknown) => void;\n  confirmButton?: PrizmConfirmPopupButton | string;\n  supportButton?: PrizmConfirmPopupButton | string;\n  cancelButton?: PrizmConfirmPopupButton | string;\n}\n\n/** Default values for hint options */\nexport const PRIZM_CONFIRM_POPUP_DEFAULT_OPTIONS: PrizmConfirmPopupOptions = {\n  showDelay: 100,\n  size: 'm',\n  hideDelay: 100,\n  autoReposition: true,\n  mode: null,\n  theme: null,\n  direction: PrizmOverlayOutsidePlacement.RIGHT,\n};\n\nexport const PRIZM_CONFIRM_POPUP_OPTIONS = new InjectionToken<PrizmConfirmPopupOptions>(\n  'Default parameters for tooltip directive',\n  {\n    factory: (): PrizmConfirmPopupOptions => PRIZM_CONFIRM_POPUP_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmConfirmPopupOptionsProvider: (\n  options: Partial<PrizmConfirmPopupOptions>\n) => ValueProvider = (options: Partial<PrizmConfirmPopupOptions>) => ({\n  provide: PRIZM_CONFIRM_POPUP_OPTIONS,\n  useValue: { ...PRIZM_CONFIRM_POPUP_DEFAULT_OPTIONS, ...options },\n});\n","import { ElementRef, InjectionToken, Provider } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { DOCUMENT } from '@angular/common';\nimport { prizmTypedFromEvent } from '../../../observables';\nimport { prizmContainsOrAfter, prizmIsCurrentTarget } from '../../../util/dom';\nimport { filter, switchMapTo, take, takeUntil } from 'rxjs/operators';\nimport { PrizmOverlayContentToken } from '../../../modules/overlay';\nimport { PrizmOverlayContent } from '../../../modules/overlay/models';\n\nexport const PRIZM_DIALOGS_CLOSE = new InjectionToken<Observable<void>>('Default close event', {\n  factory: (): Observable<void> => new Subject<void>().asObservable(),\n});\n\nconst SCROLLBAR_PLACEHOLDER = 17;\n\nexport const PRIZM_DIALOG_CLOSE_STREAM = new InjectionToken<Observable<unknown>>('Dialogs closing stream');\nexport const PRIZM_DIALOG_PROVIDERS: Provider[] = [\n  PrizmDestroyService,\n  {\n    provide: PRIZM_DIALOG_CLOSE_STREAM,\n    deps: [DOCUMENT, WINDOW, ElementRef, PRIZM_DIALOGS_CLOSE, PrizmDestroyService, PrizmOverlayContentToken],\n    useFactory: prizmDialogCloseStreamFactory,\n  },\n];\n\nexport function prizmDialogCloseStreamFactory(\n  documentRef: Document,\n  windowRef: Window,\n  { nativeElement }: ElementRef<HTMLElement>,\n  close$: Observable<void>,\n  destroy$: PrizmDestroyService,\n  content: PrizmOverlayContent\n): Observable<unknown> {\n  const { dismissible, parentContainer } = content.props.context;\n  return dismissible\n    ? merge(\n        /* on click esc */\n        prizmTypedFromEvent(documentRef, 'keydown').pipe(\n          filter(\n            ({ key, target }) =>\n              key === 'Escape' &&\n              target instanceof Element &&\n              (!prizmContainsOrAfter(nativeElement, target) || nativeElement.contains(target))\n          )\n        ),\n        /* on backdrop click*/\n        prizmTypedFromEvent(nativeElement, 'click').pipe(filter(prizmIsCurrentTarget)),\n        /* on outdoor mouse events */\n        prizmTypedFromEvent(documentRef, 'mousedown').pipe(\n          filter(\n            ({ target, clientX }) =>\n              target instanceof Element &&\n              (parentContainer && parentContainer instanceof HTMLElement\n                ? prizmContainsOrAfter(parentContainer, target)\n                : windowRef.innerWidth - clientX > SCROLLBAR_PLACEHOLDER) &&\n              !prizmContainsOrAfter(nativeElement, target)\n          ),\n          switchMapTo(\n            prizmTypedFromEvent(documentRef, 'mouseup').pipe(\n              take(1),\n              filter(\n                ({ target }) => target instanceof Element && !prizmContainsOrAfter(nativeElement, target)\n              )\n            )\n          )\n        ),\n        /* on custom close event */\n        close$\n      ).pipe(takeUntil(destroy$))\n    : close$;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmSize } from '../../../util';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../../types';\nimport { PolymorphContent } from '../../../directives';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { PrizmButtonComponent } from '../button.component';\n\n@Component({\n  selector: 'prizm-split-button',\n  styleUrls: ['./split-button.component.less'],\n  templateUrl: './split-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [PrizmButtonComponent],\n})\nexport class PrizmSplitButtonComponent extends PrizmAbstractTestId {\n  @Input()\n  @HostBinding('attr.data-size')\n  size!: PrizmSize;\n\n  /** can pass template or icon class */\n  @Input()\n  icon: PolymorphContent<{ size: PrizmSize }> = 'chevrons-dropdown';\n\n  @Input()\n  @HostBinding('attr.data-appearance')\n  appearance!: PrizmAppearance;\n\n  @Input()\n  @HostBinding('attr.data-appearance-type')\n  appearanceType!: PrizmAppearanceType;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  showLoader = false;\n\n  @Output()\n  clickIcon = new EventEmitter<void>();\n\n  @Output()\n  clickButton = new EventEmitter<void>();\n\n  override readonly testId_ = 'ui_split_button';\n\n  @ViewChild('buttonRef', { static: true, read: ElementRef }) buttonEl!: ElementRef;\n  @ViewChild('iconButtonRef', { static: true, read: ElementRef }) iconButtonEl!: ElementRef;\n\n  public updateZIndex(el: ElementRef, focused: boolean): void {\n    el.nativeElement.style.zIndex = focused ? '1' : '';\n  }\n}\n","<div class=\"button\">\n  <button\n    class=\"full-width\"\n    #buttonRef\n    [size]=\"size\"\n    [appearance]=\"appearance\"\n    [showLoader]=\"showLoader\"\n    [disabled]=\"disabled\"\n    [appearanceType]=\"appearanceType\"\n    (click)=\"clickButton.emit()\"\n    (focusedChange)=\"updateZIndex(buttonEl, $event)\"\n    prizmButton\n  >\n    <ng-content></ng-content>\n  </button>\n</div>\n\n<div class=\"icon\">\n  <button\n    #iconButtonRef\n    [size]=\"size\"\n    [disabled]=\"disabled\"\n    [pseudoState]=\"$any(showLoader && 'none')\"\n    [appearance]=\"appearance\"\n    [appearanceType]=\"appearanceType\"\n    [icon]=\"icon\"\n    (click)=\"!showLoader && clickIcon.emit()\"\n    (focusedChange)=\"updateZIndex(iconButtonEl, $event)\"\n    prizmIconButton\n  ></button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmButtonComponent } from './button.component';\nimport { CommonModule } from '@angular/common';\nimport { PrizmWrapperModule } from '../../directives/wrapper';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmCallFuncModule } from '@prizm-ui/helpers';\nimport { PrizmSplitButtonComponent } from './split-button/split-button.component';\nimport { PrizmLoaderModule } from '../loader/loader.module';\nimport { PolymorphModule } from '../../directives';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmButtonComponent, PrizmSplitButtonComponent],\n  exports: [PrizmButtonComponent, PrizmSplitButtonComponent],\n})\nexport class PrizmButtonModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PRIZM_ANIMATIONS_DURATION } from '../../../tokens';\nimport { PRIZM_DIALOG_CLOSE_STREAM, PRIZM_DIALOG_PROVIDERS } from '../dialog/dialog-options';\nimport { PrizmAnimationOptions, prizmFadeIn, prizmSlideInTop } from '../../../animations';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService, PrizmToObservableModule } from '@prizm-ui/helpers';\nimport { PrizmBaseDialogContext, PrizmDialogSize } from '../dialog';\nimport { PrizmConfirmDialogOptions, PrizmConfirmDialogResultDefaultType } from './confirm-dialog.models';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphModule, PrizmFocusTrapModule } from '../../../directives';\nimport { PrizmOverlayModule } from '../../../modules';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmButtonModule } from '../../button';\nimport { PrizmScrollbarModule } from '../../scrollbar';\n\n@Component({\n  selector: 'prizm-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: PRIZM_DIALOG_PROVIDERS,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PolymorphModule,\n    PrizmOverlayModule,\n    PrizmThemeModule,\n    PrizmToObservableModule,\n    PrizmButtonModule,\n    PrizmFocusTrapModule,\n    PrizmScrollbarModule,\n  ],\n  animations: [prizmSlideInTop, prizmFadeIn],\n})\nexport class PrizmDialogConfirmComponent<DATA = unknown> extends PrizmAbstractTestId {\n  @Input()\n  public context!: PrizmBaseDialogContext<\n    PrizmConfirmDialogResultDefaultType,\n    PrizmConfirmDialogOptions<DATA>\n  >;\n\n  @Input()\n  public close!: () => void;\n\n  @HostBinding('attr.prizm-size')\n  public get size(): PrizmDialogSize {\n    return this.context.size as PrizmDialogSize;\n  }\n\n  @HostBinding('attr.prizm-dialog-id')\n  public get id(): string {\n    return this.context.id as string;\n  }\n\n  @HostBinding('@prizmSlideInTop')\n  @HostBinding('@prizmFadeIn')\n  public get slideInTop(): PrizmAnimationOptions {\n    return this.animation;\n  }\n\n  @HostBinding('style.width')\n  readonly width = '100%';\n\n  override readonly testId_ = 'ui_form_submit';\n\n  private readonly animation = {\n    value: '',\n    params: {\n      start: '40px',\n      duration: this.duration,\n    },\n  } as const;\n\n  constructor(\n    @Inject(PRIZM_ANIMATIONS_DURATION) private readonly duration: number,\n    @Inject(PRIZM_DIALOG_CLOSE_STREAM) readonly close$: Observable<unknown>,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly elRef: ElementRef\n  ) {\n    super();\n    close$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.close();\n    });\n  }\n}\n","<div class=\"host\" prizmFocusTrap prizmTheme>\n  <div class=\"content\">\n    <div class=\"title prizm-font-title-h4\">\n      <ng-container *polymorphOutlet=\"$any(context.title) as data; context: context\">\n        {{ data }}\n      </ng-container>\n    </div>\n    <div class=\"description prizm-font-main-body-14\">\n      <prizm-scrollbar class=\"scrollbar\" [visibility]=\"context.scrollbarVisibility ?? 'auto'\">\n        <ng-container *polymorphOutlet=\"$any(context.description) as data; context: $any(context)\">\n          {{ data }}\n        </ng-container>\n      </prizm-scrollbar>\n    </div>\n  </div>\n\n  <div class=\"footer prizm-font-btn-links-14\">\n    <ng-template #columnWrapper let-column=\"column\"> </ng-template>\n\n    <ng-container *polymorphOutlet=\"$any(context.footer); context: context\">\n      <ng-container [ngSwitch]=\"!context.showByVertical\">\n        <div class=\"horizontal\" *ngSwitchCase=\"true\">\n          <div class=\"left\">\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"right\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"vertical\" *ngSwitchDefault>\n          <div class=\"top\">\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"bottom\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #buttonTemplate let-button=\"button\">\n      <button\n        [style]=\"button.style\"\n        [appearance]=\"button.appearance\"\n        [appearanceType]=\"button.appearanceType\"\n        [size]=\"button.size\"\n        [iconRight]=\"button.iconRight\"\n        [icon]=\"button.icon\"\n        [disabled]=\"$any(button.disabled ?? false | prizmToObservable | async)\"\n        [showLoader]=\"$any(button.showLoader ?? false | prizmToObservable | async)\"\n        (click)=\"button.action(context)\"\n        prizmButton\n      >\n        {{ button.text }}\n      </button>\n    </ng-template>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmDialogConfirmComponent } from './confirm-dialog.component';\n\n/**\n * @deprecated\n * use standalone component instead\n * */\n@NgModule({\n  imports: [PrizmDialogConfirmComponent],\n  exports: [PrizmDialogConfirmComponent],\n})\nexport class PrizmConfirmDialogModule {}\n","import { Injectable, Injector, Type } from '@angular/core';\nimport { noop, Observable, Observer, Subject } from 'rxjs';\nimport { PrizmBaseDialogContext, PrizmDialogBaseOptions } from '../components/dialogs/dialog/dialog.models';\nimport { PolymorphContent, PrizmOverscrollService } from '../directives';\nimport {\n  PRIZM_OVERLAY_BACKDROP_NO_POINTERS,\n  PrizmOverlayControl,\n  PrizmOverlayGlobalPosition,\n  PrizmOverlayInsidePlacement,\n  PrizmOverlayService,\n  PrizmOverlaySlidePosition,\n} from '../modules/overlay';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmOverscrollMode } from '../directives/overscroll/overscroll.model';\nimport { PrizmOverlayConfig } from '../modules/overlay/models';\nimport { prizmGenerateId } from '@prizm-ui/helpers';\n\n@Injectable()\nexport abstract class AbstractPrizmDialogService<\n  T extends PrizmDialogBaseOptions,\n  O = unknown,\n  DATA = unknown\n> {\n  protected abstract readonly component: Type<unknown>;\n  protected abstract readonly defaultOptions: T;\n  protected readonly overlayService: PrizmOverlayService;\n  protected readonly overscrollService: PrizmOverscrollService;\n  protected constructor(injector: Injector) {\n    this.overlayService = injector.get(PrizmOverlayService);\n    this.overscrollService = injector.get(PrizmOverscrollService);\n  }\n\n  public open<O = unknown, DATA = unknown>(\n    content: PolymorphContent<PrizmBaseDialogContext<O>> | unknown,\n    options: Partial<T>,\n    cb: (data: {\n      control: PrizmOverlayControl;\n      dialog: PrizmBaseDialogContext<any, any>;\n      observer: Observer<O>;\n      destroy$: Observable<void>;\n    }) => void = noop,\n    config?: {\n      injector?: Injector;\n    }\n  ): Observable<O> {\n    const destroy$ = new Subject<void>();\n    return new Observable(observer => {\n      const completeWith = (result: O): void => {\n        observer.next(result);\n        observer.complete();\n      };\n\n      options = options ?? {};\n\n      const dialog = {\n        ...this.defaultOptions,\n        ...options,\n        content,\n        component: this.component,\n        completeWith,\n        $implicit: observer,\n        createdAt: Date.now(),\n        id: options.id ?? this.defaultOptions.id ?? prizmGenerateId(),\n      };\n\n      const control = this.overlayService\n        .position(this.getPosition(dialog))\n        .config(this.getConfig(dialog))\n        .content(dialog.component, {\n          context: dialog,\n          getService: () => {\n            return control;\n          },\n        })\n        .parentContainer(options.parentContainer)\n        .create({\n          parentInjector: config?.injector,\n        });\n\n      if (typeof options.zIndex === 'number') control.zIndex = options.zIndex;\n\n      control.open();\n\n      this.setOverscrollMode(options.overscroll ?? 'scroll', control, destroy$);\n\n      if (typeof cb === 'function') {\n        cb({ control, dialog, observer, destroy$: destroy$.asObservable() });\n      }\n\n      return (): void => {\n        control.close();\n        destroy$.next();\n        destroy$.complete();\n      };\n    });\n  }\n\n  protected getConfig(dialog: PrizmBaseDialogContext<any, any>): Partial<PrizmOverlayConfig> {\n    return {\n      backdrop: dialog.backdrop ?? true,\n      styleVars: dialog.styleVars,\n      containerClass: dialog.containerClass ?? '',\n      backdropClass: [dialog.backdrop && PRIZM_OVERLAY_BACKDROP_NO_POINTERS, dialog.backdropClass]\n        .filter(Boolean)\n        .join(' '),\n      wrapperClass: dialog.wrapperClass,\n    };\n  }\n\n  protected getPosition(\n    dialog: PrizmBaseDialogContext<any, any>\n  ): PrizmOverlayGlobalPosition | PrizmOverlaySlidePosition | PrizmOverlayGlobalPosition {\n    return new PrizmOverlayGlobalPosition({\n      placement: dialog.position ?? PrizmOverlayInsidePlacement.CENTER,\n      width: dialog.width ?? 'auto',\n      height: dialog.height ?? 'auto',\n    });\n  }\n\n  private setOverscrollMode(\n    mode: PrizmOverscrollMode,\n    control: PrizmOverlayControl,\n    destroy$: Observable<void>\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    control.viewEl.style.pointerEvents = 'unset';\n    this.overscrollService\n      .run(mode, control.viewEl as any)\n      .pipe(takeUntil(destroy$))\n      .subscribe();\n  }\n}\n","import { PolymorphContent } from '../../../directives';\nimport {\n  PrizmBaseDialogContext,\n  PrizmDialogBaseOptions,\n  PrizmDialogButton,\n  PrizmDialogSize,\n} from '../dialog/dialog.models';\nimport { PrizmOverscrollMode } from '../../../directives/overscroll/overscroll.model';\nimport { PrizmScrollbarVisibility } from '../../scrollbar';\n\nexport type PrizmConfirmDialogButton = Omit<PrizmDialogButton, 'action'> &\n  Partial<Pick<PrizmDialogButton, 'action'>>;\n\nexport interface PrizmConfirmDialogOptions<DATA = unknown> extends PrizmDialogBaseOptions {\n  confirmButton?: PrizmConfirmDialogButton | string;\n  supportButton?: PrizmConfirmDialogButton | string | null;\n  cancelButton?: PrizmConfirmDialogButton | string;\n  showByVertical?: boolean;\n  data?: DATA;\n  readonly scrollbarVisibility?: PrizmScrollbarVisibility;\n  size?: PrizmDialogSize;\n  title: PolymorphContent<\n    PrizmBaseDialogContext<PrizmConfirmDialogResultDefaultType, PrizmConfirmDialogOptions<DATA>>\n  >;\n  footer?: PolymorphContent<\n    PrizmBaseDialogContext<PrizmConfirmDialogResultDefaultType, PrizmConfirmDialogOptions<DATA>>\n  >;\n  description?: PolymorphContent<\n    PrizmBaseDialogContext<PrizmConfirmDialogResultDefaultType, PrizmConfirmDialogOptions<DATA>>\n  >;\n  overscrollMode?: PrizmOverscrollMode;\n}\n\nexport enum PrizmConfirmDialogResultDefaultType {\n  confirmed = 'confirmed',\n  support = 'support',\n  cancel = 'cancel',\n}\nexport type PrizmConfirmDialogResult = PrizmConfirmDialogResultDefaultType | any;\n","import { AbstractPrizmDialogService } from '../../../abstract/dialog.service';\nimport { Injectable } from '@angular/core';\nimport { PrizmOverlayControl, PrizmOverlayInsidePlacement } from '../../../modules/overlay';\nimport { Observable, Observer } from 'rxjs';\nimport { PrizmDialogConfirmComponent } from './confirm-dialog.component';\nimport {\n  PrizmConfirmDialogButton,\n  PrizmConfirmDialogOptions,\n  PrizmConfirmDialogResult,\n  PrizmConfirmDialogResultDefaultType,\n} from './confirm-dialog.models';\nimport { PrizmBaseDialogContext } from '../dialog/dialog.models';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../../types';\n\nconst DEFAULT_OPTIONS = {\n  position: PrizmOverlayInsidePlacement.CENTER,\n  dismissible: true,\n  showByVertical: true,\n  confirmButton: null,\n  supportButton: null,\n  cancelButton: null,\n} as unknown as PrizmConfirmDialogOptions<PrizmConfirmDialogResult>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmConfirmDialogService<\n  T extends PrizmConfirmDialogOptions<PrizmConfirmDialogResult> = PrizmConfirmDialogOptions<PrizmConfirmDialogResult>\n> extends AbstractPrizmDialogService<T, PrizmConfirmDialogResult> {\n  protected readonly component = PrizmDialogConfirmComponent;\n  protected readonly defaultOptions = DEFAULT_OPTIONS as T;\n\n  public override open(\n    title: T['title'],\n    options: Omit<Partial<T>, 'title'>,\n    cb?: (data: {\n      control: PrizmOverlayControl;\n      dialog: PrizmBaseDialogContext<PrizmConfirmDialogResult, PrizmConfirmDialogOptions>;\n      observer: Observer<PrizmConfirmDialogResult>;\n      destroy$: Observable<void>;\n    }) => void\n  ): Observable<PrizmConfirmDialogResult> {\n    options = {\n      ...options,\n      title,\n      dismissible: options.dismissible ?? false,\n      backdrop: options.backdrop ?? true,\n    };\n    this.safeUpdateButtonsWithDefaultStyles(options as Partial<T>);\n    return super.open<PrizmConfirmDialogResult, unknown>(title, options as Partial<T>, cb);\n  }\n\n  private safeUpdateButtonsWithDefaultStyles(options: Partial<T>): void {\n    const supportButton =\n      options.supportButton &&\n      this.generateButton(\n        options,\n        options.supportButton,\n        'Продолжить',\n        PrizmConfirmDialogResultDefaultType.confirmed,\n        'danger',\n        'ghost'\n      );\n\n    const confirmButton = this.generateButton(\n      options,\n      options.confirmButton as any,\n      'Подтвердить',\n      PrizmConfirmDialogResultDefaultType.confirmed,\n      'primary'\n    );\n\n    const cancelButton = this.generateButton(\n      options,\n      options.cancelButton as any,\n      'Отмена',\n      PrizmConfirmDialogResultDefaultType.cancel,\n      'secondary',\n      'ghost'\n    );\n\n    options.confirmButton = confirmButton;\n    options.cancelButton = cancelButton;\n    options.supportButton = supportButton;\n  }\n\n  private generateButton(\n    options: Partial<T>,\n    button: PrizmConfirmDialogButton | string,\n    defaultText: string,\n    defaultComplete: PrizmConfirmDialogResultDefaultType,\n    defaultAppearance?: PrizmAppearance,\n    defaultAppearanceType?: PrizmAppearanceType\n  ): PrizmConfirmDialogButton {\n    const buttonText = (typeof button === 'string' ? button : button?.text) ?? defaultText;\n    const btn = ((typeof button === 'string' ? {} : button) ?? {}) as Partial<PrizmConfirmDialogButton>;\n\n    return {\n      ...btn,\n      text: buttonText,\n      size: btn.size ?? options.size,\n      action: btn.action ?? ((c): void => c.completeWith(defaultComplete)),\n      appearance: btn.appearance ?? defaultAppearance,\n      appearanceType: btn.appearanceType ?? defaultAppearanceType,\n    };\n  }\n}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PrizmOverlayOutsidePlacement } from '../../modules/overlay/models';\nimport { PrizmTheme } from '@prizm-ui/theme';\n\nexport type PrizmHintMode = 'error' | 'dark' | 'light' | null;\nexport interface PrizmHintOptions {\n  readonly showDelay: number;\n  readonly hideDelay: number;\n  // readonly mode: PrizmHintMode;\n  readonly autoReposition: boolean;\n  readonly direction: PrizmOverlayOutsidePlacement;\n  readonly theme: PrizmTheme | null;\n}\n\nexport interface PrizmHintContext {\n  // mode: PrizmHintOptions['mode'];\n  reposition: boolean;\n  direction: PrizmHintOptions['direction'];\n  id: string;\n  showDelay: number;\n  hideDelay: number;\n  host: HTMLElement;\n  context?: Record<string, unknown>;\n}\n\n/** Default values for hint options */\nexport const PRIZM_HINT_DEFAULT_OPTIONS: PrizmHintOptions = {\n  showDelay: 500,\n  hideDelay: 200,\n  theme: null,\n  autoReposition: true,\n  // mode: null,\n  direction: PrizmOverlayOutsidePlacement.RIGHT,\n};\n\nexport const PRIZM_HINT_OPTIONS = new InjectionToken<PrizmHintOptions>(\n  'Default parameters for hint directive',\n  {\n    factory: (): PrizmHintOptions => PRIZM_HINT_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmHintOptionsProvider: (options: Partial<PrizmHintOptions>) => ValueProvider = (\n  options: Partial<PrizmHintOptions>\n) => ({\n  provide: PRIZM_HINT_OPTIONS,\n  useValue: { ...PRIZM_HINT_DEFAULT_OPTIONS, ...options },\n});\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  Type,\n} from '@angular/core';\nimport { PrizmDestroyService, prizmGenerateId } from '@prizm-ui/helpers';\nimport { prizmDefaultProp, prizmRequiredSetter } from '@prizm-ui/core';\nimport { PolymorphContent } from '../polymorph';\nimport { PRIZM_HINT_OPTIONS, PrizmHintContext, PrizmHintOptions } from './hint-options';\nimport {\n  PrizmOverlayControl,\n  PrizmOverlayRelativePosition,\n  PrizmOverlayService,\n} from '../../modules/overlay';\nimport { combineLatest, of, Subject } from 'rxjs';\nimport { PrizmHoveredService } from '../../services';\nimport { delay, distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmHintContainerComponent } from './hint-container.component';\nimport { PrizmHintService } from './hint.service';\nimport { PrizmTheme } from '@prizm-ui/theme';\n\nexport const HINT_HOVERED_CLASS = '_hint_hovered';\n\n@Directive({\n  selector: '[prizmHint]:not(ng-container)',\n  providers: [PrizmDestroyService],\n  exportAs: 'prizmHint',\n  standalone: true,\n})\nexport class PrizmHintDirective<\n  OPTIONS extends PrizmHintOptions = PrizmHintOptions,\n  CONTEXT extends PrizmHintContext = PrizmHintContext\n> implements OnChanges, OnInit, OnDestroy\n{\n  protected readonly options = inject(PRIZM_HINT_OPTIONS) as OPTIONS;\n  protected readonly injector = inject(Injector);\n\n  @Input()\n  @prizmDefaultProp()\n  prizmAutoReposition: PrizmHintOptions['autoReposition'] = this.options.autoReposition;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintDirection: PrizmHintOptions['direction'] = this.options.direction;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintId: string = 'hintId_' + prizmGenerateId();\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintTheme: PrizmTheme | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintShowDelay: PrizmHintOptions['showDelay'] = this.options.showDelay;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintHideDelay: PrizmHintOptions['hideDelay'] = this.options.hideDelay;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintHost: HTMLElement | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintContext: Record<string, unknown> = {};\n\n  @Input()\n  @prizmDefaultProp()\n  prizmHintCanShow = true;\n\n  set show(show: boolean) {\n    if (show) this.open();\n    else this.close();\n  }\n  get show(): boolean {\n    return this.show_;\n  }\n\n  protected show_ = false;\n\n  @Input()\n  @prizmRequiredSetter()\n  set prizmHint(value: PolymorphContent | null) {\n    if (!value) {\n      this.content = '';\n      return;\n    }\n\n    this.content = value;\n  }\n\n  readonly prizmHoveredChange$$ = new Subject<boolean>();\n  @Output()\n  readonly prizmHintShowed = new EventEmitter<boolean>();\n\n  protected readonly onHoverActive: boolean = true;\n\n  content!: PolymorphContent;\n  overlay!: PrizmOverlayControl;\n  protected readonly containerComponent: Type<unknown> = PrizmHintContainerComponent;\n  protected readonly show$ = new Subject<boolean>();\n  protected readonly destroyListeners$ = new Subject<void>();\n\n  private readonly prizmOverlayService: PrizmOverlayService = inject(PrizmOverlayService);\n\n  private readonly renderer: Renderer2 = inject(Renderer2);\n  protected readonly elementRef: ElementRef<HTMLElement> = inject(ElementRef);\n  private readonly destroy$: PrizmDestroyService = inject(PrizmDestroyService);\n  private readonly hoveredService: PrizmHoveredService = inject(PrizmHoveredService);\n\n  private readonly hintService: PrizmHintService = inject(PrizmHintService);\n\n  get id(): string | null {\n    return this.prizmHintId ?? null;\n  }\n\n  get host(): HTMLElement {\n    return this.prizmHintHost ?? this.elementRef.nativeElement;\n  }\n\n  public ngOnChanges(): void {\n    this.initOverlayController();\n  }\n\n  public ngOnInit(): void {\n    this.initVisibleController();\n    this.initShowedChangeListener();\n  }\n\n  protected initShowedChangeListener() {\n    this.prizmHoveredChange$$\n      .pipe(\n        distinctUntilChanged(),\n        tap(state => {\n          this.prizmHintShowed.emit(state);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public ngOnDestroy(): void {\n    if (this.overlay) this.overlay.close();\n  }\n\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  protected open(): void {\n    if (!this.prizmHintCanShow || this.content === '') return;\n    this.show_ = true;\n    this.renderer.addClass(this.elementRef.nativeElement, HINT_HOVERED_CLASS);\n    this.overlay.open();\n    this.prizmHoveredChange$$.next(!this.show_);\n  }\n\n  protected close(): void {\n    this.show_ = false;\n    this.renderer.removeClass(this.elementRef.nativeElement, HINT_HOVERED_CLASS);\n    this.overlay?.close();\n    this.prizmHoveredChange$$.next(this.show_);\n  }\n\n  private initVisibleController(): void {\n    this.show$\n      .pipe(\n        switchMap(show => {\n          const delayTime = show ? this.prizmHintShowDelay : this.prizmHintHideDelay;\n          return of(show).pipe(delay(delayTime));\n        }),\n        tap(show => this.toggle(show)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private initOverlayController(): void {\n    this.destroyListeners$.next();\n    if (this.show_) this.show$.next(false);\n    this.overlay?.close();\n\n    const position = new PrizmOverlayRelativePosition({\n      placement: this.prizmHintDirection,\n      autoReposition: this.prizmAutoReposition,\n      element: this.host,\n    });\n    this.overlay = this.prizmOverlayService\n      .position(position)\n      .config({\n        backdrop: false,\n      })\n      .content(this.containerComponent, {\n        content: () => this.content,\n        id: this.prizmHintId,\n        hintTheme: this.prizmHintTheme,\n        context: this.getContext(),\n      })\n      .create({\n        parentInjector: this.injector,\n      });\n    if (this.onHoverActive) {\n      combineLatest([\n        this.hoveredService.createHovered$(this.host),\n        this.hintService.childHovered(this.id as string),\n      ])\n        .pipe(\n          map(([thisHovered, containerHovered]) => {\n            return thisHovered || containerHovered;\n          }),\n          tap(hovered => this.show$.next(hovered)),\n          takeUntil(this.destroyListeners$),\n          takeUntil(this.destroy$)\n        )\n        .subscribe();\n    }\n  }\n\n  protected getContext(): CONTEXT {\n    return {\n      reposition: this.prizmAutoReposition,\n      direction: this.prizmHintDirection,\n      id: this.prizmHintId,\n      showDelay: this.prizmHintShowDelay,\n      hideDelay: this.prizmHintHideDelay,\n      host: this.host,\n      context: this.prizmHintContext,\n    } as CONTEXT;\n  }\n}\n","/* eslint-disable @angular-eslint/no-input-rename */\nimport { Directive, EventEmitter, forwardRef, HostListener, Input, Output } from '@angular/core';\nimport { PrizmDestroyService, prizmGenerateId } from '@prizm-ui/helpers';\nimport { PrizmConfirmPopupContainerComponent } from './confirm-popup-container.component';\nimport {\n  PRIZM_CONFIRM_POPUP_OPTIONS,\n  PrizmConfirmPopupButton,\n  PrizmConfirmPopupContext,\n  PrizmConfirmPopupOptions,\n} from './confirm-popup-options';\nimport { prizmDefaultProp, prizmRequiredSetter } from '@prizm-ui/core';\nimport { PolymorphContent } from '../polymorph';\nimport {\n  PrizmConfirmDialogButton,\n  PrizmConfirmDialogResultDefaultType,\n} from '../../components/dialogs/confirm-dialog';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../types';\nimport { PRIZM_HINT_OPTIONS, PrizmHintOptions } from '../hint/hint-options';\nimport { PrizmHintDirective } from '../hint/hint.directive';\n\n@Directive({\n  selector: '[prizmConfirmPopup]:not(ng-container)',\n  providers: [\n    PrizmDestroyService,\n    {\n      provide: PRIZM_HINT_OPTIONS,\n      useExisting: forwardRef(() => PRIZM_CONFIRM_POPUP_OPTIONS),\n    },\n  ],\n  exportAs: 'prizmConfirmPopup',\n})\nexport class PrizmConfirmPopupDirective<\n  T extends Record<string, unknown>\n> extends PrizmHintDirective<PrizmConfirmPopupOptions> {\n  // @Input('prizmConfirmPopupMode')\n  // @prizmDefaultProp()\n  // override prizmHintMode: PrizmHintOptions['mode'] = this.options.mode;\n\n  @Input('prizmAutoReposition')\n  @prizmDefaultProp()\n  override prizmAutoReposition: PrizmHintOptions['autoReposition'] = this.options.autoReposition;\n\n  @Input('prizmConfirmPopupDirection')\n  @prizmDefaultProp()\n  override prizmHintDirection: PrizmHintOptions['direction'] = this.options.direction;\n\n  @Input('prizmConfirmPopupId')\n  @prizmDefaultProp()\n  override prizmHintId: string = 'hintId_' + prizmGenerateId();\n\n  @Input('prizmConfirmPopupShowDelay')\n  @prizmDefaultProp()\n  override prizmHintShowDelay: PrizmHintOptions['showDelay'] = this.options.showDelay;\n\n  @Input('prizmConfirmPopupHideDelay')\n  @prizmDefaultProp()\n  override prizmHintHideDelay: PrizmHintOptions['hideDelay'] = this.options.hideDelay;\n\n  @Input()\n  @prizmDefaultProp()\n  public size = this.options.size;\n\n  @Input('prizmConfirmPopupHost')\n  @prizmDefaultProp()\n  override prizmHintHost: HTMLElement | null = null;\n\n  @Output()\n  @prizmDefaultProp()\n  public completeWith = new EventEmitter<PrizmConfirmDialogResultDefaultType | unknown>();\n\n  @Input('prizmConfirmPopup')\n  @prizmRequiredSetter()\n  override set prizmHint(value: PolymorphContent | null) {\n    if (!value) {\n      this.content = '';\n      return;\n    }\n\n    this.content = value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  prizmConfirmPopupTitle = '';\n\n  @Input('prizmConfirmPopupContext')\n  @prizmDefaultProp()\n  override prizmHintContext: Record<string, unknown> = {};\n\n  @Input('prizmConfirmPopupCanShow')\n  @prizmDefaultProp()\n  override prizmHintCanShow = true;\n\n  @Input() confirmButton?: PrizmConfirmPopupButton | string;\n  @Input() supportButton?: PrizmConfirmPopupButton | string;\n  @Input() cancelButton?: PrizmConfirmPopupButton | string;\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('prizmConfirmPopupShowed')\n  override prizmHintShowed = new EventEmitter<boolean>();\n\n  protected override readonly containerComponent = PrizmConfirmPopupContainerComponent;\n  protected override readonly onHoverActive = false;\n\n  @HostListener('document:click', ['$event.target']) public onClick(target: HTMLElement): void {\n    this.show$.next(this.elementRef.nativeElement.contains(target));\n  }\n\n  protected override getContext(): PrizmConfirmPopupContext {\n    const context = {\n      size: this.size,\n      // mode: this.prizmHintMode,\n      reposition: this.prizmAutoReposition,\n      direction: this.prizmHintDirection,\n      completeWith: (value: PrizmConfirmPopupButton) => {\n        this.completeWith.next(value);\n      },\n      id: this.prizmHintId,\n      showDelay: this.prizmHintShowDelay,\n      hideDelay: this.prizmHintHideDelay,\n      title: this.prizmConfirmPopupTitle,\n      host: this.host,\n      confirmButton: this.confirmButton,\n      supportButton: this.supportButton,\n      cancelButton: this.cancelButton,\n    } as PrizmConfirmPopupContext;\n    this.safeUpdateButtonsWithDefaultStyles(context);\n    return context;\n  }\n\n  private generateButton(\n    options: PrizmConfirmPopupContext,\n    button: PrizmConfirmDialogButton | string,\n    defaultText: string,\n    defaultComplete: PrizmConfirmDialogResultDefaultType,\n    defaultAppearance?: PrizmAppearance,\n    defaultAppearanceType?: PrizmAppearanceType\n  ): PrizmConfirmDialogButton {\n    const buttonText = (typeof button === 'string' ? button : button?.text) ?? defaultText;\n    const btn = ((typeof button === 'string' ? {} : button) ?? {}) as Partial<PrizmConfirmDialogButton>;\n\n    const result = {\n      ...btn,\n      text: buttonText,\n      size: btn.size ?? options.size,\n      // TODO remove any type\n      action: (ctx: any): void => {\n        if (typeof btn.action === 'function') btn.action(ctx as any);\n        options.completeWith(defaultComplete);\n      },\n      appearance: btn.appearance ?? defaultAppearance,\n      appearanceType: btn.appearanceType ?? defaultAppearanceType,\n    };\n\n    return result;\n  }\n\n  private safeUpdateButtonsWithDefaultStyles(options: PrizmConfirmPopupContext): void {\n    const supportButton = this.generateButton(\n      options,\n      options.supportButton as string,\n      'Выйти без сохранения',\n      PrizmConfirmDialogResultDefaultType.support,\n      'danger',\n      'outline'\n    );\n\n    const confirmButton = this.generateButton(\n      options,\n      options.confirmButton as string,\n      'Подтвердить',\n      PrizmConfirmDialogResultDefaultType.confirmed,\n      'primary'\n    );\n\n    const cancelButton = this.generateButton(\n      options,\n      options.cancelButton as string,\n      'Отмена',\n      PrizmConfirmDialogResultDefaultType.cancel,\n      'secondary',\n      'ghost'\n    );\n\n    options.confirmButton = confirmButton;\n    options.cancelButton = cancelButton;\n    options.supportButton = supportButton;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmHintDirective } from './hint.directive';\nimport { PrizmHintContainerComponent } from './hint-container.component';\n\n/**\n * @deprecated\n * user standalone instead of\n * */\n@NgModule({\n  imports: [PrizmHintContainerComponent, PrizmHintDirective],\n  exports: [PrizmHintDirective],\n})\nexport class PrizmHintModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphOutletDirective } from '../polymorph';\nimport { PrizmConfirmPopupDirective } from './confirm-popup.directive';\nimport { PrizmHintDirective } from '../hint';\nimport { PrizmConfirmPopupContainerComponent } from './confirm-popup-container.component';\nimport { PrizmIconComponent } from '../../components/icon';\nimport { PrizmScrollbarModule } from '../../components/scrollbar';\nimport { PrizmButtonComponent } from '../../components/button';\nimport { PrizmFocusTrapModule } from '../focus-trap';\nimport { PrizmToObservablePipe } from '@prizm-ui/helpers';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PolymorphOutletDirective,\n    PrizmToObservablePipe,\n    PrizmFocusTrapModule,\n    PrizmHintDirective,\n    PrizmScrollbarModule,\n    PrizmButtonComponent,\n    PrizmIconComponent,\n  ],\n  declarations: [PrizmConfirmPopupDirective, PrizmConfirmPopupContainerComponent],\n  exports: [PrizmConfirmPopupDirective],\n})\nexport class PrizmConfirmPopupModule {}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\n\n@Directive({\n  selector: '[prizmSkeleton], [prizmSkeletonText], [prizmSkeletonRounded], [prizmSkeletonShort]',\n  standalone: true,\n})\nexport class PrizmSkeletonDirective {\n  @Input('prizmSkeletonText')\n  @prizmDefaultProp()\n  isText = false;\n\n  @Input('prizmSkeletonRounded')\n  @prizmDefaultProp()\n  isRounded = false;\n\n  @Input('prizmSkeletonShort')\n  @prizmDefaultProp()\n  isShort = false;\n\n  @Input('prizmSkeleton')\n  @HostBinding('class.prizm-skeleton')\n  @prizmDefaultProp()\n  active = true;\n\n  @HostBinding('class.prizm-skeleton_text') get prizmSkeletonText() {\n    return this.active && this.isText;\n  }\n  @HostBinding('class.prizm-skeleton_rounded') get prizmSkeletonRounded() {\n    return this.active && this.isRounded;\n  }\n  @HostBinding('class.prizm-skeleton_short') get prizmSkeletonShort() {\n    return this.active && this.isShort;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmSkeletonDirective } from './skeleton.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmSkeletonDirective],\n  exports: [PrizmSkeletonDirective],\n})\nexport class PrizmSkeletonModule {}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector:\n    '[prizmLifecycle], [prizmAfterViewInit], [prizmAfterContentInit], [prizmOnInit], [prizmOnDestroy]',\n  exportAs: 'prizmLifecycle',\n  standalone: true,\n})\nexport class PrizmLifecycleDirective implements AfterViewInit, OnInit, OnDestroy, AfterContentInit {\n  @Output()\n  readonly prizmAfterViewInit = new EventEmitter<ElementRef>();\n\n  @Output()\n  readonly prizmOnInit = new EventEmitter<ElementRef>();\n\n  @Output()\n  readonly prizmAfterContentInit = new EventEmitter<ElementRef>();\n\n  @Output()\n  readonly prizmOnDestroy = new EventEmitter<ElementRef>();\n\n  private readonly afterViewInitSource$ = new ReplaySubject(1);\n  readonly afterViewInit$ = this.afterViewInitSource$.pipe(debounceTime(0));\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly element: ElementRef<HTMLInputElement>\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.prizmAfterViewInit.next(this.element);\n    this.afterViewInitSource$.next(this.element);\n  }\n\n  ngAfterContentInit(): void {\n    this.prizmAfterContentInit.next(this.element);\n  }\n\n  ngOnDestroy(): void {\n    this.prizmOnDestroy.next(this.element);\n  }\n\n  ngOnInit(): void {\n    this.prizmOnInit.next(this.element);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmLifecycleDirective } from './lifecycle.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmLifecycleDirective],\n  exports: [PrizmLifecycleDirective],\n})\nexport class PrizmLifecycleModule {}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n  PrizmFocusableElementAccessor,\n  PrizmNativeFocusableElement,\n} from '../../../types/focusable-element-accessor';\nimport { PrizmAutofocusHandler } from '../autofocus.options';\n\n@Directive()\nexport abstract class AbstractPrizmAutofocusHandler implements PrizmAutofocusHandler {\n  protected constructor(\n    protected readonly prizmFocusableComponent: PrizmFocusableElementAccessor | null,\n    protected readonly elementRef: ElementRef<HTMLElement>\n  ) {}\n\n  protected get element(): PrizmNativeFocusableElement {\n    return this.prizmFocusableComponent?.nativeFocusableElement || this.elementRef.nativeElement;\n  }\n\n  protected get isTextFieldElement(): boolean {\n    return this.element.matches(`input, textarea`);\n  }\n\n  public abstract setFocus(): void;\n}\n","import { Directive, ElementRef, Inject, Optional, Self } from '@angular/core';\nimport { ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { Observable, race, timer } from 'rxjs';\nimport { map, skipWhile, take, throttleTime } from 'rxjs/operators';\nimport { PRIZM_POLLING_TIME } from '../../../constants/polling-time';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { AbstractPrizmAutofocusHandler } from './abstract.handler';\n\nconst TIMEOUT = 1000;\nconst NG_ANIMATION_SELECTOR = `.ng-animating`;\n\n@Directive()\nexport class PrizmDefaultAutofocusHandler extends AbstractPrizmAutofocusHandler {\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(PRIZM_FOCUSABLE_ITEM_ACCESSOR)\n    prizmFocusableComponent: PrizmFocusableElementAccessor | null,\n    @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n    @Inject(ANIMATION_FRAME) private readonly animationFrame$: Observable<number>\n  ) {\n    super(prizmFocusableComponent, elementRef);\n  }\n\n  public setFocus(): void {\n    if (this.isTextFieldElement) {\n      race(\n        timer(TIMEOUT),\n        this.animationFrame$.pipe(\n          throttleTime(PRIZM_POLLING_TIME),\n          map(() => this.element.closest(NG_ANIMATION_SELECTOR)),\n          skipWhile(Boolean),\n          take(1)\n        )\n      ).subscribe(() => this.element.focus());\n    } else {\n      this.element.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Inject, NgZone, Optional, Renderer2, Self } from '@angular/core';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { AbstractPrizmAutofocusHandler } from './abstract.handler';\nimport { prizmPx } from '@prizm-ui/core';\n\n@Directive()\nexport class PrizmIosAutofocusHandler extends AbstractPrizmAutofocusHandler {\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(PRIZM_FOCUSABLE_ITEM_ACCESSOR)\n    prizmFocusableComponent: PrizmFocusableElementAccessor | null,\n    @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n    @Inject(Renderer2) private readonly renderer: Renderer2,\n    @Inject(NgZone) private readonly ngZone: NgZone,\n    @Inject(WINDOW) private readonly windowRef: Window\n  ) {\n    super(prizmFocusableComponent, elementRef);\n    this.patchCssStyles();\n  }\n\n  public setFocus(): void {\n    if (this.isTextFieldElement) {\n      this.ngZone.runOutsideAngular(() => this.iosWebkitAutofocus());\n    } else {\n      this.element.focus();\n    }\n  }\n\n  private iosWebkitAutofocus(): void {\n    const fakeInput: HTMLInputElement = this.makeFakeInput();\n    const duration = this.getDurationTimeBeforeFocus();\n    let fakeFocusTimeoutId = 0;\n    let elementFocusTimeoutId = 0;\n\n    const blurHandler = (): void => fakeInput.focus({ preventScroll: true });\n    const focusHandler = (): void => {\n      clearTimeout(fakeFocusTimeoutId);\n\n      fakeFocusTimeoutId = this.windowRef.setTimeout(() => {\n        clearTimeout(elementFocusTimeoutId);\n\n        fakeInput.removeEventListener(`blur`, blurHandler);\n        fakeInput.removeEventListener(`focus`, focusHandler);\n\n        elementFocusTimeoutId = this.windowRef.setTimeout(() => {\n          this.element.focus({ preventScroll: false });\n          fakeInput.remove();\n        }, duration);\n      });\n    };\n\n    fakeInput.addEventListener(`blur`, blurHandler, { once: true });\n    fakeInput.addEventListener(`focus`, focusHandler);\n\n    if (this.insideDialog()) {\n      this.windowRef.document.body.appendChild(fakeInput);\n    } else {\n      this.element.parentElement?.appendChild(fakeInput);\n    }\n\n    fakeInput.focus({ preventScroll: true });\n  }\n\n  /**\n   * @note:\n   * emulate textfield position in layout with cursor\n   * before focus to real textfield element\n   */\n  private makeFakeInput(): HTMLInputElement {\n    const fakeInput: HTMLInputElement = this.renderer.createElement(`input`);\n    const rect: DOMRect = this.element.getBoundingClientRect();\n\n    fakeInput.style.height = prizmPx(rect.height);\n    fakeInput.style.width = prizmPx(rect.width / 2);\n    fakeInput.style.position = `fixed`;\n    fakeInput.style.opacity = `0`;\n    fakeInput.style.fontSize = prizmPx(16); // disable possible auto zoom\n    fakeInput.readOnly = true; // prevent keyboard for fake input\n\n    // @note: emulate position cursor before focus to real textfield element\n    fakeInput.style.top = prizmPx(rect.top);\n    fakeInput.style.left = prizmPx(rect.left);\n\n    return fakeInput;\n  }\n\n  private getDurationTimeBeforeFocus(): number {\n    return (\n      parseFloat(this.windowRef.getComputedStyle(this.element).getPropertyValue(`--prizm-duration`)) || 0\n    );\n  }\n\n  /**\n   * @note:\n   * unfortunately, in older versions of iOS\n   * there is a bug that the fake input cursor\n   * will move along with the dialog animation\n   * and then that dialog will be shaking\n   */\n  private insideDialog(): boolean {\n    return !!this.element.closest(`prizm-dialog`);\n  }\n\n  /**\n   * @note:\n   * This is necessary so that the viewport isn't recalculated\n   * and then the dialogs don't shake.\n   *\n   * Also, we need to fixed height viewport,\n   * so that when focusing the dialogs don't shake\n   */\n  private patchCssStyles(): void {\n    const documentRef = this.windowRef.document;\n\n    for (const element of [documentRef.documentElement, documentRef.body]) {\n      element.style.setProperty(`overflow`, `auto`);\n      element.style.setProperty(`height`, `100%`);\n    }\n  }\n}\n","import { ElementRef, InjectionToken, NgZone, Optional, Renderer2, Self } from '@angular/core';\nimport { ANIMATION_FRAME, WINDOW } from '@ng-web-apis/common';\nimport { Observable } from 'rxjs';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../tokens/focusable-item-accessor';\nimport { PRIZM_IS_IOS } from '../../tokens/is-ios';\nimport { PrizmFocusableElementAccessor } from '../../types/focusable-element-accessor';\nimport { PrizmDefaultAutofocusHandler } from './handlers/default.handler';\nimport { PrizmIosAutofocusHandler } from './handlers/ios.handler';\n\nexport interface PrizmAutofocusHandler {\n  setFocus(): void;\n}\n\nexport const PRIZM_AUTOFOCUS_HANDLER = new InjectionToken<PrizmAutofocusHandler>(`Autofocusing handler`);\n\nexport function prizmAutofocusHandlerFactory(\n  prizmFocusableComponent: PrizmFocusableElementAccessor | null,\n  elementRef: ElementRef<HTMLElement>,\n  animationFrame$: Observable<number>,\n  renderer: Renderer2,\n  ngZone: NgZone,\n  windowRef: Window,\n  isIos: boolean\n): PrizmAutofocusHandler {\n  return isIos\n    ? new PrizmIosAutofocusHandler(prizmFocusableComponent, elementRef, renderer, ngZone, windowRef)\n    : new PrizmDefaultAutofocusHandler(prizmFocusableComponent, elementRef, animationFrame$);\n}\n\nexport const PRIZM_AUTOFOCUS_PROVIDERS = [\n  {\n    provide: PRIZM_AUTOFOCUS_HANDLER,\n    useFactory: prizmAutofocusHandlerFactory,\n    deps: [\n      [new Optional(), new Self(), PRIZM_FOCUSABLE_ITEM_ACCESSOR],\n      ElementRef,\n      ANIMATION_FRAME,\n      Renderer2,\n      NgZone,\n      WINDOW,\n      PRIZM_IS_IOS,\n    ],\n  },\n];\n","import { AfterViewInit, Directive, Inject, Input } from '@angular/core';\n\nimport {\n  PRIZM_AUTOFOCUS_HANDLER,\n  PRIZM_AUTOFOCUS_PROVIDERS,\n  PrizmAutofocusHandler,\n} from './autofocus.options';\n\n@Directive({\n  selector: `[prizmAutoFocus]`,\n  providers: PRIZM_AUTOFOCUS_PROVIDERS,\n})\nexport class PrizmAutoFocusDirective implements AfterViewInit {\n  @Input()\n  public autoFocus = true;\n\n  constructor(@Inject(PRIZM_AUTOFOCUS_HANDLER) private readonly handler: PrizmAutofocusHandler) {}\n\n  public ngAfterViewInit(): void {\n    if (this.autoFocus) {\n      this.handler.setFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmAutoFocusDirective } from './autofocus.directive';\n\n@NgModule({\n  declarations: [PrizmAutoFocusDirective],\n  exports: [PrizmAutoFocusDirective],\n})\nexport class PrizmAutoFocusModule {}\n","import { InjectionToken } from '@angular/core';\nimport { PrizmDropdownControllerDirective } from './dropdown-controller.directive';\n\nexport const PRIZM_DROPDOWN_CONTROLLER = new InjectionToken<PrizmDropdownControllerDirective>(\n  'Controls configuration of hints',\n  {\n    factory: (): PrizmDropdownControllerDirective => new PrizmDropdownControllerDirective(),\n  }\n);\n","export const PRIZM_DROPDOWN_DEFAULT_MIN_HEIGHT = 80;\nexport const PRIZM_DROPDOWN_DEFAULT_MAX_HEIGHT = 400;\n","import { Directive, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { PRIZM_DROPDOWN_CONTROLLER } from './dropdown-controller.token';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  PRIZM_DROPDOWN_DEFAULT_MAX_HEIGHT,\n  PRIZM_DROPDOWN_DEFAULT_MIN_HEIGHT,\n} from './dropdown-controller.const';\nimport { Subject } from 'rxjs';\nimport { PrizmHorizontalDirection } from '../../types/direction';\nimport { PrizmDropdownWidthT } from '../../types/dropdown-width';\n\n@Directive({\n  selector:\n    '[prizmDropdownMinHeight], [prizmDropdownMaxHeight], [prizmDropdownAlign], [prizmDropdownLimitWidth]',\n  providers: [\n    {\n      provide: PRIZM_DROPDOWN_CONTROLLER,\n      useExisting: forwardRef(() => PrizmDropdownControllerDirective),\n    },\n  ],\n})\nexport class PrizmDropdownControllerDirective implements OnChanges {\n  @Input('prizmDropdownMinHeight')\n  @prizmDefaultProp()\n  minHeight = PRIZM_DROPDOWN_DEFAULT_MIN_HEIGHT;\n\n  @Input('prizmDropdownAlign')\n  @prizmDefaultProp()\n  align: PrizmHorizontalDirection = `right`;\n\n  @Input('prizmDropdownLimitWidth')\n  @prizmDefaultProp()\n  limitWidth: PrizmDropdownWidthT = `auto`;\n\n  @Input('prizmDropdownMaxHeight')\n  @prizmDefaultProp()\n  maxHeight = PRIZM_DROPDOWN_DEFAULT_MAX_HEIGHT;\n\n  readonly changes$ = new Subject<void>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.changes$.next();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmDropdownControllerDirective } from './dropdown-controller.directive';\n\n@NgModule({\n  declarations: [PrizmDropdownControllerDirective],\n  exports: [PrizmDropdownControllerDirective],\n})\nexport class PrizmDropdownControllerModule {}\n","import { InjectionToken, ValueProvider } from '@angular/core';\n\nexport interface PrizmMutationObserveOptions {\n  readonly config: MutationObserverInit;\n}\n\n/** Default values for hint options */\nexport const PRIZM_MUTATION_OBSERVER_DEFAULT_OPTIONS: PrizmMutationObserveOptions = {\n  config: {\n    childList: true,\n    attributes: true,\n    subtree: true,\n  },\n};\n\nexport const PRIZM_MUTATION_OBSERVER_OPTIONS = new InjectionToken<PrizmMutationObserveOptions>(\n  'Default parameters for mutation observer directive',\n  {\n    factory: (): PrizmMutationObserveOptions => PRIZM_MUTATION_OBSERVER_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmMutationObserverOptionsProvider: (\n  options: Partial<PrizmMutationObserveOptions>\n) => ValueProvider = (options: Partial<PrizmMutationObserveOptions>) => ({\n  provide: PRIZM_MUTATION_OBSERVER_OPTIONS,\n  useValue: { ...PRIZM_MUTATION_OBSERVER_DEFAULT_OPTIONS, ...options },\n});\n","import { Directive, ElementRef, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { prizmDefaultProp } from '@prizm-ui/core';\n\nimport { PRIZM_MUTATION_OBSERVER_OPTIONS, PrizmMutationObserveOptions } from './mutation-observer-options';\n\n@Directive({\n  selector: '[prizmMutationObserver]',\n  providers: [PrizmDestroyService],\n  standalone: true,\n  exportAs: 'prizmMutationObserverEl',\n})\nexport class PrizmMutationObserveDirective implements OnInit {\n  @Input()\n  @prizmDefaultProp()\n  public prizmMutationObserverConfig: PrizmMutationObserveOptions['config'] = this.options.config;\n\n  @Input()\n  @prizmDefaultProp()\n  public prizmMutationObserverHost: HTMLElement | null = null;\n\n  @Output()\n  readonly prizmMutationObserver: EventEmitter<MutationRecord[]> = new EventEmitter();\n\n  readonly observer: MutationObserver;\n\n  constructor(\n    @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n    @Inject(PrizmDestroyService) private readonly destroy$: PrizmDestroyService,\n    @Inject(PRIZM_MUTATION_OBSERVER_OPTIONS) protected readonly options: PrizmMutationObserveOptions\n  ) {\n    this.observer = new MutationObserver((records: MutationRecord[]) => {\n      this.prizmMutationObserver.emit(records);\n    });\n  }\n\n  public ngOnInit(): void {\n    this.startObserve();\n  }\n\n  private startObserve(): void {\n    this.observer.observe(\n      this.prizmMutationObserverHost ?? this.el.nativeElement,\n      this.prizmMutationObserverConfig\n    );\n    this.destroy$.addCallback(() => {\n      this.observer.disconnect();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmMutationObserveDirective } from './mutation-observer.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmMutationObserveDirective],\n  exports: [PrizmMutationObserveDirective],\n})\nexport class PrizmMutationObserveModule {}\n","/** @deprecated only needed for IE, remove in 2.0 */\nexport function prizmCustomEvent<T = null>(\n  name: string,\n  { bubbles = false, cancelable = false, detail = null }: CustomEventInit<T | null> = {},\n  documentRef: Document\n): CustomEvent {\n  if (typeof CustomEvent === `function`) {\n    return new CustomEvent(name, { bubbles, cancelable, detail });\n  }\n\n  const customEvent = documentRef.createEvent(`CustomEvent`);\n\n  customEvent.initCustomEvent(name, bubbles, cancelable, detail);\n\n  return customEvent;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, Inject, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { Observable, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PRIZM_SCROLL_INTO_VIEW } from '../../constants/events';\nimport { prizmRequiredSetter } from '@prizm-ui/core';\nimport { prizmCustomEvent } from '../../util/dom/custom-event';\n\n/**\n * Directive scrolls element into view inside prizm-scrollbar\n */\n@Directive({\n  selector: `[prizmScrollIntoView]`,\n  standalone: true,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmScrollIntoViewDirective {\n  @Input()\n  @prizmRequiredSetter()\n  set prizmScrollIntoView(scroll: boolean) {\n    if (!scroll) {\n      return;\n    }\n\n    // Timeout is necessary in order to give element render cycle to get into its final spot\n    // (for example if it is inside dropdown box which has to be positioned first)\n    timer(0)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.elementRef.nativeElement.dispatchEvent(\n          prizmCustomEvent<Element>(\n            PRIZM_SCROLL_INTO_VIEW,\n            {\n              bubbles: true,\n              detail: this.elementRef.nativeElement,\n            },\n            this.documentRef\n          )\n        );\n      });\n  }\n\n  constructor(\n    @Inject(ElementRef) private readonly elementRef: ElementRef<Element>,\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(PrizmDestroyService) private readonly destroy$: Observable<void>\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmScrollIntoViewDirective } from './scroll-into-view.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmScrollIntoViewDirective],\n  exports: [PrizmScrollIntoViewDirective],\n})\nexport class PrizmScrollIntoViewModule {}\n","import { Directive, Inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { prizmRequiredSetter } from '@prizm-ui/core';\nimport { PrizmContextWithImplicit } from '../../types/context-with-implicit';\nimport { prizmClamp } from '../../util/math/clamp';\n\nconst MAX_VALUE = 0x10000;\n\nexport class PrizmRepeatTimesContext implements PrizmContextWithImplicit<number> {\n  constructor(readonly $implicit: number) {}\n}\n\n/**\n * Directive similar to ngFor but using a number of repetitions rather than an array\n *\n * {@link PrizmRepeatTimesDirective.prizmRepeatTimesOf requested number of times}.\n * {@link PrizmRepeatTimesContext context} for every instance of the template inherits outer context and stores\n * {@link PrizmRepeatTimesContext.$implicit index} of a template instance.\n */\n@Directive({\n  selector: `[prizmRepeatTimes][prizmRepeatTimesOf]`,\n  standalone: true,\n})\nexport class PrizmRepeatTimesDirective {\n  @Input()\n  @prizmRequiredSetter()\n  set prizmRepeatTimesOf(count: number) {\n    const safeCount = Math.floor(prizmClamp(count, 0, MAX_VALUE));\n\n    const { length } = this.viewContainer;\n\n    if (count < length) {\n      this.removeContainers(length - count);\n    } else {\n      this.addContainers(safeCount);\n    }\n  }\n\n  constructor(\n    @Inject(ViewContainerRef)\n    private readonly viewContainer: ViewContainerRef,\n    @Inject(TemplateRef)\n    private readonly templateRef: TemplateRef<PrizmRepeatTimesContext>\n  ) {}\n\n  private addContainers(count: number): void {\n    for (let index = this.viewContainer.length; index < count; index++) {\n      this.viewContainer.createEmbeddedView<PrizmRepeatTimesContext>(\n        this.templateRef,\n        new PrizmRepeatTimesContext(index)\n      );\n    }\n  }\n\n  private removeContainers(amount: number): void {\n    for (let index = 0; index < amount; index++) {\n      this.viewContainer.remove();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmRepeatTimesDirective } from './repeat-times.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmRepeatTimesDirective],\n  exports: [PrizmRepeatTimesDirective],\n})\nexport class PrizmRepeatTimesModule {}\n","export enum PrizmShadowTypeEnum {\n  miniBottom = 'mini-bottom',\n  miniTop = 'mini-top',\n  bigTop = 'big-top',\n  bigBottom = 'big-bottom',\n  miniRight = 'mini-right',\n  miniLeft = 'mini-left',\n  bigRight = 'big-right',\n  bigLeft = 'big-left',\n  none = 'none',\n}\n\nexport type PrizmShadowType =\n  | `${PrizmShadowTypeEnum.miniBottom}`\n  | `${PrizmShadowTypeEnum.miniTop}`\n  | `${PrizmShadowTypeEnum.miniRight}`\n  | `${PrizmShadowTypeEnum.miniLeft}`\n  | `${PrizmShadowTypeEnum.bigTop}`\n  | `${PrizmShadowTypeEnum.bigBottom}`\n  | `${PrizmShadowTypeEnum.bigLeft}`\n  | `${PrizmShadowTypeEnum.none}`\n  | `${PrizmShadowTypeEnum.bigRight}`;\n\nexport enum PrizmShadowValue {\n  miniBottom = 'var(--prizm-v3-shadow-mini-bottom)',\n  bigTop = 'var(--prizm-v3-shadow-big-top)',\n  miniTop = 'var(--prizm-v3-shadow-mini-top)',\n  bigBottom = 'var(--prizm-v3-shadow-big-bottom)',\n  miniRight = 'var(--prizm-v3-shadow-mini-left)',\n  bigRight = 'var(--prizm-v3-shadow-big-right)',\n  miniLeft = 'var(--prizm-v3-shadow-mini-left)',\n  bigLeft = 'var(--prizm-v3-shadow-big-lef)',\n  none = '',\n}\n","import { PrizmShadowType, PrizmShadowTypeEnum, PrizmShadowValue } from './models';\n\nexport function prizmGetShadow(type: PrizmShadowType): PrizmShadowValue {\n  switch (type) {\n    case PrizmShadowTypeEnum.miniBottom:\n      return PrizmShadowValue.miniBottom;\n    case PrizmShadowTypeEnum.bigTop:\n      return PrizmShadowValue.bigTop;\n    case PrizmShadowTypeEnum.miniTop:\n      return PrizmShadowValue.miniTop;\n    case PrizmShadowTypeEnum.bigBottom:\n      return PrizmShadowValue.bigBottom;\n    case PrizmShadowTypeEnum.miniRight:\n      return PrizmShadowValue.miniRight;\n    case PrizmShadowTypeEnum.bigRight:\n      return PrizmShadowValue.bigRight;\n    case PrizmShadowTypeEnum.miniLeft:\n      return PrizmShadowValue.miniLeft;\n    case PrizmShadowTypeEnum.bigLeft:\n      return PrizmShadowValue.bigLeft;\n    default:\n      return PrizmShadowValue.none;\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { PrizmShadowType, PrizmShadowValue } from './models';\nimport { prizmGetShadow } from './shadow.util';\n\n@Directive({\n  selector: '[prizmShadow]',\n  standalone: true,\n})\nexport class PrizmShadowDirective {\n  @Input('prizmShadow')\n  type!: PrizmShadowType;\n\n  @HostBinding('style.box-shadow')\n  private get boxShadow(): PrizmShadowValue {\n    return prizmGetShadow(this.type);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmShadowDirective } from './shadow.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmShadowDirective],\n  exports: [PrizmShadowDirective],\n})\nexport class PrizmShadowModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { map } from 'rxjs/operators';\nimport { PrizmHintContainerComponent } from '../hint/hint-container.component';\n\n@Component({\n  selector: 'prizm-tooltip-container',\n  template: `\n    <div class=\"box prizm-font-main-body-14\" prizmFocusTrap>\n      <prizm-scrollbar visibility=\"hidden\">\n        <ng-container *polymorphOutlet=\"content() as data; context: context\">\n          <div class=\"content\">{{ data }}</div>\n        </ng-container>\n      </prizm-scrollbar>\n\n      <ng-container [ngSwitch]=\"position$ | async\">\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'r'\" iconClass=\"chevrons-menu-left\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'rb'\" iconClass=\"chevrons-menu-left\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'rt'\" iconClass=\"chevrons-menu-left\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'l'\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'lb'\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'lt'\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'tl'\" iconClass=\"chevrons-dropdown\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'tr'\" iconClass=\"chevrons-dropdown\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'b'\" iconClass=\"chevrons-dropup\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'bl'\" iconClass=\"chevrons-dropup\"></prizm-icon>\n        <prizm-icon class=\"arrow-icon\" *ngSwitchCase=\"'br'\" iconClass=\"chevrons-dropup\"></prizm-icon>\n      </ng-container>\n    </div>\n  `,\n  styleUrls: ['./tooltip-container.component.less'],\n  providers: [PrizmDestroyService],\n})\nexport class PrizmTooltipContainerComponent extends PrizmHintContainerComponent implements OnInit {\n  position$ = this.prizmOverlayControl.position.pos$.pipe(map(({ extra }) => extra));\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PrizmOverlayOutsidePlacement } from '../../modules/overlay/models';\nimport { PrizmTheme } from '@prizm-ui/theme';\n\nexport type PrizmTooltipMode = 'error' | 'dark' | 'light' | null;\nexport interface PrizmTooltipOptions {\n  readonly showDelay: number;\n  readonly hideDelay: number;\n  readonly mode: PrizmTooltipMode;\n  readonly autoReposition: boolean;\n  readonly direction: PrizmOverlayOutsidePlacement;\n  readonly theme: PrizmTheme | null;\n}\n\n/** Default values for hint options */\nexport const PRIZM_TOOLTIP_DEFAULT_OPTIONS: PrizmTooltipOptions = {\n  showDelay: 100,\n  hideDelay: 100,\n  theme: null,\n  autoReposition: true,\n  mode: null,\n  direction: PrizmOverlayOutsidePlacement.RIGHT,\n};\n\nexport const PRIZM_TOOLTIP_OPTIONS = new InjectionToken<PrizmTooltipOptions>(\n  'Default parameters for tooltip directive',\n  {\n    factory: (): PrizmTooltipOptions => PRIZM_TOOLTIP_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmTooltipOptionsProvider: (options: Partial<PrizmTooltipOptions>) => ValueProvider = (\n  options: Partial<PrizmTooltipOptions>\n) => ({\n  provide: PRIZM_TOOLTIP_OPTIONS,\n  useValue: { ...PRIZM_TOOLTIP_DEFAULT_OPTIONS, ...options },\n});\n","/* eslint-disable @angular-eslint/no-input-rename */\nimport { Directive, EventEmitter, forwardRef, HostListener, Input, Output } from '@angular/core';\nimport { PrizmDestroyService, prizmGenerateId } from '@prizm-ui/helpers';\nimport { PrizmTooltipContainerComponent } from './tooltip-container.component';\nimport { PRIZM_TOOLTIP_OPTIONS } from './tooltip-options';\nimport { prizmDefaultProp, prizmRequiredSetter } from '@prizm-ui/core';\nimport { PolymorphContent } from '../polymorph';\nimport { PRIZM_HINT_OPTIONS, PrizmHintOptions } from '../hint/hint-options';\nimport { PrizmHintDirective } from '../hint/hint.directive';\n\n@Directive({\n  selector: '[prizmTooltip]:not(ng-container)',\n  providers: [\n    PrizmDestroyService,\n    {\n      provide: PRIZM_HINT_OPTIONS,\n      useExisting: forwardRef(() => PRIZM_TOOLTIP_OPTIONS),\n    },\n  ],\n  exportAs: 'prizmTooltip',\n})\nexport class PrizmTooltipDirective extends PrizmHintDirective {\n  @Input('prizmAutoReposition')\n  @prizmDefaultProp()\n  override prizmAutoReposition: PrizmHintOptions['autoReposition'] = this.options.autoReposition;\n\n  @Input('prizmTooltipDirection')\n  @prizmDefaultProp()\n  override prizmHintDirection: PrizmHintOptions['direction'] = this.options.direction;\n\n  @Input('prizmTooltipId')\n  @prizmDefaultProp()\n  override prizmHintId: string = 'hintId_' + prizmGenerateId();\n\n  @Input('prizmTooltipShowDelay')\n  @prizmDefaultProp()\n  override prizmHintShowDelay: PrizmHintOptions['showDelay'] = this.options.showDelay;\n\n  @Input('prizmTooltipHideDelay')\n  @prizmDefaultProp()\n  override prizmHintHideDelay: PrizmHintOptions['hideDelay'] = this.options.hideDelay;\n\n  @Input('prizmTooltipHost')\n  @prizmDefaultProp()\n  override prizmHintHost: HTMLElement | null = null;\n\n  @Input('prizmTooltipContext')\n  @prizmDefaultProp()\n  override prizmHintContext = {};\n\n  @Input('prizmTooltipCanShow')\n  @prizmDefaultProp()\n  override prizmHintCanShow = true;\n\n  @Input('prizmTooltip')\n  @prizmRequiredSetter()\n  override set prizmHint(value: PolymorphContent | null) {\n    if (!value) {\n      this.content = '';\n      return;\n    }\n\n    this.content = value;\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('prizmTooltipShowed')\n  override prizmHintShowed = new EventEmitter<boolean>();\n\n  protected override readonly containerComponent = PrizmTooltipContainerComponent;\n  protected override readonly onHoverActive = false;\n  protected clickedInside = false;\n  @HostListener('document:click', ['$event.target']) public onClick(target: HTMLElement): void {\n    const clickOnTooltip = this.elementRef.nativeElement.contains(target);\n    if (clickOnTooltip && !this.clickedInside) this.clickedInside = true;\n    if (!this.clickedInside) return;\n    this.show$.next(clickOnTooltip);\n  }\n\n  @HostListener('document:keydown.esc', ['$event'])\n  public closeOnEsc(): void {\n    if (this.show) this.show = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphModule } from '../polymorph';\nimport { PrizmTooltipDirective } from './tooltip.directive';\nimport { PrizmHintModule } from '../hint';\nimport { PrizmTooltipContainerComponent } from './tooltip-container.component';\nimport { PrizmIconModule } from '../../components/icon';\nimport { PrizmScrollbarModule } from '../../components/scrollbar';\nimport { PrizmFocusTrapModule } from '../focus-trap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PolymorphModule,\n    PrizmFocusTrapModule,\n    PrizmHintModule,\n    PrizmScrollbarModule,\n    PrizmIconModule,\n  ],\n  declarations: [PrizmTooltipDirective, PrizmTooltipContainerComponent],\n  exports: [PrizmTooltipDirective],\n})\nexport class PrizmTooltipModule {}\n","import { FactoryProvider, Optional, Self } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { identity } from 'rxjs';\nimport { PRIZM_VALUE_ACCESSOR } from '../tokens/value-accessor';\n\n// TODO: 2.0 remove in ivy compilation\nexport const PRIZM_IDENTITY = identity;\n\nexport const PRIZM_VALUE_ACCESSOR_PROVIDER: FactoryProvider = {\n  provide: PRIZM_VALUE_ACCESSOR,\n  deps: [[new Optional(), new Self(), NG_VALUE_ACCESSOR]],\n  useFactory: PRIZM_IDENTITY,\n};\n","import { Directive } from '@angular/core';\nimport { PRIZM_VALUE_ACCESSOR_PROVIDER } from '../../providers/value-accessor.provider';\n\n@Directive({\n  selector: `[prizmValueAccessor]`,\n  providers: [PRIZM_VALUE_ACCESSOR_PROVIDER],\n})\nexport class PrizmValueAccessorDirective {}\n","import { NgModule } from '@angular/core';\nimport { PrizmValueAccessorDirective } from './value-accessor.directive';\n\n@NgModule({\n  declarations: [PrizmValueAccessorDirective],\n  exports: [PrizmValueAccessorDirective],\n})\nexport class PrizmValueAccessorModule {}\n","import { NgModule } from '@angular/core';\nimport { PrizmWrapperComponent } from './wrapper.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmWrapperComponent],\n  exports: [PrizmWrapperComponent],\n})\nexport class PrizmWrapperModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { PrizmStickyDirective } from './sticky.directive';\nimport { Subject } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable()\nexport class PrizmStickyRelativeService implements OnDestroy {\n  element!: HTMLElement;\n  private readonly changesChildren$$ = new Subject<void>();\n\n  private resizeObserver = new ResizeObserver(() => {\n    this.changesChildren$$.next();\n  });\n  public readonly changesChildren$ = this.changesChildren$$.pipe(shareReplay(1));\n\n  public add(item: PrizmStickyDirective) {\n    this.resizeObserver.observe(item.elRef.nativeElement);\n  }\n\n  public delete(item: PrizmStickyDirective) {\n    this.resizeObserver.unobserve(item.elRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.resizeObserver.disconnect();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n} from '@angular/core';\nimport { filter, map, observeOn, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { prizmToPx } from '../../util';\nimport { moveInEventLoopIteration, PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmStickyRelativeService } from './sticky-relative.service';\nimport { animationFrameScheduler, of, Subject } from 'rxjs';\n\n@Directive({\n  selector: '[prizmStickyLeft], [prizmStickyRight], [prizmStickyTop], [prizmStickyBottom]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmStickyDirective implements OnChanges, OnDestroy, OnInit {\n  @HostBinding('class.prizm-sticky-left')\n  @Input()\n  prizmStickyLeft!: boolean;\n\n  @HostBinding('class.prizm-sticky-right')\n  @Input()\n  prizmStickyRight!: boolean;\n\n  @HostBinding('class.prizm-sticky-top')\n  @Input()\n  prizmStickyTop!: boolean;\n\n  @HostBinding('class.prizm-sticky-bottom')\n  @Input()\n  prizmStickyBottom!: boolean;\n\n  @Input()\n  prizmStickyRelative?: HTMLElement;\n\n  @Input()\n  position = 'sticky';\n\n  @Input()\n  stylesOnSticky?: Record<string, unknown>;\n\n  @HostBinding('style.position')\n  get applySticky() {\n    return this.prizmStickyLeft || this.prizmStickyRight || this.prizmStickyTop || this.prizmStickyBottom\n      ? this.position\n      : '';\n  }\n\n  private setActiveStyle = false;\n  private readonly destroyPrevious$ = new Subject<void>();\n  private readonly changedSides = {\n    right: true,\n    left: true,\n    top: true,\n    bottom: true,\n  };\n  constructor(\n    public readonly elRef: ElementRef<HTMLElement>,\n    private readonly renderer: Renderer2,\n    @Optional() private readonly relativeService: PrizmStickyRelativeService,\n    private readonly destroy$: PrizmDestroyService\n  ) {}\n\n  ngOnInit(): void {\n    this.relativeService.add(this);\n  }\n\n  ngOnDestroy(): void {\n    this.relativeService.delete(this);\n  }\n\n  public ngOnChanges(): void {\n    this.init();\n  }\n\n  private setStylesIfExist(): void {\n    if (!this.prizmStickyRight && !this.prizmStickyLeft && !this.prizmStickyBottom && !this.prizmStickyTop)\n      return;\n\n    const keys = this.stylesOnSticky && Object.keys(this.stylesOnSticky);\n    if (!keys?.length) return;\n\n    keys.forEach((key: any) => {\n      this.elRef.nativeElement.style[key] = (this.stylesOnSticky?.[key] as string) ?? '';\n    });\n\n    this.setActiveStyle = true;\n  }\n\n  private clearStylesIfSet(): void {\n    if (!this.setActiveStyle) return;\n\n    const keys = this.stylesOnSticky && Object.keys(this.stylesOnSticky);\n    if (!keys?.length) return;\n    keys.forEach((key: any) => {\n      this.elRef.nativeElement.style[key] = '';\n    });\n\n    this.setActiveStyle = false;\n  }\n\n  private init(): void {\n    this.destroyPrevious$.next();\n\n    const parent = this.prizmStickyRelative ?? this.relativeService?.element;\n    this.relativeService.changesChildren$\n      .pipe(\n        map(() => this.elRef.nativeElement.getBoundingClientRect()),\n        observeOn(animationFrameScheduler),\n        filter(i => Boolean(i.width || i.height)),\n        switchMap(result => {\n          if (this.prizmStickyRight || this.changedSides.right) {\n            this.renderer.removeStyle(this.elRef.nativeElement, 'right');\n          }\n          if (this.prizmStickyLeft || this.changedSides.left) {\n            this.renderer.removeStyle(this.elRef.nativeElement, 'left');\n          }\n          if (this.prizmStickyTop || this.changedSides.top)\n            this.renderer.removeStyle(this.elRef.nativeElement, 'top');\n          if (this.prizmStickyBottom || this.changedSides.bottom)\n            this.renderer.removeStyle(this.elRef.nativeElement, 'bottom');\n\n          this.clearStylesIfSet();\n\n          return of(result).pipe(moveInEventLoopIteration(1));\n        }),\n        tap(() => {\n          const parentRect = parent?.getBoundingClientRect();\n          const elRect = this.elRef.nativeElement.getBoundingClientRect();\n          let styleRight = 0;\n\n          this.setStylesIfExist();\n\n          if (this.prizmStickyLeft) {\n            const left = parentRect?.left ? elRect.left - parentRect.left : elRect.left;\n            this.renderer.setStyle(this.elRef.nativeElement, 'left', prizmToPx(left));\n            this.changedSides.left = true;\n          } else this.changedSides.left = true;\n          if (this.prizmStickyRight) {\n            styleRight = parseInt(this.elRef.nativeElement.style.right || '0');\n            const parentRect = parent?.getBoundingClientRect();\n            const elRect = this.elRef.nativeElement.getBoundingClientRect();\n\n            let right = elRect.right;\n            let scrollOffset = 0;\n            let diff = 0;\n            if (parent) {\n              scrollOffset = parent.scrollWidth - parent.clientWidth - parent.scrollLeft;\n              diff = Math.abs(elRect.right - parentRect.right - scrollOffset - styleRight);\n              right = Math.floor(diff);\n            }\n            this.renderer.setStyle(this.elRef.nativeElement, 'right', prizmToPx(right));\n            this.changedSides.right = true;\n          } else this.changedSides.right = true;\n          if (this.prizmStickyTop) {\n            const top = parentRect?.top ? elRect.top - parentRect.top : elRect.top;\n            this.renderer.setStyle(this.elRef.nativeElement, 'top', prizmToPx(top));\n            this.changedSides.top = true;\n          } else this.changedSides.top = true;\n          if (this.prizmStickyBottom) {\n            const bottom = parentRect?.bottom ? elRect.bottom - parentRect.bottom : elRect.bottom;\n            this.renderer.setStyle(this.elRef.nativeElement, 'bottom', prizmToPx(bottom));\n            this.changedSides.bottom = true;\n          } else this.changedSides.bottom = true;\n\n          this.setStylesIfExist();\n        }),\n\n        takeUntil(this.destroyPrevious$),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { PrizmStickyRelativeService } from './sticky-relative.service';\n\n@Directive({\n  selector: '[prizmStickyRelative]',\n  providers: [PrizmStickyRelativeService],\n})\nexport class PrizmStickyRelativeDirective implements OnInit {\n  constructor(\n    private readonly stickyRelativeService: PrizmStickyRelativeService,\n    private readonly elRef: ElementRef\n  ) {}\n\n  public ngOnInit(): void {\n    this.stickyRelativeService.element = this.elRef.nativeElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmStickyDirective } from './sticky.directive';\nimport { PrizmStickyRelativeDirective } from './sticky-relative.directive';\n\n@NgModule({\n  declarations: [PrizmStickyDirective, PrizmStickyRelativeDirective],\n  exports: [PrizmStickyDirective, PrizmStickyRelativeDirective],\n})\nexport class PrizmStickyModule {}\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { prizmObservable } from '@prizm-ui/core';\nimport { ReplaySubject, switchMap, timer } from 'rxjs';\nimport { debounceTime, filter, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputNativeValueNeedChange } from './model';\n\n@Directive({\n  selector: `input[prizmInputNativeValue]`,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  exportAs: 'prizmInputNativeValue',\n})\nexport class PrizmInputNativeValueDirective<T = any> implements OnInit {\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('prizmInputNativeValue')\n  @prizmObservable()\n  value!: T;\n\n  value$$ = new ReplaySubject<T>();\n\n  @Output() prizmInputNativeValueChanged = new EventEmitter<T>();\n\n  @Input()\n  needChange: PrizmInputNativeValueNeedChange<T> = (currentValue: T, nativeValue: string) => {\n    return currentValue !== nativeValue;\n  };\n\n  constructor(\n    private readonly elementRef: ElementRef<HTMLInputElement>,\n    private readonly destroy: PrizmDestroyService\n  ) {}\n\n  ngOnInit() {\n    this.value$$\n      .pipe(\n        debounceTime(0),\n        switchMap(value => {\n          return timer(0, 50).pipe(\n            filter(() =>\n              this.needChange(this.value, this.elementRef.nativeElement.value, this.elementRef.nativeElement)\n            ),\n            tap(() => {\n              this.elementRef.nativeElement.value = value?.toString() ?? '';\n              this.prizmInputNativeValueChanged.next(this.elementRef.nativeElement.value as T);\n            })\n          );\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputNativeValueDirective } from './input-native-value.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputNativeValueDirective],\n  exports: [PrizmInputNativeValueDirective],\n})\nexport class PrizmInputNativeValueModule {}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { PrizmDestroyService, prizmFromMutationObserver$ } from '@prizm-ui/helpers';\nimport { filter, switchMap, takeUntil, tap, throttleTime } from 'rxjs/operators';\nimport { PrizmAutoResizeMode, PrizmAutoResizeOn } from './model';\n\n@Directive({\n  selector: `[prizmAutoResize]`,\n})\nexport class PrizmAutoResizeDirective implements OnInit, AfterViewInit {\n  @Input() prizmAutoResize = true;\n  @Input() autoResizeMode: PrizmAutoResizeMode = 'both';\n  @Input() autoResizeOn: PrizmAutoResizeOn = 'any';\n  get scrollHeight(): number {\n    return this.elementRef.nativeElement.scrollHeight;\n  }\n  constructor(private elementRef: ElementRef<HTMLTextAreaElement>, private destroy: PrizmDestroyService) {}\n\n  @HostListener(':input')\n  private onInput() {\n    this.resizeIfActive();\n  }\n\n  private resizeIfActive(): void {\n    if (!this.prizmAutoResize) return;\n    this.resize();\n  }\n\n  public ngOnInit(): void {\n    if (!this.prizmAutoResize) return;\n    if (this.elementRef.nativeElement.scrollHeight) {\n      setTimeout(() => this.resize());\n    }\n  }\n\n  public resize(): void {\n    const previousElementHeight = this.elementRef.nativeElement.clientHeight;\n    if (this.autoResizeMode === 'both') this.elementRef.nativeElement.style.height = '0';\n    if (this.autoResizeMode === 'only-increase' && previousElementHeight >= this.scrollHeight) return;\n    this.elementRef.nativeElement.style.height = this.scrollHeight + 'px';\n  }\n\n  ngAfterViewInit(): void {\n    timer(0)\n      .pipe(\n        switchMap(() =>\n          prizmFromMutationObserver$(this.elementRef.nativeElement, {\n            attributes: true,\n            characterData: true,\n          }).pipe(\n            filter(() => this.autoResizeOn === 'any'),\n            // guard for infinite re invokes\n            throttleTime(100),\n            tap(() => {\n              this.resizeIfActive();\n            })\n          )\n        ),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmAutoResizeDirective } from './autoresize.directive';\n\n@NgModule({\n  declarations: [PrizmAutoResizeDirective],\n  exports: [PrizmAutoResizeDirective],\n})\nexport class PrizmAutoResizeModule {}\n","import { Injectable } from '@angular/core';\nimport { PrizmInputInZoneDirective } from './input-in-zone.directive';\nimport { Observable, Subject } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmInputZoneService {\n  private readonly map = new Map<number, PrizmInputInZoneDirective>();\n  private readonly changes$$ = new Subject<void>();\n  public readonly changes$ = this.changes$$.asObservable();\n  get elements() {\n    return Array.from(this.map.values());\n  }\n  public readonly elements$: Observable<PrizmInputInZoneDirective[]> = this.changes$.pipe(\n    startWith(null),\n    map(() => this.elements)\n  );\n\n  public set(idx: number, input: PrizmInputInZoneDirective): void {\n    this.map.set(idx, input);\n    this.changes$$.next();\n  }\n\n  public getIdx(input: PrizmInputInZoneDirective): number {\n    for (const entry of Array.from(this.map.entries())) {\n      if (entry[1] === input) return entry[0];\n    }\n    return -1;\n  }\n\n  public getByIdx(idx: number): PrizmInputInZoneDirective | null {\n    return this.map.get(idx) ?? null;\n  }\n\n  public add(input: PrizmInputInZoneDirective): number {\n    const idx = Math.max(-1, ...Array.from(this.map.keys())) + 1;\n    this.map.set(idx, input);\n    this.changes$$.next();\n    return idx;\n  }\n\n  public delete(idx: number): void {\n    this.map.delete(idx);\n    this.changes$$.next();\n  }\n}\n","import { ChangeDetectorRef, Directive, Output } from '@angular/core';\nimport { PrizmInputZoneService } from './input-zone.service';\nimport { merge, Observable, switchMap } from 'rxjs';\nimport { distinctUntilChanged, map, share } from 'rxjs/operators';\n\n@Directive({\n  selector: `[prizmInputZone]`,\n  providers: [PrizmInputZoneService],\n  exportAs: 'prizmInputZone',\n})\nexport class PrizmInputZoneDirective {\n  @Output() readonly focused$: Observable<boolean> = this.inputZoneService.elements$.pipe(\n    switchMap(elements => merge(...elements.map(element => element.focused$))),\n    distinctUntilChanged(),\n    share()\n  );\n\n  @Output() readonly blur$: Observable<boolean> = this.focused$.pipe(map(i => !i));\n\n  get focused() {\n    return !!this.inputZoneService.elements.find(i => i.focused);\n  }\n\n  get elements() {\n    return this.inputZoneService.elements;\n  }\n\n  get inputs(): HTMLInputElement[] {\n    return this.inputZoneService.elements.map(i => i.el.nativeElement);\n  }\n\n  get values(): string[] {\n    return this.inputs.map(i => i.value);\n  }\n\n  constructor(\n    private readonly inputZoneService: PrizmInputZoneService,\n    private readonly cdRef: ChangeDetectorRef\n  ) {}\n\n  public focus(idx = 0) {\n    const selected = this.inputZoneService.elements[idx];\n    if (selected) selected.focus();\n    return this;\n  }\n\n  public getFocusedByIdx(idx = 0) {\n    const selected = this.inputZoneService.elements[idx];\n    if (selected) selected.focused;\n    return this;\n  }\n\n  public updateNativeValue(idx: number, value: string | number | null): PrizmInputZoneDirective {\n    const selected = this.inputZoneService.elements[idx];\n    if (selected) {\n      const newValue = value?.toString() ?? '';\n      selected.updateNativeValue.next(newValue);\n      if (selected.el.nativeElement) selected.el.nativeElement.value = newValue;\n    }\n    return this;\n  }\n\n  public updateNativeValues(\n    ...values: { idx: number; value: string | number | null }[]\n  ): PrizmInputZoneDirective {\n    values.forEach(({ idx, value }) => {\n      this.updateNativeValue(idx, value);\n    });\n    return this;\n  }\n\n  public selectionToStart(idx = 0) {\n    const selected = this.inputZoneService.elements[idx];\n    if (selected) selected.focus().selectionToStart();\n    return this;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { PrizmInputZoneService } from './input-zone.service';\nimport { map, mapTo, share, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { fromEvent, merge, timer, zip } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { NgControl } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: `input[prizmInputInZone]`,\n  exportAs: 'prizmInputInZone',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputInZoneDirective implements OnInit, OnDestroy {\n  previousSelectionStart!: number;\n  @Input() idx?: number;\n\n  @HostBinding('style.--prizm-input-in-zone-max-size')\n  @Input()\n  maxSize!: number;\n\n  @Output()\n  updateNativeValue = new EventEmitter<string>();\n\n  @Output() focused$ = merge(\n    fromEvent(this.el.nativeElement, 'focus').pipe(mapTo(true)),\n    fromEvent(this.el.nativeElement, 'blur').pipe(mapTo(false))\n  ).pipe(share());\n\n  get focused() {\n    return this.document.activeElement === this.el.nativeElement;\n  }\n\n  @Output() blured$ = this.focused$.pipe(map(i => !i));\n\n  /**\n   * save previous selection index for case when clicking inside in input or focused\n   * for correct working moving between in inputs in zone\n   * */\n  @HostListener('click')\n  @HostListener('focus')\n  public savePreviousPosition() {\n    timer(0)\n      .pipe(\n        tap(() => {\n          this.previousSelectionStart = this.el.nativeElement.selectionStart as number;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @HostListener('keyup', ['$event']) public keyUpEvent(event: KeyboardEvent) {\n    const unsupportedKeyCharacters = [\n      'Shift',\n      'Escape',\n      'ArrowUp',\n      'ArrowDown',\n      'ArrowLeft',\n      'ArrowRight',\n      'Enter',\n      'CapsLock',\n      'Alt',\n      'Control',\n      'Meta',\n    ];\n    const { selectionStart } = this.el.nativeElement;\n    const idx = this.inputZoneService.getIdx(this);\n\n    if (\n      (event.key === 'ArrowLeft' || event.key === 'Backspace') &&\n      selectionStart === 0 &&\n      this.previousSelectionStart === 0 &&\n      idx > 0\n    ) {\n      this.inputZoneService\n        .getByIdx(idx - 1)\n        ?.focus()\n        .selectionToEnd();\n    } else if (selectionStart === this.maxSize && this.previousSelectionStart === this.maxSize) {\n      if (event.key === 'ArrowRight') {\n        this.inputZoneService\n          .getByIdx(idx + 1)\n          ?.focus()\n          .selectionToStart();\n      } else if (!unsupportedKeyCharacters.includes(event.key)) {\n        this.inputZoneService\n          .getByIdx(idx + 1)\n          ?.focus()\n          .selectionTo(0, 1);\n      }\n    }\n    this.previousSelectionStart = selectionStart as number;\n  }\n\n  constructor(\n    public readonly el: ElementRef<HTMLInputElement>,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Optional() private readonly ngControl: NgControl,\n    private readonly inputZoneService: PrizmInputZoneService,\n    private readonly destroy$: PrizmDestroyService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.inputZoneService.delete(this.idx as number);\n  }\n\n  ngOnInit(): void {\n    if (this.idx) {\n      this.inputZoneService.set(this.idx, this);\n    } else {\n      this.idx = this.inputZoneService.add(this);\n    }\n  }\n\n  public focus() {\n    this.el.nativeElement.focus();\n    return this;\n  }\n\n  public selectionToStart() {\n    return this.selectionTo(0);\n  }\n\n  public selectionTo(start: number, end?: number) {\n    this.el.nativeElement.selectionStart = start;\n    this.el.nativeElement.selectionEnd = end ?? start;\n    return this;\n  }\n\n  public selectionToEnd() {\n    return this.selectionTo(this.maxSize);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputZoneDirective } from './input-zone.directive';\nimport { PrizmInputInZoneDirective } from './input-in-zone.directive';\n\n@NgModule({\n  declarations: [PrizmInputZoneDirective, PrizmInputInZoneDirective],\n  exports: [PrizmInputZoneDirective, PrizmInputInZoneDirective],\n})\nexport class PrizmInputZoneModule {}\n","import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-grid-item',\n  templateUrl: './grid-item.component.html',\n  styleUrls: ['./grid-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmGridItemComponent extends PrizmAbstractTestId {\n  @Input() public colPos = '0';\n  @Input() public rowPos = '0';\n\n  override readonly testId_ = 'ui_area';\n}\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const GridItemComponent = PrizmGridItemComponent;\n","<ng-content></ng-content>\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmGridItemComponent } from './components/grid-item/grid-item.component';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { prizmEmptyQueryList } from '@prizm-ui/helpers';\n\n@Component({\n  selector: 'prizm-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class PrizmGridComponent extends PrizmAbstractTestId implements AfterContentInit {\n  @Input() @HostBinding('attr.columns') public cols: '8' | '12' = '12';\n  @Input() public rows = '10';\n\n  @ViewChild('container', { static: true }) container!: ElementRef;\n\n  @ContentChildren(PrizmGridItemComponent, { read: ElementRef })\n  public gridItems: QueryList<ElementRef> = prizmEmptyQueryList();\n\n  @ContentChildren(PrizmGridItemComponent)\n  public gridItemsData: QueryList<PrizmGridItemComponent> = prizmEmptyQueryList();\n\n  override readonly testId_ = 'ui-area--grid';\n\n  public ngAfterContentInit(): void {\n    const containerElement = this.container.nativeElement;\n    containerElement.style['grid-template-columns'] = `repeat(${this.cols}, 1fr)`;\n\n    const gridItemsElement = [...this.gridItems];\n    const gridItemsData = [...this.gridItemsData];\n\n    gridItemsElement.forEach((item, idx) => {\n      const row = gridItemsData[idx].rowPos;\n      const col = gridItemsData[idx].colPos;\n\n      item.nativeElement.style['grid-column'] = col.replace(':', ' / span ');\n      item.nativeElement.style['grid-row'] = row.replace(':', ' / span ');\n    });\n  }\n}\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const GridComponent = PrizmGridComponent;\n","<div class=\"grid-container\" #container>\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmGridComponent } from './grid.component';\nimport { PrizmGridItemComponent } from './components/grid-item/grid-item.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmGridComponent, PrizmGridItemComponent],\n  exports: [PrizmGridComponent, PrizmGridItemComponent],\n})\nexport class PrizmGridModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, OnInit } from '@angular/core';\nimport {\n  prizmSwitcherHint,\n  PrizmSwitcherItem,\n  PrizmSwitcherSize,\n  PrizmSwitcherType,\n} from './../../switcher.interface';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\nimport { PrizmHintDirective } from '../../../../directives';\nimport { CommonModule } from '@angular/common';\nimport { PrizmButtonComponent, PrizmButtonModule } from '../../../button';\n\n@Component({\n  selector: 'prizm-switcher-item',\n  templateUrl: './switcher-item.component.html',\n  styleUrls: ['./switcher-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PrizmButtonComponent],\n})\nexport class PrizmSwitcherItemComponent extends PrizmAbstractTestId implements OnInit {\n  @Input() hint?: prizmSwitcherHint;\n\n  @Input()\n  @prizmDefaultProp()\n  @HostBinding('attr.data-size')\n  public size: PrizmSwitcherSize = 'l';\n\n  @Input()\n  @prizmDefaultProp()\n  @HostBinding('attr.switcher-type')\n  public type: PrizmSwitcherType = 'inner';\n\n  @Input()\n  public data: PrizmSwitcherItem | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  public isActive = false;\n\n  @Input()\n  @prizmDefaultProp()\n  public disabled = false;\n\n  @Input()\n  @HostBinding('class.full-width')\n  @prizmDefaultProp()\n  public fullWidth = false;\n\n  override readonly testId_ = 'ui_switcher_item';\n\n  get isDisabled(): boolean {\n    return Boolean(this.disabled || this.data?.disabled);\n  }\n\n  readonly prizmHint_ = new PrizmHintDirective();\n\n  @HostBinding('attr.prizmHint') get prizmHint(): any {\n    return this.hint?.value || '';\n  }\n\n  ngOnInit(): void {\n    this.prizmHint_.ngOnInit();\n  }\n}\n\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const SwitcherItemComponent = PrizmSwitcherItemComponent;\n","<button\n  class=\"switcher\"\n  *ngIf=\"data?.title; else iconBtn\"\n  [disabled]=\"isDisabled\"\n  [icon]=\"$any(data?.icon)\"\n  [size]=\"size\"\n  [appearanceType]=\"data?.appearanceType ?? 'ghost'\"\n  [appearance]=\"data?.appearance ?? 'secondary'\"\n  [pseudoPressed]=\"isActive\"\n  prizmButton\n>\n  {{ data?.title }}\n</button>\n\n<ng-template #iconBtn>\n  <button\n    class=\"switcher switcher_icon\"\n    [pseudoPressed]=\"isActive\"\n    [disabled]=\"isDisabled\"\n    [icon]=\"$any(data?.icon)\"\n    [size]=\"size\"\n    [appearanceType]=\"data?.appearanceType ?? 'ghost'\"\n    [appearance]=\"data?.appearance ?? 'secondary'\"\n    prizmIconButton\n  ></button>\n</ng-template>\n","import { Directive, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { PolymorphContent, PrizmHintDirective, PrizmHintOptions } from '../../../directives';\nimport { prizmSwitcherHint } from '../switcher.interface';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: '[prizmSwitcherHint]',\n  standalone: true,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmSwitcherHintDirective implements OnInit, OnChanges, OnDestroy {\n  readonly prizmHint_ = new PrizmHintDirective();\n\n  content: PolymorphContent | null;\n  options: Partial<PrizmHintOptions> | undefined;\n\n  @Input()\n  set prizmSwitcherHint(hintData: prizmSwitcherHint | undefined) {\n    if (hintData) {\n      this.content = hintData.value;\n      this.options = hintData.options;\n    }\n\n    this.updateHint();\n  }\n\n  public ngOnInit(): void {\n    this.prizmHint_.ngOnInit();\n  }\n\n  public ngOnChanges(): void {\n    this.prizmHint_.ngOnChanges();\n  }\n\n  public ngOnDestroy(): void {\n    this.prizmHint_.ngOnDestroy();\n  }\n\n  private updateHint(): void {\n    this.prizmHint_.prizmHint = this.content ?? '';\n    if (this.options?.showDelay) this.prizmHint_.prizmHintShowDelay = this.options?.showDelay;\n    if (this.options?.hideDelay) this.prizmHint_.prizmHintHideDelay = this.options?.hideDelay;\n    if (this.options?.autoReposition) this.prizmHint_.prizmAutoReposition = this.options?.autoReposition;\n    if (this.options?.direction) this.prizmHint_.prizmHintDirection = this.options?.direction;\n    if (this.options?.theme) this.prizmHint_.prizmHintTheme = this.options?.theme;\n    this.hintSyncChanges();\n  }\n\n  private hintSyncChanges(): void {\n    this.prizmHint_.ngOnChanges();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Optional,\n  Output,\n  Self,\n} from '@angular/core';\nimport { PrizmSwitcherItem, PrizmSwitcherSize, PrizmSwitcherType } from './switcher.interface';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { noop } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { PrizmSwitcherItemComponent } from './components/switcher-item/switcher-item.component';\nimport { PrizmSwitcherHintDirective } from './directives/switcher-hint.directive';\n\n@Component({\n  selector: 'prizm-switcher',\n  templateUrl: './switcher.component.html',\n  styleUrls: ['./switcher.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PrizmSwitcherHintDirective, PrizmSwitcherItemComponent],\n})\nexport class PrizmSwitcherComponent extends PrizmAbstractTestId implements ControlValueAccessor {\n  onChange: (v: number) => void = noop;\n  onTouched: () => void = noop;\n  private selectedSwitcherIdx_ = 0;\n\n  @Input()\n  @prizmDefaultProp()\n  public size: PrizmSwitcherSize = 'l';\n\n  @Input()\n  @prizmDefaultProp()\n  public type: PrizmSwitcherType = 'inner';\n\n  @Input()\n  @prizmDefaultProp()\n  public switchers: PrizmSwitcherItem[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  public set selectedSwitcherIdx(idx: number) {\n    const item = this.switchers[idx];\n    if (item) this.selectSwitcher(item, idx);\n  }\n  get selectedSwitcherIdx() {\n    return this.selectedSwitcherIdx_;\n  }\n\n  @Input()\n  @HostBinding('class.full-width')\n  @prizmDefaultProp()\n  public fullWidth = false;\n\n  @Output() public selectedSwitcherIdxChange: EventEmitter<number> = new EventEmitter();\n\n  override readonly testId_ = 'ui_switcher';\n\n  constructor(\n    public readonly cdRef: ChangeDetectorRef,\n    @Optional() @Self() public readonly ngControl: NgControl\n  ) {\n    super();\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  public selectSwitcher(item: PrizmSwitcherItem, idx: number): void {\n    if (this.ngControl?.disabled) return;\n    if (item.disabled) return;\n    if (this.selectedSwitcherIdx === idx) return;\n    this.selectedSwitcherIdxChange.emit((this.selectedSwitcherIdx_ = idx));\n    this.onChange(this.selectedSwitcherIdx);\n  }\n\n  public writeValue(idx: string): void {\n    this.selectedSwitcherIdx = parseInt(idx);\n  }\n  public registerOnChange(fn: (value: number) => void): void {\n    this.onChange = fn;\n  }\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.cdRef.markForCheck();\n  }\n}\n","<div class=\"container\">\n  <ng-container *ngFor=\"let switcher of switchers; let i = index\">\n    <prizm-switcher-item\n      class=\"switcher-item\"\n      *ngIf=\"!switcher.hide\"\n      [attr.first-child]=\"i === 0\"\n      [attr.last-child]=\"i === switchers.length - 1\"\n      [data]=\"$any(switcher)\"\n      [disabled]=\"!!ngControl?.disabled\"\n      [isActive]=\"selectedSwitcherIdx === i\"\n      [type]=\"type\"\n      [size]=\"size\"\n      [fullWidth]=\"fullWidth\"\n      [prizmSwitcherHint]=\"switcher.hint\"\n      (click)=\"selectSwitcher(switcher, i)\"\n    ></prizm-switcher-item>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmSwitcherComponent } from './switcher.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmSwitcherComponent],\n  exports: [PrizmSwitcherComponent],\n})\nexport class PrizmSwitcherModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[prizmAccordionContent]',\n  standalone: true,\n})\nexport class PrizmAccordionContentDirective {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[prizmAccordionTools]',\n  standalone: true,\n})\nexport class AccordionToolsDirective {}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nexport const expandAnimation: AnimationTriggerMetadata = trigger('expand', [\n  state('init', style({ height: 0 })),\n  state('expanded', style({ height: '*' })),\n  transition('init <=> expanded', animate('0.4s')),\n]);\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { PrizmAccordionContentDirective } from '../../directives/accordion-content.directive';\nimport { AccordionToolsDirective } from '../../directives/accordion-tools.directive';\nimport { expandAnimation } from '../../accordion.animation';\nimport { Subject } from 'rxjs';\nimport { PolymorphContent, PolymorphOutletDirective } from '../../../../directives/polymorph';\nimport { PrizmAccordionItemData } from '../../model';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../../../icon';\nimport { PrizmButtonComponent } from '../../../button';\nimport { PrizmHintDirective } from '../../../../directives';\nimport { prizmIsTextOverflow } from '../../../../util';\n\n@Component({\n  selector: 'prizm-accordion-item',\n  templateUrl: './accordion-item.component.html',\n  styleUrls: ['./accordion-item.component.less'],\n  animations: [expandAnimation],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmIconModule,\n    PolymorphOutletDirective,\n    PrizmButtonComponent,\n    PrizmHintDirective,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmAccordionItemComponent extends PrizmAbstractTestId implements OnDestroy {\n  @Input() icon!: PolymorphContent<PrizmAccordionItemData>;\n  @Input() title: PolymorphContent<PrizmAccordionItemData> = '';\n  @Input() isExpanded = false;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  public readonly prizmIsTextOverflow = prizmIsTextOverflow;\n  private _disabled = false;\n\n  @Output() isExpandedChange = new EventEmitter<boolean>();\n\n  get data() {\n    return {\n      icon: this.icon,\n      title: this.title,\n      isExpanded: this.isExpanded,\n      disabled: this._disabled,\n      focused: this.isAccordionFocused,\n    };\n  }\n\n  override readonly testId_ = 'ui_accordion_item';\n\n  @ContentChild(PrizmAccordionContentDirective, { read: TemplateRef })\n  public readonly accordionContent!: TemplateRef<PrizmAccordionContentDirective>;\n  @ContentChild(AccordionToolsDirective, { read: TemplateRef })\n  public readonly accordionTools!: TemplateRef<AccordionToolsDirective>;\n\n  constructor(private readonly cdRef: ChangeDetectorRef) {\n    super();\n  }\n\n  public toggle$: Subject<void> = new Subject<void>();\n  public isAccordionFocused = false;\n\n  public toggle(): void {\n    if (this.disabled) return;\n    this.isExpanded = !this.isExpanded;\n    this.isExpandedChange.emit(this.isExpanded);\n    this.toggle$.next();\n  }\n\n  public close(): void {\n    if (this.disabled) return;\n    this.isExpanded = false;\n    this.isExpandedChange.emit(this.isExpanded);\n    this.cdRef.markForCheck();\n  }\n\n  public stopProp($event: Event): void {\n    $event.stopPropagation();\n  }\n\n  public ngOnDestroy(): void {\n    this.toggle$.complete();\n  }\n}\n","<div\n  class=\"accordion\"\n  [class.accordion_expanded]=\"isExpanded\"\n  [class.accordion_disabled]=\"disabled\"\n  [class.accordion_focused]=\"isAccordionFocused\"\n>\n  <div\n    class=\"accordion__header\"\n    [tabindex]=\"disabled ? -1 : 0\"\n    (click)=\"toggle()\"\n    (keydown.enter)=\"toggle()\"\n    (keydown.space)=\"toggle()\"\n    (focus)=\"isAccordionFocused = true\"\n    (focusout)=\"isAccordionFocused = false\"\n  >\n    <ng-container *ngIf=\"icon\">\n      <ng-container *polymorphOutlet=\"icon as content; context: data\">\n        <!-- TODO add type string-->\n        <prizm-icon class=\"header-icon\" [iconClass]=\"$any(content)\" size=\"16\"></prizm-icon>\n      </ng-container>\n    </ng-container>\n    <div class=\"title\" #elem *ngIf=\"title\" [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n      <ng-container *polymorphOutlet=\"title as content; context: data\">\n        {{ content }}\n      </ng-container>\n    </div>\n    <div\n      class=\"accordion__tools\"\n      *ngIf=\"accordionTools\"\n      (click)=\"stopProp($event)\"\n      (keydown.enter)=\"stopProp($event)\"\n      (keydown.space)=\"stopProp($event)\"\n    >\n      <ng-container *ngTemplateOutlet=\"accordionTools\"></ng-container>\n    </div>\n    <div class=\"btn-wrapper\">\n      <button\n        class=\"accordion__button\"\n        [class.accordion_expanded__button]=\"isExpanded\"\n        [icon]=\"'chevrons-double-down'\"\n        [disabled]=\"disabled\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n        tabindex=\"-1\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"accordion__content\" *ngIf=\"accordionContent\" [@expand]=\"isExpanded ? 'expanded' : 'init'\">\n    <ng-container *ngTemplateOutlet=\"accordionContent\"></ng-container>\n  </div>\n</div>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from '@angular/core';\nimport { PrizmAccordionItemComponent } from './components/accordion-item/accordion-item.component';\nimport { merge } from 'rxjs';\nimport { mapTo, takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmAccordionComponent extends PrizmAbstractTestId implements AfterContentInit {\n  @Input() public onlyOneExpanded = false;\n  @ContentChildren(PrizmAccordionItemComponent, { descendants: false })\n  accordionItems: QueryList<PrizmAccordionItemComponent> = prizmEmptyQueryList();\n\n  override readonly testId_ = 'ui_accordion';\n\n  constructor(private readonly destroy$: PrizmDestroyService) {\n    super();\n  }\n\n  public ngAfterContentInit(): void {\n    const accordionItemsToggleStreams = this.accordionItems.map((item, idx) => item.toggle$.pipe(mapTo(idx)));\n    merge(...accordionItemsToggleStreams)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(toggledAccordionIdx => {\n        const accordionItems = [...this.accordionItems];\n\n        if (accordionItems[toggledAccordionIdx].isExpanded && this.onlyOneExpanded) {\n          accordionItems.forEach((accordionItem, accordionIdx) => {\n            if (accordionIdx !== toggledAccordionIdx) {\n              accordionItem.close();\n            }\n          });\n        }\n      });\n  }\n}\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport { PrizmAccordionComponent } from './accordion.component';\nimport { PrizmAccordionContentDirective } from './directives/accordion-content.directive';\nimport { AccordionToolsDirective } from './directives/accordion-tools.directive';\nimport { PrizmAccordionItemComponent } from './components/accordion-item/accordion-item.component';\n\n/**\n * @deprecated\n * use standalone instead\n * */\n@NgModule({\n  imports: [\n    PrizmAccordionComponent,\n    PrizmAccordionContentDirective,\n    AccordionToolsDirective,\n    PrizmAccordionItemComponent,\n  ],\n  exports: [\n    PrizmAccordionComponent,\n    PrizmAccordionContentDirective,\n    AccordionToolsDirective,\n    PrizmAccordionItemComponent,\n  ],\n})\nexport class PrizmAccordionModule {}\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'spaceNumber',\n})\nexport class SpaceNumberPipe implements PipeTransform {\n  constructor(@Inject(DecimalPipe) private readonly decimal: DecimalPipe) {}\n\n  public transform(value: string | number, ...args: string[]): string {\n    return this.decimal.transform(value, ...args)?.replace(',', ' ') ?? '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class PrizmCellService {\n  readonly changes$$ = new ReplaySubject<void>(0);\n}\n","import {\n  Directive,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmCellService } from './cell.service';\n\n@Directive({\n  selector: `[prizmCell]`,\n  exportAs: 'prizmCell',\n})\nexport class PrizmCellDirective implements OnDestroy, OnInit {\n  @Input()\n  @prizmDefaultProp()\n  prizmCell = ``;\n\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<Record<string, unknown>>,\n    public readonly viewContainer: ViewContainerRef,\n    @Optional() @Inject(PrizmCellService) private readonly cellService: PrizmCellService\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.cellService?.changes$$.next();\n  }\n\n  public ngOnInit(): void {\n    this.cellService?.changes$$.next();\n  }\n}\n","import { Directive, Inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: `[prizmHead]`,\n})\nexport class PrizmHeadDirective<T extends Partial<Record<keyof T, any>>> {\n  @Input()\n  prizmHead!: keyof T;\n\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<Record<string, unknown>>,\n    public readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import { fromEvent, Observable } from 'rxjs';\nimport { PrizmEventWith, PrizmTypedEventTarget } from '../../../types';\n\nexport function prizmTypedFromEvent<E extends keyof WindowEventMap>(\n  target: Window,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<WindowEventMap[E], typeof target>>;\n\nexport function prizmTypedFromEvent<E extends keyof DocumentEventMap>(\n  target: Document,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<DocumentEventMap[E], typeof target>>;\n\nexport function prizmTypedFromEvent<T extends Element, E extends keyof HTMLElementEventMap>(\n  target: T,\n  event: E,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<HTMLElementEventMap[E], typeof target>>;\n\nexport function prizmTypedFromEvent<E extends Event, T extends PrizmTypedEventTarget<PrizmEventWith<E, T>>>(\n  target: T,\n  event: string,\n  options?: AddEventListenerOptions\n): Observable<PrizmEventWith<E, T>>;\n\nexport function prizmTypedFromEvent<E extends Event>(\n  target: PrizmTypedEventTarget<E>,\n  event: string,\n  options?: AddEventListenerOptions\n): Observable<E>;\n\nexport function prizmTypedFromEvent<E extends Event>(\n  target: PrizmTypedEventTarget<E>,\n  event: string,\n  options: AddEventListenerOptions = {}\n): Observable<E> {\n  return fromEvent(target as any, event, options);\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, Inject, Output } from '@angular/core';\n\nimport { distinctUntilChanged, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { prizmTypedFromEvent } from '../observables/typed-from-event';\nimport { prizmPreventDefault } from '../../../observables';\nimport { PRIZM_ELEMENT_REF } from '../../../tokens/element-ref';\n\n@Directive({\n  selector: `[prizmResized]`,\n})\nexport class PrizmResizedDirective {\n  @Output()\n  readonly prizmResized = prizmTypedFromEvent(this.elementRef.nativeElement, `mousedown`).pipe(\n    prizmPreventDefault(),\n    switchMap(() => {\n      const { width, right } = this.parentRef.nativeElement.getBoundingClientRect();\n\n      return prizmTypedFromEvent(this.documentRef, `mousemove`).pipe(\n        distinctUntilChanged(),\n        map(({ clientX }) => width + clientX - right),\n        takeUntil(prizmTypedFromEvent(this.documentRef, `mouseup`))\n      );\n    })\n  );\n\n  constructor(\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(ElementRef)\n    private readonly elementRef: ElementRef<HTMLElement>,\n    @Inject(PRIZM_ELEMENT_REF)\n    private readonly parentRef: ElementRef<HTMLTableHeaderCellElement>\n  ) {}\n}\n","import {\n  Directive,\n  Inject,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { Observable } from 'rxjs';\nimport { PrizmTableRowContext } from '../table.types';\n\n@Directive({\n  selector: `ng-template[prizmRow]`,\n  exportAs: 'prizmRow',\n})\nexport class PrizmRowDirective<T extends Partial<Record<keyof T, any>>> implements OnDestroy {\n  @Input()\n  @prizmDefaultProp()\n  prizmRowOf: readonly T[] = [];\n\n  @Input()\n  prizmRowGetRowId!: string | ((i: T) => unknown);\n\n  @Input()\n  prizmRowGetChildren!: (element: T) => Observable<T[]>;\n\n  public static ngTemplateContextGuard<T>(\n    _dir: PrizmRowDirective<T>,\n    _ctx: unknown\n  ): _ctx is PrizmTableRowContext<T> {\n    return true;\n  }\n\n  @Input()\n  prizmRowTrackBy: TrackByFunction<T> = (i: number) => {\n    return i;\n  };\n\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<PrizmTableRowContext<T>>,\n    public readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import { Directive, Inject, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: `ng-template[prizmTableEmpty]`,\n})\nexport class PrizmTableEmptyDirective implements OnDestroy {\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<unknown>,\n    public readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import { Directive, Inject, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: `ng-template[prizmTableLoading]`,\n})\nexport class PrizmTableLoadingDirective implements OnDestroy {\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<unknown>,\n    public readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import { Directive, Inject, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: `ng-template[prizmTableTreeLoading]`,\n})\nexport class PrizmTableTreeLoadingDirective implements OnDestroy {\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<any>,\n    public readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmTableCellSorter, PrizmTableCellSortOrder } from './model';\n\n@Injectable()\nexport class PrizmTableSorterService<T> {\n  private readonly map = new Map<string, PrizmTableCellSorter<T>>();\n  private readonly sorters$$ = new BehaviorSubject<PrizmTableCellSorter<T>[]>([]);\n\n  get value(): PrizmTableCellSorter<T>[] {\n    return [...this.map.values()];\n  }\n\n  get count(): number {\n    return this.map.size;\n  }\n  public get changes$(): Observable<PrizmTableCellSorter<T>[]> {\n    return this.sorters$$.asObservable();\n  }\n  public sortCell(sorter: PrizmTableCellSorter<T>, clearPrevious: boolean): void {\n    if (clearPrevious) this.map.clear();\n    const { options } = sorter;\n    const { id, order } = options;\n    if (!order) {\n      this.map.delete(id);\n    } else this.map.set(id, sorter);\n    this.emit();\n  }\n\n  public remove(id: string): void {\n    this.map.delete(id);\n    this.emit();\n  }\n\n  public set(sorter: PrizmTableCellSorter<T>[]): void {\n    this.map.clear();\n    for (const item of sorter) {\n      this.map.set(item.options.id, item);\n    }\n\n    this.emit();\n  }\n\n  public cell$(id: string): Observable<PrizmTableCellSorter<T>> {\n    return this.sorters$$.pipe(map(() => this.cell(id)));\n  }\n\n  public cell(id: string): PrizmTableCellSorter<T> {\n    return this.map.get(id) as PrizmTableCellSorter<T>;\n  }\n\n  public cellOrder(id: string): PrizmTableCellSortOrder {\n    return this.cell(id)?.options.order;\n  }\n  public nextOrder(id: string): PrizmTableCellSortOrder | null {\n    const current = this.cellOrder(id);\n    switch (current) {\n      case 'asc':\n        return 'desc';\n      case 'desc':\n        return null;\n\n      default:\n        return 'asc';\n    }\n  }\n\n  public sort$(data: T[]): Observable<readonly T[]> {\n    return this.sorters$$.pipe(map(() => this.sort(data)));\n  }\n\n  public sort(data: T[], all = this.value): T[] {\n    return [...(data ?? [])].sort((a: T, b: T) => {\n      for (const item of all) {\n        if (typeof item.sorter !== 'function') return 0;\n        const result = item.sorter(a, b, item.options);\n        if (result) return result;\n      }\n\n      return 0;\n    });\n  }\n\n  private emit(): void {\n    this.sorters$$.next(this.value);\n  }\n\n  public isActive(id: string): boolean {\n    return !!this.map.get(id);\n  }\n\n  public idx(id: string): number {\n    return [...this.map.keys()].indexOf(id);\n  }\n}\n","import { INTERSECTION_ROOT_MARGIN, IntersectionObserverService } from '@ng-web-apis/intersection-observer';\nimport { PrizmTableSorterService } from '../service';\n\nexport const PRIZM_TABLE_PROVIDERS = [\n  {\n    provide: INTERSECTION_ROOT_MARGIN,\n    useValue: `10000px 10000px 10000px 0px`,\n  },\n  IntersectionObserverService,\n  PrizmTableSorterService,\n];\n","import { Directive, OnChanges } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive()\nexport abstract class AbstractPrizmController implements OnChanges {\n  readonly change$ = new Subject<void>();\n\n  ngOnChanges(): void {\n    this.change$.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Compare } from '@prizm-ui/helpers';\n\n@Injectable()\nexport class PrizmTableTreeService {\n  public readonly showDirectChildrenMap = new Map<number, boolean | null>();\n  private readonly showAllChildrenMap = new Map<number, boolean>();\n  private readonly changes$$ = new ReplaySubject(1);\n  public readonly changes$ = this.changes$$.asObservable();\n  private readonly nestedStructure = new Map<number, number>();\n  public canShowChild(idx: number): Observable<boolean> {\n    return this.changes$.pipe(\n      startWith(null),\n      map(() => this.isChildrenOpened(idx))\n    );\n  }\n\n  public isChildrenOpened(idx: number): boolean {\n    let result = this.showDirectChildrenMap.get(idx);\n    if (Compare.isNullish(result)) {\n      const parents = this.findAllParents(idx);\n      for (const parent of [idx, ...parents]) {\n        const parentResult = this.showAllChildrenMap.get(parent);\n        if (typeof parentResult === 'boolean') {\n          result = parentResult;\n          break;\n        }\n      }\n    }\n    return Boolean(result);\n  }\n\n  private findAllParents(childIdx: number): number[] {\n    const result: number[] = [];\n    const parent = this.nestedStructure.get(childIdx);\n    if (Compare.isNullish(parent)) return result;\n    result.push(parent, ...this.findAllParents(parent));\n    return result;\n  }\n\n  /**\n   * flip nestedStructure to (parent: children[])\n   * */\n  private flipNestedStructure(map = new Map<number, Set<number>>()): Map<number, Set<number>> {\n    for (const [childIdx, parentIdx] of this.nestedStructure.entries()) {\n      const setFromMap = map.get(parentIdx);\n      const set = setFromMap ?? new Set();\n      set.add(childIdx);\n      if (!setFromMap) map.set(parentIdx, set);\n    }\n    return map;\n  }\n\n  private findAllChildren(idx: number, flipped = this.flipNestedStructure()): number[] {\n    const allCurrentIdChildren = Array.from(flipped.get(idx) ?? []);\n    return [\n      ...allCurrentIdChildren,\n      ...allCurrentIdChildren.reduce((base, idx) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        base.push(...this.findAllChildren(idx, flipped));\n        return base;\n      }, []),\n    ];\n  }\n\n  public addChildToParent(childIdx: number, parentIdx: number) {\n    this.nestedStructure.set(childIdx, parentIdx);\n  }\n\n  private showHideAllNested(idx: number, show: boolean): void {\n    this.showAllChildrenMap.set(idx, show);\n  }\n\n  private showHideAll(show: boolean, idx?: number | null) {\n    let children: number[];\n    if (typeof idx === 'number') {\n      children = [...this.findAllChildren(idx), idx];\n    } else {\n      children = [...this.showDirectChildrenMap.keys()];\n    }\n    for (const child of children) {\n      this.showHideAllNested(child, show);\n      this.showDirectChildrenMap.set(child, show);\n    }\n    this.changes$$.next(this.showDirectChildrenMap);\n  }\n\n  public showAllChildren(idx?: number | null) {\n    this.showHideAll(true, idx);\n  }\n\n  public hideAllChildren(idx?: number | null) {\n    this.showHideAll(false, idx);\n  }\n\n  public showChildren(idx: number): void {\n    this.updateMap(idx, true);\n  }\n\n  public hideChildren(idx: number): void {\n    this.updateMap(idx, false);\n  }\n\n  public clear(): void {\n    this.showDirectChildrenMap.clear();\n    this.changes$$.next(this.showDirectChildrenMap);\n  }\n\n  public toggleChildren(idx: number): void {\n    this.showDirectChildrenMap.get(idx) ? this.hideChildren(idx) : this.showChildren(idx);\n  }\n\n  private updateMap(idx: number, value: boolean): void {\n    this.showDirectChildrenMap.set(idx, value);\n    this.changes$$.next(this.showDirectChildrenMap);\n  }\n\n  public init(idx: number): void {\n    this.showDirectChildrenMap.set(idx, null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { prizmPure } from '@prizm-ui/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Compare } from '@prizm-ui/helpers';\n\n@Injectable()\nexport class PrizmTableRowService {\n  private idxCount = -1;\n  private readonly map = new Map<unknown, number>();\n\n  public saveId(id: unknown, idx: number): void {\n    this.map.set(id, idx);\n  }\n  public getIdxById(id: unknown): number | null {\n    return this.map.get(id) ?? null;\n  }\n\n  public incrementIdx(): void {\n    this.idxCount++;\n  }\n  public getLastIncrementedIdx(): number {\n    return this.idxCount;\n  }\n}\n","import { prizmSort } from '@prizm-ui/helpers';\nimport { PrizmTableSortOptions } from './service';\n\nexport function prizmTableDefaultColumnSort<T extends Record<string, unknown>>(\n  x: T,\n  y: T,\n  options: PrizmTableSortOptions\n): number {\n  return prizmSort(x[options.id], y[options.id], options.order === 'asc');\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, concat, isObservable, Observable, of, Subject, switchMap } from 'rxjs';\nimport { map, shareReplay, takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmThComponent } from './th/th.component';\n\ntype PrizmThGroup = any;\n@Injectable()\nexport class PrizmTableService {\n  private readonly set = new Set<PrizmThGroup>();\n  private readonly changes$ = new Subject<void>();\n\n  readonly tableMaxColspan$: Observable<number> = concat(of(void null), this.changes$).pipe(\n    switchMap(() => {\n      const thGroups = [...this.set];\n      const flows$ = thGroups.map((i: PrizmThGroup) => i.groupStructure$).filter(isObservable) as Observable<{\n        cols: PrizmThComponent<any>[];\n        colspan: number;\n      }>[];\n      return combineLatest(flows$).pipe(\n        map(i => {\n          return Math.max(...i.map(i => i.colspan)) as number;\n        })\n      );\n    }),\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n\n  constructor(private readonly destroy$: PrizmDestroyService) {}\n\n  public addThGroup(thGroup: PrizmThGroup) {\n    this.set.add(thGroup);\n\n    this.changes$.next();\n  }\n\n  public removeThGroup(thGroup: PrizmThGroup) {\n    this.set.delete(thGroup);\n\n    this.changes$.next();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { IntersectionObserverService } from '@ng-web-apis/intersection-observer';\n\nimport { PRIZM_TABLE_PROVIDERS } from '../providers/table.providers';\nimport { PrizmSizeL, PrizmSizeM, PrizmSizeS, PrizmSizeXS } from '../../../util';\nimport { PrizmComparator, PrizmTableBorderStyle } from '../table.types';\nimport { AbstractPrizmController } from '../abstract/controller';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { prizmAutoEmit, prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmTableCellSorter, PrizmTableSorterService } from '../service';\nimport { PrizmTableTreeService } from '../service/tree.service';\nimport { PrizmTableRowService } from '../service/row.service';\nimport { prizmTableDefaultColumnSort } from '../table.const';\nimport { PrizmTableService } from '../table.service';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: `table[prizmTable]`,\n  providers: [\n    ...PRIZM_TABLE_PROVIDERS,\n    PrizmDestroyService,\n    PrizmTableService,\n    PrizmTableTreeService,\n    PrizmTableRowService,\n  ],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    style: `border-collapse: separate; border-spacing: 0`,\n  },\n  exportAs: 'prizmTable',\n})\nexport class PrizmTableDirective<T extends Partial<Record<keyof T, unknown>>>\n  extends AbstractPrizmController\n  implements AfterViewInit\n{\n  private readonly columns$$ = new BehaviorSubject<ReadonlyArray<keyof T | string>>([]);\n\n  @Input()\n  @prizmAutoEmit({\n    name: 'columns$$',\n  })\n  columns: ReadonlyArray<keyof T | string> = [];\n\n  public columns$ = this.columns$$.asObservable();\n\n  @Input()\n  @HostBinding(`attr.data-size`)\n  @prizmDefaultProp()\n  size: PrizmSizeXS | PrizmSizeS | PrizmSizeL | PrizmSizeM = `l`;\n\n  @Input()\n  @HostBinding(`attr.border-style`)\n  @prizmDefaultProp()\n  tableBorderStyle: PrizmTableBorderStyle = 'grid';\n\n  @Input()\n  set sort(sorters: PrizmTableCellSorter<T>[]) {\n    for (const item of sorters) {\n      item.sorter = item.sorter ?? prizmTableDefaultColumnSort;\n    }\n    this.sorterService.set(sorters);\n  }\n  get sort(): PrizmTableCellSorter<T>[] {\n    return this.sorterService.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  direction: -1 | 1 = 1;\n\n  @Output()\n  readonly directionChange = new EventEmitter<-1 | 1>();\n\n  /**\n   * @deprecated\n   * */\n  @Output()\n  readonly sorterChange = new EventEmitter<PrizmComparator<T> | null>();\n\n  @Output()\n  readonly sortChange: Observable<PrizmTableCellSorter<T>[]> = this.sorterService.changes$;\n\n  constructor(\n    public readonly tree: PrizmTableTreeService,\n    public readonly sorterService: PrizmTableSorterService<T>,\n    public readonly tableService: PrizmTableService,\n    @Inject(IntersectionObserverService)\n    readonly entries$: Observable<IntersectionObserverEntry[]>,\n    @Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  sorter: PrizmComparator<T> = () => 0;\n\n  public updateSorter(sorter: PrizmComparator<T> | null): void {\n    if (this.sorter === sorter) {\n      if (this.direction === -1) {\n        this.sorter = (): number => 0;\n      } else {\n        this.direction = -1;\n        this.directionChange.emit(this.direction);\n      }\n    } else {\n      this.sorter = sorter || ((): number => 0);\n      this.sorterChange.emit(this.sorter);\n      this.direction = 1;\n      this.directionChange.emit(1);\n    }\n\n    this.change$.next();\n  }\n\n  public ngAfterViewInit(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  Optional,\n} from '@angular/core';\n\nimport { PrizmHeadDirective } from '../directives/head.directive';\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_ELEMENT_REF } from '../../../tokens';\nimport { PrizmTableSortKeyException } from '../../../exceptions';\nimport { PrizmTableCellSorter, PrizmTableCellSorterHandler, PrizmTableSorterService } from '../service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `th[prizmTh]`,\n  templateUrl: `./th.component.html`,\n  styleUrls: [`./th.style.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: PRIZM_ELEMENT_REF,\n      useExisting: ElementRef,\n    },\n  ],\n})\nexport class PrizmThComponent<T extends Partial<Record<keyof T, any>>> {\n  @Input()\n  @prizmDefaultProp()\n  sorter: PrizmTableCellSorterHandler<T> | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  resizable = false;\n\n  @Input()\n  @prizmDefaultProp()\n  sortable = false;\n\n  @HostBinding(`style.width.px`)\n  width: number | null = null;\n\n  get isSortable(): boolean {\n    return this.sortable || typeof this.sorter === 'function';\n  }\n\n  constructor(\n    @Optional()\n    @Inject(PrizmHeadDirective)\n    private readonly head: PrizmHeadDirective<T> | null,\n    public readonly el: ElementRef<HTMLTableCellElement>,\n    private readonly sorterService: PrizmTableSorterService<T>,\n    @Optional()\n    @Inject(forwardRef(() => PrizmTableDirective))\n    readonly table: PrizmTableDirective<T> | null\n  ) {}\n\n  get key(): keyof T {\n    if (!this.head) {\n      throw new PrizmTableSortKeyException();\n    }\n\n    return this.head.prizmHead;\n  }\n\n  get isCurrent(): boolean {\n    return this.sorterService.isActive(this.key as string);\n  }\n\n  get idx(): number {\n    return this.sorterService.idx(this.key as string);\n  }\n\n  get count(): number {\n    return this.sorterService.count;\n  }\n\n  get num(): number | null {\n    const idx = this.idx;\n    if (idx === -1) return null;\n    return idx + 1;\n  }\n\n  get sortItem(): PrizmTableCellSorter<T> {\n    return this.sorterService.cell(this.key as string);\n  }\n\n  get icon$(): Observable<string> {\n    return this.sorterService.changes$.pipe(\n      map(() =>\n        !this.isCurrent\n          ? 'arrows-swap-vert-2'\n          : this.sorterService.cellOrder(this.key as string) === 'asc'\n          ? `sort-asc-arr`\n          : `sort-desc-arr`\n      )\n    );\n  }\n\n  public onResized(width: number): void {\n    this.width = width;\n  }\n\n  public updateSorter(event: MouseEvent): void {\n    event.preventDefault();\n    const newOrder = this.sorterService.nextOrder(this.key as string) as any;\n    if (event.ctrlKey || event.metaKey) {\n      this.sorterService.remove(this.key as string);\n    } else\n      this.sorterService.sortCell(\n        {\n          options: {\n            id: this.key as string,\n            order: newOrder,\n          },\n          sorter: this.sorter as any,\n        },\n        !event.shiftKey\n      );\n  }\n}\n","<button class=\"sorter\" *ngIf=\"isSortable && table; else content\" type=\"button\">\n  <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  {{ table.change$ | async }}\n  <span class=\"sort__block\" [class.sort__block_active]=\"isCurrent\" (click)=\"updateSorter($event)\">\n    <span class=\"sorter__number\" [style.visibility]=\"count > 1 && num ? 'visible' : 'hidden'\">{{\n      num ?? '0'\n    }}</span>\n    <prizm-icon class=\"sorter__icon\" [iconClass]=\"$any(icon$ | async)\"></prizm-icon>\n  </span>\n</button>\n<ng-template #content>\n  <div class=\"cell\"><ng-content></ng-content></div>\n</ng-template>\n<div class=\"resize-bar\" *ngIf=\"resizable\" (prizmResized)=\"onResized($event)\"></div>\n","import { Directive, DoCheck, forwardRef, Inject, OnInit } from '@angular/core';\nimport { PrizmThComponent } from '../th/th.component';\nimport { PrizmSortByDirective } from './sort-by.directive';\nimport { PrizmTableDirective } from './table.directive';\nimport { PrizmComparator } from '../table.types';\n\n@Directive({\n  selector: `th[prizmTh][prizmSortable]`,\n})\nexport class PrizmSortableDirective<T extends Partial<Record<keyof T, any>>> implements DoCheck, OnInit {\n  constructor(\n    @Inject(forwardRef(() => PrizmSortByDirective))\n    private readonly sortBy: PrizmSortByDirective<T>,\n    @Inject(PrizmTableDirective) private readonly table: PrizmTableDirective<T>,\n    @Inject(PrizmThComponent) private readonly th: PrizmThComponent<T>\n  ) {}\n\n  sorter: PrizmComparator<T> = (): number => 0;\n\n  get key(): keyof T {\n    return this.th.key;\n  }\n\n  ngOnInit(): void {\n    this.sorter = this.match ? this.table.sorter : this.sorter;\n    this.th.sorter = this.sorter;\n  }\n\n  ngDoCheck(): void {\n    if (this.match && this.table.sorter !== this.sorter) {\n      this.table.updateSorter(this.sorter);\n    }\n  }\n\n  private get match(): boolean {\n    return this.sortBy.prizmSortBy === this.key;\n  }\n}\n","import { ContentChildren, Directive, Inject, Input, Output, QueryList } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\n\nimport { PrizmSortableDirective } from './sortable.directive';\nimport { PrizmTableDirective } from './table.directive';\nimport { PrizmComparator } from '../table.types';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { prizmEmptyQueryList } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: `table[prizmTable][prizmSortBy]`,\n})\nexport class PrizmSortByDirective<T extends Partial<Record<keyof T, any>>> {\n  @ContentChildren(PrizmSortableDirective, { descendants: true })\n  private readonly sortables: QueryList<PrizmSortableDirective<T>> = prizmEmptyQueryList();\n\n  @Input()\n  @prizmDefaultProp()\n  prizmSortBy: keyof T | string | null = null;\n\n  @Output()\n  readonly prizmSortByChange = this.table.sorterChange.pipe(\n    filter(() => !!this.sortables.length),\n    map(sorter => this.getKey(sorter))\n  );\n\n  constructor(@Inject(PrizmTableDirective) private readonly table: PrizmTableDirective<T>) {}\n\n  private getKey(sorter: PrizmComparator<T> | null): keyof T | null {\n    return this.sortables.find(s => s.sorter === sorter)?.key || null;\n  }\n}\n","import { Directive } from '@angular/core';\nimport { INTERSECTION_ROOT_MARGIN, IntersectionObserverService } from '@ng-web-apis/intersection-observer';\n\n@Directive({\n  selector: `thead[prizmThead]`,\n  providers: [\n    IntersectionObserverService,\n    {\n      provide: INTERSECTION_ROOT_MARGIN,\n      useValue: `0px 10000px 10000px 10000px`,\n    },\n  ],\n})\nexport class PrizmTheadDirective {}\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\n\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { PrizmComparator } from '../table.types';\nimport { prizmPure } from '@prizm-ui/core';\n\n@Pipe({\n  name: `prizmTableSort`,\n  pure: false,\n})\nexport class PrizmTableSortPipe<T extends Partial<Record<keyof T, any>>> implements PipeTransform {\n  constructor(@Inject(PrizmTableDirective) private readonly table: PrizmTableDirective<T>) {}\n\n  public transform(data: readonly T[]): readonly T[] {\n    return this.sort(data, this.table.sorter, this.table.direction);\n  }\n\n  @prizmPure\n  private sort(data: readonly T[], sorter: PrizmComparator<T>, direction: -1 | 1): readonly T[] {\n    return [...data].sort((a, b) => direction * sorter(a, b));\n  }\n}\n","import { ChangeDetectorRef, Provider, SkipSelf } from '@angular/core';\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { PrizmTableSortPipe } from '../pipes/table-sort.pipe';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { AbstractPrizmController } from '../abstract/controller';\n\nfunction prizmWatch<T>(changeDetectorRef: ChangeDetectorRef): MonoTypeOperatorFunction<T> {\n  return tap(() => {\n    changeDetectorRef.markForCheck();\n  });\n}\n\nexport const PRIZM_TABLE_PROVIDER: Provider[] = [\n  PrizmDestroyService,\n  PrizmTableSortPipe,\n  {\n    provide: PrizmTableDirective,\n    deps: [[new SkipSelf(), PrizmTableDirective], ChangeDetectorRef, PrizmDestroyService],\n    useFactory: (\n      controller: AbstractPrizmController,\n      changeDetectorRef: ChangeDetectorRef,\n      destroy$: Observable<void>\n    ): AbstractPrizmController => {\n      controller.change$.pipe(prizmWatch(changeDetectorRef), takeUntil(destroy$)).subscribe();\n\n      return controller;\n    },\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class PrizmTdService {\n  private readonly count$$ = new BehaviorSubject<number>(0);\n  public readonly count$ = this.count$$.asObservable();\n  get count() {\n    return this.count$$.value;\n  }\n\n  public increment(value = 1) {\n    this.count$$.next(this.count$$.value + value);\n  }\n\n  public decrement(value = 1) {\n    this.count$$.next(this.count$$.value - value);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { debounceTime, map, startWith, switchMap } from 'rxjs/operators';\nimport { animationFrameScheduler, BehaviorSubject, merge, Observable, of } from 'rxjs';\nimport { prizmAutoEmit, prizmDefaultProp } from '@prizm-ui/core';\n\nimport { PrizmCellDirective } from '../directives/cell.directive';\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { PRIZM_TABLE_PROVIDER } from '../providers/table.provider';\nimport { PrizmTbodyComponent } from '../tbody/tbody.component';\nimport { PrizmTableCellStatus } from '../table.types';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport { PrizmTableTreeService } from '../service/tree.service';\nimport { PrizmCellService } from '../directives/cell.service';\nimport { PrizmTdService } from '../td/td.service';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `tr[prizmTr]`,\n  templateUrl: `./tr.component.html`,\n  styleUrls: [`./tr.component.less`],\n  exportAs: 'prizmTr',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [PRIZM_TABLE_PROVIDER, PrizmCellService, PrizmTdService],\n})\nexport class PrizmTrComponent<T extends Partial<Record<keyof T, unknown>>> {\n  @Input() @HostBinding('attr.status') public status: PrizmTableCellStatus = 'default';\n  private readonly columns$$ = new BehaviorSubject<ReadonlyArray<keyof T | string> | null>(null);\n\n  @Input()\n  @prizmAutoEmit({\n    name: 'columns$$',\n  })\n  columns!: ReadonlyArray<keyof T | string>;\n\n  get realColumns$(): Observable<ReadonlyArray<keyof T | string>> {\n    return this.columns$$.pipe(\n      switchMap(columns => {\n        return (columns && Array.isArray(columns) ? of(columns) : this.table.columns$) ?? of([]);\n      })\n    );\n  }\n\n  @ContentChildren(forwardRef(() => PrizmCellDirective))\n  readonly cells: QueryList<PrizmCellDirective> = prizmEmptyQueryList();\n\n  readonly cells$ = merge(\n    this.cells.changes,\n    this.cellService.changes$$.pipe(debounceTime(0, animationFrameScheduler))\n  ).pipe(\n    startWith(null),\n    switchMap(() => this.realColumns$),\n    map(realColumns => {\n      const cells = this.cells.toArray();\n      const columns = realColumns;\n      if (!columns || columns.length === 0) {\n        return cells;\n      }\n\n      // Display cells in order as specified by table's `column` property.\n      return columns.map(column => cells.find(c => c.prizmCell === column));\n    })\n  );\n\n  get colCount(): number {\n    return this.td.count;\n  }\n\n  get colCount$(): Observable<number> {\n    return this.td.count$;\n  }\n\n  readonly item$: Observable<T> = this.body.rows.changes.pipe(\n    startWith(null),\n    map(() => this.body.view[this.body.rows.toArray().indexOf(this)])\n  );\n\n  @Input() @HostBinding('attr.active') public active = false;\n\n  constructor(\n    @Inject(forwardRef(() => PrizmTableDirective))\n    public readonly table: PrizmTableDirective<T>,\n    @Inject(forwardRef(() => PrizmTbodyComponent))\n    private readonly body: PrizmTbodyComponent<T>,\n    private readonly cellService: PrizmCellService,\n    private readonly td: PrizmTdService,\n    private readonly tableTreeService: PrizmTableTreeService,\n    @Inject(PrizmDestroyService) readonly destroy$: PrizmDestroyService\n  ) {}\n\n  public showChildren(idx: number): void {\n    this.tableTreeService.showChildren(idx);\n  }\n\n  public hideChildren(idx: number): void {\n    this.tableTreeService.hideChildren(idx);\n  }\n\n  public toggleChildren(idx: number): void {\n    this.tableTreeService.toggleChildren(idx);\n  }\n\n  public isChildrenOpened(idx: number): boolean {\n    return this.tableTreeService.isChildrenOpened(idx);\n  }\n}\n","<ng-content selector=\"td[prizmTd]\"></ng-content>\n<ng-container *ngIf=\"cells$ | async as cells\">\n  <ng-container *ngFor=\"let cell of cells\">\n    <ng-container *ngIf=\"cell?.template\" [ngTemplateOutlet]=\"$any(cell?.template)\"></ng-container>\n  </ng-container>\n</ng-container>\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PrizmTableRowService } from '../service/row.service';\nimport { PrizmTableTreeService } from '../service/tree.service';\nimport { PrizmTableRowContext } from '../table.types';\nimport { Compare } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: `ng-template[prizmTableRowInit]`,\n})\nexport class PrizmTableRowInitDirective implements OnInit, OnDestroy, OnChanges {\n  @Input() context!: PrizmTableRowContext;\n  @Input() template!: TemplateRef<any>;\n  public embeddedRef!: EmbeddedViewRef<any>;\n  private idx!: number;\n  private idxFromMap!: number;\n  constructor(\n    public readonly viewContainer: ViewContainerRef,\n    public readonly tableRowService: PrizmTableRowService,\n    public readonly treeService: PrizmTableTreeService\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n\n  public ngOnInit(): void {\n    this.generateIdx();\n    this.embeddedRef = this.viewContainer.createEmbeddedView(this.template, this.getContext());\n    this.initChildrenVisibleStateOnce();\n    this.updateContextIfCan();\n  }\n\n  private initChildrenVisibleStateOnce(): void {\n    if (Compare.isNullish(this.idxFromMap)) this.treeService.init(this.idx);\n  }\n\n  private generateIdx(): void {\n    let rowId: unknown;\n\n    if (typeof this.context.getRowId === 'function' || this.context.getRowId) {\n      rowId =\n        typeof this.context.getRowId === 'function'\n          ? this.context.getRowId(this.context.item)\n          : this.context.item[this.context.getRowId];\n      this.idxFromMap = this.tableRowService.getIdxById(rowId) as number;\n    }\n\n    if (Compare.isNullish(this.idxFromMap)) this.tableRowService.incrementIdx();\n    this.idx = this.idxFromMap ?? this.tableRowService.getLastIncrementedIdx();\n\n    if (Compare.isNullish(this.idxFromMap) && !Compare.isNullish(rowId)) {\n      this.tableRowService.saveId(rowId, this.idx);\n    }\n\n    if ('parentIdx' in this.context) {\n      this.treeService.addChildToParent(this.idx, this.context.parentIdx as number);\n    }\n  }\n\n  public updateContextIfCan() {\n    if (!this.embeddedRef) return;\n    this.context = this.getContext();\n    if (this.context !== this.embeddedRef.context) this.embeddedRef.context = this.context;\n    this.embeddedRef.markForCheck();\n  }\n\n  private getContext(): PrizmTableRowContext {\n    const odd = this.idx % 2 !== 0;\n    return {\n      ...this.context,\n      index: this.idx,\n      odd: odd,\n      even: !odd,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateContextIfCan();\n  }\n}\n","import { Directive } from '@angular/core';\nimport { PrizmTdService } from '../td/td.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `tr:not([prizmTr])`,\n  providers: [PrizmTdService],\n})\nexport class PrizmTrDirective {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { CollectionViewer, isDataSource, ListRange } from '@angular/cdk/collections';\n\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport { BehaviorSubject, isObservable, Observable } from 'rxjs';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { PolymorphContent } from '../../../directives';\nimport { PrizmTableEmptyDirective } from '../directives/empty.directive';\nimport { PrizmTableLoadingDirective } from '../directives/loading.directive';\nimport { PrizmRowDirective } from '../directives/row.directive';\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { PrizmTableTreeLoadingDirective } from '../directives/tree-loading.directive';\nimport { PRIZM_TABLE_PROVIDER } from '../providers/table.provider';\nimport { PrizmTableSorterService } from '../service';\nimport { PrizmTableTreeService } from '../service/tree.service';\nimport { PrizmTableDataSourceInput } from '../table.types';\nimport { PrizmTrComponent } from '../tr/tr.component';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `[prizmTbody] `,\n  templateUrl: `./tbody.component.html`,\n  styleUrls: [`./tbody.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: PRIZM_TABLE_PROVIDER,\n})\nexport class PrizmTbodyComponent<T extends Partial<Record<keyof T, unknown>>>\n  implements CollectionViewer, AfterViewInit, OnDestroy\n{\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   * Mutation of an array (push, unshift) will not.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the DataSource's `connect` function and trigger updates when that stream emits new data array\n   * values. During the table's `ngOnDestroy` or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function.\n   *\n   * For a `DataSource`-s we skip internal sorting, so that users can use their own sorting mechanisms\n   * i.e. server-side sorting can use different data-base's collation strategies.\n   * On the other hand users can connect `sorterService` to `PrizmTableDataSource`:\n   *\n   * @example\n   * ```\n   *  \\@ViewChild(PrizmTableDirective) table;\n   *  \\@ViewChild(PrizmPaginatorComponent) paginator;\n   *\n   *  ngAfterViewInit() {\n   *    this.dataSource = new PrizmTableDataSource([]);\n   *    this.dataSource.paginator = this.paginator;\n   *    this.dataSource.sorter = this.table.sorterService;\n   *  }\n   * ```\n   */\n  @Input()\n  set data(dataSource: PrizmTableDataSourceInput<T>) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource ?? []);\n    }\n  }\n\n  get data(): PrizmTableDataSourceInput<T> {\n    return this._dataSource;\n  }\n  private _dataSource!: PrizmTableDataSourceInput<T>;\n\n  /**\n   * Currently displayed set of data.\n   */\n  get view(): readonly T[] {\n    return this._data;\n  }\n\n  /**\n   * Currently displayed set of data.\n   *\n   * @deprecated\n   */\n  get sorted(): readonly T[] {\n    return this._data;\n  }\n\n  /** Latest data provided by the data source. */\n  protected _data!: readonly T[];\n\n  /* protected */ renderData$!: Observable<readonly T[]>;\n\n  @Input()\n  @prizmDefaultProp()\n  heading: PolymorphContent = ``;\n\n  @Input()\n  @prizmDefaultProp()\n  open = true;\n\n  @Output()\n  readonly openChange = new EventEmitter<boolean>();\n\n  @ContentChild(PrizmTableLoadingDirective)\n  readonly loadingTemplate?: PrizmTableLoadingDirective;\n\n  @ContentChild(PrizmTableEmptyDirective)\n  readonly emptyTemplate?: PrizmTableEmptyDirective;\n\n  @ContentChild(PrizmTableTreeLoadingDirective)\n  readonly treeLoadingTemplate?: PrizmTableTreeLoadingDirective;\n\n  @ContentChild(forwardRef(() => PrizmRowDirective))\n  readonly row?: PrizmRowDirective<T>;\n\n  @ContentChildren(forwardRef(() => PrizmTrComponent))\n  readonly rows: QueryList<PrizmTrComponent<T>> = prizmEmptyQueryList();\n\n  columnsCount = 0;\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   *\n   * @private Not used internally, just needed by `CollectionViewer` interface.\n   */\n  readonly viewChange = new BehaviorSubject<ListRange>({\n    start: 0,\n    end: Number.MAX_VALUE,\n  });\n\n  constructor(\n    @Inject(forwardRef(() => PrizmTableDirective))\n    readonly table: PrizmTableDirective<T>,\n    public readonly sorterService: PrizmTableSorterService<T>,\n    public readonly tableTreeService: PrizmTableTreeService,\n    private readonly destroy$: PrizmDestroyService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.table.tableService.tableMaxColspan$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((columnsCount: number) => {\n        this.columnsCount = columnsCount;\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (isDataSource(this.data)) {\n      this.data.disconnect(this);\n    }\n  }\n\n  public onClick(): void {\n    this.open = !this.open;\n    this.openChange.emit(this.open);\n  }\n\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current.\n   */\n  private _switchDataSource(dataSource: PrizmTableDataSourceInput<T>): void {\n    this._data = [];\n\n    // Disconnect from previous data source if needed\n    if (isDataSource(this.data)) {\n      this.data.disconnect(this);\n    }\n\n    this._dataSource = dataSource;\n\n    let dataStream: Observable<readonly T[]>;\n    if (isDataSource(dataSource)) {\n      dataStream = dataSource.connect(this);\n    } else if (isObservable(dataSource)) {\n      dataStream = dataSource.pipe(switchMap(data => this.sorterService.sort$(data as T[])));\n    } else if (Array.isArray(dataSource)) {\n      dataStream = this.sorterService.sort$(dataSource);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.renderData$ = dataStream.pipe(\n      tap(data => {\n        this._data = data || [];\n      })\n    );\n  }\n\n  public sortChildren(children$: Observable<T[]>): Observable<readonly T[]> {\n    return children$.pipe(switchMap(children => this.sorterService.sort$(children)));\n  }\n}\n","<ng-content></ng-content>\n<tr *ngIf=\"heading\">\n  <th class=\"heading\" [colSpan]=\"columnsCount\">\n    <div class=\"heading__container\">\n      <prizm-icon\n        class=\"heading__icon\"\n        [class.heading__icon_expanded]=\"open\"\n        (click)=\"onClick()\"\n        iconClass=\"arrows-chevron-right\"\n      ></prizm-icon>\n      <span class=\"heading__content\">\n        <ng-container *polymorphOutlet=\"heading as text\">{{ text }}</ng-container>\n      </span>\n    </div>\n  </th>\n</tr>\n\n<ng-container *ngIf=\"open && row\">\n  <ng-container *ngIf=\"renderData$ | async as data; else loadingWrapperTemplate\">\n    <ng-container *ngIf=\"!!data?.length; else emptyWrapperTemplate\">\n      <ng-template\n        *ngFor=\"\n          let item of data;\n          index as index;\n          odd as odd;\n          even as even;\n          first as first;\n          last as last;\n          count as count;\n          trackBy: row.prizmRowTrackBy\n        \"\n        [template]=\"templateRowElement\"\n        [context]=\"\n          $any({\n            item: item,\n            index: index,\n            rowIdx: index,\n            odd: odd,\n            even: even,\n            getRowId: row.prizmRowGetRowId,\n            first: first,\n            last: last,\n            count: count,\n            deepLevel: 0\n          })\n        \"\n        prizmTableRowInit\n      ></ng-template>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingWrapperTemplate>\n  <ng-container *ngTemplateOutlet=\"loadingTemplate?.template || loadingWrapperTemplate\"></ng-container>\n\n  <ng-template #loadingWrapperTemplate>\n    <tr>\n      <td [colSpan]=\"columnsCount\">Loading...</td>\n    </tr>\n  </ng-template>\n</ng-template>\n\n<ng-template #emptyWrapperTemplate>\n  <ng-container *ngTemplateOutlet=\"emptyTemplate?.template || emptyInnerTemplate\"></ng-container>\n\n  <ng-template #emptyInnerTemplate>\n    <tr class=\"empty-row\">\n      <td [colSpan]=\"columnsCount\">—</td>\n    </tr>\n  </ng-template>\n</ng-template>\n\n<ng-template\n  #templateRowElement\n  let-item=\"item\"\n  let-index=\"index\"\n  let-odd=\"odd\"\n  let-even=\"even\"\n  let-first=\"first\"\n  let-last=\"last\"\n  let-count=\"count\"\n  let-deepLevel=\"deepLevel\"\n  let-parentItem=\"parentItem\"\n  let-parentIdx=\"parentIdx\"\n  let-rowIdx=\"rowIdx\"\n>\n  <ng-container\n    [ngTemplateOutlet]=\"$any(row?.template)\"\n    [ngTemplateOutletContext]=\"{\n      $implicit: item,\n      rowIdx: rowIdx,\n      parentIdx: parentIdx,\n      parentItem: parentItem,\n      index: index,\n      odd: odd,\n      item: item,\n      even: even,\n      deepLevel: deepLevel,\n      first: first,\n      last: last,\n      count: count\n    }\"\n  ></ng-container>\n\n  <ng-container *ngIf=\"tableTreeService.canShowChild(index) | async\">\n    <ng-template #treeLoadingTemplateRef>\n      <ng-container\n        [ngTemplateOutlet]=\"treeLoadingTemplate?.template || defaultTreeLoading\"\n        [ngTemplateOutletContext]=\"{\n          item: item,\n          parentIdx: index,\n          parentItem: item,\n          deepLevel: deepLevel,\n          first: first,\n          last: last,\n          count: count\n        }\"\n      >\n      </ng-container>\n      <ng-template #defaultTreeLoading>\n        <tr>\n          <td>Loading...</td>\n        </tr>\n      </ng-template>\n    </ng-template>\n\n    <ng-container\n      *ngIf=\"\n        row?.prizmRowGetChildren && item\n          | prizmCallFunc : $any(row?.prizmRowGetChildren)\n          | prizmCallFunc : sortChildren\n          | async as children;\n        else treeLoadingTemplateRef\n      \"\n    >\n      <ng-template\n        *ngFor=\"\n          let childItem of $any(children);\n          index as childIndex;\n          odd as childOdd;\n          even as childEven;\n          first as childFirst;\n          last as childLast;\n          count as childCount;\n          trackBy: $any(row?.prizmRowTrackBy)\n        \"\n        [template]=\"templateRowElement\"\n        [context]=\"\n          $any({\n            item: childItem,\n            rowIdx: childIndex,\n            parentIdx: index,\n            getRowId: $any(row?.prizmRowGetRowId),\n            parentItem: item,\n            deepLevel: (deepLevel ?? 0) + 1,\n            first: childFirst,\n            last: childLast,\n            count: childCount + count\n          })\n        \"\n        prizmTableRowInit\n      >\n      </ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-content select=\"[footer]\"></ng-content>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { PrizmTableCellStatus } from '../table.types';\nimport { PrizmTdService } from './td.service';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `th[prizmTd], td[prizmTd]`,\n  template: ` <ng-content></ng-content> `,\n  styleUrls: [`./td.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmTdComponent implements OnInit, OnDestroy {\n  @Input() @HostBinding('attr.status') public status: PrizmTableCellStatus = 'default';\n\n  @Input()\n  colspan!: string | number;\n\n  @HostBinding(`class._editable`)\n  @ContentChild(NgControl)\n  readonly control: unknown;\n\n  @HostBinding('attr.colspan')\n  get realColspan(): number | string {\n    return this.colspan ?? this.elementRef?.nativeElement?.getAttribute('colspan') ?? 1;\n  }\n\n  constructor(\n    private readonly tdService: PrizmTdService,\n    private readonly elementRef: ElementRef<HTMLTableCellElement>\n  ) {}\n\n  public ngOnInit(): void {\n    this.tdService.increment(parseInt(this.realColspan.toString(), 10));\n  }\n\n  public ngOnDestroy(): void {\n    this.tdService.decrement(parseInt(this.realColspan.toString(), 10));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Задача что prizmTh\n * */\n@Injectable()\nexport class PrizmThGroupService {}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport { prizmAutoEmit } from '@prizm-ui/core';\nimport { BehaviorSubject, concat, defer, Observable, of, timer } from 'rxjs';\nimport { map, mapTo, shareReplay, startWith, switchMap } from 'rxjs/operators';\n\nimport { PrizmHeadDirective } from '../directives/head.directive';\nimport { PrizmTableDirective } from '../directives/table.directive';\nimport { PRIZM_TABLE_PROVIDER } from '../providers/table.provider';\nimport { PrizmThComponent } from '../th/th.component';\nimport { moveInEventLoopIteration, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport { PrizmTableService } from '../table.service';\nimport { PrizmThGroupService } from './th-group.service';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `tr[prizmThGroup]`,\n  templateUrl: `./th-group.template.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PRIZM_TABLE_PROVIDER, PrizmThGroupService],\n})\nexport class PrizmThGroupComponent<T extends Partial<Record<keyof T, any>>>\n  implements OnInit, AfterContentInit, OnDestroy\n{\n  private readonly columns$$ = new BehaviorSubject<ReadonlyArray<keyof T | string> | null>(null);\n  @Input()\n  @prizmAutoEmit({\n    name: 'columns$$',\n  })\n  columns!: ReadonlyArray<keyof T | string>;\n\n  get cols$(): Observable<ReadonlyArray<keyof T | string>> {\n    return this.columns$$.pipe(\n      switchMap(currentCols => {\n        if (currentCols && Array.isArray(currentCols)) return of(currentCols);\n        return this.table.columns$;\n      })\n    );\n  }\n\n  @ContentChildren(forwardRef(() => PrizmThComponent), { descendants: true })\n  readonly th: QueryList<PrizmThComponent<T>> = prizmEmptyQueryList();\n\n  @ContentChildren(forwardRef(() => PrizmHeadDirective))\n  readonly heads: QueryList<PrizmHeadDirective<T>> = prizmEmptyQueryList();\n\n  heads$: Observable<PrizmHeadDirective<T>[]> | null = null;\n\n  groupStructure$!: Observable<{\n    cols: PrizmThComponent<T>[];\n    colspan: number;\n  }>;\n\n  constructor(\n    @Inject(forwardRef(() => PrizmTableDirective))\n    public readonly table: PrizmTableDirective<T>,\n    public readonly tableService: PrizmTableService,\n    @Self() public readonly thGroupService: PrizmThGroupService\n  ) {\n    this.tableService.addThGroup(this);\n  }\n\n  ngOnInit(): void {\n    this.groupStructure$ = concat(\n      defer(() => of(this.th.toArray())),\n      defer(() => this.th.changes.pipe(map(() => this.th.toArray())))\n    ).pipe(\n      map((cols: PrizmThComponent<T>[]) => {\n        const colspan = cols.reduce((acc, element) => acc + element.el.nativeElement.colSpan, 0);\n        return {\n          cols,\n          colspan,\n        };\n      }),\n      shareReplay(1)\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.heads$ = this.heads.changes.pipe(\n      startWith(null),\n      switchMap(() => this.cols$),\n      switchMap(cols => {\n        const heads = this.heads.toArray();\n        const columns = cols;\n\n        if (!columns || columns.length === 0) {\n          return of(heads);\n        }\n\n        // Display heads in order as specified by table's `column` property.\n        return concat(\n          of(new Array(columns.length).fill(null)),\n          of(columns.map(c => heads.find(h => h.prizmHead === c))).pipe(moveInEventLoopIteration(2))\n        );\n      })\n    ) as any;\n  }\n\n  ngOnDestroy(): void {\n    this.tableService.removeThGroup(this);\n  }\n}\n","<ng-content selector=\"th[prizmTh]\"></ng-content>\n<ng-container *ngIf=\"heads$ | async as headings\">\n  <ng-container *ngFor=\"let head of headings\">\n    <ng-container *ngIf=\"head?.template\" [ngTemplateOutlet]=\"head.template\"></ng-container>\n  </ng-container>\n</ng-container>\n","// TODO: 2.0 Remove export in ivy compilation\n\nimport { PRIZM_DAYS_IN_WEEK } from '../../@core/date-time/date-time';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PrizmDayOfWeek } from '../../@core/enums/day-of-week';\nimport { prizmInRange } from '../../util/math/in-range';\nimport { prizmAssert } from '@prizm-ui/core';\n\n/**\n * Computes day of week offset of the beginning of the month\n */\nexport const getMonthStartDaysOffset = (month: PrizmMonth, firstDayOfWeek: PrizmDayOfWeek): number => {\n  const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n\n  return startMonthOffsetFromSunday >= firstDayOfWeek\n    ? startMonthOffsetFromSunday - firstDayOfWeek\n    : PRIZM_DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n\n/*\nTODO: 2.0 delete:\n * PrizmDay.getDayFromMonthRowCol\n * PrizmMonth.monthStartDaysOffset\n * PrizmMonth.weeksRowsCount\n * PrizmYear.yearStartDaysOffset\n * PrizmYear.getYearStartDaysOffset\n */\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\nexport const getDayFromMonthRowCol = ({\n  month,\n  rowIndex,\n  colIndex,\n  firstDayOfWeek,\n}: {\n  month: PrizmMonth;\n  /**\n   * row in a calendar\n   */\n  rowIndex: number;\n  /**\n   * column in a calendar\n   */\n  colIndex: number;\n  /**\n   * first day of the week index (Sunday - 0, Saturday - 6)\n   */\n  firstDayOfWeek: PrizmDayOfWeek;\n}): PrizmDay => {\n  prizmAssert.assert(Number.isInteger(rowIndex));\n  prizmAssert.assert(prizmInRange(rowIndex, 0, 6));\n  prizmAssert.assert(Number.isInteger(colIndex));\n  prizmAssert.assert(prizmInRange(colIndex, 0, PRIZM_DAYS_IN_WEEK));\n\n  let day = rowIndex * PRIZM_DAYS_IN_WEEK + colIndex - getMonthStartDaysOffset(month, firstDayOfWeek) + 1;\n\n  if (day > month.daysCount) {\n    day = day - month.daysCount;\n    month = month.append({ month: 1 });\n  }\n\n  if (day <= 0) {\n    month = month.append({ month: -1 });\n    day = month.daysCount + day;\n  }\n\n  return new PrizmDay(month.year, month.month, day);\n};\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { PRIZM_DAYS_IN_WEEK } from '../../@core/date-time/date-time';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PrizmDayOfWeek } from '../../@core/enums/day-of-week';\nimport { PRIZM_FIRST_DAY_OF_WEEK } from '../../tokens/first-day-of-week';\n\nimport { getDayFromMonthRowCol } from './utils';\n\nconst CALENDAR_ROWS_COUNT = 6;\n\n@Pipe({\n  name: `prizmCalendarSheet`,\n})\nexport class PrizmCalendarSheetPipe implements PipeTransform {\n  private currentMonth: PrizmMonth | null = null;\n  private currentSheet: ReadonlyArray<readonly PrizmDay[]> = [];\n\n  constructor(\n    @Inject(PRIZM_FIRST_DAY_OF_WEEK)\n    private readonly firstDayOfWeek: PrizmDayOfWeek\n  ) {}\n\n  public transform(month: PrizmMonth, showAdjacentDays = false): ReadonlyArray<readonly PrizmDay[]> {\n    if (this.currentMonth?.monthSame(month)) {\n      return this.currentSheet;\n    }\n\n    const sheet: Array<readonly PrizmDay[]> = [];\n\n    for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n      const row: PrizmDay[] = [];\n\n      for (let colIndex = 0; colIndex < PRIZM_DAYS_IN_WEEK; colIndex++) {\n        const day = getDayFromMonthRowCol({\n          month,\n          rowIndex,\n          colIndex,\n          firstDayOfWeek: this.firstDayOfWeek,\n        });\n\n        const isPrevMonthDay = (day: PrizmDay, relativeToMonth = month): boolean =>\n          day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n\n        const isNextMonthDay = (day: PrizmDay, relativeToMonth = month): boolean =>\n          day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n\n        if (isPrevMonthDay(day) && !showAdjacentDays) {\n          continue;\n        }\n\n        if (isNextMonthDay(day) && !showAdjacentDays) {\n          break;\n        }\n\n        row.push(day);\n      }\n\n      sheet.push(row);\n    }\n\n    this.currentSheet = sheet.filter(row => row.length);\n    this.currentMonth = month;\n\n    return this.currentSheet;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmCalendarSheetPipe } from './calendar-sheet.pipe';\n\n@NgModule({\n  declarations: [PrizmCalendarSheetPipe],\n  exports: [PrizmCalendarSheetPipe],\n})\nexport class PrizmCalendarSheetPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PrizmMapper } from '../../types/mapper';\n\n@Pipe({ name: `prizmMapper` })\nexport class PrizmMapperPipe implements PipeTransform {\n  /**\n   * Maps object to an arbitrary result through a mapper function\n   *\n   * @param value an item to transform\n   * @param mapper a mapping function\n   * @param args arbitrary number of additional arguments\n   */\n  public transform<T, G>(value: T, mapper: PrizmMapper<T, G>, ...args: unknown[]): G {\n    return mapper(value, ...args);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmMapperPipe } from './mapper.pipe';\n\n@NgModule({\n  exports: [PrizmMapperPipe],\n  declarations: [PrizmMapperPipe],\n})\nexport class PrizmMapperPipeModule {}\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PRIZM_MONTHS } from '../../tokens/i18n';\n\n@Pipe({ name: `prizmMonth` })\nexport class PrizmMonthPipe implements PipeTransform {\n  constructor(@Inject(PRIZM_MONTHS) private readonly months$: Observable<string[]>) {}\n\n  public transform({ month }: PrizmMonth): Observable<string> {\n    return this.months$.pipe(map(months => months[month]));\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmMonthPipe } from './month.pipe';\n\n@NgModule({\n  exports: [PrizmMonthPipe],\n  declarations: [PrizmMonthPipe],\n})\nexport class PrizmMonthPipeModule {}\n","import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\n\n/**\n * @deprecated since 3.8.0\n */\n\n@Component({\n  selector: 'prizm-searchable-content',\n  templateUrl: './searchable-content.component.html',\n  styleUrls: ['./searchable-content.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchableContentComponent {\n  @Input() public searchString: string | null = null;\n  @Input() public contentString: string | null = null;\n  @HostBinding('attr.focused') @Input() public focused = false;\n\n  get content(): { substr: string; marked: boolean }[] {\n    const markedString: { substr: string; marked: boolean }[] = [];\n\n    if (this.searchString && this.contentString) {\n      let pos = 0;\n      const contentStringLower = this.contentString.toLowerCase();\n      const searchStringLower = this.searchString.toLowerCase();\n\n      let prevFoundPosEnd = 0;\n      let foundPos = -2;\n\n      while (foundPos !== -1) {\n        foundPos = contentStringLower.indexOf(searchStringLower, pos);\n        if (foundPos == -1) {\n          const sliceStartIdx = pos > prevFoundPosEnd ? pos : prevFoundPosEnd;\n          markedString.push({ substr: this.contentString.slice(sliceStartIdx), marked: false });\n          break;\n        } else {\n          if (prevFoundPosEnd === foundPos) {\n            const slice = this.contentString.slice(pos, pos + this.searchString.length);\n            markedString.push({ substr: slice, marked: true });\n          } else {\n            const slice1 = this.contentString.slice(prevFoundPosEnd, foundPos);\n            const slice2 = this.contentString.slice(foundPos, foundPos + this.searchString.length);\n\n            markedString.push({ substr: slice1, marked: false }, { substr: slice2, marked: true });\n          }\n          prevFoundPosEnd = foundPos + this.searchString.length;\n        }\n        pos = foundPos + 1;\n      }\n    }\n    return markedString.length > 0 ? markedString : [{ substr: this.contentString as string, marked: false }];\n  }\n}\n","<span *ngFor=\"let item of content\" [class.marked]=\"item?.marked\">{{ item.substr }}</span>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PolymorphContent } from '../../directives/polymorph/types/content';\n\n@Component({\n  selector: `prizm-tree-button`,\n  templateUrl: `./tree-button.component.html`,\n  styleUrls: [`./tree-button.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'prizmTreeButton',\n})\nexport class PrizmTreeButtonComponent<T extends Partial<Record<keyof T, any>>> {\n  @Input()\n  @prizmDefaultProp()\n  icon: PolymorphContent = ``;\n\n  @Input()\n  @prizmDefaultProp()\n  open = false;\n\n  @Input()\n  @prizmDefaultProp()\n  manualChange = false;\n\n  @Input()\n  @prizmDefaultProp()\n  removeIcon = false;\n\n  @Input()\n  @prizmDefaultProp()\n  visibilityIcon = true;\n\n  @Input()\n  @prizmDefaultProp()\n  iconOpen: PolymorphContent<{ size: number }> = 'chevrons-down';\n\n  @Input()\n  @prizmDefaultProp()\n  iconClose: PolymorphContent<{ size: number }> = 'chevrons-right';\n\n  @Input()\n  @prizmDefaultProp()\n  level = 0;\n\n  @Input()\n  @prizmDefaultProp()\n  size = 16;\n\n  @Input()\n  @prizmDefaultProp()\n  factor = 6;\n\n  get space(): string {\n    return new Array(this.level * this.factor).fill('&nbsp;').join('');\n  }\n\n  @Output()\n  readonly openChange = new EventEmitter<boolean>();\n\n  public changeOpenState(open: boolean): void {\n    this.open = open;\n    this.openChange.emit(this.open);\n  }\n\n  public toggle(): void {\n    this.open = !this.open;\n    this.openChange.emit(this.open);\n  }\n}\n","<span [innerHTML]=\"space\"></span>\n<span *ngIf=\"!removeIcon\" [ngSwitch]=\"open\" [class.hide]=\"!visibilityIcon\">\n  <span *ngSwitchCase=\"true\" (click)=\"!manualChange && changeOpenState(false)\">\n    <ng-container *polymorphOutlet=\"iconOpen as icon; context: { size: this.size }\">\n      <prizm-icon [iconClass]=\"$any(icon)\" [size]=\"size\"></prizm-icon>\n    </ng-container>\n  </span>\n  <span *ngSwitchDefault (click)=\"!manualChange && changeOpenState(true)\">\n    <ng-container *polymorphOutlet=\"iconClose as icon; context: { size: this.size }\">\n      <prizm-icon [iconClass]=\"$any(icon)\" [size]=\"size\"></prizm-icon>\n    </ng-container>\n  </span>\n</span>\n<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmTreeButtonComponent } from './tree-button.component';\nimport { PrizmIconModule } from '../icon/icon.module';\nimport { PolymorphModule } from '../../directives/polymorph/polymorph.module';\n\n@NgModule({\n  declarations: [PrizmTreeButtonComponent],\n  imports: [PolymorphModule, PrizmIconModule, CommonModule],\n  exports: [PrizmTreeButtonComponent],\n})\nexport class PrizmTreeButtonModule {}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmCellDirective } from './directives/cell.directive';\nimport { PrizmHeadDirective } from './directives/head.directive';\nimport { PrizmResizedDirective } from './directives/resized.directive';\nimport { PrizmRowDirective } from './directives/row.directive';\nimport { PrizmSortByDirective } from './directives/sort-by.directive';\nimport { PrizmSortableDirective } from './directives/sortable.directive';\nimport { PrizmTableDirective } from './directives/table.directive';\nimport { PrizmTheadDirective } from './directives/thead.directive';\nimport { PrizmTableSortPipe } from './pipes/table-sort.pipe';\nimport { PrizmTbodyComponent } from './tbody/tbody.component';\nimport { PrizmTdComponent } from './td/td.component';\nimport { PrizmThComponent } from './th/th.component';\nimport { PrizmThGroupComponent } from './th-group/th-group.component';\nimport { PrizmTrComponent } from './tr/tr.component';\nimport { PrizmMapperPipeModule } from '../../pipes';\nimport { PolymorphModule } from '../../directives';\nimport { PrizmIconModule } from '../icon';\nimport { SearchableContentComponent } from './components/searchable-content/searchable-content.component';\nimport { SpaceNumberPipe } from './pipes/space-number.pipe';\nimport { PrizmCallFuncModule } from '@prizm-ui/helpers';\nimport { PrizmTreeButtonModule } from '../tree-button/tree-button.module';\nimport { PrizmTableTreeLoadingDirective } from './directives/tree-loading.directive';\nimport { PrizmTableLoadingDirective } from './directives/loading.directive';\nimport { PrizmTableEmptyDirective } from './directives/empty.directive';\nimport { PrizmTableRowInitDirective } from './directives/row-init.directive';\nimport { PrizmTrDirective } from './tr/tr.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmTreeButtonModule,\n    PrizmCallFuncModule,\n    PrizmMapperPipeModule,\n    PolymorphModule,\n    PrizmIconModule,\n  ],\n  declarations: [\n    PrizmTableTreeLoadingDirective,\n    PrizmTableLoadingDirective,\n    PrizmTableEmptyDirective,\n    PrizmTableDirective,\n    PrizmTbodyComponent,\n    PrizmThGroupComponent,\n    PrizmThComponent,\n    PrizmTdComponent,\n    PrizmTrComponent,\n    PrizmCellDirective,\n    PrizmHeadDirective,\n    PrizmRowDirective,\n    PrizmTableRowInitDirective,\n    PrizmSortByDirective,\n    PrizmSortableDirective,\n    PrizmTheadDirective,\n    PrizmResizedDirective,\n    PrizmTableSortPipe,\n    SearchableContentComponent,\n    SpaceNumberPipe,\n    PrizmTrDirective,\n  ],\n  exports: [\n    PrizmTableLoadingDirective,\n    PrizmTableEmptyDirective,\n    PrizmTrDirective,\n    PrizmTreeButtonModule,\n    PrizmTableTreeLoadingDirective,\n    PrizmTableDirective,\n    PrizmTbodyComponent,\n    PrizmThGroupComponent,\n    PrizmThComponent,\n    PrizmTdComponent,\n    PrizmTrComponent,\n    PrizmCellDirective,\n    PrizmHeadDirective,\n    PrizmRowDirective,\n    PrizmSortByDirective,\n    PrizmSortableDirective,\n    PrizmTheadDirective,\n    PrizmTableSortPipe,\n    SearchableContentComponent,\n    SpaceNumberPipe,\n  ],\n  providers: [DecimalPipe],\n})\nexport class PrizmTableModule {}\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, combineLatest, merge, Observable, of, Subject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * The sorter that holds the current sort state (direction, columns) and able to sort data.\n */\ninterface PrizmSorter<T = unknown> {\n  readonly changes$: Observable<any>;\n  sort(data: T[]): T[];\n}\n\n/**\n * Interface that matches the required API parts for the `PrizmPaginatorOutput`.\n *\n * Decoupled so that users can depend on their own implementation.\n */\nexport interface PrizmTableDataSourcePageEvent {\n  page: number;\n  rows: number;\n}\n\n/**\n * Interface that matches the required API parts of the `PrizmPaginatorComponent`.\n *\n * Decoupled so that users can depend on their own implementation.\n */\nexport interface PrizmTableDataSourcePaginator {\n  paginatorChange: Observable<PrizmTableDataSourcePageEvent>;\n  /**\n   * 1-based index of the currently viewed page.\n   */\n  currentPage: number;\n  rows: number;\n  totalRecords: number;\n  initialized?: Observable<void>;\n}\n\ntype FilterPredicate<T> = (o: T, index: number) => boolean;\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting, and pagination.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nexport class PrizmTableDataSource<\n  T,\n  P extends PrizmTableDataSourcePaginator = PrizmTableDataSourcePaginator\n> extends DataSource<T> {\n  /** Stream that emits when a new data array is set on the data source. */\n  private readonly _data: BehaviorSubject<T[]>;\n\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  private readonly _renderData = new BehaviorSubject<T[]>([]);\n\n  /** Stream that emits when a new filter is set on the data source. */\n  private readonly _filter = new BehaviorSubject<FilterPredicate<T> | null>(null);\n\n  /** Used to react to internal changes of the paginator that are made by the data source itself. */\n  private readonly _internalPageChanges = new Subject<void>();\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  private _renderChangesSubscription: Subscription | null = null;\n\n  /**\n   * The filtered set of data, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData!: T[];\n\n  /** Array of data that should be handled by the table, where each object represents one row. */\n  get data(): T[] {\n    return this._data.value;\n  }\n\n  set data(data: T[]) {\n    data = Array.isArray(data) ? data : [];\n    this._data.next(data);\n\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n\n  /**\n   * Filter predicate that should be used to filter out objects from the data array.\n   */\n  get filter(): FilterPredicate<T> | null {\n    return this._filter.value;\n  }\n\n  set filter(filter: FilterPredicate<T> | null) {\n    this._filter.next(filter);\n\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n\n  /**\n   * The connected sorter that holds the current sort state and able to sort data.\n   *\n   * Sort changes (see {@link PrizmSorter.changes$}) emitted by the sorter will trigger an update to the table's rendered data.\n   */\n  get sorter(): PrizmSorter<T> | null {\n    return this._sorter;\n  }\n\n  set sorter(sorter: PrizmSorter<T> | null) {\n    this._sorter = sorter;\n    this._updateChangeSubscription();\n  }\n\n  private _sorter!: PrizmSorter<T> | null;\n\n  /**\n   * Instance of the paginator used by the table to control what page of the data is\n   * displayed. Page changes (see {@link PrizmTableDataSourcePaginator.paginatorChange}) emitted by the paginator\n   * will trigger an update to the table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * then be sure that the paginator's view has been initialized before assigning it to this data source.\n   */\n  get paginator(): P | null {\n    return this._paginator;\n  }\n\n  set paginator(paginator: P | null) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n\n  private _paginator!: P | null;\n\n  constructor(initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this._updateChangeSubscription();\n  }\n\n  /**\n   * Connects to the data source.\n   *\n   * @returns Observable that emits a new value when the `data` changes.\n   */\n  public connect(): Observable<T[]> {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n\n    return this._renderData;\n  }\n\n  /**\n   * Disconnects from the data source.\n   */\n  public disconnect(): void {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  private _updateChangeSubscription(): void {\n    // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange: Observable<void> = this._sorter\n      ? merge(\n          this._sorter.changes$,\n          of(null) // TODO this._sorter.initialized\n        )\n      : of(null);\n    const pageChange: Observable<PrizmTableDataSourcePageEvent | null | void> = this._paginator\n      ? (merge(\n          this._paginator.paginatorChange,\n          this._internalPageChanges,\n          this._paginator.initialized ?? of(null)\n        ) as Observable<PrizmTableDataSourcePageEvent | void>)\n      : of(null);\n    const dataStream = this._data;\n\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(\n      map(([data]) => this._filterData(data))\n    );\n\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(\n      map(([data]) => this._orderData(data))\n    );\n\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(\n      map(([data]) => this._pageData(data))\n    );\n\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n\n  /**\n   * Returns a filtered data array where each filter object meet the condition specified by the {@link filter} predicate.\n   * If no filter is set, returns the data array as is.\n   */\n  private _filterData(data: T[]): T[] {\n    this.filteredData = typeof this.filter === 'function' ? data.filter(this.filter) : data;\n\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n\n    return this.filteredData;\n  }\n\n  /**\n   * Returns a sorted copy of the data if sorter is provided, otherwise just returns the data array as is.\n   *\n   * Called after changes are made to the filtered data or when sort changes are emitted from `PrizmSorter`.\n   * @param data The array of data that should be sorted.\n   * @param sorter The connected sorter that holds the current sort state and able to sort data.\n   */\n  private _orderData(data: T[]): T[] {\n    // If there is no sorter, return the data without trying to sort.\n    if (!this.sorter) {\n      return data;\n    }\n\n    return this.sorter.sort(data.slice());\n  }\n\n  /**\n   * Returns a paged slice of the provided data array according to the provided paginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  private _pageData(data: T[]): T[] {\n    if (!this.paginator) {\n      return data;\n    }\n\n    const startIndex = (this.paginator.currentPage - 1) * this.paginator.rows;\n    return data.slice(startIndex, startIndex + this.paginator.rows);\n  }\n\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in async manner to\n   * guard against making property changes within a round of change detection.\n   */\n  private _updatePaginator(filteredDataLength: number): void {\n    queueMicrotask(() => {\n      const paginator = this.paginator;\n\n      if (!paginator) {\n        return;\n      }\n\n      paginator.totalRecords = filteredDataLength;\n\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.currentPage > 1) {\n        const lastPageIndex = Math.ceil(paginator.totalRecords / paginator.rows);\n        const newPageIndex = Math.min(paginator.currentPage, lastPageIndex);\n\n        if (newPageIndex !== paginator.currentPage) {\n          paginator.currentPage = newPageIndex;\n\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\n\nexport abstract class PrizmAccessorImplClass extends PrizmAbstractTestId implements ControlValueAccessor {\n  public accessorValue: unknown;\n  public accessorOnChangeFn!: (_: unknown) => unknown;\n  public accessorOnTouchedFn!: VoidFunction;\n  public accessorIsDisabled!: boolean;\n\n  public writeValue(obj: unknown): void {\n    this.accessorValue = obj;\n  }\n\n  public registerOnChange(fn: (_: unknown) => unknown): void {\n    this.accessorOnChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: VoidFunction): void {\n    this.accessorOnTouchedFn = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.accessorIsDisabled = isDisabled;\n  }\n}\n","import { Directive, Injector, Optional, Self } from '@angular/core';\nimport { UntypedFormControl, NgControl } from '@angular/forms';\nimport { PrizmAccessorImplClass } from './prizm-accessor-impl.class';\n\n@Directive()\nexport abstract class PrizmWrappedFormComponent extends PrizmAccessorImplClass {\n  public readonly formControl: UntypedFormControl = new UntypedFormControl();\n\n  constructor(public readonly injector: Injector, @Optional() @Self() public readonly ngControl: NgControl) {\n    super();\n\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n      this.formControl = ngControl.control as UntypedFormControl;\n    }\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.formControl.disable({ emitEvent: false });\n    } else {\n      this.formControl.enable({ emitEvent: false });\n    }\n    super.setDisabledState(this.accessorIsDisabled);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PrizmWrappedFormComponent } from '../../@core/value-accessor/prizm-wrapped-form-component.directive';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'prizm-radio-button',\n  templateUrl: './prizm-radio-button.component.html',\n  styleUrls: ['./prizm-radio-button.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [NgIf, ReactiveFormsModule],\n})\nexport class PrizmRadioButtonComponent extends PrizmWrappedFormComponent {\n  @Input()\n  @HostBinding('attr.radio-size')\n  size: 's' | 'm' | 'l' = 'm';\n\n  @HostBinding('attr.disabled') get isDisabled(): boolean {\n    return this.accessorIsDisabled;\n  }\n\n  @Input() value: unknown;\n  @Input() name!: string;\n  @Input() public label: string | null = null;\n  @Input() set disabled(isDisabled: boolean) {\n    this.accessorIsDisabled = isDisabled;\n  }\n  @Output() public clickEvent: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() changeEvent: EventEmitter<Event> = new EventEmitter();\n  @Output() public focusEvent: EventEmitter<FocusEvent> = new EventEmitter();\n  @Output() public focusOutEvent: EventEmitter<FocusEvent> = new EventEmitter();\n  @Output() public blurEvent: EventEmitter<FocusEvent> = new EventEmitter();\n\n  override readonly testId_ = 'ui_radio_button';\n\n  public onClickEventHandler(event: MouseEvent): void {\n    if (!this.accessorIsDisabled) {\n      this.clickEvent.emit(event);\n    }\n  }\n\n  public onFocusEventHandler(event: FocusEvent): void {\n    if (!this.accessorIsDisabled) {\n      this.focusEvent.emit(event);\n    }\n  }\n\n  public onFocusOutEventHandler(event: FocusEvent): void {\n    if (!this.accessorIsDisabled) {\n      this.focusOutEvent.emit(event);\n    }\n  }\n\n  public onChangeEventHandler(event: Event): void {\n    if (!this.accessorIsDisabled) {\n      this.changeEvent.emit(event);\n    }\n  }\n\n  public onBlurEventHandler(event: FocusEvent): void {\n    if (!this.accessorIsDisabled) {\n      this.blurEvent.emit(event);\n    }\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","<div class=\"container\" [class.disabled]=\"accessorIsDisabled\">\n  <label class=\"label\">\n    <input\n      class=\"native-radio-button\"\n      [formControl]=\"ngControl ? $any(ngControl.control) : formControl\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [id]=\"value\"\n      (click)=\"onClickEventHandler($event)\"\n      (change)=\"onChangeEventHandler($event)\"\n      (focus)=\"onFocusEventHandler($event)\"\n      (blur)=\"onBlurEventHandler($event)\"\n      (focusout)=\"onFocusOutEventHandler($event)\"\n      type=\"radio\"\n    />\n\n    <div class=\"radio-button\">\n      <div class=\"radio-button__mark\"></div>\n    </div>\n    <span class=\"title\" *ngIf=\"!!label\"> {{ label }}</span>\n  </label>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmRadioButtonComponent } from './prizm-radio-button.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmRadioButtonComponent],\n  exports: [PrizmRadioButtonComponent],\n})\nexport class PrizmRadioButtonModule {}\n","import { Injectable } from '@angular/core';\nimport { PrizmInputControl } from '../base';\n\n/**\n * Default class for input validation texts\n */\n@Injectable()\nexport class PrizmInputValidationTexts {\n  private readonly invalidTextMap = new Map<string, string>([\n    ['required', 'Обязательное поле'],\n    ['pattern', 'Неправильный формат'],\n    ['min', 'Значение слишком маленькое'],\n    ['max', 'Значение слишком большое'],\n  ]);\n\n  public getText(key: string, control?: PrizmInputControl<unknown>): string | undefined {\n    return this.invalidTextMap.get(key);\n  }\n}\n","import { ChangeDetectorRef, Directive, Injector, Input, OnInit } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { PrizmInputControl } from './input-control.class';\nimport { PrizmInputValidationTexts } from '../services/input-invalid-subtext.service';\n\n@Directive()\nexport abstract class InputInvalidTextBaseClass {\n  /**\n   * Gets invalid text\n   */\n  public abstract getText(firstInvalidKey: string, control?: PrizmInputControl<unknown>): string;\n}\n\n@Directive()\nexport class DefaultInputInvalidTextClass extends InputInvalidTextBaseClass implements OnInit {\n  @Input() control?: PrizmInputControl<unknown>;\n\n  public invalidText!: string;\n\n  private readonly cdr: ChangeDetectorRef = this.injector.get(ChangeDetectorRef);\n  private readonly destroy$: PrizmDestroyService = this.injector.get(PrizmDestroyService);\n  private readonly validationTexts: PrizmInputValidationTexts;\n\n  constructor(protected readonly injector: Injector) {\n    super();\n\n    this.validationTexts = injector.get(PrizmInputValidationTexts, new PrizmInputValidationTexts());\n  }\n\n  ngOnInit(): void {\n    this.actualizeText();\n\n    this.control?.stateChanges.pipe(debounceTime(0), takeUntil(this.destroy$)).subscribe(() => {\n      this.actualizeText();\n    });\n  }\n\n  public getText(firstInvalidKey: string): string {\n    return firstInvalidKey && (this.validationTexts.getText(firstInvalidKey, this.control) as any);\n  }\n\n  private actualizeText(): void {\n    // By default show only touched\n    if (!this.control?.touched) return;\n\n    const errors = this.control.ngControl?.errors || {};\n\n    const firstInvalidKey = Object.keys(errors)?.[0];\n    const errorText = this.getText(firstInvalidKey);\n\n    if (this.invalidText !== errorText) {\n      this.setInvalidText(errorText);\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  protected setInvalidText(text: string): void {\n    this.invalidText = text;\n  }\n}\n","import { Component, ChangeDetectionStrategy, Injector } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { DefaultInputInvalidTextClass } from '../base/input-invalid-text-base-class.directive';\n\n@Component({\n  selector: 'prizm-input-status-subtext',\n  templateUrl: './input-status-subtext.component.html',\n  styleUrls: ['./input-status-subtext.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputStatusSubtextComponent extends DefaultInputInvalidTextClass {\n  constructor(injector: Injector) {\n    super(injector);\n  }\n}\n","{{ invalidText }}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmInputLayoutBottom]',\n})\nexport class PrizmInputLayoutBottomDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>, public readonly view: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    this.view.clear();\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmInputLayoutInBody]',\n})\nexport class PrizmInputLayoutInBodyDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>, public readonly view: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    this.view.clear();\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmInputLayoutLeft]',\n})\nexport class PrizmInputLayoutLeftDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>, public readonly view: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    this.view.clear();\n  }\n}\n","import { Directive, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmInputLayoutRight]',\n})\nexport class PrizmInputLayoutRightDirective implements OnDestroy {\n  constructor(public readonly templateRef: TemplateRef<unknown>, public readonly view: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    this.view.clear();\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmInputLayoutSubtext]',\n})\nexport class PrizmInputLayoutSubtextDirective {\n  constructor(public readonly templateRef: TemplateRef<unknown>, public readonly view: ViewContainerRef) {}\n\n  ngOnDestroy() {\n    this.view.clear();\n  }\n}\n","import { Directive, DoCheck, ViewChild } from '@angular/core';\nimport { AbstractControlDirective, NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { PrizmInputLayoutBottomDirective } from '../input-layout/input-layout-bottom.directive';\nimport { PrizmInputLayoutInBodyDirective } from '../input-layout/input-layout-in-body.directive';\nimport { PrizmInputLayoutLeftDirective } from '../input-layout/input-layout-left.directive';\nimport { PrizmInputLayoutRightDirective } from '../input-layout/input-layout-right.directive';\nimport { PrizmInputLayoutSubtextDirective } from '../input-layout/input-layout-subtext.directive';\nimport { PrizmInputStatusTextDirective } from '../input-status-text/input-status-text.directive';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\n@Directive()\nexport abstract class PrizmInputControl<T> extends PrizmAbstractTestId implements DoCheck {\n  // @ViewChild(PrizmInputStatusTextDirective, { static: true })\n  statusText?: PrizmInputStatusTextDirective;\n\n  @ViewChild(PrizmInputLayoutBottomDirective)\n  public layoutBottom!: PrizmInputLayoutBottomDirective | null;\n\n  @ViewChild(PrizmInputLayoutInBodyDirective)\n  public layoutInBody!: PrizmInputLayoutInBodyDirective | null;\n\n  @ViewChild(PrizmInputLayoutLeftDirective)\n  public layoutLeft!: PrizmInputLayoutLeftDirective | null;\n\n  @ViewChild(PrizmInputLayoutRightDirective)\n  public layoutRight!: PrizmInputLayoutRightDirective | null;\n\n  @ViewChild(PrizmInputLayoutSubtextDirective)\n  public layoutSubtext: PrizmInputLayoutSubtextDirective | null = null;\n\n  public defaultLabel!: string;\n  protected readonly lastSyncedState: {\n    touched: boolean | null;\n    pristine: boolean | null;\n  } = {\n    touched: null,\n    pristine: null,\n  };\n  /** The value of the control. */\n  abstract value: T | null;\n\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  abstract readonly empty: boolean | Observable<boolean>;\n\n  /** Gets the AbstractControlDirective for this control. */\n  abstract readonly ngControl: NgControl | AbstractControlDirective | null;\n\n  /** Whether the control is required. */\n  abstract readonly required: boolean | Observable<boolean>;\n\n  /** Whether the control is disabled. */\n  abstract readonly disabled: boolean | Observable<boolean>;\n\n  /** Whether the control is required. */\n  abstract readonly focused: boolean | Observable<boolean>;\n\n  /** Whether the control is validity. */\n  abstract readonly invalid: boolean | Observable<boolean>;\n\n  /** Whether the control is validity. */\n  abstract readonly touched: boolean | Observable<boolean>;\n\n  abstract nativeElementType: string | undefined;\n\n  abstract hasClearButton: boolean;\n  hidden = false;\n  public abstract clear(ev: MouseEvent): void;\n\n  ngDoCheck(): void {\n    this.updateLayoutOnTouched();\n  }\n\n  private updateLayoutOnTouched(): void {\n    if (\n      this.ngControl &&\n      (this.ngControl.pristine !== this.lastSyncedState.pristine ||\n        this.ngControl.touched !== this.lastSyncedState.touched)\n    ) {\n      this.lastSyncedState.touched = this.ngControl.touched;\n      this.lastSyncedState.pristine = this.ngControl.pristine;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { Directive, Injector, Input, TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { DefaultInputInvalidTextClass } from '../base/input-invalid-text-base-class.directive';\nimport { PolymorphContent } from '../../../../directives/polymorph';\nimport { PrizmInputStatus } from '../models/prizm-input.models';\n\n@Directive({\n  selector: '[prizmInputStatusText]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputStatusTextDirective extends DefaultInputInvalidTextClass {\n  @Input() enable = true;\n  @Input() status?: PrizmInputStatus;\n  public templateRef: TemplateRef<any>;\n  public readonly changed: Subject<void> = new Subject<void>();\n\n  constructor(injector: Injector) {\n    super(injector);\n\n    this.templateRef = injector.get(TemplateRef);\n  }\n\n  protected override setInvalidText(text: string): void {\n    super.setInvalidText(text);\n\n    this.changed.next();\n  }\n\n  public getStatusMessage(): PolymorphContent {\n    return this.invalidText || this.templateRef;\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'button[prizmInputIconButton]',\n  templateUrl: './input-icon-button.component.html',\n  styleUrls: ['./input-icon-button.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.interactive]': 'interactive',\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class PrizmInputIconButtonComponent extends PrizmAbstractTestId {\n  @Input() size = 16;\n  @Input() prizmInputIconButton!: string;\n  @Input() interactive = false;\n\n  @HostBinding('class.disabled')\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n  @Input()\n  @HostBinding('attr.type')\n  type: 'button' | 'reset' | 'submit' = 'button';\n\n  override readonly testId_ = 'ui_input_icon_button';\n\n  get tabindex(): number {\n    return this.interactive ? 0 : -1;\n  }\n}\n","<prizm-icon [iconClass]=\"prizmInputIconButton\" [size]=\"size\"></prizm-icon>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, EMPTY, merge, Subject, timer } from 'rxjs';\nimport { PrizmInputControl } from '../base/input-control.class';\nimport { PrizmInputStatusTextDirective } from '../input-status-text/input-status-text.directive';\nimport { PrizmInputPosition, PrizmInputSize, PrizmInputStatus } from '../models/prizm-input.models';\nimport { debounceTime, map, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { isPolymorphPrimitive, PolymorphComponent, PolymorphContent } from '../../../../directives/polymorph';\nimport { Compare, filterTruthy, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\nexport type PrizmInputLayoutClearButtonContext = {\n  clear: (event: MouseEvent) => void;\n  disabled: boolean;\n  showStatusButton: boolean;\n};\n\n@Component({\n  selector: 'prizm-input-layout',\n  templateUrl: './input-layout.component.html',\n  styleUrls: [\n    './input-layout.component.less',\n    './input-layout-hidden-control.component.less',\n    './input-layout-textarea.component.less',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: 'prizm-input-layout',\n  },\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputLayoutComponent\n  extends PrizmAbstractTestId\n  implements OnInit, OnChanges, AfterViewInit\n{\n  @Input() set label(val: string | null) {\n    this.label$.next(val);\n  }\n  get label(): string {\n    return this.label$.value as string;\n  }\n\n  @Input() size: PrizmInputSize = 'l';\n\n  @Input() status: PrizmInputStatus = 'default';\n\n  @Input() outer = false;\n\n  @Input() clearButton: PolymorphContent<PrizmInputLayoutClearButtonContext> = 'cancel-delete-content';\n\n  @Input() border = true;\n  @Input() position: PrizmInputPosition = 'left';\n  @Input() forceClear: boolean | null = null;\n  @Output() clear = new EventEmitter<MouseEvent>();\n\n  @ViewChild(PrizmLetDirective) letDirective!: PrizmLetDirective<{\n    focused: boolean;\n    disabled: boolean;\n    empty: boolean;\n    touched: boolean;\n    invalid: boolean;\n    required: boolean;\n  }>;\n\n  @HostBinding('class.has-hidden-control') get hasHiddenControl() {\n    return this.control.hidden;\n  }\n\n  @HostBinding('class.has-textarea') get hasTextarea() {\n    return this.control.nativeElementType === 'textarea';\n  }\n\n  override testId_ = 'ui_input_layout';\n  protected readonly isPolymorphPrimitive = isPolymorphPrimitive;\n\n  public readonly label$ = new BehaviorSubject<string | null>(null);\n  get showClearButton(): boolean {\n    if (this.disabled) return false;\n    return typeof this.forceClear === 'boolean'\n      ? this.forceClear\n      : this.control.hasClearButton &&\n          !this.letDirective?.context?.disabled &&\n          !this.letDirective?.context?.empty;\n  }\n\n  @ContentChild(PrizmInputControl, { static: true }) control!: PrizmInputControl<any>;\n  @ContentChild(PrizmInputStatusTextDirective, { static: false })\n  inputStatusText!: PrizmInputStatusTextDirective;\n\n  public statusIcon!: string;\n  public statusMessage!: PolymorphContent | null;\n\n  @HostBinding('class.disabled') get disabled() {\n    return this.letDirective?.context?.disabled;\n  }\n  @HostBinding('class.enabled') get enabled() {\n    return !this.letDirective?.context?.disabled;\n  }\n  private readonly innerClick$$ = new Subject<MouseEvent>();\n  public readonly innerClick$ = this.innerClick$$.asObservable();\n\n  public readonly cdr: ChangeDetectorRef = this.injector.get(ChangeDetectorRef);\n  private readonly destroy$: PrizmDestroyService = this.injector.get(PrizmDestroyService);\n\n  private foundStatusDirective!: PrizmInputStatusTextDirective;\n  public readonly changes$ = new Subject<void>();\n  get correctedStatus() {\n    return this.foundStatusDirective?.status && this.foundStatusDirective.enable\n      ? this.foundStatusDirective.status\n      : this.status;\n  }\n\n  get emptyLabel() {\n    return !this.label?.replace(/[ ]+/, '');\n  }\n\n  get showStatusButton(): boolean {\n    return Boolean(\n      this.status !== 'default' ||\n        (this.letDirective?.context?.invalid && this.letDirective?.context?.touched)\n    );\n  }\n\n  readonly onClearClick = (event: MouseEvent) => {\n    this.clear.next(event);\n    this.control.clear(event);\n    this.actualizeStatusIcon();\n  };\n\n  constructor(private readonly injector: Injector, public readonly el: ElementRef<HTMLElement>) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.control.stateChanges\n      .pipe(\n        debounceTime(10),\n        tap(() => {\n          this.actualizeStatusIcon();\n          this.cdr.detectChanges();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.actualizeStatusIcon();\n\n    if (this.control.defaultLabel && Compare.isNullish(this.label)) {\n      this.label$.next(this.control.defaultLabel);\n    }\n\n    merge(this.inputStatusText ? this.inputStatusText.changed.pipe(map(() => this.inputStatusText)) : EMPTY)\n      .pipe(\n        startWith(this.inputStatusText),\n        map(i => i ?? this.control.statusText),\n        filterTruthy(),\n        tap(text => {\n          this.foundStatusDirective = text;\n          this.statusMessage = text.getStatusMessage();\n          this.actualizeStatusIcon();\n          this.cdr.detectChanges();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    // NEED for get view children from nested controll\n    timer(0)\n      .pipe(\n        tap(() => this.cdr.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.status) {\n      this.actualizeStatusIcon();\n    }\n    this.changes$.next();\n  }\n\n  private actualizeStatusIcon(): void {\n    let statusIcon: string;\n\n    switch (this.correctedStatus) {\n      case 'warning':\n        statusIcon = 'alerts-warning';\n        break;\n\n      case 'success':\n        statusIcon = 'success-circle-fill';\n        break;\n\n      case 'danger':\n        statusIcon = 'alerts-info-circle-fill';\n        break;\n\n      case 'default':\n      default:\n        break;\n    }\n\n    if (this.control.invalid) {\n      statusIcon = 'alerts-info-circle-fill';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.statusIcon = statusIcon;\n  }\n\n  protected innerClick(event: MouseEvent) {\n    this.innerClick$$.next(event);\n  }\n}\n","<ng-container\n  *prizmLet=\"{\n    focused: control.focused | prizmToObservable | async,\n    disabled: control.disabled | prizmToObservable | async,\n    empty: control.empty | prizmToObservable | async,\n    touched: control.touched | prizmToObservable | async,\n    invalid: control.invalid | prizmToObservable | async,\n    required: control.required | prizmToObservable | async,\n    emptyLabel: emptyLabel\n  } as $\"\n>\n  <ng-template #labelTemplate>\n    <div\n      class=\"label-container\"\n      *ngIf=\"label$ | async\"\n      [ngClass]=\"[\n        control.nativeElementType ? 'label-container-' + control.nativeElementType : '',\n        'label-container-' + (outer ? 'outer' : 'inner')\n      ]\"\n      [class.label-container-focused]=\"$.focused\"\n      [attr.data-size]=\"size\"\n    >\n      <label\n        class=\"prizm-input-label\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}\n    prizm-input-label-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n    {{ control.nativeElementType ? 'prizm-input-label-' + control.nativeElementType : '' }}\n\"\n        [attr.data-size]=\"size\"\n        [class.prizm-input-label-focused]=\"$.focused\"\n        [class.prizm-input-label-empty]=\"$.empty\"\n      >\n        <div class=\"label--title\">\n          {{ label$ | async }}\n        </div>\n        <span class=\"prizm-input-label-required\" *ngIf=\"$.required\">*</span>\n      </label>\n\n      <ng-container [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n        <button\n          class=\"prizm-input-label-clear-btn clear-icon\"\n          *ngSwitchCase=\"true\"\n          [interactive]=\"true\"\n          [disabled]=\"$.disabled\"\n          [prizmInputIconButton]=\"$any(clearButton)\"\n          (click)=\"onClearClick($event)\"\n        ></button>\n\n        <div class=\"prizm-input-label-clear-btn clear-icon\" *ngSwitchDefault>\n          <ng-container\n            *polymorphOutlet=\"\n              clearButton;\n              context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n            \"\n          >\n          </ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-container *ngIf=\"!outer; else labelTemplate\"></ng-container>\n\n  <div\n    class=\"prizm-input-form\n  prizm-input-form-status-{{ correctedStatus }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}\n  prizm-input-form-{{ position }}\n  prizm-input-form-{{ outer ? 'outer' : 'inner' }}-{{ position }}\n  {{ control.nativeElementType ? 'prizm-input-form-' + control.nativeElementType : '' }}\n\"\n    [class.hide-border]=\"!border\"\n    [attr.data-size]=\"size\"\n    [ngClass]=\"{\n      'prizm-input-form-focused': !$.disabled && $.focused,\n      'prizm-input-form-empty': $.empty,\n      'prizm-input-empty-label': emptyLabel,\n      'prizm-input-form-disabled': $.disabled,\n      'prizm-input-form-touched': $.touched,\n      'prizm-input-form-invalid': $.invalid\n    }\"\n  >\n    <div class=\"prizm-input-form__first\">\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutLeft?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-left]\"></ng-content>\n      </ng-container>\n\n      <div class=\"prizm-input-form-inner-container\" (click)=\"innerClick($event)\">\n        <div class=\"prizm-input-form-body\">\n          <ng-container *ngIf=\"outer; else labelTemplate\"></ng-container>\n\n          <ng-content></ng-content>\n          <ng-container>\n            <ng-container *ngIf=\"control.layoutInBody?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n            </ng-container>\n            <ng-content select=\"[prizm-input-in-body]\"></ng-content>\n          </ng-container>\n        </div>\n\n        <ng-container *ngIf=\"showClearButton\" [ngSwitch]=\"isPolymorphPrimitive(clearButton)\">\n          <button\n            class=\"prizm-input-label-clear-btn prizm-input-button-default clear-icon\"\n            *ngSwitchCase=\"true\"\n            [interactive]=\"true\"\n            [disabled]=\"$.disabled\"\n            [prizmInputIconButton]=\"$any(clearButton) ?? 'cancel-delete-content'\"\n            (click)=\"onClearClick($event)\"\n          ></button>\n\n          <div class=\"prizm-input-button-default clear-icon\" *ngSwitchDefault>\n            <ng-container\n              *polymorphOutlet=\"\n                clearButton;\n                context: { clear: onClearClick, showStatusButton: showStatusButton, disabled: $.disabled }\n              \"\n            >\n            </ng-container>\n          </div>\n        </ng-container>\n\n        <button\n          class=\"prizm-input-form-status-button\"\n          #statusButton\n          *ngIf=\"showStatusButton\"\n          [prizmInputIconButton]=\"statusIcon\"\n          [prizmHint]=\"statusMessage\"\n          [prizmHintCanShow]=\"!!statusMessage\"\n          [interactive]=\"false\"\n        ></button>\n      </div>\n\n      <ng-container>\n        <ng-container *ngIf=\"control.layoutRight?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n        <ng-content select=\"[prizm-input-right]\"></ng-content>\n      </ng-container>\n    </div>\n\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutBottom?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-bottom]\"></ng-content>\n    </ng-container>\n  </div>\n\n  <div class=\"prizm-input-form-subtext prizm-input-form-subtext-{{ correctedStatus }}\">\n    <ng-container>\n      <ng-container *ngIf=\"control.layoutSubtext?.templateRef as template\" [ngTemplateOutlet]=\"template\">\n      </ng-container>\n      <ng-content select=\"[prizm-input-subtext]\"></ng-content>\n    </ng-container>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { PrizmIconModule } from '../../../icon/icon.module';\nimport { PrizmInputIconButtonComponent } from './input-icon-button.component';\n\n@NgModule({\n  imports: [PrizmIconModule],\n  declarations: [PrizmInputIconButtonComponent],\n  exports: [PrizmInputIconButtonComponent],\n})\nexport class PrizmInputIconButtonModule {}\n","import { Directive, ElementRef, HostBinding, inject, Input, Optional } from '@angular/core';\nimport { PrizmHintDirective } from '../../../../directives/hint';\nimport { PrizmOverlayOutsidePlacement } from '../../../../modules/overlay/models';\nimport { prizmIsTextOverflow } from '../../../../util/dom/is-textoverflow';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { PrizmInputLayoutComponent } from '../input-layout';\n\n@Directive({\n  selector: 'input[prizmHintDirection], input[prizmHintCanShow]',\n  exportAs: 'prizmInputHint',\n})\nexport class PrizmInputHintDirective {\n  readonly prizmHint_ = new PrizmHintDirective();\n\n  @HostBinding('attr.prizmHint') get prizmHint(): string {\n    return this.el.nativeElement.value;\n  }\n\n  @Input()\n  set prizmHintDirection(value: PrizmOverlayOutsidePlacement) {\n    this.prizmHint_.prizmHintDirection = value;\n    this.hintSyncChanges();\n  }\n  get prizmHintDirection(): PrizmOverlayOutsidePlacement {\n    return this.prizmHint_.prizmHintDirection;\n  }\n\n  private prizmHintCanShow_ = true;\n  @Input()\n  set prizmHintCanShow(value: BooleanInput) {\n    this.prizmHint_.prizmHintCanShow = this.prizmHintCanShow_ = coerceBooleanProperty(value);\n  }\n  get prizmHintCanShow(): boolean {\n    return this.prizmHintCanShow_;\n  }\n\n  readonly layout = inject(PrizmInputLayoutComponent, {\n    optional: true,\n  });\n  readonly el = inject(ElementRef<HTMLInputElement>);\n\n  public ngOnInit(): void {\n    this.prizmHint_.ngOnInit();\n  }\n\n  public ngOnChanges(): void {\n    this.prizmHint_.ngOnChanges();\n  }\n\n  private hintSyncChanges(): void {\n    this.prizmHint_.ngOnChanges();\n  }\n\n  public updateHint(): void {\n    if (!this.prizmHintCanShow_) {\n      this.prizmHint_.prizmHintCanShow = this.prizmHintCanShow_;\n    } else {\n      this.prizmHint_.prizmHintCanShow = prizmIsTextOverflow(this.el.nativeElement);\n      this.prizmHint_.prizmHint = this.el.nativeElement.value as any;\n      this.prizmHint_.prizmHintHost = this.layout?.el?.nativeElement ?? null;\n    }\n    this.hintSyncChanges();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputHintDirective } from './input-hint.directive';\n\n@NgModule({\n  declarations: [PrizmInputHintDirective],\n  exports: [PrizmInputHintDirective],\n})\nexport class PrizmInputHintModule {}\n","export const unsupportedKeyCharacters = [\n  'Shift',\n  'Escape',\n  'Backspace',\n  'Delete',\n  'ArrowUp',\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n  'Enter',\n  'CapsLock',\n  'Alt',\n  'Control',\n  'Meta',\n];\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { DefaultInputInvalidTextClass } from '../base/input-invalid-text-base-class.directive';\nimport { unsupportedKeyCharacters } from './const';\n\n@Directive({\n  selector: '[prizmInputAllowedSymbols]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputAllowedSymbolsDirective extends DefaultInputInvalidTextClass {\n  @Input() prizmInputAllowedSymbols: RegExp | string | string[] | `` = ``;\n\n  @HostListener('keydown', ['$event.key', '$event'])\n  public block(data: string, event: KeyboardEvent): void | false {\n    if (unsupportedKeyCharacters.includes(data)) {\n      return void 0;\n    }\n    if (\n      this.prizmInputAllowedSymbols &&\n      ((this.prizmInputAllowedSymbols instanceof RegExp && !data.match(this.prizmInputAllowedSymbols)) ||\n        (!(this.prizmInputAllowedSymbols instanceof RegExp) &&\n          !(Array.isArray(data) ? data : [data]).find(i => i === data)))\n    ) {\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputAllowedSymbolsDirective } from './input-allowed-symbols.directive';\n\n@NgModule({\n  declarations: [PrizmInputAllowedSymbolsDirective],\n  exports: [PrizmInputAllowedSymbolsDirective],\n})\nexport class PrizmInputAllowedSymbolsModule {}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { NgControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil, tap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[prizmInputCorrector]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmInputCorrectorDirective implements OnInit {\n  private readonly inputs$ = new Subject<any>();\n\n  @Input('prizmInputCorrector') corrector: ((value: string) => string) | null = null;\n  @Input() needCorrect: (value: string) => boolean = () => true;\n\n  @HostListener('paste', [])\n  @HostListener('input', [])\n  public onInputOrPaste(): void | false {\n    this.inputs$.next(this.el.nativeElement.value);\n  }\n\n  constructor(\n    private readonly el: ElementRef<HTMLInputElement>,\n    @Optional() @Self() private ngControl: NgControl,\n    private cdr: ChangeDetectorRef,\n    private destroy$: PrizmDestroyService\n  ) {\n    this.overrideSetValue();\n  }\n\n  private overrideSetValue(): void {\n    if (this.ngControl.control) {\n      const originFunc = this.ngControl.control.setValue;\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      this.ngControl.control.setValue = function (value, options) {\n        const newValue = self.correctValue(value);\n        originFunc.call(this, newValue, options);\n        self.updateNativeValue(newValue);\n      };\n    }\n  }\n\n  private correctValue(value: string): typeof value {\n    if (!this.needCorrect(value)) return value;\n    if (!this.corrector) return value;\n    return this.corrector(value);\n  }\n\n  private updateNativeValue(value: string): void {\n    this.el.nativeElement.value = value;\n  }\n\n  private updateNgValue(value: string): void {\n    this.ngControl?.control?.setValue(value);\n  }\n\n  ngOnInit(): void {\n    this.inputs$\n      .pipe(\n        debounceTime(100),\n        tap(value => {\n          const correctValue = this.correctValue(value);\n          if (correctValue !== value) {\n            this.updateNativeValue(correctValue);\n            this.updateNgValue(correctValue);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputCorrectorDirective } from './input-corrector.directive';\n\n@NgModule({\n  declarations: [PrizmInputCorrectorDirective],\n  exports: [PrizmInputCorrectorDirective],\n})\nexport class PrizmInputCorrectorModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmHintModule } from '../../../directives/hint';\nimport { PrizmIconModule } from '../../icon';\nimport { PrizmInputStatusSubtextComponent } from './input-invalid-subtext/input-status-subtext.component';\nimport { PrizmInputLayoutComponent } from './input-layout/input-layout.component';\nimport { PrizmInputStatusTextDirective } from './input-status-text/input-status-text.directive';\nimport { PrizmInputIconButtonModule } from './input-icon-button/input-icon-button.module';\nimport { PrizmInputLayoutBottomDirective } from './input-layout/input-layout-bottom.directive';\nimport { PrizmInputLayoutRightDirective } from './input-layout/input-layout-right.directive';\nimport { PrizmInputLayoutLeftDirective } from './input-layout/input-layout-left.directive';\nimport { PrizmInputLayoutInBodyDirective } from './input-layout/input-layout-in-body.directive';\nimport { PrizmInputLayoutSubtextDirective } from './input-layout/input-layout-subtext.directive';\nimport { PolymorphModule, PrizmZoneEventModule } from '../../../directives';\nimport { PrizmLetModule, PrizmToObservableModule } from '@prizm-ui/helpers';\nimport { PrizmInputHintModule } from './input-hint/input-hint.module';\nimport { PrizmInputAllowedSymbolsModule } from './input-allowed-symbols';\nimport { PrizmInputCorrectorModule } from './input-corrector';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmInputHintModule,\n    PrizmToObservableModule,\n    PrizmLetModule,\n    PolymorphModule,\n    PrizmIconModule,\n    PrizmZoneEventModule,\n    PrizmHintModule,\n    PrizmInputIconButtonModule,\n    PrizmInputAllowedSymbolsModule,\n    PrizmInputCorrectorModule,\n  ],\n  declarations: [\n    PrizmInputLayoutRightDirective,\n    PrizmInputLayoutLeftDirective,\n    PrizmInputLayoutComponent,\n    PrizmInputStatusSubtextComponent,\n    PrizmInputStatusTextDirective,\n    PrizmInputLayoutBottomDirective,\n    PrizmInputLayoutInBodyDirective,\n    PrizmInputLayoutSubtextDirective,\n  ],\n  exports: [\n    CommonModule,\n    PrizmInputHintModule,\n    PrizmInputLayoutComponent,\n    PrizmInputStatusSubtextComponent,\n    PrizmInputIconButtonModule,\n    PrizmInputStatusTextDirective,\n    PrizmInputLayoutBottomDirective,\n    PrizmInputLayoutLeftDirective,\n    PrizmInputLayoutRightDirective,\n    PrizmInputLayoutInBodyDirective,\n    PrizmInputLayoutSubtextDirective,\n    PrizmInputAllowedSymbolsModule,\n    PrizmInputCorrectorModule,\n  ],\n})\nexport class PrizmInputCommonModule {}\n","import { ChangeDetectorRef, Directive, ElementRef, inject, Injector, OnInit } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NgControl, NgModel, Validators } from '@angular/forms';\nimport { PrizmInputControl } from './input-control.class';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmInputLayoutComponent } from '../input-layout';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { PrizmControlValueTransformer } from '../../../../types';\nimport { PRIZM_EMPTY_FUNCTION } from '@prizm-ui/core';\n\n@Directive()\nexport abstract class PrizmInputNgControl<T>\n  extends PrizmInputControl<T>\n  implements OnInit, ControlValueAccessor\n{\n  protected readonly elRef_ = inject(ElementRef<HTMLInputElement>);\n  readonly destroy$!: PrizmDestroyService;\n  ngControl!: NgControl;\n  readonly changeDetectorRef!: ChangeDetectorRef;\n  readonly layoutComponent?: PrizmInputLayoutComponent | null;\n  private previousInternalValue$$ = new BehaviorSubject<T | null>(null);\n  onChange: (val: T) => void = PRIZM_EMPTY_FUNCTION;\n  onTouch: (val: T) => void = PRIZM_EMPTY_FUNCTION;\n  onTouched = PRIZM_EMPTY_FUNCTION;\n  protected readonly focusableElement?: ElementRef<HTMLInputElement> | any;\n\n  get value(): T {\n    return this.previousInternalValue$$.value ?? (this.fallbackValue as T);\n  }\n\n  public fallbackValue: T | null = null;\n\n  get safeCurrentValue(): T {\n    return this.rawValue ?? (this.fallbackValue as T);\n  }\n\n  get empty(): boolean | Observable<boolean> {\n    return this.isEmpty(this.value);\n  }\n\n  get value$(): Observable<T> {\n    return this.previousInternalValue$$.asObservable().pipe(map(i => i ?? this.fallbackValue)) as any;\n  }\n\n  public isEmpty(value: T): boolean {\n    return !value && !this.focusableElement?.nativeElement?.value;\n  }\n\n  get required() {\n    // for work Validators.required\n    if (this.ngControl.control?.hasValidator(Validators.required)) return true;\n\n    // for work [required] attributes\n    const validator = this.ngControl?.validator;\n    if (!validator) {\n      return false;\n    }\n\n    const validation = validator({} as AbstractControl);\n    // eslint-disable-next-line no-prototype-builtins\n    return Boolean(validation && validation.hasOwnProperty('required'));\n  }\n\n  get disabled() {\n    return !!this.ngControl?.disabled;\n  }\n\n  /** Whether the control is validity. */\n  get invalid() {\n    return !!this.ngControl?.invalid;\n  }\n\n  /** Whether the control is validity. */\n  get touched() {\n    return !!this.ngControl?.touched;\n  }\n\n  protected constructor(\n    protected readonly injector: Injector,\n    readonly valueTransformer?: PrizmControlValueTransformer<T> | null\n  ) {\n    super();\n\n    this.destroy$ = this.injector.get(PrizmDestroyService);\n    this.changeDetectorRef = this.injector.get(ChangeDetectorRef);\n    this.layoutComponent = this.injector.get(PrizmInputLayoutComponent, null);\n  }\n\n  ngOnInit(): void {\n    this.ngControl = this.injector.get(NgControl);\n\n    this.initFocusListeners();\n\n    console.assert(\n      !!this.ngControl,\n      `NgControl not injected in ${this.constructor.name}!\\n`,\n      'Use [(ngModel)] or [formControl] or formControlName for correct work.'\n    );\n\n    this.ngControl?.statusChanges\n      ?.pipe(\n        tap(i => this.stateChanges.next()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected initFocusListeners(): void {\n    merge(fromEvent(this.elRef_.nativeElement, 'focusout'), fromEvent(this.elRef_.nativeElement, 'focusin'))\n      .pipe(\n        tap(() => this.stateChanges.next()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected valueIdenticalComparator(oldValue: T, newValue: T): boolean {\n    return oldValue === newValue;\n  }\n\n  protected updateValue(value: T): void {\n    if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n      return;\n    }\n\n    this.previousInternalValue$$.next(value);\n    this.controlSetValue(value);\n  }\n\n  public clear(ev: MouseEvent) {\n    this.updateValue(null as any);\n    this.markAsDirty();\n  }\n\n  public setDisabledState(isDisabled: boolean) {\n    this.checkControlUpdate();\n    this.stateChanges.next();\n  }\n\n  public registerOnChange(onChange: any): void {\n    this.onChange = (componentValue: T): void => {\n      onChange(this.toControlValue(componentValue));\n    };\n  }\n\n  public registerOnTouched(fn: any) {\n    this.onTouch = () => {\n      fn();\n    };\n  }\n\n  public writeValue(value: T): void {\n    const controlValue =\n      this.ngControl instanceof NgModel && this.previousInternalValue$$.value === undefined\n        ? this.ngControl.model\n        : value;\n\n    this.refreshLocalValue(this.fromControlValue(controlValue));\n    // sync on change\n    this.stateChanges.next();\n  }\n\n  private refreshLocalValue(value: T | null): void {\n    this.previousInternalValue$$.next(value);\n    this.checkControlUpdate();\n  }\n\n  protected updateFocused(focused: boolean): void {\n    if (!focused) {\n      this.controlMarkAsTouched();\n    }\n  }\n\n  protected controlMarkAsTouched(): void {\n    this.onTouched();\n    this.checkControlUpdate();\n  }\n\n  private controlSetValue(value: T): void {\n    this.onChange(value);\n    this.checkControlUpdate();\n  }\n\n  public checkControlUpdate(): void {\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private get rawValue(): T | undefined {\n    const { ngControl } = this;\n\n    if (ngControl === null) {\n      return undefined;\n    }\n\n    const controlValue =\n      ngControl instanceof NgModel /*&& this.previousInternalValue === undefined*/\n        ? ngControl.viewModel\n        : ngControl.value;\n\n    return this.fromControlValue(controlValue);\n  }\n\n  private fromControlValue(controlValue: unknown): T {\n    return this.valueTransformer\n      ? this.valueTransformer?.fromControlValue(controlValue)\n      : (controlValue as T);\n  }\n\n  private toControlValue(componentValue: T): unknown {\n    return this.valueTransformer ? this.valueTransformer?.toControlValue(componentValue) : componentValue;\n  }\n\n  public markAsTouched(): void {\n    this.ngControl.control?.markAsTouched();\n  }\n\n  public markAsDirty(): void {\n    this.ngControl.control?.markAsDirty();\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n} from '@angular/core';\nimport { NgControl, NgModel, UntypedFormControl, Validators } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmInputHintDirective, PrizmInputLayoutComponent } from '../common';\nimport { NgxMaskDirective } from 'ngx-mask';\n\n@Component({\n  selector:\n    // eslint-disable-next-line @angular-eslint/component-selector\n    'input[prizmInput]:not([type=number]), textarea[prizmInput], input[prizmInputPassword]',\n  template: '',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.ng-filled]': '!empty',\n    '[disabled]': 'disabled',\n  },\n  exportAs: 'prizmInput',\n  styleUrls: ['../common/styles/input.component.less', 'input-textarea.component.less'],\n  providers: [{ provide: PrizmInputControl, useExisting: PrizmInputTextComponent }, PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmInputTextComponent<VALUE extends string | number | null = string>\n  extends PrizmInputControl<VALUE>\n  implements DoCheck, OnInit, OnDestroy\n{\n  @HostBinding('attr.prizmHint') get prizmHint(): VALUE {\n    return this.value;\n  }\n\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  /**\n   * @deprecated\n   * Disabled input\n   */\n  set disabled(value: boolean) {\n    this._disabled = value;\n\n    if (this.ngControl?.control) {\n      if (value === true) {\n        this.ngControl.control.disable();\n      } else {\n        this.ngControl.control.enable();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  override hidden = false;\n\n  private _disabled = false;\n\n  /**\n   * @deprecated\n   * Required input\n   */\n  @Input()\n  get required(): boolean {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  set required(value: boolean) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n\n  public invalid = false;\n  private _required: boolean | undefined;\n\n  override readonly testId_ = 'ui_input_text';\n  /**\n   * Input value input\n   */\n  get value(): VALUE {\n    return (this.ngControl?.value || this._inputValue.value) as VALUE;\n  }\n\n  /**\n   * @deprecated\n   * */\n  @Input()\n  set value(value: VALUE) {\n    if (this.ngControl && this.ngControl.value !== value) {\n      queueMicrotask(() => {\n        this.ngControl.control?.patchValue(value);\n      });\n    } else {\n      this._inputValue.value = value as string;\n      this.updateEmptyState();\n      this.stateChanges.next();\n    }\n\n    this.valueChanged.next(this.value);\n  }\n  private get _inputValue() {\n    return this.elementRef.nativeElement as HTMLInputElement;\n  }\n\n  @Output() enter = new EventEmitter<any>();\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onClear = new EventEmitter<MouseEvent>();\n\n  @Output() valueChanged = new EventEmitter<VALUE>();\n  /**\n   * Empty state\n   */\n  @HostBinding('class.empty')\n  public empty!: boolean;\n\n  readonly maybeMask = inject(NgxMaskDirective, {\n    optional: true,\n  });\n  readonly parentLayout = inject(PrizmInputLayoutComponent, {\n    optional: true,\n  });\n  /**\n   * Focus state\n   */\n  public focused!: boolean;\n\n  /**\n   * Touched state\n   */\n  public _touched!: boolean;\n\n  get touched(): boolean {\n    return !!(this.ngControl ? this.ngControl.touched : this._touched);\n  }\n\n  public hasClearButton = true;\n  public nativeElementType: string;\n\n  private readonly inputHint: PrizmInputHintDirective | null = inject(PrizmInputHintDirective, {\n    optional: true,\n    host: true,\n  });\n\n  /**\n   * Create instance\n   */\n  constructor(\n    @Optional() @Self() public readonly ngControl: NgControl,\n    public readonly elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n    private readonly destroy: PrizmDestroyService,\n    private readonly cdr: ChangeDetectorRef\n  ) {\n    super();\n    this.nativeElementType = elementRef.nativeElement.type;\n  }\n\n  public ngOnInit(): void {\n    if (this.ngControl) this.initControlListener();\n    this.inputHint?.updateHint();\n    this.safeClearNgxMaskListener();\n  }\n\n  private safeClearNgxMaskListener() {\n    // TODO: fix ngxMask bug when clear value\n    this.parentLayout?.clear\n      .pipe(\n        tap(() => {\n          this.maybeMask, this.maybeMask?.writeValue(null as any);\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  public override ngDoCheck(): void {\n    super.ngDoCheck();\n    this.updateEmptyState();\n    this.updateErrorState();\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n  }\n\n  @HostListener('input', ['$event'])\n  private onInput(): void {\n    this.updateEmptyState();\n    this.stateChanges.next();\n    this.updateValue(this.value);\n    this.valueChanged.next(this.value);\n  }\n\n  @HostListener('focus', ['$event'])\n  private onFocus(): void {\n    this.focused = true;\n    this.stateChanges.next();\n  }\n\n  @HostListener('blur', ['$event'])\n  private onBlur(): void {\n    this.focused = false;\n    this._touched = true;\n    this.stateChanges.next();\n  }\n\n  @HostListener('keydown.enter', ['$event'])\n  private onEnter(): void {\n    this.enter.next(this.value);\n  }\n\n  private initControlListener(): void {\n    this.ngControl?.statusChanges\n      ?.pipe(\n        tap(result => {\n          this.updateEmptyState();\n          this.updateErrorState();\n          this.cdr.markForCheck();\n        }),\n        tap(() => {\n          this.stateChanges.next();\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n\n    this.ngControl?.valueChanges\n      ?.pipe(\n        tap(value => {\n          this.updateEmptyState();\n          this.updateErrorState();\n          this.updateValue(value);\n        }),\n        tap(() => {\n          this.stateChanges.next();\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  private updateEmptyState(): void {\n    this.empty = !(\n      (this.elementRef.nativeElement.value && this.elementRef.nativeElement.value.length) ||\n      (this.ngControl && this.ngControl.value) ||\n      (this.ngControl instanceof NgModel && this.ngControl.model)\n    );\n  }\n\n  private updateErrorState(): void {\n    this.invalid = Boolean(this.ngControl && this.ngControl.invalid);\n  }\n\n  private updateValue(value: VALUE): void {\n    if (value !== this.ngControl?.value) this.ngControl?.control?.setValue(value);\n    if (value !== this.value) this._inputValue.value = value as string;\n    this.inputHint?.updateHint();\n  }\n\n  public clear(event: MouseEvent): void {\n    if (this.disabled) return;\n\n    this.updateValue(null as VALUE);\n\n    this.updateEmptyState();\n    this.updateErrorState();\n\n    this.markControl({ touched: true, dirty: true });\n    this.onClear.emit(event);\n    this.valueChanged.next('' as VALUE);\n\n    this.elementRef.nativeElement.dispatchEvent(\n      new KeyboardEvent('keydown', {\n        key: 'Backspace',\n        code: 'Backspace',\n      })\n    );\n  }\n\n  public focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  public markControl(options: { touched?: boolean; dirty?: boolean }): void {\n    const { touched, dirty } = options;\n\n    if (touched) {\n      this._touched = true;\n      this.ngControl?.control?.markAsTouched();\n    }\n\n    if (dirty) {\n      this.ngControl?.control?.markAsDirty();\n    }\n\n    this.stateChanges.next();\n  }\n\n  public markAsTouched(): void {\n    this.markControl({ touched: true });\n  }\n}\n","import {\n  AfterViewInit,\n  Attribute,\n  Directive,\n  ElementRef,\n  Host,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { WINDOW } from '@ng-web-apis/common';\n\n@Directive({\n  selector: 'textarea[prizmInput]',\n  standalone: true,\n})\nexport class PrizmTextareaDirective implements AfterViewInit {\n  @Input() @HostBinding('style.height.px') height: number | null = null;\n\n  @Input()\n  @HostBinding('class.resizable')\n  set resizable(state: boolean) {\n    this._resizable = state;\n  }\n  get resizable() {\n    return this._resizable;\n  }\n\n  @HostBinding('class.add-base-resize')\n  get baseResizeClass() {\n    if (!this.resizable) return false;\n    if (!this.elementRef.nativeElement) return false;\n\n    const currentStyle = this.windowRef\n      .getComputedStyle(this.elementRef.nativeElement, null)\n      .getPropertyValue('resize');\n\n    return !currentStyle || currentStyle === 'none' || currentStyle === 'both';\n  }\n\n  private _resizable = false;\n  private clone: HTMLTextAreaElement | null = null;\n  constructor(\n    @Host() private elementRef: ElementRef<HTMLTextAreaElement>,\n    @Attribute('autoSize') private autoSize: any,\n    private destroy$: PrizmDestroyService,\n    @Inject(WINDOW) private readonly windowRef: Window\n  ) {\n    this.elementRef.nativeElement.rows = 1;\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.autoSize !== null) {\n      this.setClone();\n\n      fromEvent(window, 'resize')\n        .pipe(debounceTime(100), takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.setClone();\n          this.elementRef.nativeElement.style.height = this.height\n            ? Math.max(this.height, this.clone?.scrollHeight ?? 0) + 'px'\n            : (this.clone?.scrollHeight ?? 0) + 'px';\n        });\n    }\n  }\n\n  @HostListener('valueChanged', ['$event']) private valueChanged(event: string): void {\n    if (this.clone) {\n      const nativeEl = this.elementRef.nativeElement;\n      this.clone.value = nativeEl.value;\n\n      nativeEl.style.height = this.height\n        ? Math.max(this.height, this.clone.scrollHeight) + 'px'\n        : this.clone.scrollHeight + 'px';\n    }\n  }\n\n  private setClone(): void {\n    if (this.clone) {\n      this.clone.remove();\n    }\n    this.clone = this.elementRef.nativeElement.cloneNode(false) as HTMLTextAreaElement;\n    this.clone.style.position = 'absolute';\n    this.clone.style.left = '-100000px';\n    this.clone.style.top = '0';\n    this.clone.style.height = 'auto';\n    this.clone.style.visibility = 'hidden';\n\n    this.elementRef.nativeElement.parentElement?.appendChild(this.clone);\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { noop } from 'rxjs';\nimport { PrizmInputTextComponent } from './input-text.component';\n\n@Component({\n  selector:\n    // eslint-disable-next-line @angular-eslint/component-selector\n    'div[prizmInput]',\n  template: '<ng-content></ng-content>',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.ng-filled]': '!empty',\n    '[disabled]': 'disabled',\n  },\n  exportAs: 'prizmInputBlock',\n  styleUrls: [\n    'input-block.component.less',\n    '../common/styles/input.component.less',\n    'input-textarea.component.less',\n  ],\n  standalone: true,\n  providers: [{ provide: PrizmInputControl, useExisting: PrizmInputBlockComponent }, PrizmDestroyService],\n})\nexport class PrizmInputBlockComponent extends PrizmInputTextComponent implements ControlValueAccessor {\n  onChange: (v: number) => void = noop;\n  onTouched: () => void = noop;\n\n  public writeValue(obj: any): void {\n    super.value = obj;\n  }\n\n  public registerOnChange(fn: (value: number) => void): void {\n    this.onChange = fn;\n  }\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  constructor(\n    @Optional() @Self() public readonly ngControl_: NgControl,\n    public readonly elementRef_: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n    private readonly destroy_: PrizmDestroyService,\n    private readonly cdr_: ChangeDetectorRef\n  ) {\n    super(ngControl_, elementRef_, destroy_, cdr_);\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputCommonModule } from '../common/input-common.module';\nimport { PrizmInputTextComponent } from './input-text.component';\nimport { PrizmTextareaDirective } from './textarea.directive';\nimport { PrizmInputBlockComponent } from './input-block.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmInputCommonModule,\n    PrizmInputBlockComponent,\n    PrizmInputTextComponent,\n    PrizmTextareaDirective,\n  ],\n  exports: [\n    PrizmInputCommonModule,\n    PrizmInputTextComponent,\n    PrizmTextareaDirective,\n    PrizmInputBlockComponent,\n  ],\n})\nexport class PrizmInputTextModule {}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { PrizmInputNumberComponent } from './input-number.component';\n\n@Directive({\n  selector: '[prizmInputNumberAuxiliaryControl]',\n  standalone: true,\n})\nexport class PrizmInputNumberAuxiliaryControlDirective {\n  @Input('prizmInputNumberAuxiliaryControl') type!: 'increment' | 'decrement';\n  @Input() inputNumber!: PrizmInputNumberComponent;\n\n  @HostListener('click') public action(): void {\n    this.inputNumber[this.type]();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { PrizmInputLayoutComponent } from '../common/input-layout/input-layout.component';\nimport { PrizmInputNumberComponent } from './input-number.component';\nimport { PrizmInputCommonModule } from '../common';\n\n@Component({\n  selector: 'prizm-input-number-auxiliary-controls',\n  template: `<div class=\"container\">\n    <button\n      [size]=\"size\"\n      [interactive]=\"!inputNumber.disabled\"\n      [disabled]=\"inputNumber.disabled\"\n      (click)=\"increment()\"\n      prizmInputIconButton=\"chevrons-up\"\n    ></button>\n    <button\n      [size]=\"size\"\n      [interactive]=\"!inputNumber.disabled\"\n      [disabled]=\"inputNumber.disabled\"\n      (click)=\"decrement()\"\n      prizmInputIconButton=\"chevrons-down\"\n    ></button>\n  </div> `,\n  styleUrls: ['./input-number-auxiliary-controls.component.less'],\n  standalone: true,\n  imports: [PrizmInputCommonModule],\n})\nexport class PrizmInputNumberDefaultControlsComponent {\n  @Input() inputNumber!: PrizmInputNumberComponent;\n\n  constructor(private readonly layout: PrizmInputLayoutComponent) {}\n\n  get size(): number {\n    const { outer, size } = this.layout;\n\n    if (outer && size === 's') {\n      return 12;\n    }\n\n    return 16;\n  }\n\n  public increment(): void {\n    this.inputNumber.increment();\n  }\n\n  public decrement(): void {\n    this.inputNumber.decrement();\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  Self,\n} from '@angular/core';\nimport { PrizmInputControl, PrizmInputHintDirective } from '../common';\nimport { AbstractControl, NgControl, Validators } from '@angular/forms';\nimport { prizmIsNativeFocused } from '../../../util';\nimport { PrizmDestroyService, prizmFormatNumber } from '@prizm-ui/helpers';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { map, takeUntil, tap, throttleTime } from 'rxjs/operators';\nimport { PrizmDecimal } from '@prizm-ui/core';\nimport { PrizmHintDirective } from '../../../directives';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'input[prizmInputNumber], input[type=number][prizmInput]',\n  exportAs: 'prizmInputNumber',\n  styleUrls: ['../common/styles/input.component.less'],\n  template: '',\n  providers: [PrizmDestroyService, { provide: PrizmInputControl, useExisting: PrizmInputNumberComponent }],\n  standalone: true,\n})\nexport class PrizmInputNumberComponent extends PrizmInputControl<number> implements OnInit {\n  private hasSymbol = false;\n\n  destroy$ = inject(PrizmDestroyService);\n  public get empty() {\n    return this.el.nativeElement.value == '' && !this.hasSymbol;\n  }\n  get required() {\n    // for work Validators.required\n    if (this.ngControl.control?.hasValidator(Validators.required)) return true;\n\n    // for work [required] attributes\n    const validator = this.ngControl?.validator;\n    if (!validator) {\n      return false;\n    }\n\n    const validation = validator({} as AbstractControl);\n    // eslint-disable-next-line no-prototype-builtins\n    return Boolean(validation && validation.hasOwnProperty('required'));\n  }\n\n  readonly prizmHint_ = new PrizmHintDirective();\n\n  private readonly inputHint: PrizmInputHintDirective | null = inject(PrizmInputHintDirective, {\n    optional: true,\n    host: true,\n  });\n\n  public focused = merge(\n    fromEvent(this.el.nativeElement, 'blur'),\n    fromEvent(this.el.nativeElement, 'focus')\n  ).pipe(map(() => prizmIsNativeFocused(this.el.nativeElement)));\n  get invalid(): boolean {\n    return this.safeNgControlData<boolean>(({ invalid }) => invalid, false);\n  }\n\n  get valid(): boolean {\n    return this.safeNgControlData<boolean>(({ valid }) => valid, false);\n  }\n\n  get touched(): boolean {\n    return this.safeNgControlData<boolean>(({ touched }) => touched, false);\n  }\n  public nativeElementType = 'number';\n  public hasClearButton = true;\n\n  @Input()\n  @HostBinding('attr.placeholder')\n  placeholder?: string;\n\n  @Input() min: number | null = null;\n  @Input() max: number | null = null;\n  // TODO later create input with support zero postfix for number\n  // @Input()\n  decimal: PrizmDecimal = 'not-zero';\n  @Input() precision = 2;\n\n  @Input() step = 1;\n  get value() {\n    return this.el.nativeElement.valueAsNumber;\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onClear = new EventEmitter<MouseEvent>();\n\n  override readonly testId_ = 'ui_input_number';\n  private readonly input$$ = new Subject<string>();\n\n  get disabled() {\n    return this.el.nativeElement.disabled;\n  }\n\n  /* block e symbol */\n  @HostListener('keydown', ['$event']) public stopValue(ev: KeyboardEvent) {\n    return ev.key !== 'e';\n  }\n\n  /* detect minus */\n  @HostListener('input', ['$event.data'])\n  @HostListener('paste', ['$event.clipboardData.getData(\"Text\")'])\n  public onInput(data: string) {\n    this.validateMinMax();\n    this.input$$.next(data);\n  }\n\n  constructor(\n    @Self() public readonly ngControl: NgControl,\n    @Host() private readonly el: ElementRef<HTMLInputElement>\n  ) {\n    super();\n    this.el.nativeElement.type = 'number';\n  }\n\n  private detectSymbols(value: boolean): void {\n    this.hasSymbol = value;\n    this.stateChanges.next();\n  }\n\n  private validateMinMax() {\n    if (this.max !== null && this.max < this.value) {\n      this.el.nativeElement.value = this.max.toString();\n      this.stateChanges.next();\n      return;\n    }\n\n    if (this.min !== null && this.min > this.value) {\n      this.el.nativeElement.value = this.min.toString();\n      this.stateChanges.next();\n      return;\n    }\n  }\n\n  public clear(ev: MouseEvent): void {\n    this.ngControl.control?.setValue(null);\n    this.markAsTouched();\n    this.onClear.emit(ev);\n  }\n\n  private markAsTouched(): void {\n    this.ngControl.control?.markAsTouched();\n    this.ngControl.control?.markAsDirty();\n  }\n\n  public increment(): void {\n    if (this.el.nativeElement.disabled) return;\n\n    if (this.max === null || this.hostValue < this.max) {\n      this.hostValue = Math.min(this.max ?? Number.POSITIVE_INFINITY, this.hostValue + this.step);\n    }\n\n    this.markAsTouched();\n  }\n\n  public decrement(): void {\n    if (this.el.nativeElement.disabled) return;\n\n    if (this.min === null || this.hostValue > this.min) {\n      this.hostValue = Math.max(this.min ?? Number.NEGATIVE_INFINITY, this.hostValue - this.step);\n    }\n\n    this.markAsTouched();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowdown', ['$event']) onArrowDown(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.decrement();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowup', ['$event']) onArrowUp(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.increment();\n  }\n\n  private get hostValue(): number {\n    return this.ngControl.value;\n  }\n\n  private set hostValue(value: number) {\n    const newValue =\n      typeof value === 'number' ? parseFloat(prizmFormatNumber(value, this.precision, this.decimal)) : value;\n    this.ngControl.control?.setValue(newValue);\n    this.el.nativeElement.value = newValue.toString();\n    this.stateChanges.next();\n  }\n\n  private safeNgControlData<T>(\n    extractor: (ngControl: NgControl) => T | null | undefined,\n    defaultFieldValue: T\n  ): T {\n    return (this.ngControl && extractor(this.ngControl)) ?? defaultFieldValue;\n  }\n\n  public ngOnInit(): void {\n    // TODO after fix\n    // this.overrideSetValueMethod();\n    this.prizmHint_.ngOnInit();\n    this.inputHint?.updateHint();\n\n    this.input$$\n      .pipe(\n        throttleTime(1000 / 60),\n        tap(data => {\n          this.detectSymbols(!!data);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public ngOnDestroy(): void {\n    this.stateChanges.complete();\n    this.prizmHint_.ngOnDestroy();\n  }\n\n  // TODO change overriding later\n  // private overrideSetValueMethod(): void {\n  //   if (this.ngControl.control) {\n  //     // @typescript-eslint/no-this-alias\n  //     const self = this;\n  //     const originFunc = this.ngControl.control.setValue;\n  //     this.ngControl.control.setValue = function (value, object) {\n  //       originFunc.call(\n  //         this,\n  //         typeof value === 'number'\n  //           ? parseFloat(prizmFormatNumber(value, self.precision, self.decimal))\n  //           : value,\n  //         object\n  //       );\n  //       self.inputHint?.updateHint();\n  //       self.stateChanges.next();\n  //     };\n  //   }\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputCommonModule } from '../common/input-common.module';\nimport { PrizmInputNumberAuxiliaryControlDirective } from './input-number-auxiliary-control.directive';\nimport { PrizmInputNumberDefaultControlsComponent } from './input-number-auxiliary-controls.component';\nimport { PrizmInputNumberComponent } from './input-number.component';\n\n/**\n * @deprecated\n * */\n@NgModule({\n  imports: [\n    PrizmInputNumberComponent,\n    PrizmInputNumberAuxiliaryControlDirective,\n    PrizmInputNumberDefaultControlsComponent,\n  ],\n  exports: [\n    PrizmInputNumberAuxiliaryControlDirective,\n    PrizmInputCommonModule,\n    PrizmInputNumberComponent,\n    PrizmInputNumberDefaultControlsComponent,\n  ],\n})\nexport class PrizmInputNumberModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputLayoutComponent } from '../common/input-layout/input-layout.component';\nimport { PrizmInputPasswordDirective } from './input-password.directive';\n\n@Component({\n  selector: 'prizm-input-password-auxiliary-control',\n  template: ` <button\n    class=\"btn\"\n    #btn\n    [prizmInputIconButton]=\"icon\"\n    [interactive]=\"true\"\n    [disabled]=\"\n      (inputPassword?.prizmInputText?.ngControl?.statusChanges &&\n        inputPassword.prizmInputText.ngControl.statusChanges | async) &&\n      inputPassword?.prizmInputText?.ngControl?.disabled\n    \"\n    (click)=\"toggle()\"\n  ></button>`,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      :host-context(.prizm-input-form-outer[data-size='m']) {\n        font-size: 15px;\n      }\n\n      :host-context(.prizm-input-form-outer[data-size='s']) {\n        font-size: 11px;\n      }\n\n      .btn {\n        display: block;\n      }\n    `,\n  ],\n  providers: [PrizmDestroyService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmInputPasswordDefaultControlComponent {\n  @Input() inputPassword!: PrizmInputPasswordDirective;\n\n  constructor(\n    public readonly layout: PrizmInputLayoutComponent,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly cdr: ChangeDetectorRef\n  ) {}\n\n  get icon(): string {\n    return this.inputPassword.passwordHidden ? 'sort-eye' : 'sort-eye-off-2';\n  }\n\n  public toggle(): void {\n    this.inputPassword.toggle();\n  }\n}\n","import { Directive, ElementRef, Host } from '@angular/core';\nimport { PrizmInputTextComponent } from '../input-text/input-text.component';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\n@Directive({\n  selector: 'input[prizmInputPassword]',\n  exportAs: 'prizmInputPassword',\n})\nexport class PrizmInputPasswordDirective extends PrizmAbstractTestId {\n  override readonly testId_ = 'ui_input_password';\n\n  constructor(\n    @Host() public readonly el: ElementRef<HTMLInputElement>,\n    @Host() public readonly prizmInputText: PrizmInputTextComponent\n  ) {\n    super();\n    this.el.nativeElement.type = 'password';\n    this._passwordHidden = true;\n  }\n\n  private _passwordHidden!: boolean;\n\n  public get passwordHidden(): boolean {\n    return this._passwordHidden;\n  }\n\n  public showPassword(): void {\n    this.el.nativeElement.type = 'text';\n    this._passwordHidden = false;\n    this.prizmInputText.markControl({ touched: true });\n  }\n\n  public hidePassword(): void {\n    this.el.nativeElement.type = 'password';\n    this._passwordHidden = true;\n    this.prizmInputText.markControl({ touched: true });\n  }\n\n  public toggle(): void {\n    if (this.passwordHidden) {\n      this.showPassword();\n    } else {\n      this.hidePassword();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputCommonModule } from '../common/input-common.module';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputPasswordDefaultControlComponent } from './input-password-auxiliary-control.component';\nimport { PrizmInputPasswordDirective } from './input-password.directive';\n\n@NgModule({\n  imports: [PrizmInputCommonModule, PrizmInputTextModule],\n  declarations: [PrizmInputPasswordDirective, PrizmInputPasswordDefaultControlComponent],\n  exports: [\n    PrizmInputCommonModule,\n    PrizmInputTextModule,\n    PrizmInputPasswordDirective,\n    PrizmInputPasswordDefaultControlComponent,\n  ],\n})\nexport class PrizmInputPasswordModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { NgControl, Validators, ControlValueAccessor } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmCarouselContent } from './carousel-content/carousel-content.interface';\n\n/**\n * @deprecated\n * use - PrizmInputCarouselComponent\n * */\n@Component({\n  selector: 'prizm-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: PrizmInputControl,\n      useExisting: PrizmCarouselComponent,\n    },\n    PrizmDestroyService,\n  ],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.ng-filled]': '!empty',\n    class: 'prizm-carousel',\n    '[attr.tabindex]': \"disabled ? null : '0'\",\n  },\n})\nexport class PrizmCarouselComponent extends PrizmInputControl<any> implements ControlValueAccessor {\n  /**\n   * Disabled input\n   */\n  private _disabled = false;\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    if (this.ngControl.control) {\n      if (value) {\n        this.ngControl.control.disable();\n      } else {\n        this.ngControl.control.enable();\n      }\n    } else {\n      this.setDisabledState?.(value);\n    }\n  }\n\n  override readonly testId_ = 'ui-area--carousel';\n\n  /**\n   * Required input\n   */\n  @Input()\n  get required(): boolean {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  set required(value: boolean) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n\n  private _required: boolean | undefined;\n\n  public invalid = false;\n\n  /**\n   * Input value input\n   */\n  private _value: any;\n\n  get value(): any {\n    if (this.ngControl) {\n      return this.ngControl.value;\n    }\n\n    return this._value;\n  }\n\n  @Input()\n  set value(value: any) {\n    if (this.ngControl) {\n      this.ngControl.control?.patchValue(value);\n      return;\n    }\n\n    this.writeValue(value);\n  }\n\n  @Input() carouselContent!: PrizmCarouselContent;\n\n  @Input() lightMode = false;\n\n  hasClearButton = false;\n  nativeElementType = 'carousel';\n\n  changeFn!: (value: number) => void;\n  touchedFn!: () => void;\n\n  constructor(\n    @Optional() @Self() public readonly ngControl: NgControl,\n    private el: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) {\n    super();\n\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  empty = true;\n  focused = false;\n\n  private _touched = false;\n  get touched(): boolean {\n    if (this.ngControl) {\n      return !!this.ngControl?.touched;\n    }\n\n    return this._touched;\n  }\n\n  public writeValue(obj: any): void {\n    this._value = obj;\n    this.carouselContent.setCurrentValue(obj);\n\n    this.updateEmptyState();\n    this.stateChanges.next();\n    this.cdr.markForCheck();\n  }\n\n  public registerOnChange(fn: any): void {\n    this.changeFn = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.touchedFn = fn;\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  public left(): void {\n    if (this.carouselContent.controlsState.leftCtrlDisabled) return;\n    this.carouselContent.left();\n    this.update();\n  }\n\n  public stepLeft(): void {\n    if (this.carouselContent.controlsState.stepleftCtrlDisabled) return;\n    this.carouselContent.stepLeft();\n    this.update();\n  }\n\n  public stepRight(): void {\n    if (this.carouselContent.controlsState.stepRightCtrlDisabled) return;\n    this.carouselContent.stepRight();\n    this.update();\n  }\n\n  public right(): void {\n    if (this.carouselContent.controlsState.rightCtrlDisabled) return;\n    this.carouselContent.right();\n    this.update();\n  }\n\n  private update(): void {\n    this._value = this.carouselContent.currentValue;\n    if (this.ngControl) {\n      this.changeFn(this._value);\n      this.touchedFn();\n    }\n\n    this._touched = true;\n\n    this.cdr.detectChanges();\n  }\n\n  private updateEmptyState(): void {\n    this.empty = this.carouselContent.currentValueNotSet;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('focus', ['$event'])\n  onFocus(): void {\n    this.focused = true;\n    this.stateChanges.next();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('blur', ['$event'])\n  onBlur(): void {\n    this.focused = false;\n    this.stateChanges.next();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowleft', ['$event']) onArrowLeft(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.stepLeft();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowright', ['$event']) onArrowRight(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.stepRight();\n  }\n\n  public focus(): void {\n    this.el.nativeElement.focus();\n  }\n\n  public clear(): void {\n    console.log('clear');\n  }\n}\n","<ng-container *ngIf=\"!empty; else emptyTpl\">\n  <ng-content></ng-content>\n</ng-container>\n\n<ng-template #emptyTpl>&nbsp;</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { PrizmCarouselComponent } from './carousel.component';\n\n/**\n * @deprecated\n * use PrizmInputCarouselAuxiliaryLeftComponent\n * */\n@Component({\n  selector: 'prizm-carousel-auxiliary-left',\n  template: `\n    <button\n      *ngIf=\"!carousel.lightMode && !carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.leftCtrlDisabled\"\n      (click)=\"carousel.left()\"\n      prizmInputIconButton=\"chevrons-double-left\"\n    ></button>\n    <button\n      *ngIf=\"!carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.stepleftCtrlDisabled\"\n      (click)=\"carousel.stepLeft()\"\n      prizmInputIconButton=\"chevrons-left\"\n    ></button>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class PrizmCarouselAuxiliaryLeftComponent {\n  @Input() carousel!: PrizmCarouselComponent;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PrizmCarouselComponent } from './carousel.component';\nimport { PrizmInputCarouselComponent } from './input-carousel.component';\n/**\n * @deprecated\n * use PrizmInputCarouselAuxiliaryRightComponent\n * */\n@Component({\n  selector: 'prizm-carousel-auxiliary-right',\n  template: `\n    <button\n      *ngIf=\"!carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.stepRightCtrlDisabled\"\n      (click)=\"carousel.stepRight()\"\n      prizmInputIconButton=\"chevrons-right\"\n    ></button>\n    <button\n      *ngIf=\"!carousel.disabled && !carousel.lightMode\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.rightCtrlDisabled\"\n      (click)=\"carousel.right()\"\n      prizmInputIconButton=\"chevrons-double-right\"\n    ></button>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class PrizmCarouselAuxiliaryRightComponent {\n  @Input() carousel!: PrizmCarouselComponent;\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmInputCommonModule } from '../common/input-common.module';\nimport { PrizmCarouselComponent } from './carousel.component';\nimport { PrizmCarouselAuxiliaryLeftComponent } from './carousel-auxiliary-left.component';\nimport { PrizmCarouselAuxiliaryRightComponent } from './carousel-auxiliary-right.component';\n\n/**\n * @deprecated\n * use - PrizmInputCarouselModule\n * */\n@NgModule({\n  imports: [PrizmInputCommonModule],\n  declarations: [\n    PrizmCarouselComponent,\n    PrizmCarouselAuxiliaryLeftComponent,\n    PrizmCarouselAuxiliaryRightComponent,\n  ],\n  exports: [\n    PrizmCarouselComponent,\n    PrizmInputCommonModule,\n    PrizmCarouselAuxiliaryLeftComponent,\n    PrizmCarouselAuxiliaryRightComponent,\n  ],\n})\nexport class PrizmCarouselModule {}\n","/**\n * TODO remove in 2.0 version\n * @deprecated\n * use PrizmInputCarouselControlsState\n * */\nexport interface PrizmCarouselControlsState {\n  leftCtrlDisabled: boolean;\n  stepleftCtrlDisabled: boolean;\n  stepRightCtrlDisabled: boolean;\n  rightCtrlDisabled: boolean;\n}\n\nexport type PrizmInputCarouselControlsState = PrizmCarouselControlsState;\n\n/**\n * TODO remove in 2.0 version\n * @deprecated\n * use prizmInputCarouselDefaultControlsState\n * */\nexport const prizmDefaultCarouselControlsState: PrizmCarouselControlsState = {\n  leftCtrlDisabled: true,\n  stepleftCtrlDisabled: true,\n  stepRightCtrlDisabled: true,\n  rightCtrlDisabled: true,\n};\n\nexport const prizmInputCarouselDefaultControlsState = prizmDefaultCarouselControlsState;\n\n/**\n * TODO remove in 2.0 version\n * @deprecated\n * use PrizmInputCarouselContent\n * */\nexport interface PrizmCarouselContent {\n  currentValue: any;\n  currentValueNotSet: boolean;\n\n  setCurrentValue(value: any): void;\n\n  controlsState: PrizmCarouselControlsState;\n\n  stepLeft(): void;\n\n  left(): void;\n\n  stepRight(): void;\n\n  right(): void;\n}\n\nexport type PrizmInputCarouselContent = PrizmCarouselContent;\n","import { prizmDefaultCarouselControlsState, PrizmCarouselContent } from './carousel-content.interface';\n/**\n * TODO remove in 2.0 version\n * @deprecated\n * use PrizmInputCarouselArrayContent\n * */\nexport class PrizmCarouselArrayContent<T> implements PrizmCarouselContent {\n  private currentIndex = -1;\n  currentValue: T = undefined as any;\n\n  public controlsState = { ...prizmDefaultCarouselControlsState };\n\n  constructor(\n    public set: Array<T>,\n    private searchFn: (arrayItem: T, findEl: T) => boolean = (item, el): boolean => item === el\n  ) {}\n\n  get first(): T {\n    return this.set[0];\n  }\n\n  get last(): T {\n    return this.set[this.set.length - 1];\n  }\n\n  public setCurrentValue(element: T): void {\n    this.currentIndex = this.set.findIndex(item => this.searchFn(item, element));\n    this.currentValue = this.currentIndex === -1 ? undefined : (this.set[this.currentIndex] as any);\n\n    this.updateControlsState();\n  }\n\n  get currentValueNotSet(): boolean {\n    return this.currentIndex === -1;\n  }\n\n  public stepLeft(): void {\n    this.currentIndex--;\n    this.currentValue = this.set[this.currentIndex];\n\n    this.updateControlsState();\n  }\n\n  public left(): void {\n    this.currentIndex = 0;\n    this.currentValue = this.set[this.currentIndex];\n    this.updateControlsState();\n  }\n\n  public stepRight(): void {\n    ++this.currentIndex;\n    this.currentValue = this.set[this.currentIndex];\n    this.updateControlsState();\n  }\n\n  public right(): void {\n    this.currentIndex = this.set.length - 1;\n    this.currentValue = this.set[this.currentIndex];\n    this.updateControlsState();\n  }\n\n  private updateControlsState(): void {\n    if (this.currentIndex === 0) {\n      this.controlsState.leftCtrlDisabled = true;\n      this.controlsState.stepleftCtrlDisabled = true;\n      this.controlsState.stepRightCtrlDisabled = false;\n      this.controlsState.rightCtrlDisabled = false;\n      return;\n    }\n\n    if (this.currentIndex === this.set.length - 1) {\n      this.controlsState.leftCtrlDisabled = false;\n      this.controlsState.stepleftCtrlDisabled = false;\n      this.controlsState.stepRightCtrlDisabled = true;\n      this.controlsState.rightCtrlDisabled = true;\n      return;\n    }\n\n    if (this.currentIndex === -1) {\n      this.controlsState.leftCtrlDisabled = true;\n      this.controlsState.stepleftCtrlDisabled = true;\n      this.controlsState.stepRightCtrlDisabled = true;\n      this.controlsState.rightCtrlDisabled = true;\n      return;\n    }\n\n    this.controlsState.leftCtrlDisabled = false;\n    this.controlsState.stepleftCtrlDisabled = false;\n    this.controlsState.stepRightCtrlDisabled = false;\n    this.controlsState.rightCtrlDisabled = false;\n  }\n}\n\nexport class PrizmInputCarouselArrayContent<T> extends PrizmCarouselArrayContent<T> {}\n","import { prizmDefaultCarouselControlsState, PrizmCarouselContent } from './carousel-content.interface';\n/**\n * TODO remove in 2.0 version\n * @deprecated\n * use PrizmInputCarouselYearMonthValue\n * */\nexport type PrizmCarouselYearMonthValue = { year: number; month: number };\nexport type PrizmInputCarouselYearMonthValue = PrizmCarouselYearMonthValue;\n\n/**\n * TODO remove in 2.0 version\n * @deprecated\n * use PrizmInputCarouselYearMonth\n * */\nexport class PrizmCarouselYearMonth implements PrizmCarouselContent {\n  currentValue: PrizmCarouselYearMonthValue = undefined as any;\n\n  public min: PrizmCarouselYearMonthValue = { month: 1, year: Number.NEGATIVE_INFINITY };\n  public max: PrizmCarouselYearMonthValue = { month: 12, year: Number.POSITIVE_INFINITY };\n\n  constructor(min?: PrizmCarouselYearMonthValue, max?: PrizmCarouselYearMonthValue) {\n    if (min) {\n      this.min = min;\n    }\n\n    if (max) {\n      this.min = min as any;\n    }\n  }\n\n  public controlsState = { ...prizmDefaultCarouselControlsState };\n\n  public setCurrentValue(element: PrizmCarouselYearMonthValue): void {\n    this.currentValue = element;\n    this.updateControlsState();\n  }\n\n  get currentValueNotSet(): boolean {\n    return this.currentValue === undefined;\n  }\n\n  public left(): void {\n    const newValue = { ...this.currentValue, year: this.currentValue.year - 1 };\n    if (['gt', 'eq'].includes(this.compare(newValue, this.min))) {\n      this.currentValue = { ...newValue };\n    } else {\n      this.currentValue = { ...this.min };\n    }\n\n    this.updateControlsState();\n  }\n\n  public stepLeft(): void {\n    if (this.currentValue.month === 1) {\n      this.currentValue = { year: this.currentValue.year - 1, month: 12 };\n    } else {\n      this.currentValue = { ...this.currentValue, month: this.currentValue.month - 1 };\n    }\n\n    this.updateControlsState();\n  }\n\n  public stepRight(): void {\n    if (this.currentValue.month === 12) {\n      this.currentValue = { year: this.currentValue.year + 1, month: 1 };\n    } else {\n      this.currentValue = { ...this.currentValue, month: this.currentValue.month + 1 };\n    }\n\n    this.updateControlsState();\n  }\n\n  public right(): void {\n    const newValue = { ...this.currentValue, year: this.currentValue.year + 1 };\n    if (['lt', 'eq'].includes(this.compare(newValue, this.max))) {\n      this.currentValue = { ...newValue };\n    } else {\n      this.currentValue = { ...this.max };\n    }\n\n    this.updateControlsState();\n  }\n\n  private updateControlsState(): void {\n    if (this.currentValue === undefined) {\n      this.controlsState.leftCtrlDisabled = true;\n      this.controlsState.stepleftCtrlDisabled = true;\n      this.controlsState.stepRightCtrlDisabled = true;\n      this.controlsState.rightCtrlDisabled = true;\n      return;\n    }\n\n    if (this.compare(this.currentValue, this.min) === 'eq') {\n      this.controlsState.leftCtrlDisabled = true;\n      this.controlsState.stepleftCtrlDisabled = true;\n      this.controlsState.stepRightCtrlDisabled = false;\n      this.controlsState.rightCtrlDisabled = false;\n      return;\n    }\n\n    if (this.compare(this.currentValue, this.max) === 'eq') {\n      this.controlsState.leftCtrlDisabled = false;\n      this.controlsState.stepleftCtrlDisabled = false;\n      this.controlsState.stepRightCtrlDisabled = true;\n      this.controlsState.rightCtrlDisabled = true;\n      return;\n    }\n\n    this.controlsState.leftCtrlDisabled = false;\n    this.controlsState.stepleftCtrlDisabled = false;\n    this.controlsState.stepRightCtrlDisabled = false;\n    this.controlsState.rightCtrlDisabled = false;\n  }\n\n  private compare(\n    value1?: PrizmCarouselYearMonthValue,\n    value2?: PrizmCarouselYearMonthValue\n  ): 'lt' | 'eq' | 'gt' {\n    const v2 = value2 as any;\n    const v1 = value1 as any;\n    if (!value1 || !value1) return 'eq';\n    if (v1.year < v2.year) {\n      return 'lt';\n    }\n\n    if (v1.year > v2.year) {\n      return 'gt';\n    }\n\n    if (v1.year === v2.year) {\n      if (v1.month < v2.month) {\n        return 'lt';\n      }\n\n      if (v1.month > v2.month) {\n        return 'gt';\n      }\n      return 'eq';\n    }\n\n    return 'eq';\n  }\n}\n\nexport class PrizmInputCarouselYearMonth extends PrizmCarouselYearMonth {}\n","import { Component, Input } from '@angular/core';\nimport { PrizmInputCarousel } from './types';\nimport { NgIf } from '@angular/common';\nimport { PrizmInputCommonModule } from '../common';\n\n@Component({\n  selector: 'prizm-input-carousel-auxiliary-left',\n  template: `\n    <button\n      *ngIf=\"!carousel.lightMode && !carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.leftCtrlDisabled\"\n      (click)=\"carousel.left()\"\n      prizmInputIconButton=\"chevrons-double-left\"\n    ></button>\n    <button\n      *ngIf=\"!carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.stepleftCtrlDisabled\"\n      (click)=\"carousel.stepLeft()\"\n      prizmInputIconButton=\"chevrons-left\"\n    ></button>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        align-items: center;\n      }\n    `,\n  ],\n  standalone: true,\n  imports: [NgIf, PrizmInputCommonModule],\n})\nexport class PrizmInputCarouselAuxiliaryLeftComponent {\n  @Input() carousel!: PrizmInputCarousel;\n}\n","import { Component, Input } from '@angular/core';\nimport { PrizmInputCarousel } from './types';\nimport { NgIf } from '@angular/common';\nimport { PrizmInputCommonModule } from '../common';\n\n@Component({\n  selector: 'prizm-input-carousel-auxiliary-right',\n  template: `\n    <button\n      *ngIf=\"!carousel.disabled\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.stepRightCtrlDisabled\"\n      (click)=\"carousel.stepRight()\"\n      prizmInputIconButton=\"chevrons-right\"\n    ></button>\n    <button\n      *ngIf=\"!carousel.disabled && !carousel.lightMode\"\n      [interactive]=\"true\"\n      [disabled]=\"!!carousel.carouselContent?.controlsState?.rightCtrlDisabled\"\n      (click)=\"carousel.right()\"\n      prizmInputIconButton=\"chevrons-double-right\"\n    ></button>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        align-items: center;\n      }\n    `,\n  ],\n  standalone: true,\n  imports: [NgIf, PrizmInputCommonModule],\n})\nexport class PrizmInputCarouselAuxiliaryRightComponent {\n  @Input() carousel!: PrizmInputCarousel;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmInputCarouselContent } from './carousel-content/carousel-content.interface';\nimport { PrizmInputCommonModule, PrizmInputNgControl } from '../common';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmInputCarousel } from './types';\nimport { NgIf } from '@angular/common';\nimport { PrizmInputCarouselAuxiliaryLeftComponent } from './input-carousel-auxiliary-left.component';\nimport { PrizmInputCarouselAuxiliaryRightComponent } from './input-carousel-auxiliary-right.component';\n\n@Component({\n  selector: 'prizm-input-carousel',\n  templateUrl: './input-carousel.component.html',\n  styleUrls: ['./input-carousel.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: PrizmInputControl,\n      useExisting: PrizmInputCarouselComponent,\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputCarouselComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n  ],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.ng-filled]': '!empty',\n    class: 'prizm-carousel',\n    '[attr.tabindex]': \"disabled ? null : '0'\",\n  },\n  standalone: true,\n  imports: [\n    NgIf,\n    PrizmInputCommonModule,\n    PrizmInputCarouselAuxiliaryLeftComponent,\n    PrizmInputCarouselAuxiliaryRightComponent,\n  ],\n})\nexport class PrizmInputCarouselComponent\n  extends PrizmInputNgControl<any>\n  implements ControlValueAccessor, PrizmInputCarousel\n{\n  override readonly testId_ = 'ui-area--carousel';\n  @Input() carouselContent!: PrizmInputCarouselContent;\n\n  @Input() lightMode = false;\n\n  hasClearButton = false;\n  nativeElementType = 'carousel';\n  focused = false;\n\n  constructor(\n    @Inject(Injector) injector: Injector,\n    private el: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) {\n    super(injector);\n  }\n\n  public override ngOnInit() {\n    super.ngOnInit();\n\n    this.value$\n      .pipe(\n        tap(value => this.carouselContent.setCurrentValue(value)),\n        tap(() => this.changeDetectorRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public left(): void {\n    if (this.carouselContent.controlsState.leftCtrlDisabled) return;\n    this.carouselContent.left();\n    this.updateFromContent();\n  }\n\n  public stepLeft(): void {\n    if (this.carouselContent.controlsState.stepleftCtrlDisabled) return;\n    this.carouselContent.stepLeft();\n    this.updateFromContent();\n  }\n\n  public stepRight(): void {\n    if (this.carouselContent.controlsState.stepRightCtrlDisabled) return;\n    this.carouselContent.stepRight();\n    this.updateFromContent();\n  }\n\n  public right(): void {\n    if (this.carouselContent.controlsState.rightCtrlDisabled) return;\n    this.carouselContent.right();\n    this.updateFromContent();\n  }\n\n  private updateFromContent(): void {\n    super.updateValue(this.carouselContent.currentValue);\n\n    this.cdr.detectChanges();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('focus', ['$event'])\n  onFocus(): void {\n    this.focused = true;\n    this.stateChanges.next();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('blur', ['$event'])\n  onBlur(): void {\n    this.focused = false;\n    this.stateChanges.next();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowleft', ['$event']) onArrowLeft(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.stepLeft();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  @HostListener('keydown.arrowright', ['$event']) onArrowRight(event: KeyboardEvent): void {\n    event.preventDefault();\n    this.stepRight();\n  }\n\n  public override clear(ev: MouseEvent) {\n    super.clear(ev);\n    this.carouselContent.setCurrentValue(null);\n  }\n\n  public focus(): void {\n    this.el.nativeElement.focus();\n  }\n}\n","<ng-container *ngIf=\"!empty; else emptyTpl\">\n  <ng-content></ng-content>\n</ng-container>\n\n<ng-template #emptyTpl>&nbsp;</ng-template>\n\n<ng-container *prizmInputLayoutLeft>\n  <prizm-input-carousel-auxiliary-left [carousel]=\"this\"> </prizm-input-carousel-auxiliary-left>\n</ng-container>\n\n<ng-container *prizmInputLayoutRight>\n  <prizm-input-carousel-auxiliary-right [carousel]=\"this\"> </prizm-input-carousel-auxiliary-right>\n</ng-container>\n","import { NgModule } from '@angular/core';\n\nimport { PrizmInputCommonModule } from '../common/input-common.module';\nimport { PrizmInputCarouselComponent } from './input-carousel.component';\nimport { PrizmInputCarouselAuxiliaryLeftComponent } from './input-carousel-auxiliary-left.component';\nimport { PrizmInputCarouselAuxiliaryRightComponent } from './input-carousel-auxiliary-right.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmInputCommonModule,\n    PrizmInputCarouselComponent,\n    PrizmInputCarouselAuxiliaryLeftComponent,\n    PrizmInputCarouselAuxiliaryRightComponent,\n  ],\n  exports: [PrizmInputCarouselComponent, PrizmInputCommonModule],\n})\nexport class PrizmInputCarouselModule {}\n","import { Provider } from '@angular/core';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PRIZM_DATE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\n\ntype From = PrizmDay | null;\ntype To = Date | null;\n\nexport class PrizmInputDateNativeTransformer implements PrizmControlValueTransformer<From, To> {\n  public fromControlValue(controlValue: To): From {\n    return controlValue && PrizmDay.fromLocalNativeDate(controlValue);\n  }\n\n  public toControlValue(componentValue: From): To {\n    return componentValue?.toLocalNativeDate() || null;\n  }\n}\n\nexport function prizmGetInputDateNativeTransformer(): Provider {\n  return {\n    provide: PRIZM_DATE_VALUE_TRANSFORMER,\n    useClass: PrizmInputDateNativeTransformer,\n  };\n}\n","import { Optional, Provider } from '@angular/core';\nimport { PrizmDropdownControllerDirective } from '../directives/dropdown-controller/dropdown-controller.directive';\nimport { PRIZM_DROPDOWN_CONTROLLER } from '../directives/dropdown-controller/dropdown-controller.token';\n\nexport function prizmFixedDropdownControllerFactory(\n  directive: PrizmDropdownControllerDirective | null\n): PrizmDropdownControllerDirective {\n  directive = directive || new PrizmDropdownControllerDirective();\n  directive.limitWidth = `fixed`;\n\n  return directive;\n}\n\nexport const PRIZM_FIXED_DROPDOWN_CONTROLLER_PROVIDER: Provider = [\n  {\n    provide: PRIZM_DROPDOWN_CONTROLLER,\n    deps: [[new Optional(), PrizmDropdownControllerDirective]],\n    useFactory: prizmFixedDropdownControllerFactory,\n  },\n];\n\nexport function prizmLeftAlignedDropdownControllerFactory(\n  directive: PrizmDropdownControllerDirective | null\n): PrizmDropdownControllerDirective {\n  directive = directive || new PrizmDropdownControllerDirective();\n  directive.align = `left`;\n\n  return directive;\n}\n\nexport const PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER: Provider = [\n  {\n    provide: PRIZM_DROPDOWN_CONTROLLER,\n    deps: [[new Optional(), PrizmDropdownControllerDirective]],\n    useFactory: prizmLeftAlignedDropdownControllerFactory,\n  },\n];\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Provider,\n  SimpleChanges,\n  Type,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormControl,\n  NgControl,\n  NgModel,\n} from '@angular/forms';\nimport { merge, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil, tap } from 'rxjs/operators';\nimport { AbstractPrizmInteractive } from './interactive';\nimport { PRIZM_EMPTY_FUNCTION, prizmAssert, prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmControlValueTransformer } from '../types/control-value-transformer';\n\n/**\n * Basic ControlValueAccessor class to build form components upon\n */\n@Directive()\nexport abstract class AbstractPrizmControl<T>\n  extends AbstractPrizmInteractive\n  implements OnDestroy, OnInit, OnChanges, ControlValueAccessor\n{\n  private previousInternalValue?: T | null;\n  private readonly internalValue$$ = new Subject<T | null>();\n  public readonly internalValue$ = this.internalValue$$.asObservable();\n  private onTouched = PRIZM_EMPTY_FUNCTION;\n\n  private onChange = PRIZM_EMPTY_FUNCTION;\n\n  protected readonly fallbackValue = this.getFallbackValue();\n\n  protected readonly destroy$ = new Subject<void>();\n  private readonly controlReadySource$ = new ReplaySubject<void>(1);\n  public readonly controlReady$ = this.controlReadySource$.asObservable();\n\n  @Input()\n  @HostBinding('class._readonly')\n  @prizmDefaultProp()\n  readOnly = false;\n\n  /**\n   * @deprecated\n   * later work only with form control value\n   * */\n  @Input()\n  @prizmDefaultProp()\n  val!: T;\n\n  @Input()\n  @prizmDefaultProp()\n  pseudoInvalid: boolean | null = null;\n\n  /**\n   * @deprecated\n   * later work only with form control value\n   * */\n  @Output()\n  readonly valChange = new EventEmitter<T>();\n\n  protected constructor(\n    private readonly ngControl: NgControl | null,\n    protected readonly changeDetectorRef: ChangeDetectorRef,\n    protected readonly valueTransformer?: PrizmControlValueTransformer<T> | null\n  ) {\n    super();\n\n    if (this.ngControl === null) {\n      prizmAssert.assert(\n        false,\n        `NgControl not injected in ${this.constructor.name}!\\n`,\n        'Use [(ngModel)] or [formControl] or formControlName for correct work.'\n      );\n      this.ngControl = new UntypedFormControl() as unknown as NgControl;\n    } else {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  protected abstract getFallbackValue(): T;\n\n  @HostBinding('class._invalid')\n  get computedInvalid(): boolean {\n    return (\n      this.interactive && (this.pseudoInvalid != null ? this.pseudoInvalid : this.touched && this.invalid)\n    );\n  }\n\n  get value(): T {\n    return this.previousInternalValue ?? this.fallbackValue;\n  }\n\n  get safeCurrentValue(): T {\n    return this.rawValue ?? this.fallbackValue;\n  }\n\n  get invalid(): boolean {\n    return this.safeNgControlData<boolean>(({ invalid }) => invalid, false);\n  }\n\n  get valid(): boolean {\n    return this.safeNgControlData<boolean>(({ valid }) => valid, false);\n  }\n\n  get touched(): boolean {\n    return this.safeNgControlData<boolean>(({ touched }) => touched, false);\n  }\n\n  get disabled(): boolean {\n    return this.safeNgControlData<boolean>(({ disabled }) => disabled, false);\n  }\n\n  get interactive(): boolean {\n    return !this.readOnly && !this.computedDisabled;\n  }\n\n  get control(): AbstractControl | null {\n    return this.safeNgControlData<AbstractControl | null>(({ control }) => control, null);\n  }\n\n  get computedName(): string | null {\n    return this.controlName?.toString() ?? null;\n  }\n\n  protected get controlName(): string | null {\n    return this.ngControl?.name?.toString() ?? null;\n  }\n\n  private get rawValue(): T | undefined {\n    const { ngControl } = this;\n\n    if (ngControl === null) {\n      return undefined;\n    }\n\n    const controlValue =\n      ngControl instanceof NgModel && this.previousInternalValue === undefined\n        ? ngControl.viewModel\n        : ngControl.value;\n\n    return this.fromControlValue(controlValue);\n  }\n\n  ngOnInit(): void {\n    if (!this.ngControl?.valueChanges || !this.ngControl?.statusChanges) {\n      return;\n    }\n    this.controlReadySource$.next();\n\n    merge(this.ngControl.valueChanges, this.ngControl.statusChanges)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.refreshLocalValue(this.safeCurrentValue));\n\n    this.control?.valueChanges\n      .pipe(\n        map(() => this.control?.value),\n        filter(currentValue => {\n          return this.valueChanged(this.val, currentValue);\n        }),\n        tap(items => this.updateInputValue(items)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated\n   * later work only with form control value\n   * */\n  private updateInputValue(value: T): void {\n    if (!this.valueChanged(this.val, value)) return;\n    this.valChange.next((this.val = value));\n  }\n\n  protected valueChanged(previousValue: T | null, currentValue: T | null): boolean {\n    return previousValue !== currentValue;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.val) {\n      this.updateValue(this.val);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public checkControlUpdate(): void {\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public registerOnChange(onChange: (value: T | unknown) => void): void {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.onChange = (componentValue: T): void => {\n      onChange(this.toControlValue(componentValue));\n    };\n  }\n\n  public registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n\n  public setDisabledState(): void {\n    this.checkControlUpdate();\n  }\n\n  public writeValue(value: T | null): void {\n    const controlValue =\n      this.ngControl instanceof NgModel && this.previousInternalValue === undefined\n        ? this.ngControl.model\n        : value;\n\n    this.refreshLocalValue(this.fromControlValue(controlValue));\n  }\n\n  protected override updateFocused(focused: boolean): void {\n    if (!focused) {\n      this.controlMarkAsTouched();\n    }\n\n    super.updateFocused(focused);\n  }\n\n  protected updateValue(value: T): void {\n    if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n      return;\n    }\n\n    this.previousInternalValue = value;\n    this.controlSetValue(value);\n  }\n\n  protected valueIdenticalComparator(oldValue: T, newValue: T): boolean {\n    return oldValue === newValue;\n  }\n\n  private safeNgControlData<T>(\n    extractor: (ngControl: NgControl) => T | null | undefined,\n    defaultFieldValue: T\n  ): T {\n    return (this.ngControl && extractor(this.ngControl)) ?? defaultFieldValue;\n  }\n\n  private controlMarkAsTouched(): void {\n    this.onTouched();\n    this.checkControlUpdate();\n  }\n\n  private controlSetValue(value: T): void {\n    this.onChange(value);\n    this.updateInputValue(value);\n    this.checkControlUpdate();\n  }\n\n  private refreshLocalValue(value: T | null): void {\n    this.previousInternalValue = value;\n    this.internalValue$$.next(value);\n    this.checkControlUpdate();\n  }\n\n  private fromControlValue(controlValue: unknown): T {\n    return this.valueTransformer ? this.valueTransformer.fromControlValue(controlValue) : (controlValue as T);\n  }\n\n  private toControlValue(componentValue: T): unknown {\n    return this.valueTransformer ? this.valueTransformer.toControlValue(componentValue) : componentValue;\n  }\n}\n\nexport function prizmAsControl<T>(useExisting: Type<AbstractPrizmControl<T>>): Provider {\n  return {\n    provide: AbstractPrizmControl,\n    useExisting,\n  };\n}\n","import { forwardRef, Optional, Provider, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';\nimport { PRIZM_DATE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';\nimport { PrizmInputDateComponent } from './date.component';\nimport { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { AbstractPrizmControl } from '../../../abstract/control';\n\nexport const DATE_STREAM_FACTORY = <T extends PrizmDay>(\n  control: NgControl | null,\n  valueTransformer: PrizmControlValueTransformer<T>\n): Observable<T | null> | null => prizmReplayControlValueChangesFactory<T>(control, valueTransformer);\n\nexport const PRIZM_INPUT_DATE_PROVIDERS = [\n  {\n    provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => PrizmInputDateComponent),\n  },\n  {\n    provide: PRIZM_CALENDAR_DATA_STREAM,\n    deps: [\n      [new Optional(), new Self(), NgControl],\n      [new Optional(), PRIZM_DATE_VALUE_TRANSFORMER],\n    ],\n    useFactory: DATE_STREAM_FACTORY,\n  },\n  {\n    provide: AbstractPrizmControl,\n    useExisting: forwardRef(() => PrizmInputDateComponent),\n  },\n  PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n];\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PRIZM_ANIMATIONS_DURATION } from '../../../tokens';\nimport { PRIZM_DIALOG_CLOSE_STREAM, PRIZM_DIALOG_PROVIDERS } from './dialog-options';\nimport { PrizmAnimationOptions, prizmFadeIn, prizmSlideInTop } from '../../../animations';\nimport { prizmPure } from '@prizm-ui/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport {\n  PrizmBaseDialogContext,\n  PrizmDialogButton,\n  PrizmDialogOptions,\n  PrizmDialogSize,\n} from './dialog.models';\nimport { PolymorphContent, PolymorphModule, PrizmFocusTrapModule } from '../../../directives';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmOverlayModule } from '../../../modules';\nimport { PrizmButtonModule } from '../../button';\nimport { PrizmInputIconButtonModule } from '../../input/common/input-icon-button/input-icon-button.module';\nimport { PrizmScrollbarModule } from '../../scrollbar';\n\n@Component({\n  selector: 'prizm-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: PRIZM_DIALOG_PROVIDERS,\n  animations: [prizmSlideInTop, prizmFadeIn],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PolymorphModule,\n    PrizmThemeModule,\n    PrizmOverlayModule,\n    PrizmButtonModule,\n    PrizmFocusTrapModule,\n    PrizmInputIconButtonModule,\n    PrizmScrollbarModule,\n  ],\n})\nexport class PrizmDialogComponent<O = unknown, DATA = unknown> extends PrizmAbstractTestId {\n  @Input()\n  public context!: PrizmBaseDialogContext<O, PrizmDialogOptions<O, DATA>>;\n\n  @Input()\n  public close!: () => void;\n\n  @HostBinding('attr.prizm-size')\n  public get size(): PrizmDialogSize {\n    return this.context.size;\n  }\n\n  @HostBinding('attr.prizm-dialog-id')\n  public get id(): string {\n    return this.context.id as string;\n  }\n\n  @HostBinding('@prizmSlideInTop')\n  @HostBinding('@prizmFadeIn')\n  public get slideInTop(): PrizmAnimationOptions {\n    return this.animation;\n  }\n\n  override readonly testId_ = 'ui_overlay';\n\n  @HostBinding('style.width')\n  readonly width = '100%';\n\n  @prizmPure\n  public get isFooterArray(): boolean {\n    return Boolean(this.footer && Array.isArray(this.footer) && this.footer.length);\n  }\n\n  @prizmPure\n  public get footer():\n    | PolymorphContent<PrizmBaseDialogContext<O, PrizmDialogOptions<O, DATA>>>\n    | PrizmDialogButton<O, PrizmDialogOptions<O, DATA>>[] {\n    return (this.context.footer ?? [\n      {\n        size: this.context.size,\n        action: (ctx: PrizmBaseDialogContext<O, PrizmDialogOptions<O, DATA>>): void => {\n          ctx.completeWith(null as any);\n        },\n        text: this.context.closeWord,\n      },\n    ]) as any;\n  }\n\n  private readonly animation = {\n    value: '',\n    params: {\n      start: '40px',\n      duration: this.duration,\n    },\n  } as const;\n\n  constructor(\n    @Inject(PRIZM_ANIMATIONS_DURATION) private readonly duration: number,\n    @Inject(PRIZM_DIALOG_CLOSE_STREAM) readonly close$: Observable<unknown>,\n    private readonly destroy$: PrizmDestroyService\n  ) {\n    super();\n    close$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.close();\n    });\n  }\n}\n","<div class=\"host\" prizmFocusTrap prizmTheme>\n  <ng-container *polymorphOutlet=\"context.outerHeader as data; context: context\">\n    <div class=\"header prizm-font-title-h4\" *ngIf=\"context.header || context.outerHeader\">\n      <div class=\"title\" *polymorphOutlet=\"context.header as data; context: context\">\n        {{ data }}\n      </div>\n      <button\n        *ngIf=\"context.closeable\"\n        (click)=\"close()\"\n        size=\"m\"\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        prizmIconButton\n        icon=\"cancel-close\"\n      ></button>\n    </div>\n  </ng-container>\n\n  <div class=\"content prizm-font-main-body-14\">\n    <prizm-scrollbar class=\"scrollbar\" [visibility]=\"context.scrollbarVisibility ?? 'auto'\">\n      <div *polymorphOutlet=\"$any(context.content) as text; context: $any(context)\">\n        {{ text }}\n      </div>\n    </prizm-scrollbar>\n  </div>\n\n  <div class=\"footer prizm-font-btn-links-14\" *ngIf=\"footer\" [style]=\"context.footerStyle\">\n    <ng-container *polymorphOutlet=\"$any(footer) as data; context: context\">\n      <div class=\"buttons\" *ngIf=\"isFooterArray; else temp\">\n        <button\n          *ngFor=\"let footerButton of data\"\n          [style]=\"footerButton.style\"\n          [appearance]=\"footerButton.appearance\"\n          [appearanceType]=\"footerButton.appearanceType\"\n          [size]=\"context.size\"\n          (click)=\"footerButton.action(context)\"\n          prizmButton\n        >\n          {{ footerButton.text }}\n        </button>\n      </div>\n      <ng-template #temp>\n        {{ data }}\n      </ng-template>\n    </ng-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmDialogComponent } from './dialog.component';\n\n/**\n * @deprecated\n * use standalone component instead\n * */\n@NgModule({\n  imports: [PrizmDialogComponent],\n  declarations: [],\n  exports: [PrizmDialogComponent],\n})\nexport class PrizmDialogModule {}\n","import { AbstractPrizmDialogService } from '../../../abstract/dialog.service';\nimport { Injectable } from '@angular/core';\nimport { PrizmDialogComponent } from './dialog.component';\nimport { PrizmOverlayInsidePlacement } from '../../../modules/overlay';\nimport { PrizmDialogOptions } from './dialog.models';\n\nconst DEFAULT_OPTIONS: PrizmDialogOptions = {\n  size: 'm',\n  required: false,\n  closeable: true,\n  content: '',\n  footer: '',\n  position: PrizmOverlayInsidePlacement.CENTER,\n  dismissible: true,\n  header: '',\n  outerHeader: '',\n} as const;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmDialogService extends AbstractPrizmDialogService<PrizmDialogOptions> {\n  protected readonly component = PrizmDialogComponent;\n  protected readonly defaultOptions: PrizmDialogOptions = DEFAULT_OPTIONS;\n}\n","import { Directive } from '@angular/core';\nimport { AbstractPrizmControl } from './control';\n\n@Directive()\nexport abstract class AbstractPrizmNullableControl<T> extends AbstractPrizmControl<T | null> {\n  protected getFallbackValue(): T | null {\n    return null;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PrizmDayWithStatus } from '../../../@core/date-time/day-with-status';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmRangeState } from '../../../@core/enums';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmInteractiveState } from '../../../directives/wrapper';\nimport {\n  getShortWeekDays,\n  PRIZM_ORDERED_SHORT_WEEK_DAYS,\n  PRIZM_WEEK_DAYS_NAMES,\n} from '../../../tokens/ordered-short-week-days';\nimport { PrizmColor } from '../../../types/color';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { PrizmLanguageCore } from '@prizm-ui/i18n';\nimport { PRIZM_SHORT_WEEK_DAYS } from '../../../tokens/i18n';\nimport { prizmI18nInitWithKey } from '../../../services/i18n.service';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCallFuncPipe, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmCalendarSheetPipeModule, PrizmMapperPipeModule } from '../../../pipes';\nimport { PrizmRepeatTimesModule } from '../../../directives/repeat-times/repeat-times.module';\nimport { PrizmHoveredModule } from '../../../directives/hovered/hovered.module';\nimport { PrizmPressedModule } from '../../../directives/pressed/pressed.module';\n\n@Component({\n  selector: `prizm-primitive-calendar`,\n  templateUrl: `./primitive-calendar.component.html`,\n  styleUrls: [`./primitive-calendar.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmLetDirective,\n    PrizmMapperPipeModule,\n    PrizmRepeatTimesModule,\n    PrizmCallFuncPipe,\n    PrizmHoveredModule,\n    PrizmPressedModule,\n    PrizmCalendarSheetPipeModule,\n  ],\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_SHORT_WEEK_DAYS, 'shortWeekDays'),\n    {\n      provide: PRIZM_ORDERED_SHORT_WEEK_DAYS,\n      useFactory: (days: Observable<PrizmLanguageCore['shortWeekDays']>) => {\n        return getShortWeekDays(days);\n      },\n      deps: [PRIZM_SHORT_WEEK_DAYS],\n    },\n  ],\n})\nexport class PrizmPrimitiveCalendarComponent extends PrizmAbstractTestId {\n  pressedItem: PrizmDay | null = null;\n  private readonly today = PrizmDay.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  month: PrizmMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmDayRange | PrizmDay | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  daysWithStatus: PrizmDayWithStatus[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  hoveredItem: PrizmDay | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  showAdjacent = true;\n\n  @Output()\n  readonly hoveredItemChange = new EventEmitter<PrizmDay | null>();\n\n  @Output()\n  readonly dayClick = new EventEmitter<PrizmDay>();\n\n  override readonly testId_ = 'ui_primitive_calendar';\n\n  constructor(\n    @Inject(PRIZM_ORDERED_SHORT_WEEK_DAYS)\n    readonly weekDays$: Observable<PRIZM_WEEK_DAYS_NAMES>\n  ) {\n    super();\n  }\n\n  @HostBinding(`class._single`)\n  get isSingle(): boolean {\n    return this.value !== null && (this.value instanceof PrizmDay || this.value.isSingleDay);\n  }\n\n  readonly toMarkers = (\n    day: PrizmDay,\n    today: boolean,\n    inRange: boolean\n  ): null | [PrizmColor | string] | [PrizmColor | string, PrizmColor | string] => {\n    if (today || inRange) {\n      return null;\n    }\n\n    const markers = this.markerHandler(day);\n\n    return markers.length === 0 ? null : markers;\n  };\n\n  public getItemState(item: PrizmDay): PrizmInteractiveState | null {\n    const { disabledItemHandler, pressedItem, hoveredItem } = this;\n\n    if (disabledItemHandler(item)) {\n      return PrizmInteractiveState.Disabled;\n    }\n\n    if (pressedItem?.daySame(item)) {\n      return PrizmInteractiveState.Pressed;\n    }\n\n    if (hoveredItem?.daySame(item)) {\n      return PrizmInteractiveState.Hovered;\n    }\n\n    return null;\n  }\n\n  public getItemRange(item: PrizmDay): PrizmRangeState | null {\n    const { value, hoveredItem } = this;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value instanceof PrizmDay) {\n      return value.daySame(item) ? PrizmRangeState.Single : null;\n    }\n\n    if (\n      (value.from.daySame(item) && !value.isSingleDay) ||\n      (hoveredItem?.dayAfter(value.from) && value.from.daySame(item) && value.isSingleDay) ||\n      (hoveredItem?.daySame(item) && hoveredItem.dayBefore(value.from) && value.isSingleDay)\n    ) {\n      return PrizmRangeState.Start;\n    }\n\n    if (\n      (value.to.daySame(item) && !value.isSingleDay) ||\n      (hoveredItem?.dayBefore(value.from) && value.from.daySame(item) && value.isSingleDay) ||\n      (hoveredItem?.daySame(item) && hoveredItem.dayAfter(value.from) && value.isSingleDay)\n    ) {\n      return PrizmRangeState.End;\n    }\n\n    return value.isSingleDay && value.from.daySame(item) ? PrizmRangeState.Single : null;\n  }\n\n  public itemIsToday(item: PrizmDay): boolean {\n    return this.today.daySame(item);\n  }\n\n  public itemIsUnavailable(item: PrizmDay): boolean {\n    return !this.month.monthSame(item);\n  }\n\n  public itemIsInterval(day: PrizmDay): boolean {\n    const { value, hoveredItem } = this;\n\n    if (value === null || value instanceof PrizmDay) {\n      return false;\n    }\n\n    if (!value.isSingleDay) {\n      return value.from.daySameOrBefore(day) && value.to.dayAfter(day);\n    }\n\n    if (hoveredItem === null) {\n      return false;\n    }\n\n    const range = PrizmDayRange.sort(value.from, hoveredItem);\n\n    return range.from.daySameOrBefore(day) && range.to.dayAfter(day);\n  }\n\n  public onItemHovered(item: PrizmDay | false): void {\n    this.updateHoveredItem(item || null);\n  }\n\n  public onItemPressed(item: PrizmDay | false): void {\n    this.pressedItem = item || null;\n  }\n\n  public onItemClick(item: PrizmDay): void {\n    this.dayClick.emit(item);\n  }\n\n  private updateHoveredItem(day: PrizmDay | null): void {\n    if (prizmNullableSame(this.hoveredItem, day, (a, b) => a.daySame(b))) {\n      return;\n    }\n\n    this.hoveredItem = day;\n    this.hoveredItemChange.emit(day);\n  }\n\n  public capitalizeFirstLetter(string: string): string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n  }\n\n  public getDayStatus(day: PrizmDay, daysWithStatus: PrizmDayWithStatus[]): string | null {\n    return daysWithStatus.find(dayWithStatus => dayWithStatus.daySame(day))?.status ?? null;\n  }\n}\n","<div class=\"header\">\n  <ng-content select=\"[header]\"></ng-content>\n</div>\n<div class=\"z-row z-row_weekday prizm-font-main-body-12\">\n  <div\n    class=\"z-cell\"\n    *ngFor=\"let day of weekDays$ | async; let i = index\"\n    [class.z-cell_weekend]=\"i > 4\"\n    [innerText]=\"day | prizmCallFunc : capitalizeFirstLetter\"\n  ></div>\n</div>\n<div *prizmLet=\"month | prizmCalendarSheet : true as sheet\">\n  <div\n    class=\"z-row\"\n    *prizmRepeatTimes=\"let rowIndex of sheet.length\"\n    automation-id=\"prizm-primitive-calendar__row\"\n  >\n    <ng-container *prizmRepeatTimes=\"let colIndex of sheet[rowIndex].length\">\n      <ng-container *prizmLet=\"sheet[rowIndex][colIndex] as item\">\n        <div\n          class=\"z-cell\"\n          *ngIf=\"!itemIsUnavailable(item) || showAdjacent\"\n          [class.z-cell_today]=\"itemIsToday(item)\"\n          [class.z-cell_interval]=\"itemIsInterval(item)\"\n          [attr.data-range]=\"getItemRange(item)\"\n          [attr.data-state]=\"getItemState(item)\"\n          (prizmHoveredChange)=\"onItemHovered($event && item)\"\n          (prizmPressedChange)=\"onItemPressed($event && item)\"\n          (click)=\"onItemClick(item)\"\n          automation-id=\"prizm-primitive-calendar__cell\"\n        >\n          <div\n            class=\"z-item prizm-font-btn-links-14\"\n            [class.z-item_unavailable]=\"itemIsUnavailable(item)\"\n            [class.z-item_weekend]=\"item.isWeekend\"\n            automation-id=\"prizm-primitive-calendar__item\"\n          >\n            {{ item.day }}\n            <div\n              class=\"z-status\"\n              *ngIf=\"item | prizmCallFunc : getDayStatus : daysWithStatus as dayStatus\"\n              [style.--prizm-status-day-color]=\"dayStatus\"\n              [attr.data-prizm-status]=\"dayStatus\"\n            ></div>\n            <div\n              class=\"z-dots\"\n              *ngIf=\"item | prizmMapper : toMarkers : itemIsToday(item) : !!getItemRange(item) as markers\"\n            >\n              <div class=\"z-dot\"></div>\n              <div class=\"z-dot\" *ngIf=\"markers.length > 1\"></div>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n<div class=\"footer\">\n  <ng-content select=\"[footer]\"></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmPrimitiveCalendarComponent } from './primitive-calendar.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPrimitiveCalendarComponent],\n  exports: [PrizmPrimitiveCalendarComponent],\n})\nexport class PrizmPrimitiveCalendarModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AbstractPrizmInteractive } from '../../../abstract/interactive';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_SPIN_TEXTS } from '../../../tokens/i18n';\nimport { PrizmAppearanceTypeGhost } from '../../../types/appearance.types';\nimport { prizmIsNativeFocused } from '../../../util/is-native-focused';\nimport { prizmI18nInitWithKey } from '../../../services/i18n.service';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n// @dynamic\n@Component({\n  selector: `prizm-primitive-spin-button`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: `./primitive-spin-button.template.html`,\n  styleUrls: [`./primitive-spin-button.component.less`],\n  providers: [...prizmI18nInitWithKey(PRIZM_SPIN_TEXTS, 'spinTexts')],\n})\nexport class PrizmPrimitiveSpinButtonComponent extends AbstractPrizmInteractive {\n  @ViewChild(`wrapper`)\n  private readonly wrapper?: ElementRef<HTMLElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  @prizmDefaultProp()\n  mode: PrizmAppearanceTypeGhost = 'ghost';\n\n  @Input()\n  @prizmDefaultProp()\n  leftDisabled = false;\n\n  @Input()\n  @prizmDefaultProp()\n  rightDisabled = false;\n\n  @Output()\n  readonly leftClick = new EventEmitter<void>();\n\n  @Output()\n  readonly rightClick = new EventEmitter<void>();\n\n  override readonly testId_ = 'ui_primitive_spin_button';\n\n  constructor(@Inject(PRIZM_SPIN_TEXTS) readonly spinTexts$: Observable<[string, string]>) {\n    super();\n  }\n\n  public get focused(): boolean {\n    return !!this.wrapper && prizmIsNativeFocused(this.wrapper.nativeElement);\n  }\n\n  public get leftComputedDisabled(): boolean {\n    return this.computedDisabled || this.leftDisabled;\n  }\n\n  public get rightComputedDisabled(): boolean {\n    return this.computedDisabled || this.rightDisabled;\n  }\n\n  public onLeftClick(): void {\n    if (!this.leftComputedDisabled) {\n      this.leftClick.emit();\n    }\n  }\n\n  public onRightClick(): void {\n    if (!this.rightComputedDisabled) {\n      this.rightClick.emit();\n    }\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n  }\n\n  public onFocusVisible(focusVisible: boolean): void {\n    this.updateFocusVisible(focusVisible);\n  }\n}\n","<div\n  class=\"z-wrapper\"\n  *ngIf=\"spinTexts$ | async as texts\"\n  #wrapper\n  prizmPreventDefault=\"mousedown\"\n  [prizmFocusable]=\"computedFocusable\"\n  (prizmFocusedChange)=\"onFocused($event)\"\n  (prizmFocusVisibleChange)=\"onFocusVisible($event)\"\n  (keydown.arrowLeft)=\"onLeftClick()\"\n  (keydown.arrowRight)=\"onRightClick()\"\n>\n  <button\n    class=\"z-arrow\"\n    prizmIconButton\n    type=\"button\"\n    size=\"l\"\n    [appearanceType]=\"mode\"\n    automation-id=\"prizm-primitive-spin-button__left\"\n    icon=\"arrows-chevron-left\"\n    appearance=\"secondary\"\n    [class.z-arrow_hidden]=\"leftComputedDisabled\"\n    [title]=\"texts[0]\"\n    [focusable]=\"false\"\n    (click)=\"onLeftClick()\"\n  ></button>\n  <span class=\"z-content\">\n    <ng-content></ng-content>\n  </span>\n  <button\n    class=\"z-arrow\"\n    prizmIconButton\n    type=\"button\"\n    size=\"l\"\n    appearance=\"secondary\"\n    automation-id=\"prizm-primitive-spin-button__right\"\n    icon=\"arrows-chevron-right\"\n    [appearanceType]=\"mode\"\n    [class.z-arrow_hidden]=\"rightComputedDisabled\"\n    [title]=\"texts[1]\"\n    [focusable]=\"false\"\n    (click)=\"onRightClick()\"\n  ></button>\n  <!--  [appearanceType]='mode'-->\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  PrizmFocusableModule,\n  PrizmFocusedModule,\n  PrizmFocusVisibleModule,\n  PrizmPreventDefaultModule,\n} from '../../../directives';\nimport { PrizmButtonModule } from '../../button/button.module';\n\nimport { PrizmPrimitiveSpinButtonComponent } from './primitive-spin-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmFocusVisibleModule,\n    PrizmFocusedModule,\n    PrizmFocusableModule,\n    PrizmPreventDefaultModule,\n    PrizmButtonModule,\n  ],\n  declarations: [PrizmPrimitiveSpinButtonComponent],\n  exports: [PrizmPrimitiveSpinButtonComponent],\n})\nexport class PrizmPrimitiveSpinButtonModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n} from '@angular/core';\nimport { merge } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmFocusVisibleService } from '../../directives/focus-visible/focus-visible.service';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../tokens/focusable-item-accessor';\nimport {\n  PrizmFocusableElementAccessor,\n  PrizmNativeFocusableElement,\n} from '../../types/focusable-element-accessor';\nimport { prizmTypedFromEvent } from '../../observables';\nimport { prizmIsNativeFocused } from '../../util/is-native-focused';\nimport { PrizmHorizontalDirection } from '../../types/direction';\nimport { PrizmThemeService } from '@prizm-ui/theme';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `a[prizmLink], button[prizmLink]`,\n  templateUrl: `./link.component.html`,\n  styleUrls: [`./link.component.less`],\n  providers: [\n    {\n      provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n      useExisting: forwardRef(() => PrizmLinkComponent),\n    },\n    PrizmFocusVisibleService,\n    PrizmDestroyService,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: `prizmLink`,\n  standalone: true,\n  imports: [PrizmLinkComponent],\n})\nexport class PrizmLinkComponent extends PrizmAbstractTestId implements PrizmFocusableElementAccessor {\n  @Input()\n  @HostBinding(`class._pseudo`)\n  @prizmDefaultProp()\n  pseudo = false;\n\n  // TODO: 2.0 Remove `null`\n  @Input()\n  @prizmDefaultProp()\n  icon: string | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  iconAlign: PrizmHorizontalDirection = `right`;\n\n  @Input()\n  @HostBinding(`class._icon-rotated`)\n  @prizmDefaultProp()\n  iconRotated = false;\n\n  @Input()\n  @HostBinding(`attr.data-host-mode`)\n  @prizmDefaultProp()\n  mode: 'positive' | 'negative' | null = null;\n\n  @HostBinding(`class._focus-visible`)\n  focusVisible = false;\n\n  override readonly testId_ = 'ui_link';\n\n  readonly focusedChange = merge(\n    prizmTypedFromEvent(this.elementRef.nativeElement, `focusin`).pipe(mapTo(true)),\n    prizmTypedFromEvent(this.elementRef.nativeElement, `focusout`).pipe(mapTo(false))\n  );\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly elementRef: ElementRef<PrizmNativeFocusableElement>,\n    public readonly mode$: PrizmThemeService,\n    @Inject(PrizmFocusVisibleService)\n    focusVisible$: PrizmFocusVisibleService\n  ) {\n    super();\n    focusVisible$.subscribe(visible => {\n      this.focusVisible = visible;\n    });\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement {\n    return this.elementRef.nativeElement;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  get hasIcon(): boolean {\n    return this.icon !== null;\n  }\n\n  get iconAlignLeft(): boolean {\n    return this.hasIcon && this.iconAlign === `left`;\n  }\n\n  get iconAlignRight(): boolean {\n    return this.hasIcon && this.iconAlign === `right`;\n  }\n}\n","<span class=\"t-content\">\n  <ng-content></ng-content>\n</span>\n","import { NgModule } from '@angular/core';\nimport { PrizmLinkComponent } from './link.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmLinkComponent],\n  exports: [PrizmLinkComponent],\n})\nexport class PrizmLinkModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmYear } from '../../../@core/date-time/year';\nimport { PrizmAbstractTestId, prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmMonthLike } from '../../../types/month-like';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { prizmI18nInitWithKey } from '../../../services/i18n.service';\nimport { PRIZM_MONTHS } from '../../../tokens/i18n';\nimport { CommonModule } from '@angular/common';\nimport { PrizmFocusableModule } from '../../../directives';\nimport { PrizmPrimitiveSpinButtonModule } from '../primitive-spin-button';\nimport { PrizmLinkComponent } from '../../link';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmMonthPipeModule } from '../../../pipes';\n\n@Component({\n  selector: `prizm-primitive-year-month-pagination`,\n  templateUrl: `./primitive-year-month-pagination.component.html`,\n  styleUrls: [`./primitive-year-month-pagination.component.less`],\n  providers: [...prizmI18nInitWithKey(PRIZM_MONTHS, 'months')],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmFocusableModule,\n    PrizmPrimitiveSpinButtonModule,\n    PrizmLinkComponent,\n    PrizmIconComponent,\n    PrizmMonthPipeModule,\n  ],\n})\nexport class PrizmPrimitiveYearMonthPaginationComponent\n  extends PrizmAbstractTestId\n  implements PrizmWithOptionalMinMax<PrizmMonth>\n{\n  @Input()\n  @prizmDefaultProp()\n  value = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  hideButtons = false;\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmMonth = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmMonth = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  monthActive = false;\n\n  @Input()\n  @prizmDefaultProp()\n  yearActive = false;\n\n  @Output()\n  readonly valueChange = new EventEmitter<PrizmMonth>();\n\n  @Output()\n  readonly yearClick = new EventEmitter<PrizmYear>();\n\n  @Output()\n  readonly monthClick = new EventEmitter<PrizmMonth>();\n\n  override readonly testId_ = 'ui_primitive_year_month_pagination';\n\n  public get prevMonthDisabled(): boolean {\n    return this.value.monthSameOrBefore?.(this.min);\n  }\n\n  public get nextMonthDisabled(): boolean {\n    return this.value.monthSameOrAfter?.(this.max);\n  }\n\n  public get oneYear(): boolean {\n    return this.min.year === this.max.year;\n  }\n\n  public get oneMonth(): boolean {\n    return this.min.month === this.max.month && this.oneYear;\n  }\n\n  public onYearClick($event: MouseEvent): void {\n    // TODO delete after update dropdown-host (need activeZone optionan, for dynamic change elements)\n    $event.stopImmediatePropagation();\n\n    this.yearClick.next(this.value);\n  }\n\n  public onMonthClick($event: MouseEvent): void {\n    // TODO delete after update dropdown-host (need activeZone optionan, for dynamic change elements)\n    $event.stopImmediatePropagation();\n\n    this.monthClick.next(this.value);\n  }\n\n  public onPrevMonthClick(): void {\n    this.appendValueWithLimit({ month: -1 });\n  }\n\n  public onNextMonthClick(): void {\n    this.appendValueWithLimit({ month: 1 });\n  }\n\n  private appendValueWithLimit(date: PrizmMonthLike): void {\n    const newMonth: PrizmMonth = this.value.append(date);\n\n    if (this.min.monthSameOrAfter(newMonth)) {\n      this.updateValue(this.min);\n\n      return;\n    }\n\n    if (this.max.monthSameOrBefore(newMonth)) {\n      this.updateValue(this.max);\n\n      return;\n    }\n\n    this.updateValue(newMonth);\n  }\n\n  private updateValue(value: PrizmMonth): void {\n    if (this.value.monthSame(value)) {\n      return;\n    }\n\n    this.value = value;\n    this.valueChange.emit(value);\n  }\n}\n","<div class=\"box\">\n  <div class=\"year-month prizm-font-input-text-14px\">\n    <div *ngIf=\"oneMonth; else buttonMonth\">\n      {{ value | prizmMonth | async }}\n    </div>\n\n    <div *ngIf=\"oneYear; else button\">\n      {{ value.formattedYear }}\n    </div>\n  </div>\n  <div>\n    <prizm-primitive-spin-button\n      [class.hidden]=\"hideButtons\"\n      [focusable]=\"false\"\n      [leftDisabled]=\"prevMonthDisabled\"\n      [rightDisabled]=\"nextMonthDisabled\"\n      (leftClick)=\"onPrevMonthClick()\"\n      (rightClick)=\"onNextMonthClick()\"\n    >\n    </prizm-primitive-spin-button>\n  </div>\n</div>\n\n<ng-template #button>\n  <div class=\"year-box\" (click)=\"onYearClick($event)\">\n    <button\n      class=\"pagination-btn\"\n      [attr.data-testid]=\"'prizm-primitive-year-month-pagination__year-button'\"\n      [prizmFocusable]=\"true\"\n      [class.active]=\"yearActive\"\n      type=\"button\"\n    >\n      {{ value.formattedYear }}\n      <span>\n        <prizm-icon iconClass=\"chevrons-dropdown-small\"></prizm-icon>\n      </span>\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #buttonMonth>\n  <div class=\"month-box\" (click)=\"onMonthClick($event)\">\n    <button\n      class=\"pagination-btn\"\n      [attr.testId]=\"'prizm-primitive-year-month-pagination__year-button'\"\n      [class.active]=\"monthActive\"\n      [prizmFocusable]=\"true\"\n      type=\"button\"\n    >\n      {{ value | prizmMonth | async }}\n      <span>\n        <prizm-icon iconClass=\"chevrons-dropdown-small\"></prizm-icon>\n      </span>\n    </button>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY, PrizmDayRange, PrizmMonth } from '../../../@core/date-time';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmInRange } from '../../../util/math/in-range';\nimport {\n  PrizmHoveredDirective,\n  PrizmInteractiveState,\n  PrizmPressedDirective,\n  PrizmRepeatTimesDirective,\n  PrizmScrollIntoViewDirective,\n} from '../../../directives';\nimport { PrizmRangeState } from '../../../@core/enums/range-state';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { prizmI18nInitWithKey } from '../../../services/i18n.service';\nimport { PRIZM_MONTHS } from '../../../tokens/i18n';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { PrizmLetDirective } from '@prizm-ui/helpers';\nimport { CommonModule } from '@angular/common';\nimport { PrizmMonthPipeModule } from '../../../pipes';\n\nconst ITEMS_IN_ROW = 3;\nconst ROWS = 4;\n\n@Component({\n  selector: `prizm-primitive-month-picker`,\n  templateUrl: `./primitive-month-picker.component.html`,\n  styleUrls: [`./primitive-month-picker.component.less`],\n  standalone: true,\n  imports: [\n    PrizmHoveredDirective,\n    PrizmPressedDirective,\n    PrizmRepeatTimesDirective,\n    PrizmLetDirective,\n    CommonModule,\n    PrizmScrollIntoViewDirective,\n    PrizmMonthPipeModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [prizmI18nInitWithKey(PRIZM_MONTHS, 'months')],\n})\nexport class PrizmPrimitiveMonthPickerComponent extends PrizmAbstractTestId {\n  private hoveredItem: number | null = null;\n  private pressedItem: number | null = null;\n  private readonly currentMonth = PrizmMonth.currentLocal().month;\n\n  public readonly ITEMS_IN_ROW = ITEMS_IN_ROW;\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmMonthRange | PrizmMonth | PrizmDayRange | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  currentYear: number = PrizmMonth.currentLocal().year;\n\n  @Input()\n  @prizmDefaultProp()\n  initialItem: PrizmMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmMonth = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmMonth = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<number> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Output()\n  readonly monthClick = new EventEmitter<PrizmMonth>();\n\n  @HostBinding(`class._single`)\n  get isSingle(): boolean {\n    const { value } = this;\n\n    return !!value && this.isRange(value) && value.from.monthSame(value.to);\n  }\n\n  override readonly testId_ = 'ui_primitive_month_picker';\n\n  get rows(): number {\n    return ROWS;\n  }\n\n  public isRange(item: PrizmMonthRange | PrizmMonth): item is PrizmMonthRange {\n    return item instanceof PrizmMonthRange;\n  }\n\n  public scrollItemIntoView(item: number): boolean {\n    return this.initialItem.month === item;\n  }\n\n  @prizmPure\n  public getItem(rowIndex: number, colIndex: number): PrizmMonth {\n    const month = colIndex + rowIndex * ITEMS_IN_ROW;\n\n    return new PrizmMonth(this.currentYear, month);\n  }\n\n  public getItemState(item: number): PrizmInteractiveState | null {\n    const { disabledItemHandler, max, pressedItem, hoveredItem } = this;\n\n    if (\n      (max.month < item && max.year <= this.currentYear) ||\n      (disabledItemHandler !== PRIZM_ALWAYS_FALSE_HANDLER && disabledItemHandler(item))\n    ) {\n      return PrizmInteractiveState.Disabled;\n    }\n\n    if (pressedItem === item) {\n      return PrizmInteractiveState.Pressed;\n    }\n\n    if (hoveredItem === item) {\n      return PrizmInteractiveState.Hovered;\n    }\n\n    return null;\n  }\n\n  public getItemRange(item: number): PrizmRangeState | null {\n    const { value, hoveredItem } = this;\n\n    if (value === null) {\n      return null;\n    }\n\n    if (value instanceof PrizmMonth) {\n      return value.month === item && value.year === this.currentYear ? PrizmRangeState.Single : null;\n    }\n\n    if (\n      this.value instanceof PrizmDayRange &&\n      this.value.isMonthInRange(new PrizmMonth(this.currentYear, item))\n    ) {\n      return PrizmRangeState.Single;\n    }\n\n    if (\n      (value.from.month === item && !value.from.monthSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem > value.from.month &&\n        value.from.month === item &&\n        value.from.monthSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem === item &&\n        hoveredItem === value.from.month &&\n        value.from.monthSame(value.to))\n    ) {\n      return PrizmRangeState.Single;\n\n      // TODO finish it after add support intervals\n      // return PrizmRangeState.Start;\n    }\n\n    // TODO finish it after add support intervals\n    // if (\n    //     (value.to.month === item && !value.from.monthSame(value.to)) ||\n    //     (hoveredItem !== null &&\n    //         hoveredItem < value.from.month &&\n    //         value.from.month === item &&\n    //         value.from.monthSame(value.to)) ||\n    //     (hoveredItem !== null &&\n    //         hoveredItem === item &&\n    //         hoveredItem > value.from.month &&\n    //         value.from.monthSame(value.to))\n    // ) {\n    //   return PrizmRangeState.Single;\n    //\n    //\n    //   // return PrizmRangeState.End;\n    // }\n\n    return value.from.monthSame(value.to) && value.from.month === item && value.from.year === this.currentYear\n      ? PrizmRangeState.Single\n      : null;\n  }\n\n  public itemIsToday(item: number): boolean {\n    return this.currentMonth === item;\n  }\n\n  /**\n   * not support interval\n   * */\n  public itemIsInterval(item: number): boolean {\n    return false;\n  }\n\n  /**\n   * TODO add after decided, with support intervals\n   * Example\n   * */\n  public itemIsIntervalNew(item: number): boolean {\n    const { value, hoveredItem } = this;\n\n    if (value === null || !this.isRange(value)) {\n      return false;\n    }\n\n    if (!value.from.monthSame(value.to)) {\n      return value.from.month <= item && value.to.month > item;\n    }\n\n    if (hoveredItem === null || value.from.month === hoveredItem) {\n      return false;\n    }\n\n    return prizmInRange(\n      item,\n      Math.min(value.from.month, hoveredItem),\n      Math.max(value.from.month, hoveredItem)\n    );\n  }\n\n  public onItemHovered(hovered: boolean, item: number): void {\n    this.updateHoveredItem(hovered, item);\n  }\n\n  public onItemPressed(pressed: boolean, item: number): void {\n    this.updatePressedItem(pressed, item);\n  }\n\n  public onItemClick($event: MouseEvent, item: number): void {\n    // TODO delete after update dropdown-host (need activeZone optionan, for dynamic change elements)\n    $event.stopImmediatePropagation();\n\n    this.monthClick.emit(new PrizmMonth(this.currentYear, item));\n  }\n\n  private updateHoveredItem(hovered: boolean, item: number): void {\n    this.hoveredItem = hovered ? item : null;\n  }\n\n  private updatePressedItem(pressed: boolean, item: number): void {\n    this.pressedItem = pressed ? item : null;\n  }\n}\n","<div class=\"z-row\" *prizmRepeatTimes=\"let rowIndex of rows\" automation-id=\"prizm-primitive-year-picker__row\">\n  <ng-container *prizmRepeatTimes=\"let colIndex of ITEMS_IN_ROW\">\n    <div\n      class=\"z-cell\"\n      *prizmLet=\"getItem(rowIndex, colIndex) as item\"\n      [class.z-cell_today]=\"itemIsToday(item.month)\"\n      [class.z-cell_interval]=\"itemIsInterval(item.month)\"\n      [attr.data-range]=\"getItemRange(item.month)\"\n      [attr.data-state]=\"getItemState(item.month)\"\n      [prizmScrollIntoView]=\"scrollItemIntoView(item.month)\"\n      (prizmHoveredChange)=\"onItemHovered($event, item.month)\"\n      (prizmPressedChange)=\"onItemPressed($event, item.month)\"\n      (click)=\"onItemClick($event, item.month)\"\n      automation-id=\"prizm-primitive-year-picker__cell\"\n    >\n      <div class=\"z-item\">{{ item | prizmMonth | async }}</div>\n    </div>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY, PrizmDayRange, PrizmYear } from '../../../@core/date-time';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmInRange } from '../../../util/math/in-range';\nimport {\n  PrizmHoveredDirective,\n  PrizmInteractiveState,\n  PrizmPressedDirective,\n  PrizmRepeatTimesDirective,\n  PrizmScrollIntoViewDirective,\n} from '../../../directives';\nimport { PrizmRangeState } from '../../../@core/enums/range-state';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { PrizmLetDirective } from '@prizm-ui/helpers';\n\nconst LIMIT = 100;\nconst ITEMS_IN_ROW = 3;\n\n@Component({\n  selector: `prizm-primitive-year-picker`,\n  templateUrl: `./primitive-year-picker.component.html`,\n  styleUrls: [`./primitive-year-picker.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    PrizmHoveredDirective,\n    PrizmPressedDirective,\n    PrizmRepeatTimesDirective,\n    PrizmLetDirective,\n    PrizmScrollIntoViewDirective,\n  ],\n})\nexport class PrizmPrimitiveYearPickerComponent extends PrizmAbstractTestId {\n  private hoveredItem: number | null = null;\n  private pressedItem: number | null = null;\n  private readonly currentYear = PrizmMonth.currentLocal().year;\n  public readonly ITEMS_IN_ROW = ITEMS_IN_ROW;\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmMonthRange | PrizmYear | PrizmDayRange | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  initialItem: PrizmYear = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmYear = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmYear = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<number> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Output()\n  readonly yearClick = new EventEmitter<PrizmYear>();\n\n  @HostBinding(`class._single`)\n  get isSingle(): boolean {\n    const { value } = this;\n\n    return !!value && this.isRange(value) && value.from.yearSame(value.to);\n  }\n\n  override readonly testId_ = 'ui_primitive_year_picker';\n\n  get rows(): number {\n    return Math.ceil((this.calculatedMax - this.calculatedMin) / ITEMS_IN_ROW);\n  }\n\n  get calculatedMin(): number {\n    const initial = this.initialItem.year - LIMIT;\n\n    return this.min.year > initial ? this.min.year : initial;\n  }\n\n  get calculatedMax(): number {\n    const initial = this.initialItem.year + LIMIT;\n\n    return this.max.year < initial ? this.max.year + 1 : initial;\n  }\n\n  public isRange(item: PrizmMonthRange | PrizmYear): item is PrizmMonthRange {\n    return item instanceof PrizmMonthRange;\n  }\n\n  public scrollItemIntoView(item: number): boolean {\n    return this.initialItem.year === item;\n  }\n\n  public getItem(rowIndex: number, colIndex: number): number {\n    return rowIndex * ITEMS_IN_ROW + colIndex + this.calculatedMin;\n  }\n\n  public getItemState(item: number): PrizmInteractiveState | null {\n    const { disabledItemHandler, max, pressedItem, hoveredItem } = this;\n\n    if (\n      max.year < item ||\n      (disabledItemHandler !== PRIZM_ALWAYS_FALSE_HANDLER && disabledItemHandler(item))\n    ) {\n      return PrizmInteractiveState.Disabled;\n    }\n\n    if (pressedItem === item) {\n      return PrizmInteractiveState.Pressed;\n    }\n\n    if (hoveredItem === item) {\n      return PrizmInteractiveState.Hovered;\n    }\n\n    return null;\n  }\n\n  public getItemRange(item: number): PrizmRangeState | null {\n    const { value, hoveredItem } = this;\n\n    if (value === null) {\n      return null;\n    }\n\n    if (value instanceof PrizmYear) {\n      return value.year === item ? PrizmRangeState.Single : null;\n    }\n\n    if (\n      (value instanceof PrizmDayRange || value instanceof PrizmMonthRange) &&\n      value.isYearInRange(new PrizmYear(item))\n    ) {\n      return PrizmRangeState.Single;\n    }\n\n    if (\n      (value.from.year === item && !value.from.yearSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem > value.from.year &&\n        value.from.year === item &&\n        value.from.yearSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem === item &&\n        hoveredItem < value.from.year &&\n        value.from.yearSame(value.to))\n    ) {\n      return PrizmRangeState.Single;\n\n      // TODO add after add support intervals\n      // return PrizmRangeState.Start;\n    }\n\n    if (\n      (value.to.year === item && !value.from.yearSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem < value.from.year &&\n        value.from.year === item &&\n        value.from.yearSame(value.to)) ||\n      (hoveredItem !== null &&\n        hoveredItem === item &&\n        hoveredItem > value.from.year &&\n        value.from.yearSame(value.to))\n    ) {\n      return PrizmRangeState.Single;\n\n      // TODO add after add support intervals\n      // return PrizmRangeState.End;\n    }\n\n    return value.from.yearSame(value.to) && value.from.year === item ? PrizmRangeState.Single : null;\n  }\n\n  public itemIsToday(item: number): boolean {\n    return this.currentYear === item;\n  }\n\n  /**\n   * not support interval\n   * */\n  public itemIsInterval(item: number): boolean {\n    return false;\n  }\n\n  /**\n   * TODO with support intervals\n   * */\n  public itemIsIntervalNew(item: number): boolean {\n    const { value, hoveredItem } = this;\n\n    if (value === null || !this.isRange(value)) {\n      return false;\n    }\n\n    if (!value.from.yearSame(value.to)) {\n      return value.from.year <= item && value.to.year > item;\n    }\n\n    if (hoveredItem === null || value.from.year === hoveredItem) {\n      return false;\n    }\n\n    return prizmInRange(item, Math.min(value.from.year, hoveredItem), Math.max(value.from.year, hoveredItem));\n  }\n\n  public onItemHovered(hovered: boolean, item: number): void {\n    this.updateHoveredItem(hovered, item);\n  }\n\n  public onItemPressed(pressed: boolean, item: number): void {\n    this.updatePressedItem(pressed, item);\n  }\n\n  public onItemClick($event: MouseEvent, item: number): void {\n    // TODO delete after update dropdown-host (need activeZone optionan, for dynamic change elements)\n    $event.stopImmediatePropagation();\n\n    this.yearClick.emit(new PrizmYear(item));\n  }\n\n  private updateHoveredItem(hovered: boolean, item: number): void {\n    this.hoveredItem = hovered ? item : null;\n  }\n\n  private updatePressedItem(pressed: boolean, item: number): void {\n    this.pressedItem = pressed ? item : null;\n  }\n}\n","<div class=\"z-row\" *prizmRepeatTimes=\"let rowIndex of rows\" automation-id=\"prizm-primitive-year-picker__row\">\n  <ng-container *prizmRepeatTimes=\"let colIndex of ITEMS_IN_ROW\">\n    <div\n      class=\"z-cell\"\n      *prizmLet=\"getItem(rowIndex, colIndex) as item\"\n      [class.z-cell_today]=\"itemIsToday(item)\"\n      [class.z-cell_interval]=\"itemIsInterval(item)\"\n      [attr.data-range]=\"getItemRange(item)\"\n      [attr.data-state]=\"getItemState(item)\"\n      [prizmScrollIntoView]=\"scrollItemIntoView(item)\"\n      (prizmHoveredChange)=\"onItemHovered($event, item)\"\n      (prizmPressedChange)=\"onItemPressed($event, item)\"\n      (click)=\"onItemClick($event, item)\"\n      automation-id=\"prizm-primitive-year-picker__cell\"\n    >\n      <div class=\"z-item\">{{ item }}</div>\n    </div>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PrizmDayRange } from '../../@core/date-time/day-range';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PrizmYear } from '../../@core/date-time/year';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../constants/always-false-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../constants/default-marker-handler';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmBooleanHandler } from '../../types/handler';\nimport { PrizmMapper } from '../../types/mapper';\nimport { PrizmMarkerHandler } from '../../types/marker-handler';\nimport { PrizmWithOptionalMinMax } from '../../types/with-optional-min-max';\nimport { prizmNullableSame } from '../../util/common/nullable-same';\nimport { PrizmDayWithStatus } from '../../@core';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmPrimitiveCalendarComponent } from '../internal/primitive-calendar';\nimport { PrizmScrollbarModule } from '../scrollbar';\nimport { PrizmMapperPipeModule } from '../../pipes';\nimport { PrizmPrimitiveYearMonthPaginationComponent } from '../internal/primitive-year-month-pagination/primitive-year-month-pagination.component';\nimport { PrizmPrimitiveMonthPickerComponent } from '../internal/primitive-month-picker/primitive-month-picker.component';\nimport { PrizmPrimitiveYearPickerComponent } from '../internal/primitive-year-picker/primitive-year-picker.component';\n\n@Component({\n  selector: `prizm-calendar`,\n  templateUrl: `./calendar.component.html`,\n  styleUrls: [`./calendar.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmPrimitiveYearMonthPaginationComponent,\n    PrizmPrimitiveCalendarComponent,\n    PrizmPrimitiveYearPickerComponent,\n    PrizmPrimitiveMonthPickerComponent,\n    PrizmScrollbarModule,\n    PrizmMapperPipeModule,\n  ],\n})\nexport class PrizmCalendarComponent extends PrizmAbstractTestId implements PrizmWithOptionalMinMax<PrizmDay> {\n  @Input()\n  @prizmDefaultProp()\n  month: PrizmMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmDayRange | PrizmDay | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  daysWithStatus: PrizmDayWithStatus[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  minViewedMonth: PrizmMonth = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  maxViewedMonth: PrizmMonth = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  hoveredItem: PrizmDay | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  showAdjacent = true;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Output()\n  readonly dayClick = new EventEmitter<PrizmDay>();\n\n  @Output()\n  readonly monthChange = new EventEmitter<PrizmMonth>();\n\n  @Output()\n  readonly hoveredItemChange = new EventEmitter<PrizmDay | null>();\n\n  override readonly testId_ = 'ui_calendar';\n\n  year: PrizmYear | null = null;\n  clickedMonth: PrizmMonth | null = null;\n\n  readonly disabledItemHandlerMapper: PrizmMapper<\n    PrizmBooleanHandler<PrizmDay>,\n    PrizmBooleanHandler<PrizmDay>\n  > =\n    (disabledItemHandler, min: PrizmDay, max: PrizmDay) =>\n    (item: PrizmDay): boolean =>\n      item.dayBefore(min) || item.dayAfter(max) || disabledItemHandler(item);\n\n  get computedMinViewedMonth(): PrizmMonth {\n    return this.minViewedMonth.monthSameOrAfter(this.min) ? this.minViewedMonth : this.min;\n  }\n\n  get computedMaxViewedMonth(): PrizmMonth {\n    return this.maxViewedMonth.monthSameOrBefore(this.max) ? this.maxViewedMonth : this.max;\n  }\n\n  public onPaginationYearClick(year: PrizmYear): void {\n    this.year = year;\n    this.clickedMonth = null;\n  }\n\n  public onPaginationMonthClick(month: PrizmMonth): void {\n    this.clickedMonth = month;\n    this.year = null;\n  }\n\n  public onPickerYearClick({ year }: PrizmYear): void {\n    this.year = null;\n    this.updateViewedMonth(new PrizmMonth(year, this.month.month));\n  }\n\n  public onPickerMonthClick({ month }: PrizmMonth): void {\n    this.clickedMonth = null;\n    this.updateViewedMonth(new PrizmMonth(this.month.year, month));\n  }\n\n  public onPaginationValueChange(month: PrizmMonth): void {\n    this.updateViewedMonth(month);\n  }\n\n  public onDayClick(day: PrizmDay): void {\n    this.dayClick.emit(day);\n  }\n\n  public onHoveredItemChange(day: PrizmDay | null): void {\n    this.updateHoveredDay(day);\n  }\n\n  private updateViewedMonth(month: PrizmMonth): void {\n    if (this.month.monthSame(month)) {\n      return;\n    }\n\n    this.month = month;\n    this.monthChange.emit(month);\n  }\n\n  private updateHoveredDay(day: PrizmDay | null): void {\n    if (prizmNullableSame(this.hoveredItem, day, (a, b) => a.daySame(b))) {\n      return;\n    }\n\n    this.hoveredItem = day;\n    this.hoveredItemChange.emit(day);\n  }\n}\n","<div class=\"calendar-host\">\n  <ng-container *ngIf=\"year || clickedMonth; else calendar\">\n    <prizm-primitive-year-month-pagination\n      class=\"z-pagination\"\n      [min]=\"computedMinViewedMonth\"\n      [max]=\"computedMaxViewedMonth\"\n      [value]=\"month\"\n      [hideButtons]=\"true\"\n      [monthActive]=\"!!clickedMonth\"\n      [yearActive]=\"!!year\"\n      (valueChange)=\"onPaginationValueChange($event)\"\n      (yearClick)=\"onPaginationYearClick($event)\"\n      (monthClick)=\"onPaginationMonthClick($event)\"\n      automation-id=\"prizm-calendar__pagination\"\n    ></prizm-primitive-year-month-pagination>\n    <prizm-scrollbar class=\"z-scrollbar\" automation-id=\"prizm-calendar__scrollbar\">\n      <prizm-primitive-year-picker\n        *ngIf=\"year; else monthPickerTemplate\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [initialItem]=\"year\"\n        [value]=\"value\"\n        (yearClick)=\"onPickerYearClick($event)\"\n        automation-id=\"prizm-calendar__year\"\n      ></prizm-primitive-year-picker>\n      <ng-template #monthPickerTemplate>\n        <prizm-primitive-month-picker\n          [min]=\"min\"\n          [max]=\"max\"\n          [initialItem]=\"$any(clickedMonth)\"\n          [value]=\"value\"\n          [currentYear]=\"month.year\"\n          (monthClick)=\"onPickerMonthClick($event)\"\n          automation-id=\"prizm-calendar__year\"\n        ></prizm-primitive-month-picker>\n      </ng-template>\n    </prizm-scrollbar>\n  </ng-container>\n  <ng-template #calendar>\n    <prizm-primitive-year-month-pagination\n      class=\"z-pagination\"\n      [min]=\"computedMinViewedMonth\"\n      [max]=\"computedMaxViewedMonth\"\n      [value]=\"month\"\n      (valueChange)=\"onPaginationValueChange($event)\"\n      (yearClick)=\"onPaginationYearClick($event)\"\n      (monthClick)=\"onPaginationMonthClick($event)\"\n      automation-id=\"prizm-calendar__pagination\"\n    ></prizm-primitive-year-month-pagination>\n    <prizm-primitive-calendar\n      [showAdjacent]=\"showAdjacent\"\n      [value]=\"value\"\n      [month]=\"month\"\n      [daysWithStatus]=\"daysWithStatus\"\n      [disabledItemHandler]=\"disabledItemHandler | prizmMapper : disabledItemHandlerMapper : min : max\"\n      [markerHandler]=\"markerHandler\"\n      [hoveredItem]=\"hoveredItem\"\n      (hoveredItemChange)=\"onHoveredItemChange($event)\"\n      (dayClick)=\"onDayClick($event)\"\n      automation-id=\"prizm-calendar__calendar\"\n    >\n      <ng-container footer>\n        <ng-content select=\"[footer]\"></ng-content>\n      </ng-container>\n      <ng-container header>\n        <ng-content select=\"[header]\"></ng-content>\n      </ng-container>\n    </prizm-primitive-calendar>\n  </ng-template>\n</div>\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PrizmDropdownHostWidth } from './models';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules/overlay/models';\n\nexport interface PrizmDropdownHostOptions {\n  readonly width: PrizmDropdownHostWidth;\n  readonly closeOnBackdrop: boolean;\n  readonly autoReposition: boolean;\n  readonly placement: PrizmOverlayOutsidePlacement;\n}\n\n/** Default values for dropdown-host options */\nexport const PRIZM_DROPDOWN_HOST_DEFAULT_OPTIONS: PrizmDropdownHostOptions = {\n  closeOnBackdrop: true,\n  width: null,\n  autoReposition: true,\n  placement: PrizmOverlayOutsidePlacement.BOTTOM_LEFT,\n};\n\nexport const PRIZM_DROPDOWN_HOST_OPTIONS = new InjectionToken<PrizmDropdownHostOptions>(\n  'Default parameters for dropdown host',\n  {\n    factory: (): PrizmDropdownHostOptions => PRIZM_DROPDOWN_HOST_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmDropdownHostOptionsProvider: (\n  options: Partial<PrizmDropdownHostOptions>\n) => ValueProvider = (options: Partial<PrizmDropdownHostOptions>) => ({\n  provide: PRIZM_DROPDOWN_HOST_OPTIONS,\n  useValue: { ...PRIZM_DROPDOWN_HOST_DEFAULT_OPTIONS, ...options },\n});\n","import { Directive, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: '[prizmDropdownHostControl]',\n  providers: [PrizmDestroyService],\n  exportAs: 'prizmDropdownHostControl',\n  standalone: true,\n})\nexport class PrizmDropdownHostControlDirective {\n  @Input() enabled = true;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  PrizmOverlayControl,\n  PrizmOverlayModule,\n  PrizmOverlayRelativePosition,\n  PrizmOverlayService,\n} from '../../../modules/overlay';\nimport {\n  PolymorphContent,\n  PolymorphModule,\n  PrizmDropdownZoneModule,\n  PrizmLifecycleModule,\n  PrizmMutationObserveModule,\n  PrizmZoneEventModule,\n} from '../../../directives';\nimport { debounceTime, delay, distinctUntilChanged, skip, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDestroyService, prizmGenerateId } from '@prizm-ui/helpers';\nimport { BehaviorSubject, Observable, Subject, timer } from 'rxjs';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_DROPDOWN_HOST_OPTIONS, PrizmDropdownHostOptions } from './dropdown-host.options';\nimport {\n  PrizmDropdownHostClasses,\n  PrizmDropdownHostContext,\n  PrizmDropdownHostCustomContext,\n  PrizmDropdownHostStyles,\n  PrizmDropdownHostWidth,\n} from './models';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules/overlay/models';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { PrizmDropdownHostControlDirective } from './dropdown-host-control.directive';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmZoneEventService } from '../../../directives/zone-event/zone-event.service';\n\n@Component({\n  selector: 'prizm-dropdown-host',\n  templateUrl: './dropdown-host.component.html',\n  styleUrls: ['./dropdown-host.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService, PrizmZoneEventService],\n  exportAs: 'prizm-dropdown-host',\n  standalone: true,\n  imports: [\n    PrizmDropdownHostControlDirective,\n    CommonModule,\n    PrizmOverlayModule,\n    PrizmThemeModule,\n    PrizmLifecycleModule,\n    PrizmZoneEventModule,\n    PolymorphModule,\n    PrizmDropdownZoneModule,\n    PrizmMutationObserveModule,\n  ],\n})\nexport class PrizmDropdownHostComponent extends PrizmAbstractTestId implements AfterViewInit {\n  @Input() content!: PolymorphContent<PrizmDropdownHostContext>;\n\n  @Input()\n  @prizmDefaultProp()\n  prizmDropdownHostId: string = 'dropdownHostId_' + prizmGenerateId();\n\n  @Input()\n  @prizmDefaultProp()\n  prizmDropdownCustomContext: PrizmDropdownHostCustomContext = {};\n\n  @Input()\n  @prizmDefaultProp()\n  delay = 0;\n\n  @Input()\n  @prizmDefaultProp()\n  canOpen = true;\n\n  @Input()\n  @prizmDefaultProp()\n  closeByEsc = false;\n\n  @Input()\n  @prizmDefaultProp()\n  closeOnOutsideClick = true;\n\n  @Input()\n  prizmDropdownHost?: HTMLElement | null;\n\n  @Input()\n  @prizmDefaultProp()\n  set prizmDropdownHostWidth(width: PrizmDropdownHostWidth) {\n    this._prizmDropdownHostWidth = width;\n    this.updateWidth();\n  }\n  get prizmDropdownHostWidth() {\n    return this._prizmDropdownHostWidth;\n  }\n\n  private _prizmDropdownHostWidth: PrizmDropdownHostWidth = this.options.width;\n\n  override readonly testId_ = 'ui_dropdown_host';\n\n  readonly itemForListener = new Set<HTMLElement>();\n\n  private destroyReCalc$ = new Subject<void>();\n  private _autoReposition = this.options.autoReposition;\n  @Input() set autoReposition(state: boolean) {\n    this.position?.updateConfig({ autoReposition: (this._autoReposition = state) });\n  }\n  get autoReposition(): boolean {\n    return this._autoReposition;\n  }\n\n  private _placement: PrizmOverlayOutsidePlacement = this.options.placement;\n  @Input() set placement(place: PrizmOverlayOutsidePlacement) {\n    this.position?.updateConfig({ placement: place });\n  }\n  get placement(): PrizmOverlayOutsidePlacement {\n    return this._placement;\n  }\n\n  @Input() set isOpen(state: boolean) {\n    this.isOpen$.next(state);\n  }\n  get isOpen(): boolean {\n    return this.isOpen$.value;\n  }\n\n  private lastEmittedState!: boolean;\n\n  @Input() dropdownStyles: PrizmDropdownHostStyles;\n  @Input() dropdownClasses: PrizmDropdownHostClasses;\n  @ViewChild('temp') temp!: TemplateRef<HTMLDivElement>;\n\n  @Output() readonly isOpenChange = new EventEmitter<boolean>();\n  private overlay!: PrizmOverlayControl;\n  protected isOpen$ = new BehaviorSubject(false);\n\n  private readonly positionSource$ = new BehaviorSubject<string>('');\n  readonly position$: Observable<string> = this.positionSource$.pipe(delay(0));\n\n  private position!: PrizmOverlayRelativePosition;\n  readonly wrapper_class = 'prizm-overlay-dropdown-host no-overflow';\n\n  @ViewChild('contentBlockRef') contentBlockRef!: ElementRef;\n\n  constructor(\n    public readonly prizmOverlayService: PrizmOverlayService,\n    public readonly zoneEventService: PrizmZoneEventService,\n    @Inject(PrizmDropdownHostControlDirective)\n    @Host()\n    @Optional()\n    public readonly dropdownHostControlDirective: PrizmDropdownHostControlDirective | null,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PRIZM_DROPDOWN_HOST_OPTIONS) private readonly options: PrizmDropdownHostOptions,\n    public readonly el: ElementRef<HTMLElement>,\n    private readonly cdRef: ChangeDetectorRef,\n    public readonly injector: Injector,\n    private readonly destroy$: PrizmDestroyService\n  ) {\n    super();\n    this.destroy$.addCallback(() => this.closeOverlay());\n  }\n\n  @HostListener('window:keyup.esc')\n  public closeIfNeed(): void {\n    if (this.closeByEsc) this.closeOverlay();\n  }\n\n  public ngAfterViewInit(): void {\n    this.initOverlay();\n    this.initClickListener();\n  }\n\n  public updateWidth(): void {\n    this.position?.updateConfig({\n      width: this.prizmDropdownHostWidth ?? this.el.nativeElement.offsetWidth,\n    });\n  }\n\n  private initClickListener(): void {\n    this.isOpen$\n      .pipe(\n        skip(1),\n        debounceTime(this.delay),\n        distinctUntilChanged(),\n        tap(state => {\n          if (state) {\n            if (this.dropdownHostControlDirective?.enabled ?? true) this.openOverlay();\n          } else {\n            this.closeOverlay();\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private closeOverlay(): void {\n    this.overlay?.close();\n    if (this.lastEmittedState) this.isOpenChange.emit((this.lastEmittedState = false));\n  }\n\n  private openOverlay(): void {\n    this.overlay?.open();\n    if (!this.lastEmittedState) this.isOpenChange.emit((this.lastEmittedState = true));\n  }\n\n  public open(): void {\n    this.isOpen$.next(true);\n  }\n\n  public close(): void {\n    this.isOpen$.next(false);\n  }\n\n  public toggle(): void {\n    this.isOpen$.next(!this.isOpen$.value);\n  }\n\n  private initOverlay(): void {\n    this.position = new PrizmOverlayRelativePosition({\n      placement: this.placement,\n      autoReposition: this.autoReposition,\n      element: this.prizmDropdownHost ?? this.el.nativeElement,\n    });\n    this.updateWidth();\n    this.overlay = this.prizmOverlayService\n      .position(this.position)\n      .config({\n        wrapperClass: this.wrapper_class,\n      })\n      .content(this.temp)\n      .create({\n        parentInjector: this.injector,\n      });\n\n    this.initPositionListener(this.position);\n  }\n  public reCalculatePositions(timeout = 0): void {\n    this.destroyReCalc$.next();\n    timer(timeout)\n      .pipe(\n        tap(() => this.overlay?.reCalculatePositions()),\n        takeUntil(this.destroy$),\n        takeUntil(this.destroyReCalc$)\n      )\n      .subscribe();\n  }\n\n  private initPositionListener(position: PrizmOverlayRelativePosition): void {\n    position.pos$\n      .pipe(\n        tap(data => {\n          if (!data.extra) return;\n          this.positionSource$.next(data.extra);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public addListenerItems(el: HTMLElement): void {\n    this.itemForListener.add(el);\n  }\n\n  public removeListenerItems(el: HTMLElement): void {\n    this.itemForListener.delete(el);\n  }\n\n  public outsideClick(): void {\n    if (!this.closeOnOutsideClick || !this.isOpen$.value) return;\n    this.isOpen$.next(false);\n  }\n}\n","<div class=\"block\" [prizmMutationObserverHost]=\"el.nativeElement\" (prizmMutationObserver)=\"updateWidth()\">\n  <ng-content></ng-content>\n  <ng-template #temp>\n    <div\n      class=\"prizm-dropdown-host-modal\"\n      [ngStyle]=\"dropdownStyles\"\n      [ngClass]=\"dropdownClasses\"\n      [id]=\"prizmDropdownHostId\"\n      [attr.position]=\"position$ | async\"\n      [childrenZones]=\"[zoneEventService]\"\n      (zoneOutsideEvent)=\"outsideClick()\"\n      (prizmAfterViewInit)=\"addListenerItems($event.nativeElement); reCalculatePositions()\"\n      (prizmOnDestroy)=\"removeListenerItems($event.nativeElement)\"\n      prizmTheme\n      prizmZoneEvent\n      zoneEventName=\"click\"\n    >\n      <ng-container\n        *polymorphOutlet=\"content; context: { custom: prizmDropdownCustomContext }\"\n      ></ng-container>\n    </div>\n  </ng-template>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PRIZM_INPUT_DATE_PROVIDERS } from './input-date.providers';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  PRIZM_DATE_FILLER_LENGTH,\n  PRIZM_DATE_FORMAT,\n  PRIZM_DATE_SEPARATOR,\n  PRIZM_FIRST_DAY,\n  PRIZM_LAST_DAY,\n  prizmChangeDateSeparator,\n  PrizmDay,\n  PrizmMonth,\n} from '../../../@core/date-time';\nimport { PRIZM_IS_MOBILE } from '../../../tokens/is-mobile';\nimport {\n  PrizmBooleanHandler,\n  PrizmContextWithImplicit,\n  PrizmControlValueTransformer,\n  PrizmDateMode,\n  PrizmFocusableElementAccessor,\n} from '../../../types';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PrizmDialogService } from '../../dialogs/dialog';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmNamedDay } from '../../../@core/classes/named-day';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmCreateDateNgxMask } from '../../../@core/mask/create-date-mask';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PRIZM_MOBILE_CALENDAR } from '../../../tokens/mobile-calendar';\nimport { PRIZM_DATE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_DATE_TEXTS } from '../../../tokens/i18n';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { prizmIsNativeFocusedIn } from '../../../util';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { prizmI18nInitWithKey } from '../../../services';\n\n/**\n * @deprecated\n * use PrizmInputLayoutDateComponent\n * */\n@Component({\n  selector: `prizm-input-date`,\n  templateUrl: `./date.component.html`,\n  styleUrls: [`./date.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [...prizmI18nInitWithKey(PRIZM_DATE_TEXTS, 'dateTexts'), ...PRIZM_INPUT_DATE_PROVIDERS],\n})\nexport class PrizmInputDateComponent\n  extends AbstractPrizmNullableControl<PrizmDay>\n  implements PrizmWithOptionalMinMax<PrizmDay>, PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  private month: PrizmMonth | null = null;\n\n  public mask = prizmCreateDateNgxMask(this.dateFormat, this.dateSeparator);\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmNamedDay[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  defaultActiveYearMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  label = 'Выберите дату';\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  override readonly testId_ = 'ui_input_date';\n\n  public open = false;\n\n  readonly type!: PrizmContextWithImplicit<unknown>;\n\n  readonly filler$: Observable<string> = this.dateTexts$.pipe(\n    map(dateTexts => prizmChangeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator))\n  );\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  @HostListener(`click`)\n  public onClick(): void {\n    if (!this.isMobile) {\n      this.open = !this.open;\n    }\n  }\n\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(Injector) private readonly injector: Injector,\n    @Inject(PRIZM_IS_MOBILE) private readonly isMobile: boolean,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_MOBILE_CALENDAR)\n    private readonly mobileCalendar: Type<any> | null,\n    @Inject(PRIZM_DATE_FORMAT) readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<PrizmDay | null> | null\n  ) {\n    super(control, changeDetectorRef, valueTransformer);\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  get computedMobile(): boolean {\n    return this.isMobile && !!this.mobileCalendar;\n  }\n\n  get computedActiveYearMonth(): PrizmMonth {\n    if (this.items[0] && this.value && this.value.daySame(this.items[0].day)) {\n      return this.items[0].displayDay;\n    }\n\n    return this.month || this.value || this.defaultActiveYearMonth;\n  }\n\n  get canOpen(): boolean {\n    return this.interactive && !this.computedMobile;\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  get computedMask(): string {\n    return this.mask;\n  }\n\n  public onValueChange(value: string): void {\n    if (this.control) {\n      this.control.updateValueAndValidity({ emitEvent: false });\n    }\n\n    // if (value == null) {\n    //     this.onOpenChange(true);\n    // }\n\n    if (!value || value.length !== PRIZM_DATE_FILLER_LENGTH) {\n      if (!value) this.updateValue(null);\n      return;\n    }\n\n    this.updateValue(\n      value.length !== PRIZM_DATE_FILLER_LENGTH ? null : PrizmDay.normalizeParse(value, this.dateFormat)\n    );\n  }\n\n  public onDayClick(value: PrizmDay): void {\n    this.updateValue(value);\n    this.open = false;\n  }\n\n  public onHovered(hovered: boolean): void {\n    this.updateHovered(hovered);\n  }\n\n  public onMonthChange(month: PrizmMonth): void {\n    this.month = month;\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n  }\n\n  public override setDisabledState(): void {\n    super.setDisabledState();\n    this.open = false;\n  }\n\n  public override writeValue(value: PrizmDay | null): void {\n    super.writeValue(value);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  protected override valueIdenticalComparator(oldValue: PrizmDay | null, newValue: PrizmDay | null): boolean {\n    return prizmNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [isOpen]=\"open && canOpen\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <prizm-input-layout [label]=\"label\" [outer]=\"outer\" [forceClear]=\"forceClear\" [size]=\"size\">\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [mask]=\"computedMask\"\n      [showMaskTyped]=\"focusableElementRef.focused\"\n      [dropSpecialCharacters]=\"false\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readOnly\"\n      [disabled]=\"computedDisabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"stringValue\"\n      (ngModelChange)=\"onValueChange($event || '')\"\n      prizmInput\n    />\n    <ng-container prizm-input-right>\n      <button [interactive]=\"true\" prizmInputIconButton=\"date-calendar-blank\"></button>\n      <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n  <ng-template #dropdown>\n    <prizm-calendar\n      [min]=\"min\"\n      [max]=\"max\"\n      [markerHandler]=\"markerHandler\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [month]=\"computedActiveYearMonth\"\n      [value]=\"value\"\n      (dayClick)=\"onDayClick($event)\"\n      (monthChange)=\"onMonthChange($event)\"\n      prizmPreventDefault=\"mousedown\"\n      automation-id=\"prizm-input-date__calendar\"\n    ></prizm-calendar>\n    <div class=\"z-button\" *ngIf=\"items.length === 1\" prizmPreventDefault=\"mousedown\">\n      <button (click)=\"onDayClick(items[0].day)\" prizmLink type=\"button\">\n        {{ items[0] }}\n      </button>\n    </div>\n  </ng-template>\n</prizm-dropdown-host>\n","import { NgModule } from '@angular/core';\nimport { PrizmPrimitiveYearMonthPaginationComponent } from './primitive-year-month-pagination.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPrimitiveYearMonthPaginationComponent],\n  exports: [PrizmPrimitiveYearMonthPaginationComponent],\n})\nexport class PrizmPrimitiveYearMonthPaginationModule {}\n","import { NgModule } from '@angular/core';\nimport { PrizmPrimitiveYearPickerComponent } from './primitive-year-picker.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPrimitiveYearPickerComponent],\n  exports: [PrizmPrimitiveYearPickerComponent],\n})\nexport class PrizmPrimitiveYearPickerModule {}\n","import { NgModule } from '@angular/core';\nimport { PrizmPrimitiveMonthPickerComponent } from './primitive-month-picker.component';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PrizmRepeatTimesModule } from '../../../directives/repeat-times/repeat-times.module';\nimport { PrizmHoveredModule } from '../../../directives/hovered/hovered.module';\nimport { PrizmPressedModule } from '../../../directives/pressed/pressed.module';\nimport { PrizmScrollIntoViewModule } from '../../../directives/scroll-into-view/scroll-into-view.module';\nimport { PrizmMonthPipeModule } from '../../../pipes/month';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPrimitiveMonthPickerComponent],\n  exports: [PrizmPrimitiveMonthPickerComponent],\n})\nexport class PrizmPrimitiveMonthPickerModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { Observable } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PrizmMapper } from '../../../types/mapper';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\n/**\n * @internal\n */\n@Component({\n  selector: `prizm-primitive-calendar-range`,\n  templateUrl: `./primitive-calendar-range.component.html`,\n  styleUrls: [`./primitive-calendar-range.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmPrimitiveCalendarRangeComponent extends PrizmAbstractTestId implements OnInit {\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonthFirst = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonthSecond = PrizmMonth.currentLocal().append({ month: 1 });\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmDayRange | null = null;\n\n  @Output()\n  readonly dayClick = new EventEmitter<PrizmDay>();\n\n  override readonly testId_ = 'ui_primitive_calendar_range';\n\n  hoveredItem: PrizmDay | null = null;\n\n  userViewedMonthFirst: PrizmMonth = this.defaultViewedMonthFirst;\n  userViewedMonthSecond: PrizmMonth = this.defaultViewedMonthSecond;\n\n  constructor(\n    @Inject(PRIZM_CALENDAR_DATA_STREAM)\n    @Optional()\n    valueChanges: Observable<PrizmDayRange | null> | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PrizmDestroyService) destroy$: PrizmDestroyService\n  ) {\n    super();\n    if (!valueChanges) {\n      return;\n    }\n\n    valueChanges\n      .pipe(\n        tap(() => changeDetectorRef.markForCheck()),\n        takeUntil(destroy$)\n      )\n      .subscribe(value => {\n        this.value = value;\n        this.updateViewedMonths();\n      });\n  }\n\n  get cappedUserViewedMonthSecond(): PrizmMonth {\n    return this.userViewedMonthSecond.monthBefore(this.max) ? this.userViewedMonthSecond : this.max;\n  }\n\n  get cappedUserViewedMonthFirst(): PrizmMonth {\n    return this.userViewedMonthFirst.monthSameOrBefore(this.userViewedMonthSecond)\n      ? this.userViewedMonthFirst\n      : this.userViewedMonthSecond;\n  }\n\n  monthOffset: PrizmMapper<PrizmMonth, PrizmMonth> = (value, offset: number) =>\n    value.append({ month: offset });\n\n  public ngOnInit(): void {\n    this.setInitialMonths();\n  }\n\n  public onSectionFirstViewedMonth(month: PrizmMonth): void {\n    this.userViewedMonthFirst = month;\n\n    if (this.userViewedMonthSecond.year < this.userViewedMonthFirst.year) {\n      this.userViewedMonthSecond = this.userViewedMonthSecond.append({\n        year: month.year - this.userViewedMonthSecond.year,\n      });\n    }\n  }\n\n  public onSectionSecondViewedMonth(month: PrizmMonth): void {\n    this.userViewedMonthSecond = month;\n\n    if (this.userViewedMonthFirst.year > this.userViewedMonthSecond.year) {\n      this.userViewedMonthFirst = this.userViewedMonthFirst.append({\n        year: month.year - this.userViewedMonthFirst.year,\n      });\n    }\n  }\n\n  public onDayClick(day: PrizmDay): void {\n    this.dayClick.emit(day);\n  }\n\n  private setInitialMonths(): void {\n    if (!this.value) {\n      this.userViewedMonthSecond = this.updatedViewedMonthSecond(this.defaultViewedMonthSecond);\n\n      this.userViewedMonthFirst = this.updatedViewedMonthFirst(this.defaultViewedMonthFirst);\n    } else {\n      this.userViewedMonthFirst = this.updatedViewedMonthFirst(this.value.from);\n      this.userViewedMonthSecond = this.updatedViewedMonthSecond(\n        this.value.to.monthSame(this.value.from) ? this.value.to.append({ month: 1 }) : this.value.to\n      );\n    }\n  }\n\n  private updatedViewedMonthSecond(month: PrizmMonth): PrizmMonth {\n    if (month.monthSameOrAfter(this.max)) {\n      return this.max;\n    }\n\n    if (month.monthBefore(this.min)) {\n      return this.min.append({ month: 1 });\n    }\n\n    return month;\n  }\n\n  private updatedViewedMonthFirst(month: PrizmMonth): PrizmMonth {\n    if (month.monthSameOrAfter(this.userViewedMonthSecond)) {\n      return this.userViewedMonthSecond.append({ month: -1 });\n    }\n\n    if (month.monthSameOrBefore(this.min)) {\n      return this.min;\n    }\n\n    return month;\n  }\n\n  private updateViewedMonths(): void {\n    this.userViewedMonthFirst = this.value === null ? this.defaultViewedMonthFirst : this.value.from;\n    this.userViewedMonthSecond = this.value === null ? this.defaultViewedMonthSecond : this.value.to;\n\n    if (this.userViewedMonthFirst.monthSame(this.userViewedMonthSecond)) {\n      this.userViewedMonthSecond = this.userViewedMonthSecond.append({ month: 1 });\n    }\n  }\n}\n","<prizm-calendar\n  [(hoveredItem)]=\"hoveredItem\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [month]=\"userViewedMonthFirst\"\n  [markerHandler]=\"markerHandler\"\n  [maxViewedMonth]=\"cappedUserViewedMonthSecond | prizmMapper : monthOffset : -1\"\n  [value]=\"value\"\n  [disabledItemHandler]=\"disabledItemHandler\"\n  [showAdjacent]=\"false\"\n  (dayClick)=\"onDayClick($event)\"\n  (monthChange)=\"onSectionFirstViewedMonth($event)\"\n>\n  <ng-container footer> <ng-content select=\"[footerFrom]\"></ng-content></ng-container>\n  <ng-container header> <ng-content select=\"[headerFrom]\"></ng-content></ng-container>\n</prizm-calendar>\n\n<prizm-calendar\n  [(hoveredItem)]=\"hoveredItem\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [month]=\"userViewedMonthSecond\"\n  [markerHandler]=\"markerHandler\"\n  [minViewedMonth]=\"cappedUserViewedMonthFirst | prizmMapper : monthOffset : 1\"\n  [value]=\"value\"\n  [disabledItemHandler]=\"disabledItemHandler\"\n  [showAdjacent]=\"false\"\n  (dayClick)=\"onDayClick($event)\"\n  (monthChange)=\"onSectionSecondViewedMonth($event)\"\n>\n  <ng-container footer>\n    <ng-content select=\"[footerTo]\"></ng-content>\n  </ng-container>\n  <ng-container header>\n    <ng-content select=\"[headerTo]\"></ng-content>\n  </ng-container>\n</prizm-calendar>\n","import { NgModule } from '@angular/core';\nimport { PrizmMapperPipeModule } from '../../../pipes/mapper/mapper.module';\n// import { PrizmCalendarModule } from '../../calendar/calendar.module';\nimport { PrizmScrollbarModule } from '../../scrollbar/scrollbar.module';\nimport { PrizmPrimitiveCalendarRangeComponent } from './primitive-calendar-range.component';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCalendarComponent } from '../../calendar/calendar.component';\n\n/**\n * @internal\n */\n@NgModule({\n  imports: [PrizmMapperPipeModule, CommonModule, PrizmScrollbarModule, PrizmCalendarComponent],\n  declarations: [PrizmPrimitiveCalendarRangeComponent],\n  exports: [PrizmPrimitiveCalendarRangeComponent],\n})\nexport class PrizmPrimitiveCalendarRangeModule {}\n","import { NgModule } from '@angular/core';\nimport { PrizmCalendarComponent } from './calendar.component';\nimport { PrizmPrimitiveYearMonthPaginationComponent } from '../internal/primitive-year-month-pagination';\nimport { PrizmPrimitiveYearPickerComponent } from '../internal/primitive-year-picker';\nimport { PrizmMapperPipeModule } from '../../pipes/mapper/mapper.module';\nimport { PrizmScrollbarModule } from '../scrollbar/scrollbar.module';\nimport { PrizmPrimitiveMonthPickerComponent } from '../internal/primitive-month-picker';\nimport { PrizmPrimitiveCalendarComponent } from '../internal';\n\n/**\n * @deprecated\n * user standalone\n * */\n@NgModule({\n  imports: [\n    PrizmCalendarComponent,\n    PrizmPrimitiveYearMonthPaginationComponent,\n    PrizmPrimitiveCalendarComponent,\n    PrizmPrimitiveYearPickerComponent,\n    PrizmPrimitiveMonthPickerComponent,\n    PrizmScrollbarModule,\n    PrizmMapperPipeModule,\n  ],\n  exports: [\n    PrizmCalendarComponent,\n    PrizmPrimitiveYearMonthPaginationComponent,\n    PrizmPrimitiveCalendarComponent,\n    PrizmPrimitiveYearPickerComponent,\n    PrizmPrimitiveMonthPickerComponent,\n    PrizmScrollbarModule,\n    PrizmMapperPipeModule,\n  ],\n})\nexport class PrizmCalendarModule {}\n","import { NgModule } from '@angular/core';\nimport { PrizmDropdownHostControlDirective } from './dropdown-host-control.directive';\nimport { PrizmDropdownHostComponent } from './dropdown-host.component';\nimport { PrizmDropdownZoneModule } from '../../../directives/event-zone';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmDropdownHostControlDirective, PrizmDropdownHostComponent],\n  exports: [PrizmDropdownHostControlDirective, PrizmDropdownHostComponent, PrizmDropdownZoneModule],\n})\nexport class PrizmDropdownHostModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmInputDateComponent } from './date.component';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmCalendarModule } from '../../calendar/calendar.module';\nimport { PrizmLinkModule } from '../../link/link.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmPreventDefaultModule } from '../../../directives/prevent-default/prevent-default.module';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmMaskModule } from '../../../modules';\n\n/**\n * @deprecated\n * use PrizmInputLayoutDateModule\n * */\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmMaskModule,\n    PolymorphModule,\n    PrizmPreventDefaultModule,\n    PrizmCalendarModule,\n    PrizmInputTextModule,\n    PrizmIconModule,\n    PrizmLinkModule,\n    FormsModule,\n    PrizmDropdownHostModule,\n    PrizmValueAccessorModule,\n    PrizmLetModule,\n  ],\n  declarations: [PrizmInputDateComponent],\n  exports: [PrizmInputDateComponent],\n})\nexport class PrizmInputDateModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PRIZM_INPUT_DATE_PROVIDERS } from './input-date.providers';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  PRIZM_DATE_FILLER_LENGTH,\n  PRIZM_DATE_FORMAT,\n  PRIZM_DATE_SEPARATOR,\n  PRIZM_FIRST_DAY,\n  PRIZM_LAST_DAY,\n  PrizmDay,\n  PrizmMonth,\n} from '../../../@core/date-time';\nimport {\n  PrizmBooleanHandler,\n  PrizmContextWithImplicit,\n  PrizmControlValueTransformer,\n  PrizmDateMode,\n} from '../../../types';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PrizmDialogService } from '../../dialogs/dialog';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmNamedDay } from '../../../@core/classes/named-day';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmCreateDateNgxMask } from '../../../@core/mask/create-date-mask';\nimport { PRIZM_DATE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_DATE_TEXTS } from '../../../tokens/i18n';\nimport { prizmIsNativeFocusedIn } from '../../../util';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PrizmInputNgControl } from '../common/base/input-ng-control.class';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmInputControl } from '../common';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { CommonModule } from '@angular/common';\nimport {\n  PolymorphOutletDirective,\n  PrizmLifecycleModule,\n  PrizmPreventDefaultModule,\n  PrizmValueAccessorModule,\n} from '../../../directives';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmCalendarModule } from '../../calendar';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmLinkModule } from '../../link';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\n\n@Component({\n  selector: `prizm-input-layout-date`,\n  templateUrl: `./input-layout-date.component.html`,\n  styleUrls: [`./input-layout-date.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_DATE_TEXTS, 'dateTexts'),\n    ...PRIZM_INPUT_DATE_PROVIDERS,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutDateComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutDateComponent },\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmLifecycleModule,\n    PrizmMaskModule,\n    PolymorphOutletDirective,\n    PrizmPreventDefaultModule,\n    PrizmCalendarModule,\n    PrizmInputTextModule,\n    PrizmIconComponent,\n    PrizmLinkModule,\n    FormsModule,\n    PrizmDropdownHostComponent,\n    PrizmValueAccessorModule,\n    PrizmLetDirective,\n  ],\n})\nexport class PrizmInputLayoutDateComponent extends PrizmInputNgControl<PrizmDay | null> {\n  readonly nativeElementType = 'input-date';\n  readonly hasClearButton = true;\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  private month: PrizmMonth | null = null;\n\n  public mask = prizmCreateDateNgxMask(this.dateFormat, this.dateSeparator);\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmNamedDay[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  defaultActiveYearMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector;\n\n  override readonly testId_ = 'ui_input_date';\n\n  @HostBinding('style.width')\n  readonly width = 'auto';\n\n  public open = false;\n\n  readonly type!: PrizmContextWithImplicit<unknown>;\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  constructor(\n    @Inject(Injector) injector: Injector,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_DATE_FORMAT)\n    readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_VALUE_TRANSFORMER)\n    valueTransformer: PrizmControlValueTransformer<PrizmDay | null> | null\n  ) {\n    super(injector, valueTransformer);\n    this.extraButtonInjector = injector;\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  get computedActiveYearMonth(): PrizmMonth {\n    if (this.items[0] && this.value && this.value.daySame(this.items[0].day)) {\n      return this.items[0].displayDay;\n    }\n\n    return this.month || this.value || this.defaultActiveYearMonth;\n  }\n\n  get canOpen(): boolean {\n    return !this.disabled;\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  get computedMask(): string {\n    return this.mask;\n  }\n\n  public onValueChange(value: string): void {\n    if (!value || value.length !== PRIZM_DATE_FILLER_LENGTH) {\n      if (!value) this.updateValue(null);\n      return;\n    }\n\n    this.updateValue(\n      value.length !== PRIZM_DATE_FILLER_LENGTH ? null : PrizmDay.normalizeParse(value, this.dateFormat)\n    );\n  }\n\n  public onDayClick(value: PrizmDay): void {\n    this.updateValue(value);\n    this.open = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public onMonthChange(month: PrizmMonth): void {\n    this.month = month;\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public override writeValue(value: PrizmDay | null): void {\n    super.writeValue(value);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    this.updateValue(null);\n    this.markAsTouched();\n    this.changeDetectorRef.markForCheck();\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [isOpen]=\"open && canOpen\"\n  [content]=\"dropdown\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <input\n    class=\"input-search\"\n    #focusableElementRef\n    [mask]=\"computedMask\"\n    [showMaskTyped]=\"focusableElementRef.focused\"\n    [dropSpecialCharacters]=\"false\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"!!disabled\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"stringValue\"\n    (ngModelChange)=\"onValueChange($event || '')\"\n    prizmInput\n  />\n  <ng-template #dropdown>\n    <prizm-calendar\n      [min]=\"min\"\n      [max]=\"max\"\n      [markerHandler]=\"markerHandler\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [month]=\"computedActiveYearMonth\"\n      [value]=\"value\"\n      (prizmAfterViewInit)=\"markAsTouched()\"\n      (dayClick)=\"onDayClick($event)\"\n      (monthChange)=\"onMonthChange($event)\"\n      prizmPreventDefault=\"mousedown\"\n      automation-id=\"prizm-input-date__calendar\"\n    ></prizm-calendar>\n    <div class=\"z-button\" *ngIf=\"items.length === 1\" prizmPreventDefault=\"mousedown\">\n      <button (click)=\"onDayClick(items[0].day)\" prizmLink type=\"button\">\n        {{ items[0] }}\n      </button>\n    </div>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [disabled]=\"!!disabled\"\n    [interactive]=\"true\"\n    (click)=\"onOpenChange(!open)\"\n    prizmInputIconButton=\"date-calendar-blank\"\n  ></button>\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutDateComponent } from './input-layout-date.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputLayoutDateComponent],\n  exports: [PrizmInputLayoutDateComponent, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutDateModule {}\n","import { forwardRef, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { PrizmInputDateRangeComponent } from './input-date-range.component';\nimport { PrizmDayRange } from '../../../@core/date-time';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';\n\n// TODO: 2.0 remove in ivy compilation\nexport const RANGE_STREAM_FACTORY = <T extends PrizmDayRange>(\n  control: NgControl | null,\n  valueTransformer: PrizmControlValueTransformer<T>\n): Observable<T | null> | null => prizmReplayControlValueChangesFactory<T>(control, valueTransformer);\n\nexport const PRIZM_INPUT_DATE_RANGE_PROVIDERS = [\n  {\n    provide: AbstractPrizmControl,\n    useExisting: forwardRef(() => PrizmInputDateRangeComponent),\n  },\n  {\n    provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => PrizmInputDateRangeComponent),\n  },\n  {\n    provide: PRIZM_CALENDAR_DATA_STREAM,\n    deps: [\n      [new Optional(), new Self(), NgControl],\n      [new Optional(), forwardRef(() => PRIZM_DATE_RANGE_VALUE_TRANSFORMER)],\n    ],\n    useFactory: RANGE_STREAM_FACTORY,\n  },\n  PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n];\n","import { PrizmDateMode } from '../../types/date-mode';\nimport { prizmCreateDateNgxMask } from './create-date-mask';\nimport { prizmAssert } from '@prizm-ui/core';\n\nexport function prizmCreateDateRangeMask(dateMode: PrizmDateMode, dateSeparator: string): string {\n  prizmAssert.assert(dateSeparator.length === 1, `Separator should consist of only 1 symbol`);\n\n  const dateMask = prizmCreateDateNgxMask(dateMode, dateSeparator);\n\n  return `${dateMask} - ${dateMask}`;\n}\n","import { PrizmDay, PrizmDayRange } from '../@core/date-time';\nimport { PrizmDayLike } from '../types/day-like';\nimport { PrizmMapper } from '../types/mapper';\n\nexport const PRIZM_MAX_DAY_RANGE_LENGTH_MAPPER: PrizmMapper<PrizmDay, PrizmDay> = (\n  min,\n  value: PrizmDayRange,\n  maxLength: PrizmDayLike | null,\n  backwards: boolean\n) => {\n  if (!value || !value.isSingleDay || !maxLength) {\n    return min;\n  }\n\n  const dateShift = value.from.append(maxLength, backwards).append({ day: 1 }, !backwards);\n\n  if (backwards) {\n    return dateShift.dayBefore(min) ? min : dateShift;\n  }\n\n  if (!min) {\n    return dateShift;\n  }\n\n  return dateShift.dayAfter(min) ? min : dateShift;\n};\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PolymorphContent } from '../../directives';\n\nexport interface PrizmDataListOptions {\n  readonly empty: PolymorphContent;\n}\n\n/** Default values for data-list options */\nexport const PRIZM_DATALIST_DEFAULT_OPTIONS: PrizmDataListOptions = {\n  empty: '',\n};\n\nexport const PRIZM_DATALIST_OPTIONS = new InjectionToken<PrizmDataListOptions>(\n  'Default parameters for datalist directive',\n  {\n    factory: (): PrizmDataListOptions => PRIZM_DATALIST_DEFAULT_OPTIONS,\n  }\n);\n\nexport const PrizmDataListOptionsProvider: (options: Partial<PrizmDataListOptions>) => ValueProvider = (\n  options: Partial<PrizmDataListOptions>\n) => ({\n  provide: PRIZM_DATALIST_OPTIONS,\n  useValue: { ...PRIZM_DATALIST_DEFAULT_OPTIONS, ...options },\n});\n","import { Directive, Provider, Type } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[prizmDataList]',\n  standalone: true,\n})\nexport class PrizmDataListDirective {}\n\nexport function prizmAsDataList(useExisting: Type<PrizmDataListDirective>): Provider {\n  return {\n    provide: PrizmDataListDirective,\n    useExisting,\n  };\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { PRIZM_DATALIST_OPTIONS, PrizmDataListOptions } from './data-list-options';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmScrollbarModule, PrizmScrollbarVisibility } from '../scrollbar';\nimport {\n  PRIZM_DROPDOWN_CONTROLLER,\n  PRIZM_DROPDOWN_DEFAULT_MAX_HEIGHT,\n  PRIZM_DROPDOWN_DEFAULT_MIN_HEIGHT,\n  PrizmDropdownControllerDirective,\n} from '../../directives/dropdown-controller';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PolymorphContent, PolymorphModule } from '../../directives';\nimport { PrizmDataListDirective } from './data-list.directive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../icon';\n\n@Component({\n  selector: 'prizm-data-list',\n  templateUrl: './data-list.component.html',\n  styleUrls: ['./data-list.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [PrizmDataListDirective, CommonModule, PolymorphModule, PrizmIconModule, PrizmScrollbarModule],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: 'prizm-data-list',\n    '[class.default]': 'defaultStyle',\n  },\n})\nexport class PrizmDataListComponent extends PrizmAbstractTestId implements OnInit {\n  @Input() defaultStyle = true;\n\n  @Input()\n  @prizmDefaultProp()\n  iconOff = this.options.empty;\n\n  /**\n   * for example\n   * change scroll bar\n   * */\n  @Input()\n  content: PolymorphContent;\n\n  @Input()\n  @prizmDefaultProp()\n  scroll: PrizmScrollbarVisibility | 'none' = 'auto';\n\n  override readonly testId_ = 'ui_data_list';\n\n  constructor(\n    @Inject(PRIZM_DROPDOWN_CONTROLLER)\n    @Optional()\n    private readonly controller: PrizmDropdownControllerDirective | null,\n    @Inject(PRIZM_DATALIST_OPTIONS)\n    public readonly options: PrizmDataListOptions,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly cdRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  get minDropdownHeight(): string {\n    return (this.controller?.minHeight ?? PRIZM_DROPDOWN_DEFAULT_MIN_HEIGHT) + 'px';\n  }\n\n  get maxDropdownHeight(): string {\n    return (this.controller?.maxHeight ?? PRIZM_DROPDOWN_DEFAULT_MAX_HEIGHT) + 'px';\n  }\n\n  ngOnInit(): void {\n    this.controller?.changes$\n      .pipe(\n        tap(() => this.cdRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","<div class=\"header\">\n  <ng-content select=\"[header]\"></ng-content>\n</div>\n<ng-container *polymorphOutlet=\"content as data\">\n  <div class=\"body\">\n    <prizm-scrollbar\n      *ngIf=\"scroll !== 'none'; else simpleTemplate\"\n      [visibility]=\"$any(scroll)\"\n      [style.min-height]=\"minDropdownHeight\"\n      [style.max-height]=\"maxDropdownHeight\"\n    >\n      <ng-container *ngTemplateOutlet=\"simpleTemplate\"></ng-container>\n    </prizm-scrollbar>\n\n    <ng-template #simpleTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  </div>\n</ng-container>\n\n<div class=\"footer\">\n  <ng-content select=\"[footer]\"></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmDataListComponent } from './data-list.component';\nimport { PrizmDataListDirective } from './data-list.directive';\n\n/**\n * @deprecated\n * use standalone components\n * - PrizmDataListComponent\n * - PrizmDataListDirective\n * */\n@NgModule({\n  imports: [PrizmDataListComponent, PrizmDataListDirective],\n  exports: [PrizmDataListComponent, PrizmDataListDirective],\n})\nexport class PrizmDataListModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { Observable } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDayRangePeriod } from '../../@core/classes/day-range-period';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PrizmDayRange } from '../../@core/date-time/day-range';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../constants/always-false-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../constants/default-marker-handler';\nimport { PRIZM_MAX_DAY_RANGE_LENGTH_MAPPER } from '../../constants/max-day-range-length-mapper';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../tokens/calendar-data-stream';\nimport { PrizmDayLike } from '../../types/day-like';\nimport { PrizmBooleanHandler } from '../../types/handler';\nimport { PrizmMapper } from '../../types/mapper';\nimport { PrizmMarkerHandler } from '../../types/marker-handler';\nimport { PrizmWithOptionalMinMax } from '../../types/with-optional-min-max';\nimport { prizmNullableSame } from '../../util/common/nullable-same';\nimport { PRIZM_OTHER_DATE_TEXT } from '../../tokens/i18n';\nimport { prizmI18nInitWithKey } from '../../services';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmMapperPipeModule } from '../../pipes';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmPreventDefaultModule } from '../../directives';\nimport { PrizmCalendarComponent, PrizmCalendarModule } from '../calendar';\nimport { PrizmIconComponent, PrizmIconModule } from '../icon';\nimport { PrizmDataListComponent, PrizmDataListModule } from '../data-list';\nimport { PrizmPrimitiveCalendarRangeModule } from '../internal';\n\n@Component({\n  selector: `prizm-calendar-range`,\n  templateUrl: `./calendar-range.component.html`,\n  styleUrls: [`./calendar-range.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmMapperPipeModule,\n    PrizmButtonModule,\n    PrizmPreventDefaultModule,\n    PrizmIconComponent,\n    PrizmDataListComponent,\n    PrizmPrimitiveCalendarRangeModule,\n    PrizmCalendarComponent,\n  ],\n  providers: [...prizmI18nInitWithKey(PRIZM_OTHER_DATE_TEXT, 'otherDate'), PrizmDestroyService],\n})\nexport class PrizmCalendarRangeComponent\n  extends PrizmAbstractTestId\n  implements PrizmWithOptionalMinMax<PrizmDay>\n{\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonth: PrizmMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmDayRangePeriod[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmDay = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmDay = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  minLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  maxLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmDayRange | null = null;\n\n  @Output()\n  readonly valueChange = new EventEmitter<PrizmDayRange>();\n\n  /** @deprecated TODO: 2.0 remove */\n  @Output()\n  readonly rangeChange = new EventEmitter<PrizmDayRange | null>();\n\n  override readonly testId_ = 'ui_calendar_range';\n\n  readonly maxLengthMapper: PrizmMapper<PrizmDay, PrizmDay> = PRIZM_MAX_DAY_RANGE_LENGTH_MAPPER;\n\n  constructor(\n    @Inject(PRIZM_CALENDAR_DATA_STREAM)\n    @Optional()\n    valueChanges: Observable<PrizmDayRange | null> | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PrizmDestroyService) destroy$: PrizmDestroyService,\n    @Inject(PRIZM_OTHER_DATE_TEXT) readonly otherDateText$: Observable<string>\n  ) {\n    super();\n    if (!valueChanges) {\n      return;\n    }\n\n    valueChanges\n      .pipe(\n        tap(() => changeDetectorRef.markForCheck()),\n        takeUntil(destroy$)\n      )\n      .subscribe(value => {\n        this.value = value;\n      });\n  }\n\n  readonly getEndRangeMonthOrShift: PrizmMapper<PrizmMonth, PrizmMonth> = item => {\n    if (!this.value || !this.value.to) return item.append({ month: 1 });\n    return this.value.to;\n  };\n\n  readonly mapper: PrizmMapper<readonly PrizmDayRangePeriod[], ReadonlyArray<PrizmDayRangePeriod | string>> =\n    (items, min: PrizmDay, max: PrizmDay | null, minLength: PrizmDayLike | null, otherDateText: string) => [\n      ...items.filter(\n        item =>\n          (minLength === null || item.range.from.append(minLength).daySameOrBefore(item.range.to)) &&\n          item.range.to.daySameOrAfter(min) &&\n          (max === null || item.range.from.daySameOrBefore(max))\n      ),\n      otherDateText,\n    ];\n\n  get calculatedDisabledItemHandler(): PrizmBooleanHandler<PrizmDay> {\n    return this.calculateDisabledItemHandler(this.disabledItemHandler, this.value, this.minLength);\n  }\n\n  public get computedMonth(): PrizmMonth {\n    return this.value ? this.value.to : this.defaultViewedMonth;\n  }\n\n  public isItemActive(item: string | PrizmDayRangePeriod): boolean {\n    const { activePeriod } = this;\n\n    return (typeof item === `string` && activePeriod === null) || activePeriod === item;\n  }\n\n  public onRangeChange(dayRange: PrizmDayRange): void {\n    this.updateValue(dayRange);\n  }\n\n  public onDayClick(day: PrizmDay): void {\n    const { value } = this;\n    if (value === null || !value.isSingleDay) {\n      this.value = new PrizmDayRange(day, day);\n\n      return;\n    }\n\n    this.updateValue(PrizmDayRange.sort(value.from, day));\n  }\n\n  public onItemSelect(item: string | PrizmDayRangePeriod): void {\n    if (typeof item !== `string`) {\n      this.updateValue(item.range.dayLimit(this.min, this.max));\n\n      return;\n    }\n    if (this.activePeriod !== null) {\n      this.updateValue(null);\n    }\n  }\n\n  public updateValue(value: PrizmDayRange | null): void {\n    this.value = value;\n    this.valueChange.emit(value as PrizmDayRange);\n    this.rangeChange.emit(value);\n  }\n\n  private get activePeriod(): PrizmDayRangePeriod | null {\n    return (\n      this.items.find(item =>\n        prizmNullableSame<PrizmDayRange>(\n          this.value,\n          item.range,\n          (a, b) =>\n            a.from.daySame(b.from.dayLimit(this.min, this.max)) &&\n            a.to.daySame(b.to.dayLimit(this.min, this.max))\n        )\n      ) || null\n    );\n  }\n\n  @prizmPure\n  private calculateDisabledItemHandler(\n    disabledItemHandler: PrizmBooleanHandler<PrizmDay>,\n    value: PrizmDayRange | null,\n    minLength: PrizmDayLike | null\n  ): PrizmBooleanHandler<PrizmDay> {\n    return (item: PrizmDay): boolean => {\n      if (!value || !value.isSingleDay || !minLength) {\n        return disabledItemHandler(item);\n      }\n\n      const disabledBefore = value.from.append(minLength, true).append({ day: 1 });\n      const disabledAfter = value.from.append(minLength).append({ day: -1 });\n      const inDisabledRange = disabledBefore.dayBefore(item) && disabledAfter.dayAfter(item);\n\n      return inDisabledRange || disabledItemHandler(item);\n    };\n  }\n}\n","<ng-container *ngIf=\"!items.length; else presets\">\n  <prizm-primitive-calendar-range\n    [markerHandler]=\"markerHandler\"\n    [min]=\"min | prizmMapper : maxLengthMapper : value : maxLength : true\"\n    [max]=\"max | prizmMapper : maxLengthMapper : value : maxLength : false\"\n    [defaultViewedMonthFirst]=\"computedMonth\"\n    [defaultViewedMonthSecond]=\"computedMonth | prizmMapper : getEndRangeMonthOrShift\"\n    [disabledItemHandler]=\"calculatedDisabledItemHandler\"\n    [value]=\"value\"\n    (dayClick)=\"onDayClick($event)\"\n    automation-id=\"prizm-calendar-range__calendars\"\n    prizmPreventDefault=\"mousedown\"\n  >\n    <ng-container footerFrom>\n      <ng-content select=\"[footerFrom]\"></ng-content>\n    </ng-container>\n    <ng-container headerFrom>\n      <ng-content select=\"[headerFrom]\"></ng-content>\n    </ng-container>\n    <ng-container footerTo>\n      <ng-content select=\"[footerTo]\"></ng-content>\n    </ng-container>\n    <ng-container headerTo>\n      <ng-content select=\"[headerTo]\"></ng-content>\n    </ng-container>\n  </prizm-primitive-calendar-range>\n</ng-container>\n<ng-template #presets>\n  <div class=\"z-wrapper\">\n    <prizm-calendar\n      [value]=\"value\"\n      [markerHandler]=\"markerHandler\"\n      [min]=\"min | prizmMapper : maxLengthMapper : value : maxLength : true\"\n      [max]=\"max | prizmMapper : maxLengthMapper : value : maxLength : false\"\n      [month]=\"computedMonth\"\n      [disabledItemHandler]=\"calculatedDisabledItemHandler\"\n      (dayClick)=\"onDayClick($event)\"\n      automation-id=\"prizm-calendar-range__calendar\"\n      prizmPreventDefault=\"mousedown\"\n    >\n    </prizm-calendar>\n    <prizm-data-list\n      class=\"z-menu\"\n      [style.--prizm-data-list-border]=\"0\"\n      [style.--prizm-data-list-border-left]=\"'1px solid var(--prizm-v3-background-stroke)'\"\n      role=\"menu\"\n      automation-id=\"prizm-calendar-range__menu\"\n    >\n      <button\n        class=\"button-list\"\n        *ngFor=\"let item of items | prizmMapper : mapper : min : max : minLength : (otherDateText$ | async)\"\n        [attr.aria-checked]=\"isItemActive(item)\"\n        (keydown.enter.prevent)=\"onItemSelect(item)\"\n        (keydown.space.prevent)=\"onItemSelect(item)\"\n        (click)=\"onItemSelect(item)\"\n        prizmPreventDefault=\"mousedown\"\n        role=\"menuitemradio\"\n        prizmButton\n        appearanceType=\"ghost\"\n        appearance=\"primary\"\n        automation-id=\"prizm-calendar-range__menu__item\"\n      >\n        <div class=\"btn-content\">\n          <span>{{ item }}</span>\n          <prizm-icon\n            [style.visibility]=\"isItemActive(item) ? '' : 'hidden'\"\n            iconClass=\"selection-check-simple\"\n          ></prizm-icon>\n        </div>\n      </button>\n    </prizm-data-list>\n  </div>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  TemplateRef,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PRIZM_INPUT_DATE_RANGE_PROVIDERS } from './input-date-range.providers';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { prizmCreateDateRangeMask } from '../../../@core/mask/create-date-range-mask';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmDayRangePeriod } from '../../../@core/classes/day-range-period';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmDayLike } from '../../../types/day-like';\nimport { PrizmMapper } from '../../../types/mapper';\nimport { PRIZM_MAX_DAY_RANGE_LENGTH_MAPPER } from '../../../constants/max-day-range-length-mapper';\nimport { PRIZM_DATE_SEPARATOR, prizmChangeDateSeparator } from '../../../@core/date-time/date-separator';\nimport { PRIZM_IS_MOBILE } from '../../../tokens/is-mobile';\nimport { PrizmDialogService } from '../../dialogs/dialog/dialog.service';\nimport { PRIZM_MOBILE_CALENDAR } from '../../../tokens/mobile-calendar';\nimport { PRIZM_DATE_FORMAT } from '../../../@core/date-time/date-format';\nimport { PrizmDateMode } from '../../../types/date-mode';\nimport { PRIZM_DATE_TEXTS } from '../../../tokens/i18n';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { PRIZM_DATE_RANGE_FILLER_LENGTH } from '../../../@core/date-time/date-fillers';\nimport { PRIZM_RANGE_SEPARATOR_CHAR } from '../../../@core/date-time/date-time';\nimport { prizmSetNativeFocused } from '../../../util/set-native-focused';\nimport { prizmIsNativeFocusedIn } from '../../../util';\nimport { prizmI18nInitWithKey } from '../../../services';\n@Component({\n  selector: `prizm-input-date-range`,\n  templateUrl: `./input-date-range.component.html`,\n  styleUrls: [`./input-date-range.component.less`],\n  providers: [...prizmI18nInitWithKey(PRIZM_DATE_TEXTS, 'dateTexts'), ...PRIZM_INPUT_DATE_RANGE_PROVIDERS],\n})\nexport class PrizmInputDateRangeComponent\n  extends AbstractPrizmNullableControl<PrizmDayRange>\n  implements PrizmWithOptionalMinMax<PrizmDay>, PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @ContentChild('footerFrom', { read: TemplateRef })\n  public readonly footerFromTemplate?: TemplateRef<HTMLInputElement>;\n\n  @ContentChild('footerTo', { read: TemplateRef })\n  public readonly footerToTemplate?: TemplateRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmDayRangePeriod[] = [];\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmDay | null = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmDay | null = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  minLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  maxLength: PrizmDayLike | null = null;\n\n  override readonly testId_ = 'ui_input_date_range';\n\n  open = false;\n\n  readonly maxLengthMapper: PrizmMapper<PrizmDay, PrizmDay> = PRIZM_MAX_DAY_RANGE_LENGTH_MAPPER;\n  readonly dateFiller$ = this.dateTexts$.pipe(\n    map(dateTexts => prizmChangeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator))\n  );\n\n  @Input()\n  @prizmDefaultProp()\n  label = 'Выберите дату';\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  outer = false;\n\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(Injector) private readonly injector: Injector,\n    @Inject(PRIZM_IS_MOBILE) private readonly isMobile: boolean,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_MOBILE_CALENDAR)\n    private readonly mobileCalendar: Type<any> | null,\n    @Inject(PRIZM_DATE_FORMAT) readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_RANGE_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<PrizmDayRange | null> | null\n  ) {\n    super(control, changeDetectorRef, valueTransformer);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  public get computedMobile(): boolean {\n    return this.isMobile && !!this.mobileCalendar;\n  }\n\n  public get canOpen(): boolean {\n    return this.interactive && !this.computedMobile;\n  }\n\n  get computedMask(): string {\n    return prizmCreateDateRangeMask(this.dateFormat, this.dateSeparator);\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  get activePeriod(): PrizmDayRangePeriod | null {\n    return (\n      this.items.find(item =>\n        prizmNullableSame(\n          this.value,\n          item.range,\n          (a, b) =>\n            a.from.daySame(b.from.dayLimit(this.min, this.max)) &&\n            a.to.daySame(b.to.dayLimit(this.min, this.max))\n        )\n      ) || null\n    );\n  }\n\n  get computedValue(): string {\n    const { value, nativeValue, activePeriod } = this;\n\n    if (activePeriod) {\n      return String(activePeriod);\n    }\n\n    return value ? value.getFormattedDayRange(this.dateFormat, this.dateSeparator) : nativeValue;\n  }\n\n  get innerPseudoFocused(): boolean | null {\n    if (this.pseudoFocused === false) {\n      return false;\n    }\n\n    if (this.open || this.computedFocused) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get nativeValue(): string {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : ``;\n  }\n\n  set nativeValue(value: string) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n\n    this.nativeFocusableElement.value = value;\n  }\n\n  @HostListener(`click`)\n  public onClick(): void {\n    if (!this.isMobile) {\n      this.toggle();\n    }\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n  }\n\n  public onValueChange(value: string): void {\n    if (this.control) {\n      this.control.updateValueAndValidity({ emitEvent: false });\n    }\n\n    if (value == null) {\n      this.onOpenChange(true);\n    }\n\n    if (!value || value.length !== PRIZM_DATE_RANGE_FILLER_LENGTH) {\n      if (!value) this.updateValue(null);\n      return;\n    }\n\n    const parsedValue = PrizmDayRange.normalizeParse(value, this.dateFormat);\n\n    this.updateValue(!this.minLength && !this.maxLength ? parsedValue : this.clampValue(parsedValue));\n  }\n\n  public onRangeChange(range: PrizmDayRange | null): void {\n    this.toggle();\n    this.focusInput();\n\n    if (!range) {\n      this.nativeValue = ``;\n    }\n\n    if (!prizmNullableSame<PrizmDayRange>(this.value, range, (a, b) => a.daySame(b))) {\n      this.updateValue(range);\n    }\n  }\n\n  public onItemSelect(item: string | PrizmDayRangePeriod): void {\n    this.toggle();\n    this.focusInput();\n\n    if (typeof item !== `string`) {\n      this.updateValue(item.range.dayLimit(this.min, this.max));\n\n      return;\n    }\n\n    if (this.activePeriod !== null) {\n      this.updateValue(null);\n      this.nativeValue = ``;\n    }\n  }\n\n  public onHovered(hovered: boolean): void {\n    this.updateHovered(hovered);\n  }\n\n  public onPressed(pressed: boolean): void {\n    this.updatePressed(pressed);\n  }\n\n  public override writeValue(value: PrizmDayRange | null): void {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : ``;\n  }\n\n  private get itemSelected(): boolean {\n    return this.items.findIndex(item => String(item) === this.nativeValue) !== -1;\n  }\n\n  private toggle(): void {\n    this.open = !this.open;\n  }\n\n  private focusInput(preventScroll = false): void {\n    if (this.nativeFocusableElement) {\n      prizmSetNativeFocused(this.nativeFocusableElement, true, preventScroll);\n    }\n  }\n\n  private clampValue(value: PrizmDayRange): PrizmDayRange {\n    const clampedBottom =\n      this.minLength && value.from.append(this.minLength).dayAfter(value.to)\n        ? new PrizmDayRange(value.from, value.from.append(this.minLength).append({ day: -1 }))\n        : value;\n\n    const availableMax = this.maxLength\n      ? clampedBottom.from.append(this.maxLength).append({ day: -1 })\n      : this.max;\n\n    return clampedBottom.to.dayAfter(availableMax as any)\n      ? new PrizmDayRange(clampedBottom.from, availableMax as any)\n      : clampedBottom;\n  }\n\n  private getDateRangeFiller(dateFiller: string): string {\n    return `${dateFiller}${PRIZM_RANGE_SEPARATOR_CHAR}${dateFiller}`;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  [isOpen]=\"open && canOpen\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <prizm-input-layout [forceClear]=\"forceClear\" [label]=\"label\" [outer]=\"outer\" [size]=\"size\">\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [mask]=\"computedMask\"\n      [showMaskTyped]=\"focusableElementRef.focused\"\n      [dropSpecialCharacters]=\"false\"\n      [readOnly]=\"readOnly\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"computedDisabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"stringValue\"\n      (ngModelChange)=\"onValueChange($event || '')\"\n      prizmInput\n    />\n\n    <ng-container prizm-input-right>\n      <button\n        [interactive]=\"true\"\n        (click)=\"focusableElementRef.focus()\"\n        prizmInputIconButton=\"date-calendar-range\"\n      ></button>\n    </ng-container>\n  </prizm-input-layout>\n  <ng-template #dropdown>\n    <prizm-calendar-range\n      [style.--prizm-input-layout-width]=\"'100%'\"\n      [style.--prizm-dropdown-host-width]=\"'100%'\"\n      [defaultViewedMonth]=\"defaultViewedMonth\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [items]=\"items\"\n      [min]=\"$any(min)\"\n      [max]=\"$any(max)\"\n      [markerHandler]=\"markerHandler\"\n      [minLength]=\"minLength\"\n      [maxLength]=\"maxLength\"\n      [value]=\"value\"\n      (valueChange)=\"onRangeChange($event)\"\n    >\n      <ng-container footerFrom>\n        <ng-template [ngTemplateOutlet]=\"$any(footerToTemplate)\"> ></ng-template>\n      </ng-container>\n      <ng-container footerTo>\n        <ng-template [ngTemplateOutlet]=\"$any(footerFromTemplate)\"> ></ng-template>\n      </ng-container>\n    </prizm-calendar-range>\n  </ng-template>\n</prizm-dropdown-host>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmPreventDefaultModule } from '../../directives/prevent-default/prevent-default.module';\nimport { PrizmMapperPipeModule } from '../../pipes/mapper/mapper.module';\nimport { PrizmCalendarModule } from '../calendar/calendar.module';\nimport { PrizmCalendarRangeComponent } from './calendar-range.component';\nimport { PrizmPrimitiveCalendarRangeModule } from '../internal/primitive-calendar-range/primitive-calendar-range.module';\nimport { PrizmDataListModule } from '../data-list/data-list.module';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmIconModule } from '../icon';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCalendarRangeComponent],\n  exports: [PrizmCalendarRangeComponent],\n})\nexport class PrizmCalendarRangeModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmInputDateRangeComponent } from './input-date-range.component';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmCalendarRangeModule } from '../../calendar-range/calendar-range.module';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmMaskModule } from '../../../modules';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmMaskModule,\n    PrizmLetModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmIconModule,\n    PrizmDropdownHostModule,\n    PrizmCalendarRangeModule,\n    PrizmValueAccessorModule,\n    FormsModule,\n  ],\n  declarations: [PrizmInputDateRangeComponent],\n  exports: [PrizmInputDateRangeComponent],\n})\nexport class PrizmInputDateRangeModule {}\n","import { Provider } from '@angular/core';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\n\ntype From = PrizmDayRange | null;\ntype To = [Date, Date] | null;\n\nexport class PrizmInputDateRangeNativeTransformer implements PrizmControlValueTransformer<From, To> {\n  public fromControlValue(controlValue: To): From {\n    return controlValue && PrizmDayRange.fromLocalNativeDate(controlValue[0], controlValue[1]);\n  }\n\n  public toControlValue(componentValue: From): To {\n    return componentValue?.toLocalNativeDate() || (null as any);\n  }\n}\n\nexport function prizmGetInputDateRangeNativeTransformer(): Provider {\n  return {\n    provide: PRIZM_DATE_RANGE_VALUE_TRANSFORMER,\n    useClass: PrizmInputDateRangeNativeTransformer,\n  };\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { PRIZM_INPUT_DATE_RANGE_PROVIDERS } from './input-date-range.providers';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { prizmCreateDateRangeMask } from '../../../@core/mask/create-date-range-mask';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmDayRangePeriod } from '../../../@core/classes/day-range-period';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmDayLike } from '../../../types/day-like';\nimport { PRIZM_DATE_SEPARATOR } from '../../../@core/date-time/date-separator';\nimport { PrizmDialogService } from '../../dialogs/dialog/dialog.service';\nimport { PRIZM_DATE_FORMAT } from '../../../@core/date-time/date-format';\nimport { PrizmDateMode } from '../../../types/date-mode';\nimport { PRIZM_DATE_TEXTS } from '../../../tokens/i18n';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmInputNgControl } from '../common/base/input-ng-control.class';\nimport { map } from 'rxjs/operators';\nimport { prizmCreateDateNgxMask } from '../../../@core';\nimport { PrizmInputZoneDirective, PrizmInputZoneModule } from '../../../directives/input-zone';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { CommonModule } from '@angular/common';\nimport { PrizmMaskModule } from '../../../modules';\nimport {\n  PolymorphOutletDirective,\n  PrizmLifecycleDirective,\n  PrizmValueAccessorModule,\n} from '../../../directives';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmCalendarRangeComponent } from '../../calendar-range';\n\n@Component({\n  selector: `prizm-input-layout-date-range`,\n  templateUrl: `./input-layout-date-range.component.html`,\n  styleUrls: [\n    `./input-layout-date-range.component.less`,\n    './../input-date/input-layout-date-shared.component.less',\n  ],\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_DATE_TEXTS, 'dateTexts'),\n    ...PRIZM_INPUT_DATE_RANGE_PROVIDERS,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutDateRangeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutDateRangeComponent },\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmMaskModule,\n    PrizmInputZoneModule,\n    PrizmLifecycleDirective,\n    PrizmLetDirective,\n    PolymorphOutletDirective,\n    PrizmInputTextModule,\n    PrizmIconComponent,\n    PrizmDropdownHostComponent,\n    PrizmCalendarRangeComponent,\n    PrizmValueAccessorModule,\n    FormsModule,\n  ],\n})\nexport class PrizmInputLayoutDateRangeComponent extends PrizmInputNgControl<PrizmDayRange | null> {\n  hasClearButton = true;\n  nativeElementType = 'input-layout-date-range';\n\n  @ViewChild('focusableElementRef', { read: PrizmInputZoneDirective })\n  public override readonly focusableElement?: PrizmInputZoneDirective;\n\n  @ContentChild('footerFrom', { read: TemplateRef })\n  public readonly footerFromTemplate?: TemplateRef<HTMLInputElement>;\n\n  @ContentChild('footerTo', { read: TemplateRef })\n  public readonly footerToTemplate?: TemplateRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmDayRangePeriod[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  minLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  maxLength: PrizmDayLike | null = null;\n\n  open = false;\n\n  override readonly testId_ = 'ui_input_date_range';\n\n  get interactive() {\n    return !this.disabled;\n  }\n  readonly nativeValue$$ = new BehaviorSubject<[string, string]>(['', '']);\n\n  override get empty(): Observable<boolean> {\n    return combineLatest([this.value$, this.nativeValue$$]).pipe(\n      map(([value, nativeValue]) => {\n        return !value && !nativeValue.find(Boolean);\n      })\n    ) as Observable<boolean>;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(Injector) injector: Injector,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_DATE_FORMAT)\n    readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_RANGE_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<PrizmDayRange | null> | null\n  ) {\n    super(injector, valueTransformer);\n  }\n\n  public get focused(): Observable<boolean> {\n    return this.focusableElement?.focused$ ?? of(false);\n  }\n\n  public get canOpen(): boolean {\n    return this.interactive;\n  }\n\n  public closeOnOutsideClick = true;\n\n  get computedMask(): string {\n    return prizmCreateDateRangeMask(this.dateFormat, this.dateSeparator);\n  }\n\n  get computedSingleMask(): string {\n    return prizmCreateDateNgxMask(this.dateFormat, this.dateSeparator);\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n  get fromValue(): string {\n    return this.value?.from?.toString() ?? '';\n  }\n  get toValue(): string {\n    return this.value?.to?.toString() ?? '';\n  }\n\n  get activePeriod(): PrizmDayRangePeriod | null {\n    return (\n      this.items.find(item =>\n        prizmNullableSame(\n          this.value,\n          item.range,\n          (a, b) =>\n            a.from.daySame(b.from.dayLimit(this.min, this.max)) &&\n            a.to.daySame(b.to.dayLimit(this.min, this.max))\n        )\n      ) || null\n    );\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public onValueFromChange(value: string, isFromValue: boolean): void {\n    // clear from mask\n    value = value.replace(/[_]/g, '');\n\n    if (isFromValue && value === this.fromValue) return;\n    if (!isFromValue && value === this.toValue) return;\n    this.nativeValue$$.next(\n      isFromValue ? [value, this.nativeValue$$.value[1]] : [this.nativeValue$$.value[0], value]\n    );\n    if (value == null) {\n      this.onOpenChange(true);\n    }\n\n    if (!value || value.length !== this.computedSingleMask.length) {\n      if (!value && isFromValue && !this.value?.to && !isFromValue && !this.value?.from)\n        this.updateValue(null);\n      return;\n    }\n\n    const parsedValue = PrizmDay.normalizeParse(value, this.dateFormat);\n    this.updateWithCorrectDateAndTime(\n      isFromValue ? parsedValue : (this.value?.from as any),\n      isFromValue ? this.value?.to : (parsedValue as any)\n    );\n  }\n\n  public onRangeChange(range: PrizmDayRange | null): void {\n    this.focusInput();\n\n    if (!range) {\n      this.nativeValue$$.next(['', '']);\n    }\n\n    if (!prizmNullableSame<PrizmDayRange>(this.value, range, (a, b) => a.daySame(b))) {\n      this.updateValue(range);\n      this.open = false;\n    }\n    this.nativeValue$$.next([this.fromValue, this.toValue]);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public onItemSelect(item: string | PrizmDayRangePeriod): void {\n    this.toggle();\n    this.focusInput();\n\n    if (typeof item !== `string`) {\n      this.updateValue(item.range.dayLimit(this.min, this.max));\n\n      return;\n    }\n\n    if (this.activePeriod !== null) {\n      this.updateValue(null);\n      this.nativeValue$$.next(['', '']);\n    }\n  }\n\n  private updateWithCorrectDateAndTime(from: PrizmDay | null, to: PrizmDay | null): void {\n    if (from) from = this.dayLimit(from);\n    if (to) to = this.dayLimit(to);\n    // need to update mask value for sync values\n    // TODO move to helper and add to all similar cases\n    this.focusableElement?.updateNativeValues(\n      {\n        idx: 0,\n        value: from?.toString() ?? '',\n      },\n      {\n        idx: 1,\n        value: to?.toString() ?? '',\n      }\n    );\n    this.updateValue(new PrizmDayRange(from as any, to as any));\n  }\n\n  private dayLimit(value: PrizmDay): PrizmDay {\n    return value.dayLimit(this.min, this.max);\n  }\n\n  public override writeValue(value: PrizmDayRange | null): void {\n    super.writeValue(value);\n    this.nativeValue$$.next([value?.from?.toString() as string, value?.to?.toString() as string]);\n  }\n\n  private toggle(): void {\n    this.open = !this.open;\n  }\n\n  private focusInput(): void {\n    this.focusableElement?.focus(0);\n  }\n\n  private clampValue(value: PrizmDayRange): PrizmDayRange {\n    const clampedBottom =\n      this.minLength && value.from.append(this.minLength).dayAfter(value.to)\n        ? new PrizmDayRange(value.from, value.from.append(this.minLength).append({ day: -1 }))\n        : value;\n\n    const availableMax = this.maxLength\n      ? clampedBottom.from.append(this.maxLength).append({ day: -1 })\n      : this.max;\n\n    return clampedBottom.to.dayAfter(availableMax)\n      ? new PrizmDayRange(clampedBottom.from, availableMax)\n      : clampedBottom;\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    super.clear(ev);\n    this.nativeValue$$.next(['', '']);\n    this.updateValue(null);\n    this.layoutComponent?.cdr.markForCheck();\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  [closeOnOutsideClick]=\"closeOnOutsideClick\"\n  [isOpen]=\"open && canOpen\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <div\n    class=\"multiple-input-box\"\n    #focusableElementRef=\"prizmInputZone\"\n    [attr.data-placeholder]=\"placeholder\"\n    prizmInputZone\n  >\n    <input\n      class=\"input-main\"\n      #maskDirectiveFrom=\"mask\"\n      [class.show-placeholder]=\"(empty | async) && (focusableElementRef.focused$ | async) !== true\"\n      [placeholder]=\"placeholder\"\n      [mask]=\"computedSingleMask\"\n      [showMaskTyped]=\"focusableElementRef.focused$ | async\"\n      [dropSpecialCharacters]=\"false\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"fromValue\"\n      [size]=\"computedSingleMask.length\"\n      [maxLength]=\"computedSingleMask.length + 1\"\n      [maxSize]=\"computedSingleMask.length\"\n      (ngModelChange)=\"onValueFromChange($event || '', true)\"\n      (updateNativeValue)=\"maskDirectiveFrom.writeValue($event)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <span class=\"delimiter\">-</span>\n    <input\n      class=\"input-time\"\n      #maskDirectiveTo=\"mask\"\n      [mask]=\"computedSingleMask\"\n      [dropSpecialCharacters]=\"false\"\n      [showMaskTyped]=\"focusableElementRef.focused$ | async\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"toValue\"\n      [size]=\"computedSingleMask.length\"\n      [maxLength]=\"computedSingleMask.length + 1\"\n      [maxSize]=\"computedSingleMask.length\"\n      (ngModelChange)=\"onValueFromChange($event || '', false)\"\n      (updateNativeValue)=\"maskDirectiveTo.writeValue($event)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n  </div>\n\n  <ng-template #dropdown>\n    <prizm-calendar-range\n      [style.--prizm-input-layout-width]=\"'100%'\"\n      [style.--prizm-dropdown-host-width]=\"'100%'\"\n      [defaultViewedMonth]=\"defaultViewedMonth\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [items]=\"items\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [markerHandler]=\"markerHandler\"\n      [minLength]=\"minLength\"\n      [maxLength]=\"maxLength\"\n      [value]=\"value\"\n      (prizmAfterViewInit)=\"markAsTouched()\"\n      (valueChange)=\"onRangeChange($event)\"\n    >\n      <ng-container footerFrom>\n        <ng-template [ngTemplateOutlet]=\"$any(footerFromTemplate)\"> ></ng-template>\n      </ng-container>\n      <ng-container footerTo>\n        <ng-template [ngTemplateOutlet]=\"$any(footerToTemplate)\"> ></ng-template>\n      </ng-container>\n    </prizm-calendar-range>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [disabled]=\"disabled\"\n    (click)=\"focusableElementRef.focus(); onOpenChange(!open)\"\n    prizmInputIconButton=\"date-calendar-range\"\n  ></button>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutDateRangeComponent } from './input-layout-date-range.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputLayoutDateRangeComponent],\n  exports: [PrizmInputLayoutDateRangeComponent, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutDateRangeModule {}\n","// Global\nexport interface RelativeDateModel {\n  time: RelativeDateTimeId;\n  direction: RelativeDateDirectionId;\n  number: string;\n  period: RelativeDatePeriodId;\n}\n\n// Menu\nexport interface RelativeDateMenuItem<T = unknown> {\n  id: T;\n  groupId: keyof RelativeDateMenuItems;\n  active?: boolean;\n  icon: string;\n  label: string;\n}\n\nexport type RelativeDateTimeId = (typeof DefaultRelativeMenuItems.time)[number]['id'];\nexport type RelativeDateDirectionId = (typeof DefaultRelativeMenuItems.direction)[number]['id'];\nexport type RelativeDatePeriodId = (typeof DefaultRelativeMenuItems.period)[number]['id'];\n\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\n  return DefaultRelativeMenuItems as any;\n}\n\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\n\nexport interface RelativeDateMenuItems {\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\n}\n\nconst DefaultRelativeMenuItems = {\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const;\n","import {\n  RelativeDateDirectionId,\n  RelativeDateMenuItem,\n  RelativeDateModel,\n  RelativeDatePeriodId,\n  RelativeDateTimeId,\n} from './input-date-relative.models';\n\n/**\n * Check items as radio button, to active id\n */\nexport function UpdateActiveItem<T>(items: RelativeDateMenuItem<T>[], id: T): RelativeDateMenuItem<T>[] {\n  return items.map(item => {\n    const newItem = { ...item };\n    newItem.active = false;\n\n    if (item.id === id) {\n      newItem.active = true;\n    }\n\n    return newItem;\n  });\n}\n\ntype ExtendedRelativeDateModel = RelativeDateModel & { wrongFormat?: boolean };\n\n/**\n * Parse input text to model\n */\nexport function ParseTextInput(text: string): ExtendedRelativeDateModel {\n  const result: ExtendedRelativeDateModel = {} as ExtendedRelativeDateModel;\n\n  const regexMatch = new RegExp(MatchPattern);\n  const match = regexMatch.exec(text) ?? [];\n\n  result.time = timeMap.get(match[1]) as any;\n  result.direction = directionMap.get(match[2]) as any;\n  result.period = periodMap.get(match[4]) as any;\n  result.number = (match[3] as any) || '';\n  result.wrongFormat = text !== match[0];\n\n  return result;\n}\n\n/**\n * Render text from RelativeDateModel\n */\nexport function RenderText(model: RelativeDateModel): string {\n  let result = '';\n\n  const direction = renderDirectionMap.get(model.direction);\n  const period = renderPeriodMap.get(model.period);\n\n  result += renderTimeMap.get(model.time) || '';\n  result += direction || '';\n  result += model.number || '';\n  result += period || '';\n\n  return result;\n}\n\n//region Private utility models to parse and render\nconst MatchPattern = '(T|\\\\*)?(\\\\+|\\\\-)?(\\\\d+)?(Y|M|d|h|m|s)?';\n\nconst timeMap = new Map<string, RelativeDateTimeId>([\n  ['*', 'current'],\n  ['T', 'midnight'],\n  ['t', 'midnight'], // Can be optional\n]);\n\nconst directionMap = new Map<string, RelativeDateDirectionId>([\n  ['-', 'minus'],\n  ['+', 'plus'],\n]);\n\nconst periodMap = new Map<string, RelativeDatePeriodId>([\n  ['Y', 'year'],\n  ['M', 'month'],\n  ['d', 'day'],\n  ['h', 'hour'],\n  ['m', 'minute'],\n  ['s', 'second'],\n]);\n\nconst renderTimeMap = new Map<RelativeDateTimeId, string>([\n  ['current', '*'],\n  ['midnight', 'T'],\n]);\n\nconst renderDirectionMap = new Map<RelativeDateDirectionId, string>([\n  ['minus', '-'],\n  ['plus', '+'],\n]);\n\nconst renderPeriodMap = new Map<RelativeDatePeriodId, string>([\n  ['year', 'Y'],\n  ['month', 'M'],\n  ['day', 'd'],\n  ['hour', 'h'],\n  ['minute', 'm'],\n  ['second', 's'],\n]);\n//endregion\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  UntypedFormControl,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport {\n  getDefaultRelativeDateMenuItems,\n  IdByGroup,\n  RelativeDateDirectionId,\n  RelativeDateMenuItem,\n  RelativeDateMenuItems,\n  RelativeDatePeriodId,\n  RelativeDateTimeId,\n} from './input-date-relative.models';\nimport { ParseTextInput, RenderText, UpdateActiveItem } from './input-date-relative.utils';\nimport { prizmIsNativeFocused } from '../../../util';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PrizmFormControlHelpers } from '@prizm-ui/helpers';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\nconst MenuItems: RelativeDateMenuItems = getDefaultRelativeDateMenuItems();\nconst ValidationPattern = '(T|\\\\*)((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?';\n\n@Component({\n  selector: 'prizm-input-date-relative',\n  templateUrl: './input-date-relative.component.html',\n  styleUrls: ['./input-date-relative.component.less'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputDateRelativeComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmInputDateRelativeComponent\n  extends PrizmAbstractTestId\n  implements AfterViewInit, OnInit, ControlValueAccessor, OnDestroy\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public label = 'Относительное';\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = 'Выберите относительное время';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  /**\n   * @deprecated\n   * */\n  public set disabled(value: boolean) {\n    const ngControl = this.injector.get(NgControl);\n    if (ngControl.control) {\n      if (value) {\n        ngControl.control.disable();\n      } else {\n        ngControl.control.enable();\n      }\n    } else {\n      this.setDisabledState(value);\n    }\n  }\n  public get disabled(): boolean {\n    return this.value.disabled;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  public showClear!: boolean;\n\n  @Input()\n  @prizmDefaultProp()\n  public canOpen = true;\n\n  @Input()\n  @prizmDefaultProp()\n  public outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  public size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  override readonly testId_ = 'ui_input_date_relative';\n\n  public isOpen = false;\n\n  public value = new UntypedFormControl('', Validators.pattern(ValidationPattern));\n  public timeItems: RelativeDateMenuItem<RelativeDateTimeId>[] = [...MenuItems.time];\n  public directionItems: RelativeDateMenuItem<RelativeDateDirectionId>[] = [...MenuItems.direction];\n  public periodItems: RelativeDateMenuItem<RelativeDatePeriodId>[] = [...MenuItems.period];\n\n  private activeTimeId!: RelativeDateTimeId | null;\n  private activeDirectionId!: RelativeDateDirectionId;\n  private activePeriodId!: RelativeDatePeriodId;\n  private activeNumber = '';\n\n  public onChangeFn!: (_: unknown) => unknown;\n  public onTouched!: VoidFunction;\n\n  private readonly subscriptions = new Subscription();\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  constructor(public readonly injector: Injector, private readonly cdr: ChangeDetectorRef) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  public ngAfterViewInit(): void {\n    const control = this.injector.get(NgControl) as unknown as UntypedFormControl;\n    this.value.addValidators(control.validator as any);\n\n    this.subscriptions.add(\n      this.value.valueChanges.subscribe(() => {\n        this.parseInputValue();\n        this.actualizeMenu();\n        this.onChangeFn(this.value.value);\n      })\n    );\n\n    this.subscriptions.add(\n      PrizmFormControlHelpers.syncValues(\n        control,\n        v => v,\n        v => v,\n        this.value\n      ).subscribe()\n    );\n\n    this.subscriptions.add(PrizmFormControlHelpers.syncStates(control, true, this.value).subscribe());\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public writeValue(value: number): void {\n    this.value.markAsDirty();\n    this.value.setValue(value?.toString());\n  }\n\n  public registerOnChange(fn: (_: unknown) => void): void {\n    this.onChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: VoidFunction): void {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.value.disable();\n    } else {\n      this.value.enable();\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  public clearValue(): void {\n    this.value.setValue('');\n  }\n\n  public onMenuItemClick(event: MouseEvent, item: RelativeDateMenuItem): void {\n    event.stopImmediatePropagation();\n    switch (item.groupId) {\n      case 'time':\n        this.activeTimeId = <IdByGroup<'time'>>item.id;\n        break;\n\n      case 'direction':\n        this.activeDirectionId = <IdByGroup<'direction'>>item.id;\n        break;\n\n      case 'period':\n        this.activePeriodId = <IdByGroup<'period'>>item.id;\n        break;\n    }\n\n    this.actualizeMenu();\n    this.actualizeInput();\n    this.onChangeFn(this.value.value);\n\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Parses control input value\n   */\n  private parseInputValue(): void {\n    const textInput = this.value.value;\n\n    const model = ParseTextInput(textInput);\n\n    this.activeTimeId = model.time;\n    this.activeDirectionId = model.direction;\n    this.activeNumber = model.number;\n    this.activePeriodId = model.period;\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return prizmIsNativeFocusedIn(this.focusableElement?.nativeElement as any);\n  }\n\n  /**\n   * Set control input as text\n   */\n  private actualizeInput(): void {\n    const stringValue = RenderText({\n      time: this.activeTimeId as any,\n      number: this.activeNumber,\n      direction: this.activeDirectionId,\n      period: this.activePeriodId,\n    });\n\n    this.value.setValue(stringValue);\n  }\n\n  public onClear(): void {\n    this.activeTimeId = null;\n    this.actualizeMenu();\n  }\n\n  /**\n   * Actualize menu items, as radio group button\n   */\n  private actualizeMenu(): void {\n    this.timeItems = UpdateActiveItem(this.timeItems, this.activeTimeId) as any;\n    this.directionItems = UpdateActiveItem(this.directionItems, this.activeDirectionId);\n    this.periodItems = UpdateActiveItem(this.periodItems, this.activePeriodId);\n  }\n\n  public onOpenChange(state: boolean): void {\n    this.isOpen = state;\n  }\n\n  public safeOpenModal(): void {\n    const inputElement = this.focusableElement?.nativeElement;\n    if (!this.isOpen && !this.disabled && inputElement && prizmIsNativeFocused(inputElement)) {\n      this.isOpen = true;\n      this.cdr.markForCheck();\n    }\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [content]=\"dropdown\"\n  [isOpen]=\"isOpen && canOpen\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <prizm-input-layout\n    [label]=\"label\"\n    [outer]=\"outer\"\n    [forceClear]=\"forceClear\"\n    [size]=\"size\"\n    (click)=\"safeOpenModal()\"\n  >\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [formControl]=\"value\"\n      [placeholder]=\"placeholder\"\n      (onClear)=\"onClear()\"\n      prizmInput\n    />\n    <ng-container prizm-input-right>\n      <button\n        [interactive]=\"true\"\n        (click)=\"focusableElementRef.focus()\"\n        prizmInputIconButton=\"date-update\"\n      ></button>\n      <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <ul class=\"prizm-datepicker-relative-menu\" role=\"listbox\">\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: timeItems }\"></ng-container>\n    <li class=\"relative-menu-item-divider\"></li>\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: directionItems }\"></ng-container>\n    <li class=\"relative-menu-item-divider\"></li>\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: periodItems }\"></ng-container>\n\n    <ng-template #menuItemsTemplate let-items=\"items\">\n      <li\n        class=\"relative-menu-item\"\n        *ngFor=\"let item of items\"\n        [class.relative-menu-item-active]=\"item.active\"\n        (click)=\"onMenuItemClick($event, item)\"\n        role=\"button\"\n        tabindex=\"0\"\n      >\n        <div class=\"relative-menu-item-icon\">\n          <i class=\"prizm-icon {{ item.icon }}\"></i>\n        </div>\n        <div class=\"relative-menu-item-label\">{{ item.label }}</div>\n      </li>\n    </ng-template>\n  </ul>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputDateRelativeComponent } from './input-date-relative.component';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PrizmInputDateRelativeComponent],\n  imports: [\n    CommonModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmIconModule,\n    ReactiveFormsModule,\n    PrizmDropdownHostModule,\n  ],\n  exports: [PrizmInputDateRelativeComponent],\n})\nexport class PrizmInputDateRelativeModule {}\n","import { AbstractControl, NG_VALIDATORS, Validator, Validators } from '@angular/forms';\nimport { Directive } from '@angular/core';\n\nconst ValidationPattern = '(T|\\\\*)((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?';\n\n@Directive({\n  selector:\n    'prizm-input-layout-date-relative[ngModel], prizm-input-layout-date-relative[formControl], prizm-input-layout-date-relative[formControlName]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: PrizmInputLayoutDateRelativeDirective,\n      multi: true,\n    },\n  ],\n  standalone: true,\n})\nexport class PrizmInputLayoutDateRelativeDirective implements Validator {\n  public validate(control: AbstractControl): { [key: string]: any } | null {\n    return Validators.pattern(ValidationPattern)(control);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PolymorphOutletDirective } from '../../directives';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-listing-item',\n  templateUrl: './listing-item.component.html',\n  styleUrls: ['./listing-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PolymorphOutletDirective],\n})\nexport class PrizmListingItemComponent extends PrizmAbstractTestId {\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: BooleanInput) {\n    this._selected = coerceBooleanProperty(value);\n  }\n  private _selected = false;\n\n  override readonly testId_ = 'ui_listing_item';\n}\n","<div\n  class=\"item-container\"\n  [class.item-container__selected]=\"selected\"\n  [class.item-container__disabled]=\"disabled\"\n>\n  <div class=\"container-left\">\n    <ng-content select=\"[leftBox]\"></ng-content>\n  </div>\n  <div class=\"title\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"container-right\">\n    <ng-content select=\"[rightBox]\"></ng-content>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmDestroyService, PrizmPluckPipe } from '@prizm-ui/helpers';\nimport { PrizmLanguageInputLayoutDateRelative } from '@prizm-ui/i18n';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport {\n  getDefaultRelativeDateMenuItems,\n  IdByGroup,\n  RelativeDateDirectionId,\n  RelativeDateMenuItem,\n  RelativeDateMenuItems,\n  RelativeDatePeriodId,\n  RelativeDateTimeId,\n} from './input-date-relative.models';\nimport { ParseTextInput, RenderText, UpdateActiveItem } from './input-date-relative.utils';\nimport { PrizmInputControl, PrizmInputNgControl, PrizmInputStatusTextDirective } from '../common';\nimport { PRIZM_DATE_RIGHT_BUTTONS, PRIZM_INPUT_LAYOUT_DATE_RELATIVE } from '../../../tokens';\nimport { PrizmDateButton } from '../../../types';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { prizmIsNativeFocusedIn } from '../../../util';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphOutletDirective, PrizmLifecycleModule } from '../../../directives';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmInputLayoutDateRelativeDirective } from './input-layout-date-relative.directive';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { PrizmListingItemComponent } from '../../listing-item';\n\nconst MenuItems: RelativeDateMenuItems = getDefaultRelativeDateMenuItems();\n\n@Component({\n  selector: 'prizm-input-layout-date-relative',\n  templateUrl: './input-layout-date-relative.component.html',\n  styleUrls: ['./input-layout-date-relative.component.less'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutDateRelativeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutDateRelativeComponent },\n    ...prizmI18nInitWithKey(PRIZM_INPUT_LAYOUT_DATE_RELATIVE, 'inputLayoutDateRelative'),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PolymorphOutletDirective,\n    PrizmLifecycleModule,\n    FormsModule,\n    PrizmInputTextModule,\n    PrizmPluckPipe,\n    PrizmIconComponent,\n    ReactiveFormsModule,\n    PrizmInputLayoutDateRelativeDirective,\n    PrizmDropdownHostComponent,\n    PrizmDataListComponent,\n    PrizmListingItemComponent,\n  ],\n})\nexport class PrizmInputLayoutDateRelativeComponent\n  extends PrizmInputNgControl<string | null>\n  implements OnInit, OnDestroy\n{\n  readonly nativeElementType = 'input-layout-date-relative';\n  readonly hasClearButton = true;\n\n  @ViewChild(PrizmInputStatusTextDirective, { static: true })\n  override statusText!: PrizmInputStatusTextDirective;\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = 'Выберите относительное время';\n\n  @Input()\n  @prizmDefaultProp()\n  public canOpen = true;\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  override readonly testId_ = 'ui_input_date_relative';\n\n  public isOpen = false;\n\n  // public value = new UntypedFormControl('', Validators.pattern(ValidationPattern));\n  public timeItems: RelativeDateMenuItem<RelativeDateTimeId>[] = [...MenuItems.time];\n  public directionItems: RelativeDateMenuItem<RelativeDateDirectionId>[] = [...MenuItems.direction];\n  public periodItems: RelativeDateMenuItem<RelativeDatePeriodId>[] = [...MenuItems.period];\n\n  private activeTimeId!: RelativeDateTimeId;\n  private activeDirectionId!: RelativeDateDirectionId;\n  private activePeriodId!: RelativeDatePeriodId;\n  private activeNumber = '';\n  private activeWrongFormat = false;\n\n  private readonly subscriptions = new Subscription();\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  constructor(\n    @Inject(Injector) injector: Injector,\n    @Inject(PRIZM_INPUT_LAYOUT_DATE_RELATIVE)\n    public readonly dictionary$: Observable<PrizmLanguageInputLayoutDateRelative['inputLayoutDateRelative']>\n  ) {\n    super(injector);\n  }\n\n  // public override isEmpty(value: any): boolean {\n  //   return !value && !this.nativeFocusableElement?.value;\n  // }\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  public valueChange(value: string) {\n    this.parseInputValue(value);\n    this.actualizeMenu();\n    if (!this.activeWrongFormat) {\n      if (this.activePeriodId && !this.activeNumber) {\n        this.activeNumber = '1';\n        this.actualizeInput();\n        return;\n      }\n    }\n    this.updateTouchedAndValue(value);\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public onMenuItemClick(event: MouseEvent, item: RelativeDateMenuItem): void {\n    event.stopImmediatePropagation();\n    switch (item.groupId) {\n      case 'time':\n        this.activeTimeId = <IdByGroup<'time'>>item.id;\n        break;\n\n      case 'direction':\n        this.activeDirectionId = <IdByGroup<'direction'>>item.id;\n        break;\n\n      case 'period':\n        this.activePeriodId = <IdByGroup<'period'>>item.id;\n        if (!this.activeNumber) {\n          this.activeNumber = '1';\n        }\n        break;\n    }\n\n    this.actualizeMenu();\n    this.actualizeInput();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Parses control input value\n   */\n  private parseInputValue(value: string): void {\n    const model = ParseTextInput(value);\n\n    this.activeTimeId = model.time;\n    this.activeDirectionId = model.direction;\n    this.activeNumber = model.number;\n    this.activePeriodId = model.period;\n    this.activeWrongFormat = !!model.wrongFormat;\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement?.nativeElement\n      ? (this.focusableElement?.nativeElement as HTMLInputElement)\n      : null;\n  }\n\n  public get focused(): boolean {\n    return !!(\n      this.focusableElement?.nativeElement && prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n    );\n  }\n\n  /**\n   * Set control input as text\n   */\n  private actualizeInput(): void {\n    const stringValue = RenderText({\n      time: this.activeTimeId,\n      number: this.activeNumber,\n      direction: this.activeDirectionId,\n      period: this.activePeriodId,\n    });\n    this.updateTouchedAndValue(stringValue);\n  }\n\n  public override clear(ev: MouseEvent): void {\n    this.parseInputValue('');\n    this.updateValue(null);\n    this.actualizeMenu();\n    if (this.nativeFocusableElement) this.nativeFocusableElement.value = '';\n  }\n\n  /**\n   * Actualize menu items, as radio group button\n   */\n  private actualizeMenu(): void {\n    this.timeItems = UpdateActiveItem(this.timeItems, this.activeTimeId);\n    this.directionItems = UpdateActiveItem(this.directionItems, this.activeDirectionId);\n    this.periodItems = UpdateActiveItem(this.periodItems, this.activePeriodId);\n  }\n\n  public onOpenChange(state: boolean): void {\n    this.isOpen = state;\n  }\n\n  public safeOpenModal(): void {\n    if (!this.isOpen && !this.disabled) {\n      this.isOpen = true;\n      this.changeDetectorRef.markForCheck();\n    } else {\n      this.isOpen = false;\n    }\n  }\n\n  private updateTouchedAndValue(value: string | null): void {\n    this.markAsTouched();\n    this.updateValue(value);\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [content]=\"dropdown\"\n  [isOpen]=\"isOpen && canOpen\"\n  [closeByEsc]=\"true\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [prizmDropdownHostWidth]=\"'100%'\"\n  (isOpenChange)=\"onOpenChange($event)\"\n>\n  <input\n    class=\"input-search\"\n    #focusableElementRef\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"value\"\n    [disabled]=\"disabled\"\n    [placeholder]=\"placeholder\"\n    (click)=\"safeOpenModal()\"\n    (ngModelChange)=\"valueChange($event)\"\n    prizmInput\n  />\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <prizm-data-list class=\"block\">\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: timeItems }\"></ng-container>\n    <div class=\"relative-menu-item-divider\"></div>\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: directionItems }\"></ng-container>\n    <div class=\"relative-menu-item-divider\"></div>\n    <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: periodItems }\"></ng-container>\n  </prizm-data-list>\n\n  <ng-template #menuItemsTemplate let-items=\"items\">\n    <prizm-listing-item\n      *ngFor=\"let item of items\"\n      [selected]=\"item.active\"\n      (click)=\"onMenuItemClick($event, item)\"\n      tabindex=\"0\"\n    >\n      <ng-container leftBox>\n        <i class=\"prizm-icon relative-menu-icon {{ item.icon }}\"></i>\n      </ng-container>\n      {{ item.label }}\n    </prizm-listing-item>\n  </ng-template>\n</ng-template>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [disabled]=\"disabled\"\n    (click)=\"focusableElementRef.elementRef.nativeElement.click()\"\n    prizmInputIconButton=\"date-update\"\n  ></button>\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n\n<ng-template [enable]=\"!!ngControl.errors?.requiredPattern\" prizmInputStatusText status=\"danger\">\n  {{ dictionary$ | async | prizmPluck : 'wrongFormat' }}\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputLayoutDateRelativeComponent } from './input-layout-date-relative.component';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmInputLayoutDateRelativeDirective } from './input-layout-date-relative.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmInputTextModule,\n    PrizmInputLayoutDateRelativeComponent,\n    PrizmInputLayoutDateRelativeDirective,\n  ],\n  exports: [\n    PrizmInputLayoutDateRelativeComponent,\n    PrizmInputLayoutDateRelativeDirective,\n    PrizmInputTextModule,\n  ],\n})\nexport class PrizmInputLayoutDateRelativeModule {}\n","import { forwardRef, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';\nimport { PRIZM_DATE_TIME_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';\nimport { PrizmInputDateTimeComponent } from './input-date-time.component';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\nexport const TIME_STREAM_FACTORY = <T extends [PrizmDay | null, PrizmTime | null]>(\n  control: NgControl | null,\n  valueTransformer: PrizmControlValueTransformer<T>\n): Observable<T | null> | null => prizmReplayControlValueChangesFactory<T>(control, valueTransformer);\n\nexport const PRIZM_INPUT_DATE_TIME_PROVIDERS = [\n  PrizmDestroyService,\n  {\n    provide: AbstractPrizmControl,\n    useExisting: forwardRef(() => PrizmInputDateTimeComponent),\n  },\n  {\n    provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => PrizmInputDateTimeComponent),\n  },\n  {\n    provide: PRIZM_CALENDAR_DATA_STREAM,\n    deps: [\n      [new Optional(), new Self(), NgControl],\n      [new Optional(), forwardRef(() => PRIZM_DATE_TIME_VALUE_TRANSFORMER)],\n    ],\n    useFactory: TIME_STREAM_FACTORY,\n  },\n  PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n];\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl, UntypedFormControl } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, pluck, takeUntil } from 'rxjs/operators';\nimport { PRIZM_DATE_FILLER_LENGTH } from '../../../@core/date-time/date-fillers';\nimport { PRIZM_DATE_FORMAT } from '../../../@core/date-time/date-format';\nimport { PRIZM_DATE_SEPARATOR, prizmChangeDateSeparator } from '../../../@core/date-time/date-separator';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport {\n  PRIZM_DATE_TIME_SEPARATOR,\n  PRIZM_DATE_TIME_SEPARATOR_NGX,\n} from '../../../constants/date-time-separator';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { PRIZM_DATE_TIME_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_DATE_TEXTS, PRIZM_TIME_TEXTS } from '../../../tokens/i18n';\nimport { PrizmContextWithImplicit } from '../../../types/context-with-implicit';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { PrizmDateMode } from '../../../types/date-mode';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PrizmTimeMode } from '../../../types/time-mode';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { PRIZM_INPUT_DATE_TIME_PROVIDERS } from './input-date-time.providers';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { prizmCreateDateNgxMask } from '../../../@core/mask/create-date-mask';\nimport { prizmCreateTimeNgxMask } from '../../../@core/mask/create-time-mask';\nimport { prizmClamp } from '../../../util/math/clamp';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PRIZM_STRICT_MATCHER } from '../../../constants';\nimport { PrizmFormControlHelpers } from '@prizm-ui/helpers';\nimport { prizmI18nInitWithKeys } from '../../../services';\n\n@Component({\n  selector: `prizm-input-date-time`,\n  templateUrl: `./input-date-time.component.html`,\n  styleUrls: [`./input-date-time.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKeys({\n      time: PRIZM_TIME_TEXTS,\n      dateTexts: PRIZM_DATE_TEXTS,\n    }),\n    ...PRIZM_INPUT_DATE_TIME_PROVIDERS,\n  ],\n})\nexport class PrizmInputDateTimeComponent\n  extends AbstractPrizmControl<[PrizmDay | null, PrizmTime | null]>\n  implements PrizmWithOptionalMinMax<PrizmDay | [PrizmDay, PrizmTime]>, PrizmFocusableElementAccessor\n{\n  private month: PrizmMonth | null = null;\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  timeItems: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  label = 'Абсолютное';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = 'Выберите дату и время';\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  @Input()\n  @prizmDefaultProp()\n  outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmDay | [PrizmDay, PrizmTime] = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmDay | [PrizmDay, PrizmTime] = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  timeStrict = false;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultActiveYearMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  timeMode: PrizmTimeMode = `HH:MM`;\n\n  override readonly testId_ = 'ui_input_date_time';\n\n  public openTimeTemplate: any = false;\n\n  open = false;\n\n  /** for avoid time format 29:01 */\n  // TODO remove after update angular 15 and latest mask version\n  // readonly fixedPatternForTime = {\n  //   H: { pattern: /[0-2]/i },\n  //   h: { pattern: /[0-3]/i },\n  //   m: { pattern: /[0-5]/i },\n  //   0: { pattern: /[0-9]/i },\n  // };\n\n  readonly type!: PrizmContextWithImplicit<unknown>;\n\n  get filteredTime(): readonly PrizmTime[] {\n    return this.filterTime(this.timeItems, this.timeMode, this.computedSearchTime);\n  }\n\n  get computedSearchTime(): string {\n    return this.computedValue.length !== this.timeMode.length ? this.computedValue : ``;\n  }\n\n  readonly filler$: Observable<string> = combineLatest([\n    this.dateTexts$.pipe(\n      map(dateTexts => prizmChangeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator))\n    ),\n    this.timeTexts$.pipe(pluck(this.timeMode)),\n  ]).pipe(map(fillers => this.getDateTimeString(...fillers)));\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n  public readonly innerControl = new UntypedFormControl();\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PRIZM_DATE_FORMAT) readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_TIME_TEXTS)\n    readonly timeTexts$: Observable<Record<PrizmTimeMode, string>>,\n    private readonly injector: Injector,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_TIME_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<\n      [PrizmDay | null, PrizmTime | null]\n    > | null\n  ) {\n    super(control, changeDetectorRef, valueTransformer);\n  }\n\n  @prizmPure\n  private filterTime(items: readonly PrizmTime[], mode: PrizmTimeMode, search: string): readonly PrizmTime[] {\n    return items.filter(item => item.toString(mode).includes(search));\n  }\n\n  private syncStateBetweenControls(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncStates(this.control as UntypedFormControl, false, this.innerControl)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  private syncValidatorsBetweenControls(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncAllValidators(this.control as UntypedFormControl, false, this.innerControl)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  private syncValuesBetweenControls(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncValues(\n        this.control as UntypedFormControl,\n        () => this.computedValue,\n        null,\n        this.innerControl\n      )\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.syncStateBetweenControls();\n    this.syncValidatorsBetweenControls();\n    this.syncValuesBetweenControls();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  get fillerLength(): number {\n    return PRIZM_DATE_FILLER_LENGTH + PRIZM_DATE_TIME_SEPARATOR.length + this.timeMode.length;\n  }\n\n  get textMaskOptions(): string {\n    return this.calculateMask(\n      this.value[0],\n      this.calendarMinDay,\n      this.calendarMaxDay,\n      this.timeMode,\n      this.dateFormat,\n      this.dateSeparator\n    );\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  get computedValue(): string {\n    const { value, nativeValue, timeMode } = this;\n    const [date, time] = value;\n    const hasTimeInputChars = nativeValue.length > PRIZM_DATE_FILLER_LENGTH;\n\n    if (!date || (!time && hasTimeInputChars)) {\n      return nativeValue;\n    }\n\n    return this.getDateTimeString(date, time, timeMode);\n  }\n\n  get calendarValue(): PrizmDay | null {\n    return this.value[0];\n  }\n\n  get calendarMinDay(): PrizmDay {\n    return Array.isArray(this.min) ? this.min[0] : this.min;\n  }\n\n  get calendarMaxDay(): PrizmDay {\n    return Array.isArray(this.max) ? this.max[0] : this.max;\n  }\n\n  get computedActiveYearMonth(): PrizmMonth {\n    return this.month || this.value[0] || this.defaultActiveYearMonth;\n  }\n\n  get nativeValue(): string {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : ``;\n  }\n\n  set nativeValue(value: string) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n\n    this.nativeFocusableElement.value = value;\n  }\n\n  @HostListener(`click`)\n  public onClick(): void {\n    this.open = !this.open;\n  }\n\n  public onValueChange(value: string): void {\n    if (!value || value.length < 16) {\n      if (!value) this.updateValue([null, null]);\n      return;\n    }\n\n    const [date, time] = value.split(PRIZM_DATE_TIME_SEPARATOR_NGX);\n\n    const parsedDate = PrizmDay.normalizeParse(date, this.dateFormat);\n    let parsedTime =\n      time && time.length === this.timeMode.length\n        ? this.prizmClampTime(PrizmTime.fromString(time), parsedDate)\n        : null;\n    if (parsedTime) parsedTime = PrizmTime.correctTime(parsedTime);\n    const match = parsedTime && this.getMatch(time);\n\n    this.updateValue([\n      parsedDate,\n      match || (this.timeStrict ? this.findNearestTimeFromItems(parsedTime as any) : parsedTime),\n    ]);\n    this.open = false;\n  }\n\n  public onDayClick(day: PrizmDay, time?: PrizmTime): void {\n    const modifiedTime =\n      time ?? (this.value[1] && this.prizmClampTime(this.value[1], day)) ?? new PrizmTime(0, 0);\n    this.updateValue([day, modifiedTime]);\n    this.updateNativeValue(day);\n    this.open = false;\n  }\n\n  public onHovered(hovered: boolean): void {\n    this.updateHovered(hovered);\n  }\n\n  public onMonthChange(month: PrizmMonth): void {\n    this.month = month;\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n\n    if (\n      focused ||\n      this.value[0] === null ||\n      this.value[1] !== null ||\n      this.nativeValue.length <= this.fillerLength + PRIZM_DATE_TIME_SEPARATOR.length ||\n      this.timeMode === `HH:MM`\n    ) {\n      return;\n    }\n\n    const [, time] = this.nativeValue.split(PRIZM_DATE_TIME_SEPARATOR);\n\n    if (!time) {\n      return;\n    }\n\n    const parsedTime = PrizmTime.fromString(time);\n\n    this.updateValue([this.value[0], parsedTime]);\n\n    setTimeout(() => {\n      if (this.nativeValue.endsWith(`.`) || this.nativeValue.endsWith(`:`)) {\n        this.nativeValue = this.nativeValue.slice(0, -1);\n      }\n    });\n  }\n\n  public override setDisabledState(): void {\n    super.setDisabledState();\n    this.open = false;\n  }\n\n  public override writeValue(value: [PrizmDay | null, PrizmTime | null] | null): void {\n    super.writeValue(value);\n\n    this.nativeValue = value && (value[0] || value[1]) ? this.computedValue : ``;\n  }\n\n  protected getFallbackValue(): [PrizmDay | null, PrizmTime | null] {\n    return [null, null];\n  }\n\n  protected override valueIdenticalComparator(\n    oldValue: [PrizmDay | null, PrizmTime | null],\n    newValue: [PrizmDay | null, PrizmTime | null]\n  ): boolean {\n    return (\n      newValue &&\n      oldValue &&\n      prizmNullableSame(oldValue[0], newValue[0], (a, b) => a?.daySame(b)) &&\n      prizmNullableSame(oldValue[1], newValue[1], (a, b) => String(a) === String(b))\n    );\n  }\n\n  @prizmPure\n  private calculateMask(\n    day: PrizmDay | null,\n    min: PrizmDay,\n    max: PrizmDay,\n    timeMode: PrizmTimeMode,\n    dateFormat: PrizmDateMode,\n    dateSeparator: string\n  ): string {\n    return `${prizmCreateDateNgxMask(dateFormat, dateSeparator)} ${prizmCreateTimeNgxMask(timeMode)}`;\n  }\n\n  @prizmPure\n  private getDateTimeString(\n    date: PrizmDay | string,\n    time: PrizmTime | string | null,\n    timeMode: PrizmTimeMode = `HH:MM`\n  ): string {\n    const dateString = date instanceof PrizmDay ? date.toString(this.dateFormat, this.dateSeparator) : date;\n    const timeString = time instanceof PrizmTime ? time.toString(timeMode) : time || ``;\n\n    return `${dateString}${PRIZM_DATE_TIME_SEPARATOR}${timeString}`;\n  }\n\n  private updateNativeValue(day: PrizmDay): void {\n    const time = this.nativeValue.split(PRIZM_DATE_TIME_SEPARATOR)[1] || ``;\n    this.nativeValue = this.getDateTimeString(day, time);\n  }\n\n  private findNearestTimeFromItems(value: PrizmTime): PrizmTime | null {\n    return this.timeItems.reduce((previous, current) =>\n      Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n      Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n        ? current\n        : previous\n    );\n  }\n\n  private getMatch(value: string): PrizmTime | undefined {\n    return this.timeItems.find(item => PRIZM_STRICT_MATCHER(item, value));\n  }\n\n  public onTimeMenuClick(item: PrizmTime, ev: Event): void {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    this.openTimeTemplate = this.open = false;\n    this.changeDetectorRef.markForCheck();\n\n    if (this.value[1] && item.isSameTime(this.value[1])) return;\n\n    this.onDayClick(this.value[0] ?? PrizmDay.currentLocal(), item);\n  }\n\n  private prizmClampTime(time: PrizmTime, day: PrizmDay): PrizmTime {\n    const ms = time.toAbsoluteMilliseconds();\n    const min =\n      Array.isArray(this.min) && day.daySame(this.calendarMinDay)\n        ? this.min[1].toAbsoluteMilliseconds()\n        : -Infinity;\n    const max =\n      Array.isArray(this.max) && day.daySame(this.calendarMaxDay)\n        ? this.max[1].toAbsoluteMilliseconds()\n        : Infinity;\n\n    return PrizmTime.fromAbsoluteMilliseconds(prizmClamp(ms, min, max));\n  }\n\n  public openTimeDropdown(): void {\n    this.openTimeTemplate = !this.openTimeTemplate;\n  }\n\n  public openDateDropdown(): void {\n    this.openTimeTemplate = null;\n    this.focusableElement?.nativeElement.focus();\n    // this.openTimeTemplate = !this.openTimeTemplate;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  #prizmDropdownHostComponent\n  [style.--prizm-dropdown-host-width]=\"'100%'\"\n  [canOpen]=\"interactive\"\n  [content]=\"openTimeTemplate ? dropdownTimeTemplate : dropdownDateTemplate\"\n  [prizmDropdownHostWidth]=\"openTimeTemplate ? '100%' : 'auto'\"\n  [isOpen]=\"interactive && (openTimeTemplate || open)\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpenChange($event); $event && prizmDropdownHostComponent.reCalculatePositions()\"\n>\n  <prizm-input-layout [label]=\"label\" [outer]=\"outer\" [forceClear]=\"forceClear\" [size]=\"size\">\n    <ng-template prizmInputStatusText>Ошибка! Неправильный формат</ng-template>\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [mask]=\"textMaskOptions\"\n      [showMaskTyped]=\"focusableElementRef.focused\"\n      [dropSpecialCharacters]=\"false\"\n      [readonly]=\"readOnly\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"computedDisabled\"\n      [formControl]=\"innerControl\"\n      prizmInput\n    />\n    <!--    [ngModel]=\"computedValue\"-->\n    <!--    (ngModelChange)=\"onValueChange($event || '')\"-->\n\n    <!--    [patterns]=\"fixedPatternForTime\"-->\n    <ng-container prizm-input-right>\n      <button\n        [interactive]=\"true\"\n        (click)=\"openDateDropdown()\"\n        prizmInputIconButton=\"date-calendar-blank\"\n      ></button>\n      <button [interactive]=\"true\" (click)=\"openTimeDropdown()\" prizmInputIconButton=\"date-clock\"></button>\n      <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n</prizm-dropdown-host>\n\n<ng-template #dropdownDateTemplate>\n  <prizm-calendar\n    [min]=\"calendarMinDay\"\n    [max]=\"calendarMaxDay\"\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [month]=\"computedActiveYearMonth\"\n    [value]=\"calendarValue\"\n    (dayClick)=\"onDayClick($event)\"\n    (monthChange)=\"onMonthChange($event)\"\n    prizmPreventDefault=\"mousedown\"\n    automation-id=\"prizm-input-date-time__calendar\"\n  ></prizm-calendar>\n</ng-template>\n\n<ng-template #dropdownTimeTemplate>\n  <prizm-data-list\n    class=\"block\"\n    *ngIf=\"timeItems.length\"\n    [style.--prizm-data-list-border]=\"0\"\n    (prizmAfterViewInit)=\"prizmDropdownHostComponent.reCalculatePositions()\"\n    (prizmOnDestroy)=\"openTimeTemplate = false\"\n    prizmLifecycle\n  >\n    <ng-container>\n      <div\n        class=\"time-item\"\n        *ngFor=\"let item of timeItems; let idx = index\"\n        [class.selected]=\"value?.[1] && item.isSameTime($any(value?.[1]))\"\n        (click)=\"$event.stopPropagation(); onTimeMenuClick(item, $event)\"\n      >\n        <span class=\"text\">\n          {{ item }}\n        </span>\n      </div>\n    </ng-container>\n  </prizm-data-list>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmPreventDefaultModule } from '../../../directives/prevent-default/prevent-default.module';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmCalendarModule } from '../../calendar/calendar.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmLinkModule } from '../../link/link.module';\nimport { PrizmInputDateTimeComponent } from './input-date-time.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmDataListModule } from '../../data-list';\nimport { PrizmLifecycleModule } from '../../../directives';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PrizmMaskModule,\n    PrizmDataListModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmIconModule,\n    FormsModule,\n    PrizmLifecycleModule,\n    PrizmPreventDefaultModule,\n    PrizmCalendarModule,\n    PrizmLinkModule,\n    PrizmDropdownHostModule,\n    PrizmValueAccessorModule,\n  ],\n  declarations: [PrizmInputDateTimeComponent],\n  exports: [PrizmInputDateTimeComponent],\n})\nexport class PrizmInputDateTimeModule {}\n","import { Provider } from '@angular/core';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { PRIZM_DATE_TIME_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\n\ntype From = [PrizmDay | null, PrizmTime | null] | null;\ntype To = Date | null;\n\nexport class PrizmInputDateTimeNativeTransformer implements PrizmControlValueTransformer<From, To> {\n  public fromControlValue(controlValue: To): From {\n    return (\n      controlValue && [\n        PrizmDay.fromLocalNativeDate(controlValue),\n        PrizmTime.fromLocalNativeDate(controlValue),\n      ]\n    );\n  }\n\n  public toControlValue(componentValue: From): To {\n    const dateInput = componentValue && componentValue[0];\n    if (!dateInput) return null;\n    const date = dateInput.toLocalNativeDate();\n\n    const time = componentValue[1];\n    if (time) {\n      date.setHours(time.hours, time.minutes, time.seconds, time.ms);\n    }\n\n    return date;\n  }\n}\n\nexport function prizmGetInputDateTimeNativeTransformer(): Provider {\n  return {\n    provide: PRIZM_DATE_TIME_VALUE_TRANSFORMER,\n    useClass: PrizmInputDateTimeNativeTransformer,\n  };\n}\n","import { Provider } from '@angular/core';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { PRIZM_DATE_TIME_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { PrizmDateTime } from '../../../@core/date-time';\n\ntype From = [PrizmDay | null, PrizmTime | null] | null;\ntype To = PrizmDateTime | null;\n\nexport class PrizmInputDateTimeBaseTransformer implements PrizmControlValueTransformer<From, To> {\n  public fromControlValue(controlValue: To): From {\n    return controlValue && [controlValue.day ?? null, controlValue.time ?? null];\n  }\n\n  public toControlValue(componentValue: From): To {\n    const dateInput = componentValue && componentValue[0];\n    if (!dateInput) return null;\n    const time = componentValue[1];\n    return new PrizmDateTime(dateInput, time);\n  }\n}\n\nexport function prizmGetInputDateTimeBaseTransformer(): Provider {\n  return {\n    provide: PRIZM_DATE_TIME_VALUE_TRANSFORMER,\n    useClass: PrizmInputDateTimeBaseTransformer,\n  };\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, Observable, of, tap } from 'rxjs';\nimport { PRIZM_DATE_FILLER_LENGTH } from '../../../@core/date-time/date-fillers';\nimport { PRIZM_DATE_FORMAT } from '../../../@core/date-time/date-format';\nimport { PRIZM_DATE_SEPARATOR } from '../../../@core/date-time/date-separator';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PRIZM_DATE_TIME_SEPARATOR } from '../../../constants/date-time-separator';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { PRIZM_DATE_TIME_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_DATE_TEXTS, PRIZM_TIME_TEXTS } from '../../../tokens/i18n';\nimport { PrizmContextWithImplicit } from '../../../types/context-with-implicit';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { PrizmDateMode } from '../../../types/date-mode';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PrizmTimeMode } from '../../../types/time-mode';\nimport { PRIZM_INPUT_DATE_TIME_PROVIDERS } from './input-date-time.providers';\nimport { prizmCreateDateNgxMask } from '../../../@core/mask/create-date-mask';\nimport { prizmCreateTimeNgxMask } from '../../../@core/mask/create-time-mask';\nimport { prizmClamp } from '../../../util/math/clamp';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PRIZM_STRICT_MATCHER } from '../../../constants';\nimport { filterTruthy, PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputControl, PrizmInputNgControl } from '../common';\nimport { PrizmInputZoneDirective, PrizmInputZoneModule } from '../../../directives/input-zone';\nimport { debounceTime, delay, map, takeUntil } from 'rxjs/operators';\nimport { PrizmLifecycleModule } from '../../../directives/lifecycle';\nimport { PolymorphOutletDirective } from '../../../directives/polymorph';\nimport {\n  PrizmInputNativeValueModule,\n  PrizmInputNativeValueNeedChange,\n} from '../../../directives/native-value';\nimport { DOCUMENT, NgFor, NgIf } from '@angular/common';\nimport { prizmI18nInitWithKeys } from '../../../services';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host/dropdown-host.component';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmMaskModule } from '../../../modules/mask/mask.module';\nimport { PrizmDataListComponent } from '../../data-list/data-list.component';\nimport { PrizmIconComponent } from '../../icon/icon.component';\nimport { PrizmPreventDefaultModule } from '../../../directives/prevent-default/prevent-default.module';\nimport { PrizmCalendarComponent } from '../../calendar';\nimport { PrizmLinkComponent } from '../../link';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmListingItemComponent } from '../../listing-item';\n\n@Component({\n  selector: `prizm-input-layout-date-time`,\n  templateUrl: `./input-layout-date-time.component.html`,\n  styleUrls: [\n    `./input-layout-date-time.component.less`,\n    `./../input-date/input-layout-date-shared.component.less`,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKeys({\n      time: PRIZM_TIME_TEXTS,\n      dateTexts: PRIZM_DATE_TEXTS,\n    }),\n    ...PRIZM_INPUT_DATE_TIME_PROVIDERS,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutDateTimeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutDateTimeComponent },\n  ],\n  standalone: true,\n  imports: [\n    PrizmInputLayoutDateTimeComponent,\n    PrizmDropdownHostComponent,\n    PrizmInputTextModule,\n    NgIf,\n    NgFor,\n    ReactiveFormsModule,\n    PrizmMaskModule,\n    PrizmDataListComponent,\n    PolymorphOutletDirective,\n    PrizmIconComponent,\n    PrizmInputZoneModule,\n    FormsModule,\n    PrizmLifecycleModule,\n    PrizmPreventDefaultModule,\n    PrizmCalendarComponent,\n    PrizmLinkComponent,\n    PrizmDropdownHostComponent,\n    PrizmValueAccessorModule,\n    PrizmInputNativeValueModule,\n    PrizmListingItemComponent,\n  ],\n})\nexport class PrizmInputLayoutDateTimeComponent\n  extends PrizmInputNgControl<[PrizmDay | null, PrizmTime | null] | null>\n  implements AfterViewInit\n{\n  readonly nativeElementType = 'input-date-time';\n  readonly hasClearButton = true;\n  private month: PrizmMonth | null = null;\n\n  override fallbackValue: [PrizmDay | null, PrizmTime | null] = [null, null];\n\n  @ViewChild('focusableElementRef', { read: PrizmInputZoneDirective })\n  public override readonly focusableElement?: PrizmInputZoneDirective;\n\n  @Input()\n  @prizmDefaultProp()\n  timeItems: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = 'Выберите дату и время';\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector;\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmDay | [PrizmDay, PrizmTime] = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmDay | [PrizmDay, PrizmTime] = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  timeStrict = false;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultActiveYearMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  timeMode: PrizmTimeMode = `HH:MM`;\n\n  override readonly testId_ = 'ui_input_date_time';\n\n  public openTimeTemplate = false;\n\n  readonly nativeValue$$ = new BehaviorSubject<[string, string]>(['', '']);\n\n  open = false;\n\n  readonly type!: PrizmContextWithImplicit<unknown>;\n\n  override get empty(): Observable<boolean> {\n    return combineLatest([this.value$, this.nativeValue$$]).pipe(\n      map(([value, nativeValue]) => {\n        return (!value || !value.filter?.(Boolean).join('')) && !nativeValue.find(Boolean);\n      })\n    ) as Observable<boolean>;\n  }\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n  constructor(\n    @Optional() @Inject(DOCUMENT) private document: Document,\n    @Inject(PRIZM_DATE_FORMAT) readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_TIME_TEXTS)\n    readonly timeTexts$: Observable<Record<PrizmTimeMode, string>>,\n    injector: Injector,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_TIME_VALUE_TRANSFORMER)\n    valueTransformer: PrizmControlValueTransformer<[PrizmDay | null, PrizmTime | null] | null> | null\n  ) {\n    super(injector, valueTransformer);\n    this.extraButtonInjector = injector;\n  }\n\n  ngAfterViewInit(): void {\n    this.focusableElement?.blur$\n      .pipe(\n        debounceTime(0),\n        filterTruthy(),\n        tap(() => this.completeDateIfAreNotPending()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private completeDateIfAreNotPending() {\n    const [dateValue, timeValue] = this.nativeValue$$.value;\n\n    if (!dateValue && !timeValue) return;\n\n    if (dateValue && dateValue.length !== this.textMaskOptions.length) return;\n    if (timeValue && timeValue.length !== this.timeMaskOptions.length) return;\n\n    const parsedDate = dateValue\n      ? PrizmDay.normalizeParse(dateValue, this.dateFormat)\n      : new PrizmDay(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n\n    const parsedTime = PrizmTime.correctTime(\n      timeValue ? PrizmTime.fromString(timeValue) : new PrizmTime(0, 0)\n    );\n\n    this.nativeValue$$.next([parsedDate.toString(this.dateFormat), parsedTime.toString(this.timeMode)]);\n\n    this.updateWithCorrectDateAndTime([parsedDate, parsedTime]);\n  }\n\n  @prizmPure\n  private filterTime(items: readonly PrizmTime[], mode: PrizmTimeMode, search: string): readonly PrizmTime[] {\n    return items.filter(item => item.toString(mode).includes(search));\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  public get focused(): Observable<boolean> {\n    return this.focusableElement?.focused$ ?? of(false);\n  }\n\n  get fillerLength(): number {\n    return PRIZM_DATE_FILLER_LENGTH + PRIZM_DATE_TIME_SEPARATOR.length + this.timeMode.length;\n  }\n\n  get textMaskOptions(): string {\n    return this.calculateMask(this.dateFormat, this.dateSeparator);\n  }\n\n  get timeMaskOptions(): string {\n    return this.calculateTimeMask(this.timeMode);\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  public computedDateValue(date = this.value?.[0]): string {\n    if (!date) {\n      return this.nativeValue$$.value[0] || ''; //this.focusableElement?.values[0] || '';\n    }\n\n    return this.getDateString(date);\n  }\n\n  public computedTimeValue(time = this.value?.[1]): string {\n    if (!time) {\n      return this.nativeValue$$.value[1] || '';\n    }\n\n    return this.getTimeString(time, this.timeMode);\n  }\n\n  public readonly needChangeNativeValue: PrizmInputNativeValueNeedChange<string> = (\n    currentValue: string,\n    nativeValue: string,\n    el: HTMLInputElement\n  ) => {\n    if (this.document.activeElement === el) return false;\n    const newNativeValue = nativeValue.replace(/[^0-9]/g, '');\n    const currentNewValue = currentValue.replace(/[^0-9]/g, '');\n\n    if (newNativeValue.length !== 4) return false;\n    if (currentNewValue.length !== 4) return false;\n    if (newNativeValue === currentNewValue) return false;\n    return true;\n  };\n\n  get calendarValue(): PrizmDay | null {\n    return this.value?.[0] as any;\n  }\n\n  get calendarMinDay(): PrizmDay {\n    return Array.isArray(this.min) ? this.min[0] : this.min;\n  }\n\n  get calendarMaxDay(): PrizmDay {\n    return Array.isArray(this.max) ? this.max[0] : this.max;\n  }\n\n  get computedActiveYearMonth(): PrizmMonth {\n    return this.month || this.value?.[0] || this.defaultActiveYearMonth;\n  }\n\n  public onDateValueChange(value: string): void {\n    if (value === this.computedDateValue()) return;\n\n    this.nativeValue$$.next([value, this.nativeValue$$.value[1]]);\n\n    if (!value || value.length < this.textMaskOptions.length || this.isValueMasked(value)) {\n      if (!value) this.updateValue([null, this.value?.[1] ?? null]);\n      return;\n    }\n    const parsedDate = PrizmDay.normalizeParse(value, this.dateFormat);\n    this.updateWithCorrectDateAndTime([parsedDate, this.value?.[1] ?? null]);\n    this.open = false;\n  }\n\n  private updateWithCorrectDateAndTime(value: [PrizmDay | null, PrizmTime | null]): void {\n    if (!value) return;\n    let [date, time] = value;\n    // correct min max time\n    if (date)\n      date = date.dayLimit(\n        this.min instanceof PrizmDay ? this.min : this.min && this.min[0],\n        this.max instanceof PrizmDay ? this.max : this.max && this.max[0]\n      );\n\n    const timeMin = Array.isArray(this.min) && this.min[1] ? this.min[1] : null;\n    const timeMax = Array.isArray(this.max) && this.max[1] ? this.max[1] : null;\n    if (time && (timeMin || timeMax)) {\n      time = time.timeLimit(timeMin, timeMax);\n    }\n\n    this.focusableElement?.updateNativeValues({\n      idx: 0,\n      value: date?.toString() ?? '',\n    });\n\n    // force update native value\n    this.nativeValue$$.next([\n      date?.toString() ?? this.nativeValue$$.value[0],\n      time?.toString() ?? this.nativeValue$$.value[1],\n    ]);\n\n    this.updateValue([date, time]);\n  }\n\n  public onTimeValueChange(value: string): void {\n    if (value === this.computedTimeValue()) return;\n    this.nativeValue$$.next([this.nativeValue$$.value[0], value]);\n\n    if (!value || value.length < this.timeMaskOptions.length || this.isValueMasked(value)) {\n      if (!value) this.updateValue([this.value?.[0] ?? null, null]);\n\n      return;\n    }\n\n    const time = value;\n\n    let parsedTime = time && time.length === this.timeMode.length ? PrizmTime.fromString(time) : null;\n\n    if (parsedTime) parsedTime = PrizmTime.correctTime(parsedTime);\n\n    // TODO later add correct time as in nearest time\n    // const match = parsedTime && this.getMatch(time);\n\n    // hide sidebar\n    this.open = false;\n\n    this.updateWithCorrectDateAndTime([\n      this.value?.[0] ?? null,\n      parsedTime,\n      // TODO later add correct time as in nearest time\n      // || (this.timeStrict ? this.findNearestTimeFromItems(parsedTime) : parsedTime),\n    ]);\n  }\n\n  public timeLimit(value: [PrizmDay, PrizmTime] | null): PrizmTime | null {\n    if (!value) return null;\n    let [, parsedTime] = value;\n    if (parsedTime)\n      parsedTime = parsedTime.timeLimit(\n        Array.isArray(this.min) && this.min[1] instanceof PrizmTime && value?.[0]?.daySame(this.min[0])\n          ? this.min[1]\n          : null,\n        Array.isArray(this.max) && this.max[1] instanceof PrizmTime && value?.[0]?.daySame(this.max[0])\n          ? this.max[1]\n          : null\n      );\n\n    return parsedTime;\n  }\n\n  public onDayClick(day: PrizmDay, time?: PrizmTime): void {\n    this.onDateValueChange(day.toString(this.dateFormat));\n    this.open = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public getTemplate(\n    openTimeTemplate: TemplateRef<unknown>,\n    dropdownTimeTemplate: TemplateRef<unknown>\n  ): TemplateRef<any> | null {\n    if (!this.open && !this.openTimeTemplate) return null;\n    if (this.openTimeTemplate) return openTimeTemplate;\n    return dropdownTimeTemplate;\n  }\n\n  public onMonthChange(month: PrizmMonth): void {\n    this.month = month;\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public override writeValue(value: [PrizmDay | null, PrizmTime | null] | null): void {\n    super.writeValue(value as any);\n    this.nativeValue$$.next(['', '']);\n  }\n\n  @prizmPure\n  private calculateMask(dateFormat: PrizmDateMode, dateSeparator: string): string {\n    return `${prizmCreateDateNgxMask(dateFormat, dateSeparator)}`;\n  }\n\n  @prizmPure\n  private calculateTimeMask(timeMode: PrizmTimeMode): string {\n    return prizmCreateTimeNgxMask(timeMode);\n  }\n\n  @prizmPure\n  private getDateTimeString(\n    date: PrizmDay | string,\n    time: PrizmTime | string | null,\n    timeMode: PrizmTimeMode = `HH:MM`\n  ): string {\n    const dateString = date instanceof PrizmDay ? date.toString(this.dateFormat, this.dateSeparator) : date;\n    const timeString = time instanceof PrizmTime ? time.toString(timeMode) : time || ``;\n\n    return `${dateString}${PRIZM_DATE_TIME_SEPARATOR}${timeString}`;\n  }\n  @prizmPure\n  private getTimeString(time: PrizmTime | string | null, timeMode: PrizmTimeMode = `HH:MM`): string {\n    const timeString = time instanceof PrizmTime ? time.toString(timeMode) : time || ``;\n\n    return `${timeString}`;\n  }\n\n  @prizmPure\n  private getDateString(date: PrizmDay | string): string {\n    const dateString = date instanceof PrizmDay ? date.toString(this.dateFormat, this.dateSeparator) : date;\n    return `${dateString}`;\n  }\n\n  private findNearestTimeFromItems(value: PrizmTime): PrizmTime | null {\n    return this.timeItems.reduce((previous, current) =>\n      Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n      Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n        ? current\n        : previous\n    );\n  }\n\n  private getMatch(value: string): PrizmTime | undefined {\n    return this.timeItems.find(item => PRIZM_STRICT_MATCHER(item, value));\n  }\n\n  public onTimeMenuClick(item: PrizmTime, ev: Event): void {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    // if (!(this.value[1] && item.isSameTime(this.value[1])))\n    //   this.onDayClick(this.value[0] ?? PrizmDay.currentLocal(), item);\n\n    this.onTimeValueChange(item.toString(this.timeMode));\n\n    this.openTimeTemplate = this.open = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private prizmClampTime(time: PrizmTime, day: PrizmDay): PrizmTime {\n    const ms = time.toAbsoluteMilliseconds();\n    const min =\n      Array.isArray(this.min) && day.daySame(this.calendarMinDay)\n        ? this.min[1].toAbsoluteMilliseconds()\n        : -Infinity;\n    const max =\n      Array.isArray(this.max) && day.daySame(this.calendarMaxDay)\n        ? this.max[1].toAbsoluteMilliseconds()\n        : Infinity;\n\n    return PrizmTime.fromAbsoluteMilliseconds(prizmClamp(ms, min, max));\n  }\n\n  public openTimeDropdown(open: boolean): void {\n    this.openTimeTemplate = open;\n    this.open = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public openDateDropdown(open: boolean): void {\n    this.open = open;\n    this.openTimeTemplate = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    super.clear(ev);\n    this.nativeValue$$.next(['', '']);\n    this.updateValue(null);\n    this.markAsTouched();\n    this.stateChanges.next();\n  }\n\n  public referFocusToMain(referFocus = true) {\n    if (!referFocus) return;\n    // TODO create operator and rxjs functin to run sequence in event loop\n    of(null)\n      .pipe(\n        delay(0),\n        tap(() => {\n          this.focusableElement?.selectionToStart();\n        })\n      )\n      .subscribe();\n  }\n\n  private isValueMasked(value: string): boolean {\n    return value.includes('_');\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  #prizmDropdownHostComponent\n  [style.--prizm-dropdown-host-width]=\"'100%'\"\n  [canOpen]=\"!disabled\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [content]=\"$any(getTemplate(dropdownTimeTemplate, dropdownDateTemplate))\"\n  [prizmDropdownHostWidth]=\"openTimeTemplate ? '100%' : 'auto'\"\n  [isOpen]=\"!disabled && (openTimeTemplate || open)\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpenChange($event); $event && prizmDropdownHostComponent.reCalculatePositions()\"\n>\n  <ng-template prizmInputStatusText>Ошибка! Неправильный формат</ng-template>\n  <div\n    class=\"multiple-input-box\"\n    #focusableElementRef=\"prizmInputZone\"\n    [attr.data-placeholder]=\"placeholder\"\n    prizmInputZone\n  >\n    <input\n      class=\"input-main\"\n      #fe=\"prizmInputInZone\"\n      #maskDirectiveDate=\"mask\"\n      [class.show-placeholder]=\"\n        (empty | async) && (disabled || (focusableElementRef.focused$ | async) !== true)\n      \"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [mask]=\"textMaskOptions\"\n      [showMaskTyped]=\"focusableElementRef.focused$ | async\"\n      [dropSpecialCharacters]=\"false\"\n      [size]=\"textMaskOptions.length\"\n      [clearIfNotMatch]=\"false\"\n      [maxLength]=\"textMaskOptions.length + 1\"\n      [maxSize]=\"textMaskOptions.length\"\n      [ngModel]=\"computedDateValue()\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (click)=\"referFocusToMain(!computedDateValue())\"\n      (ngModelChange)=\"onDateValueChange($event)\"\n      (updateNativeValue)=\"maskDirectiveDate.writeValue($event)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <input\n      class=\"input-time\"\n      #element\n      #maskDirectiveTime=\"mask\"\n      [mask]=\"timeMaskOptions\"\n      [clearIfNotMatch]=\"false\"\n      [dropSpecialCharacters]=\"false\"\n      [showMaskTyped]=\"focusableElementRef.focused$ | async\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"computedTimeValue()\"\n      [size]=\"timeMaskOptions.length\"\n      [maxLength]=\"timeMaskOptions.length + 1\"\n      [maxSize]=\"timeMaskOptions.length\"\n      (ngModelChange)=\"onTimeValueChange($event)\"\n      (updateNativeValue)=\"maskDirectiveTime.writeValue($event)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <!--    TODO add later correct fix for update native value when ng does not know about change -->\n    <!--    [prizmInputNativeValue]='computedTimeValue()'-->\n    <!--    [needChange]='needChangeNativeValue'-->\n  </div>\n</prizm-dropdown-host>\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [disabled]=\"disabled\"\n    (click)=\"openDateDropdown(!open)\"\n    prizmInputIconButton=\"date-calendar-blank\"\n  ></button>\n  <button\n    [disabled]=\"disabled\"\n    [interactive]=\"true\"\n    (click)=\"openTimeDropdown(!openTimeTemplate)\"\n    prizmInputIconButton=\"date-clock\"\n  ></button>\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n<ng-template #dropdownDateTemplate>\n  <prizm-calendar\n    [min]=\"calendarMinDay\"\n    [max]=\"calendarMaxDay\"\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [month]=\"computedActiveYearMonth\"\n    [value]=\"calendarValue\"\n    (prizmAfterViewInit)=\"markAsTouched()\"\n    (dayClick)=\"onDayClick($event)\"\n    (monthChange)=\"onMonthChange($event)\"\n    prizmPreventDefault=\"mousedown\"\n    automation-id=\"prizm-input-date-time__calendar\"\n  ></prizm-calendar>\n</ng-template>\n\n<ng-template #dropdownTimeTemplate>\n  <prizm-data-list\n    class=\"block\"\n    *ngIf=\"timeItems.length\"\n    [style.--prizm-data-list-border]=\"0\"\n    (prizmAfterViewInit)=\"markAsTouched(); prizmDropdownHostComponent.reCalculatePositions()\"\n    (prizmOnDestroy)=\"openTimeTemplate = false\"\n    prizmLifecycle\n  >\n    <ng-container>\n      <prizm-listing-item\n        *ngFor=\"let item of timeItems; let idx = index\"\n        [selected]=\"value?.[1] && item.isSameTime($any(value?.[1]))\"\n        (click)=\"$event.stopPropagation(); onTimeMenuClick(item, $event)\"\n      >\n        {{ item }}\n      </prizm-listing-item>\n    </ng-container>\n  </prizm-data-list>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutDateTimeComponent } from './input-layout-date-time.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmDropdownHostModule, PrizmInputLayoutDateTimeComponent, PrizmInputTextModule],\n  exports: [PrizmDropdownHostModule, PrizmInputLayoutDateTimeComponent, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutDateTimeModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  getProviderPrizmDateLeftButtons,\n  PRIZM_DATE_RIGHT_BUTTONS,\n} from '../../../tokens/date-extra-buttons';\nimport { BehaviorSubject } from 'rxjs';\nimport { PrizmDateButton, PrizmDateButtonContext } from '../../../types/date-button';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PolymorphOutletDirective, PrizmLifecycleModule } from '../../../directives';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmListingItemComponent } from '../../listing-item';\n\nexport type PrizmDateItemTemplate = {\n  name: string;\n} & PrizmDateButton;\n\n@Component({\n  selector: `prizm-input-date-multi`,\n  templateUrl: `./input-date-multi.component.html`,\n  styleUrls: [`./input-date-multi.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [getProviderPrizmDateLeftButtons()],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmInputTextModule,\n    PrizmLifecycleModule,\n    ReactiveFormsModule,\n    PrizmDataListComponent,\n    PolymorphOutletDirective,\n    PrizmDropdownHostComponent,\n    PrizmListingItemComponent,\n  ],\n})\nexport class PrizmInputDateMultiComponent extends PrizmAbstractTestId implements OnInit {\n  @ViewChild('buttonLeft', { static: true }) buttonLeftTemplate!: TemplateRef<unknown>;\n\n  private readonly _items$ = new BehaviorSubject<PrizmDateItemTemplate[]>([]);\n  @Input()\n  @prizmDefaultProp()\n  set items(value: PrizmDateItemTemplate[]) {\n    this._items$.next(value);\n  }\n  get items(): PrizmDateItemTemplate[] {\n    return this._items$.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  currentIdx = 0;\n\n  @Output()\n  readonly currentIdxChange = new EventEmitter<number>();\n\n  @HostBinding('attr.data-testid')\n  override readonly testId_ = 'ui_input_date_multi';\n\n  public open = false;\n\n  get context(): PrizmDateButtonContext {\n    return {\n      injector: this.injector,\n    };\n  }\n\n  constructor(\n    @Inject(PRIZM_DATE_RIGHT_BUTTONS) public readonly leftButtons$: BehaviorSubject<PrizmDateButton[]>,\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.leftButtons$.next([\n      {\n        template: this.buttonLeftTemplate,\n      },\n    ]);\n  }\n\n  public openDropdown(): void {\n    this.open = true;\n  }\n\n  public setListener(el: HTMLElement): void {\n    el.addEventListener(\n      'click',\n      ev => {\n        // TODO remove after finish activezone to dropdown component\n        ev.stopPropagation();\n        this.openDropdown();\n        this.cdRef.markForCheck();\n      },\n      {\n        capture: true,\n        passive: true,\n      }\n    );\n  }\n\n  public select(idx: number): void {\n    this.currentIdxChange.next((this.currentIdx = idx));\n    this.open = false;\n    this.cdRef.markForCheck();\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [(isOpen)]=\"open\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  prizmDropdownHostWidth=\"100%\"\n>\n  <ng-container *ngFor=\"let item of items; let idx = index\">\n    <ng-container *ngIf=\"idx === currentIdx\">\n      <ng-container *ngTemplateOutlet=\"item.template as data; context: context\"></ng-container>\n    </ng-container>\n  </ng-container>\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <prizm-data-list class=\"block\">\n    <ng-container *ngIf=\"items?.length\">\n      <prizm-listing-item\n        *ngFor=\"let item of items; let idx = index\"\n        [selected]=\"idx === currentIdx\"\n        (click)=\"select(idx)\"\n      >\n        {{ item.name }}\n      </prizm-listing-item>\n    </ng-container>\n  </prizm-data-list>\n</ng-template>\n\n<ng-template #buttonLeft>\n  <button\n    [interactive]=\"true\"\n    (prizmAfterViewInit)=\"setListener($event.nativeElement)\"\n    prizmInputIconButton=\"chevrons-dropdown-small\"\n  ></button>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputDateMultiComponent } from './input-date-multi.component';\n\n/** @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputDateMultiComponent],\n  exports: [PrizmInputDateMultiComponent],\n})\nexport class PrizmInputDateMultiModule {}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PRIZM_MAX_TIME_VALUES } from '../../../constants/max-time-values';\nimport { PrizmTimeFormatParts } from '../../../types/time-format-parts';\nimport { PrizmTimeMode } from '../../../types/time-mode';\nimport { PrizmSizeL, PrizmSizeM, PrizmSizeS } from '../../../util/size-bigger';\n\nexport interface PrizmInputTimeOptions {\n  readonly mode: PrizmTimeMode;\n  readonly maxValues: Record<PrizmTimeFormatParts, number>;\n  readonly itemSize: PrizmSizeS | PrizmSizeL | PrizmSizeM;\n}\n\nexport const PRIZM_INPUT_TIME_DEFAULT_OPTIONS: PrizmInputTimeOptions = {\n  mode: `HH:MM`,\n  maxValues: PRIZM_MAX_TIME_VALUES,\n  itemSize: `m`,\n};\n\nexport const PRIZM_INPUT_TIME_OPTIONS = new InjectionToken<PrizmInputTimeOptions>(\n  `Default parameters for input time component`,\n  {\n    factory: (): PrizmInputTimeOptions => PRIZM_INPUT_TIME_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmInputTimeOptionsProvider: (options: Partial<PrizmInputTimeOptions>) => ValueProvider = (\n  options: Partial<PrizmInputTimeOptions>\n) => ({\n  provide: PRIZM_INPUT_TIME_OPTIONS,\n  useValue: { ...PRIZM_INPUT_TIME_DEFAULT_OPTIONS, ...options },\n});\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { PRIZM_FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_INPUT_TIME_OPTIONS, PrizmInputTimeOptions } from './input-time-options';\nimport { PRIZM_TIME_TEXTS } from '../../../tokens/i18n';\nimport { PrizmTimeMode } from '../../../types/time-mode';\nimport { prizmCreateTimeNgxMask } from '../../../@core/mask/create-time-mask';\nimport { PRIZM_STRICT_MATCHER } from '../../../constants/matcher';\nimport { PrizmTimeLike } from '../../../types/time-like';\nimport { prizmSetNativeFocused } from '../../../util/set-native-focused';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { prizmIsNativeFocused } from '../../../util';\nimport { prizmI18nInitWithKey } from '../../../services';\n\n@Component({\n  selector: `prizm-input-time`,\n  templateUrl: `./input-time.component.html`,\n  styleUrls: [`./input-time.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_TIME_TEXTS, 'time'),\n    {\n      provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputTimeComponent),\n    },\n    PRIZM_FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n  ],\n})\nexport class PrizmInputTimeComponent\n  extends AbstractPrizmNullableControl<PrizmTime>\n  implements PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  label = 'Выберите время';\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmTime> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  itemSize: PrizmInputTimeOptions['itemSize'] = this.options.itemSize;\n\n  @Input()\n  @prizmDefaultProp()\n  strict = false;\n\n  @Input()\n  @prizmDefaultProp()\n  mode: PrizmInputTimeOptions['mode'] = this.options.mode;\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  override readonly testId_ = 'ui_input_time';\n\n  public open = false;\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    private readonly cdr: ChangeDetectorRef,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PRIZM_TIME_TEXTS)\n    private readonly timeTexts$: Observable<Record<PrizmTimeMode, string>>,\n    private readonly injector: Injector,\n    @Inject(PRIZM_INPUT_TIME_OPTIONS)\n    private readonly options: PrizmInputTimeOptions\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  get filtered(): readonly PrizmTime[] {\n    return this.filter(this.items, this.mode, this.computedSearch);\n  }\n\n  get textMaskOptions(): string {\n    return this.calculateMask(this.mode);\n  }\n\n  get computedValue(): string {\n    return this.value ? this.value.toString(this.mode) : this.nativeValue;\n  }\n\n  get computedSearch(): string {\n    return this.computedValue.length !== this.mode.length ? this.computedValue : ``;\n  }\n\n  get innerPseudoFocused(): boolean | null {\n    if (this.pseudoFocused === false) {\n      return false;\n    }\n\n    if (this.open || this.computedFocused) {\n      return true;\n    }\n\n    return null;\n  }\n\n  get nativeValue(): string {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : ``;\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  set nativeValue(value: string) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n\n    this.nativeFocusableElement.value = value;\n  }\n\n  @prizmPure\n  public getFiller$(mode: PrizmTimeMode): Observable<string> {\n    return this.timeTexts$.pipe(map(texts => texts[mode]));\n  }\n\n  public onValueChange(value: string): void {\n    // this.open = !!this.items.length;\n\n    if (this.control) {\n      this.control.updateValueAndValidity({ emitEvent: false });\n    }\n\n    const match = this.getMatch(value);\n\n    if (match !== undefined) {\n      this.updateValue(match);\n\n      return;\n    }\n\n    if (!value || value.length !== this.mode.length) {\n      if (!value) this.updateValue(null);\n      return;\n    }\n\n    const time = PrizmTime.correctTime(PrizmTime.fromString(value));\n    this.updateValue(this.strict ? this.findNearestTimeFromItems(time) : time);\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n\n    if (focused || this.value !== null || this.nativeValue === `` || this.mode === `HH:MM`) {\n      return;\n    }\n\n    const parsedTime = PrizmTime.fromString(this.nativeValue);\n\n    this.updateValue(parsedTime);\n\n    setTimeout(() => {\n      if (this.nativeValue.endsWith(`.`) || this.nativeValue.endsWith(`:`)) {\n        this.nativeValue = this.nativeValue.slice(0, -1);\n      }\n    });\n  }\n\n  public onHovered(hovered: boolean): void {\n    this.updateHovered(hovered);\n  }\n\n  public onArrowUp(event: Event): void {\n    if (this.items.length) {\n      return;\n    }\n\n    this.processArrow(event, 1);\n  }\n\n  public onArrowDown(event: Event): void {\n    if (this.items.length) {\n      return;\n    }\n\n    this.processArrow(event, -1);\n  }\n\n  public onMenuClick(item: PrizmTime): void {\n    this.open = false;\n    this.updateValue(item);\n  }\n\n  public onOpen(open: boolean): void {\n    this.open = open;\n  }\n\n  public override writeValue(value: PrizmTime | null): void {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : ``;\n  }\n\n  @prizmPure\n  private calculateMask(mode: PrizmTimeMode): string {\n    return prizmCreateTimeNgxMask(mode, this.options.maxValues);\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  @prizmPure\n  private filter(items: readonly PrizmTime[], mode: PrizmTimeMode, search: string): readonly PrizmTime[] {\n    return items.filter(item => item.toString(mode).includes(search));\n  }\n\n  private findNearestTimeFromItems(value: PrizmTime): PrizmTime | null {\n    return this.items.reduce((previous, current) =>\n      Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n      Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n        ? current\n        : previous\n    );\n  }\n\n  private getMatch(value: string): PrizmTime | undefined {\n    return this.items.find(item => PRIZM_STRICT_MATCHER(item, value));\n  }\n\n  private close(): void {\n    this.open = false;\n  }\n\n  private processArrow(event: Event, shift: -1 | 1): void {\n    const { target } = event;\n\n    // TODO: iframe warning\n    if (this.readOnly || !(target instanceof HTMLInputElement)) {\n      return;\n    }\n\n    const selectionStart = target.selectionStart || 0;\n\n    this.shiftTime(this.calculateShift(selectionStart, shift));\n\n    target.setSelectionRange(selectionStart, selectionStart);\n    event.preventDefault();\n  }\n\n  private calculateShift(selectionStart: number, shift: number): PrizmTimeLike {\n    if (selectionStart <= 2) {\n      return { hours: shift };\n    }\n\n    if (selectionStart <= 5) {\n      return { minutes: shift };\n    }\n\n    if (selectionStart <= 8) {\n      return { seconds: shift };\n    }\n\n    return { ms: shift };\n  }\n\n  private shiftTime(shift: PrizmTimeLike): void {\n    if (this.value === null) {\n      return;\n    }\n\n    const increasedTime: PrizmTime = this.value.shift(shift);\n\n    // Manual update so we can set caret position properly\n    this.nativeValue = increasedTime.toString(this.mode);\n    this.updateValue(increasedTime);\n  }\n\n  private focusInput(preventScroll = false): void {\n    if (this.nativeFocusableElement) {\n      prizmSetNativeFocused(this.nativeFocusableElement, true, preventScroll);\n      this.close();\n    }\n  }\n\n  public safeOpenModal(): void {\n    const inputElement = this.focusableElement?.nativeElement;\n    if (!this.open && !this.disabled && inputElement && prizmIsNativeFocused(inputElement)) {\n      this.open = true;\n      this.cdr.markForCheck();\n    }\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-wrapper\"\n  [canOpen]=\"interactive && !!filtered.length\"\n  [content]=\"dropdownContent\"\n  [prizmDropdownHostWidth]=\"'100%'\"\n  [isOpen]=\"interactive && open && !!filtered.length\"\n  [closeByEsc]=\"true\"\n  (isOpenChange)=\"onOpen($event)\"\n>\n  <prizm-input-layout\n    [label]=\"label\"\n    [outer]=\"outer\"\n    [forceClear]=\"forceClear\"\n    [size]=\"size\"\n    (click)=\"safeOpenModal()\"\n  >\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [mask]=\"textMaskOptions\"\n      [showMaskTyped]=\"focusableElementRef.focused\"\n      [dropSpecialCharacters]=\"false\"\n      [required]=\"readOnly\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"computedValue\"\n      (ngModelChange)=\"onValueChange($event || '')\"\n      (keydown.arrowUp)=\"onArrowUp($event)\"\n      (keydown.arrowDown)=\"onArrowDown($event)\"\n      prizmInput\n    />\n    <ng-container prizm-input-right>\n      <button [interactive]=\"true\" (click)=\"onOpen(!open)\" prizmInputIconButton=\"date-clock\"></button>\n      <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n</prizm-dropdown-host>\n\n<ng-template #dropdownContent>\n  <prizm-data-list class=\"block\" [style.--prizm-data-list-border]=\"0\">\n    <ng-container *ngIf=\"items?.length\">\n      <div\n        class=\"item\"\n        *ngFor=\"let item of filtered; let idx = index\"\n        [class.selected]=\"value && item.isSameTime(value)\"\n        (click)=\"onMenuClick(item)\"\n      >\n        <span class=\"text\">\n          {{ item }}\n        </span>\n      </div>\n    </ng-container>\n  </prizm-data-list>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmDataListModule } from '../../data-list/data-list.module';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmInputTimeComponent } from './input-time.component';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmButtonModule } from '../../button/button.module';\nimport { PrizmDropdownControllerModule } from '../../../directives';\nimport { PrizmMaskModule } from '../../../modules';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmMaskModule,\n    PrizmDataListModule,\n    PrizmDropdownControllerModule,\n    PrizmDropdownHostModule,\n    PrizmInputTextModule,\n    PrizmButtonModule,\n    FormsModule,\n    PrizmValueAccessorModule,\n  ],\n  declarations: [PrizmInputTimeComponent],\n  exports: [PrizmInputTimeComponent],\n})\nexport class PrizmInputTimeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmTime } from '../../../@core/date-time/time';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { PRIZM_FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_INPUT_TIME_OPTIONS, PrizmInputTimeOptions } from './input-time-options';\nimport { PRIZM_TIME_TEXTS } from '../../../tokens/i18n';\nimport { PrizmTimeMode } from '../../../types/time-mode';\nimport { prizmCreateTimeNgxMask } from '../../../@core/mask/create-time-mask';\nimport { PRIZM_STRICT_MATCHER } from '../../../constants/matcher';\nimport { PrizmTimeLike } from '../../../types/time-like';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens/date-extra-buttons';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputControl, PrizmInputNgControl } from '../common';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { CommonModule } from '@angular/common';\nimport {\n  PrizmDropdownControllerModule,\n  PrizmLifecycleModule,\n  PrizmValueAccessorModule,\n} from '../../../directives';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmButtonComponent } from '../../button';\nimport { PrizmListingItemComponent } from '../../listing-item';\n\n@Component({\n  selector: `prizm-input-layout-time`,\n  templateUrl: `./input-layout-time.component.html`,\n  styleUrls: [`./input-layout-time.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_TIME_TEXTS, 'time'),\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutTimeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutTimeComponent },\n    PRIZM_FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmLifecycleModule,\n    PrizmMaskModule,\n    PrizmDataListComponent,\n    PrizmDropdownControllerModule,\n    PrizmDropdownHostComponent,\n    PrizmInputTextModule,\n    PrizmButtonComponent,\n    FormsModule,\n    PrizmValueAccessorModule,\n    PrizmListingItemComponent,\n  ],\n})\nexport class PrizmInputLayoutTimeComponent extends PrizmInputNgControl<PrizmTime | null> {\n  readonly hasClearButton = true;\n  readonly nativeElementType = 'input-layout-time';\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmTime> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  itemSize: PrizmInputTimeOptions['itemSize'] = this.options.itemSize;\n\n  @Input()\n  @prizmDefaultProp()\n  strict = false;\n\n  @Input()\n  @prizmDefaultProp()\n  mode: PrizmInputTimeOptions['mode'] = this.options.mode;\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector;\n\n  override readonly testId_ = 'ui_input_time';\n\n  public open = false;\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  constructor(\n    @Inject(PRIZM_TIME_TEXTS)\n    private readonly timeTexts$: Observable<Record<PrizmTimeMode, string>>,\n    injector: Injector,\n    @Inject(PRIZM_INPUT_TIME_OPTIONS)\n    private readonly options: PrizmInputTimeOptions\n  ) {\n    super(injector);\n    this.extraButtonInjector = injector;\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n  }\n\n  get filtered(): readonly PrizmTime[] {\n    return this.filter(this.items, this.mode, this.computedSearch);\n  }\n\n  get textMaskOptions(): string {\n    return this.calculateMask(this.mode);\n  }\n\n  get computedValue(): string {\n    return this.value ? this.value.toString(this.mode) : this.nativeValue;\n  }\n\n  get computedSearch(): string {\n    return this.computedValue.length !== this.mode.length ? this.computedValue : ``;\n  }\n\n  get nativeValue(): string {\n    return this.nativeFocusableElement ? this.nativeFocusableElement.value : ``;\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  set nativeValue(value: string) {\n    if (!this.nativeFocusableElement) {\n      return;\n    }\n\n    this.nativeFocusableElement.value = value;\n  }\n\n  @prizmPure\n  public getFiller$(mode: PrizmTimeMode): Observable<string> {\n    return this.timeTexts$.pipe(map(texts => texts[mode]));\n  }\n\n  public onValueChange(value: string): void {\n    // this.open = !!this.items.length;\n\n    const match = this.getMatch(value);\n\n    if (match !== undefined) {\n      this.updateValue(match);\n\n      return;\n    }\n\n    if (!value || value.length !== this.mode.length) {\n      if (!value) this.updateValue(null);\n      return;\n    }\n\n    const time = PrizmTime.correctTime(PrizmTime.fromString(value));\n\n    this.updateValue(this.strict ? this.findNearestTimeFromItems(time) : time);\n  }\n\n  public onArrowUp(event: Event): void {\n    if (this.items.length) {\n      return;\n    }\n\n    this.processArrow(event, 1);\n  }\n\n  public onArrowDown(event: Event): void {\n    if (this.items.length) {\n      return;\n    }\n\n    this.processArrow(event, -1);\n  }\n\n  public onMenuClick(item: PrizmTime): void {\n    this.open = false;\n    this.updateValue(item);\n  }\n\n  public onOpen(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public override writeValue(value: PrizmTime | null): void {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : ``;\n  }\n\n  @prizmPure\n  private calculateMask(mode: PrizmTimeMode): string {\n    return prizmCreateTimeNgxMask(mode, this.options.maxValues);\n  }\n\n  get stringValue(): string {\n    return this.value?.toString() ?? '';\n  }\n\n  get interactive(): boolean {\n    return !this.disabled;\n  }\n\n  @prizmPure\n  private filter(items: readonly PrizmTime[], mode: PrizmTimeMode, search: string): readonly PrizmTime[] {\n    return items.filter(item => item.toString(mode).includes(search));\n  }\n\n  private findNearestTimeFromItems(value: PrizmTime): PrizmTime | null {\n    return this.items.reduce((previous, current) =>\n      Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n      Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n        ? current\n        : previous\n    );\n  }\n\n  private getMatch(value: string): PrizmTime | undefined {\n    return this.items.find(item => PRIZM_STRICT_MATCHER(item, value));\n  }\n\n  private processArrow(event: Event, shift: -1 | 1): void {\n    const { target } = event;\n\n    // TODO: iframe warning\n    if (/*this.readOnly ||*/ !(target instanceof HTMLInputElement)) {\n      return;\n    }\n\n    const selectionStart = target.selectionStart || 0;\n\n    this.shiftTime(this.calculateShift(selectionStart, shift));\n\n    target.setSelectionRange(selectionStart, selectionStart);\n    event.preventDefault();\n  }\n\n  private calculateShift(selectionStart: number, shift: number): PrizmTimeLike {\n    if (selectionStart <= 2) {\n      return { hours: shift };\n    }\n\n    if (selectionStart <= 5) {\n      return { minutes: shift };\n    }\n\n    if (selectionStart <= 8) {\n      return { seconds: shift };\n    }\n\n    return { ms: shift };\n  }\n\n  private shiftTime(shift: PrizmTimeLike): void {\n    if (this.value === null) {\n      return;\n    }\n\n    const increasedTime: PrizmTime = this.value.shift(shift);\n\n    // Manual update so we can set caret position properly\n    this.nativeValue = increasedTime.toString(this.mode);\n    this.updateValue(increasedTime);\n  }\n\n  public safeOpenModal(): void {\n    if (!this.open && !this.disabled) {\n      this.open = true;\n      this.changeDetectorRef.markForCheck();\n    } else {\n      this.open = false;\n    }\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    if (this.nativeFocusableElement) this.nativeFocusableElement.value = '';\n    this.updateValue(null);\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-wrapper\"\n  [canOpen]=\"interactive && !!filtered.length\"\n  [content]=\"dropdownContent\"\n  [prizmDropdownHostWidth]=\"'100%'\"\n  [isOpen]=\"interactive && open && !!filtered.length\"\n  [closeByEsc]=\"true\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  (isOpenChange)=\"onOpen($event)\"\n>\n  <input\n    class=\"input-search\"\n    #focusableElementRef\n    [mask]=\"textMaskOptions\"\n    [showMaskTyped]=\"focusableElementRef.focused\"\n    [dropSpecialCharacters]=\"false\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"computedValue\"\n    (click)=\"safeOpenModal()\"\n    (ngModelChange)=\"onValueChange($event || '')\"\n    (keydown.arrowUp)=\"onArrowUp($event)\"\n    (keydown.arrowDown)=\"onArrowDown($event)\"\n    prizmInput\n  />\n</prizm-dropdown-host>\n\n<ng-template #dropdownContent>\n  <prizm-data-list class=\"block\" [style.--prizm-data-list-border]=\"0\" (prizmAfterViewInit)=\"markAsTouched()\">\n    <ng-container *ngIf=\"items?.length\">\n      <prizm-listing-item\n        *ngFor=\"let item of filtered; let idx = index\"\n        [selected]=\"value && item.isSameTime(value)\"\n        (click)=\"onMenuClick(item)\"\n        >{{ item }}\n      </prizm-listing-item>\n    </ng-container>\n  </prizm-data-list>\n</ng-template>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [disabled]=\"disabled\"\n    (click)=\"onOpen(!open)\"\n    prizmInputIconButton=\"date-clock\"\n  ></button>\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutTimeComponent } from './input-layout-time.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputTextModule, PrizmInputLayoutTimeComponent],\n  exports: [PrizmInputLayoutTimeComponent, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutTimeModule {}\n","import { FactoryProvider } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmMonth } from '../@core/date-time/month';\nimport { PrizmMonthPipe } from '../pipes/month/month.pipe';\nimport { PRIZM_MONTH_FORMATTER } from '../tokens/month-formatter';\nimport { PrizmHandler } from '../types/handler';\n\nexport const PRIZM_MONTH_FORMATTER_PROVIDER: FactoryProvider = {\n  provide: PRIZM_MONTH_FORMATTER,\n  deps: [PrizmMonthPipe],\n  useFactory: (pipe: PrizmMonthPipe): PrizmHandler<PrizmMonth | null, Observable<string>> => {\n    return (month): Observable<string> =>\n      month ? pipe.transform(month).pipe(map(formatted => `${formatted} ${month.formattedYear}`)) : of(``);\n  },\n};\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PrizmAbstractTestId, prizmDefaultProp, prizmPure } from '@prizm-ui/core';\nimport { Observable } from 'rxjs';\nimport { PrizmDay } from '../../@core/date-time/day';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../@core/date-time/days.const';\nimport { PrizmMonth } from '../../@core/date-time/month';\nimport { PrizmMonthContext } from '../../@core/date-time/month-context';\nimport { PrizmMonthRange } from '../../@core/date-time/month-range';\nimport { PrizmYear } from '../../@core/date-time/year';\nimport { PrizmRangeState } from '../../@core/enums/range-state';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../constants/always-false-handler';\nimport { PrizmInteractiveState } from '../../directives/wrapper/wrapper.component';\nimport { PRIZM_CALENDAR_MONTHS } from '../../tokens/i18n';\nimport { PrizmBooleanHandler } from '../../types/handler';\nimport { PrizmBooleanHandlerWithContext } from '../../types/handler-with-context';\nimport { PrizmWithOptionalMinMax } from '../../types/with-optional-min-max';\nimport { prizmNullableSame } from '../../util/common/nullable-same';\nimport { prizmI18nInitWithKey } from '../../services';\nimport { CommonModule } from '@angular/common';\nimport {\n  PrizmFocusableModule,\n  PrizmHoveredDirective,\n  PrizmHoveredModule,\n  PrizmPressedModule,\n  PrizmStopPropagationModule,\n} from '../../directives';\nimport { PrizmPrimitiveSpinButtonModule, PrizmPrimitiveYearPickerComponent } from '../internal';\nimport { PrizmScrollbarComponent } from '../scrollbar';\nimport { PrizmLetDirective } from '@prizm-ui/helpers';\n\nconst TODAY = PrizmDay.currentLocal();\n\n@Component({\n  selector: `prizm-calendar-month`,\n  templateUrl: `./calendar-month.component.html`,\n  styleUrls: [`./calendar-month.component.less`],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmStopPropagationModule,\n    PrizmPrimitiveYearPickerComponent,\n    PrizmPrimitiveSpinButtonModule,\n    PrizmScrollbarComponent,\n    PrizmLetDirective,\n    PrizmHoveredDirective,\n    PrizmPressedModule,\n    PrizmFocusableModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [...prizmI18nInitWithKey(PRIZM_CALENDAR_MONTHS, 'shortCalendarMonths')],\n})\nexport class PrizmCalendarMonthComponent\n  extends PrizmAbstractTestId\n  implements PrizmWithOptionalMinMax<PrizmMonth>\n{\n  @Input()\n  @prizmDefaultProp()\n  value: PrizmMonthRange | PrizmMonth | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  year: PrizmYear = TODAY;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandlerWithContext<PrizmMonth, PrizmMonthContext> =\n    PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmMonth = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmMonth = PRIZM_LAST_DAY;\n\n  @Output()\n  readonly monthClick = new EventEmitter<PrizmMonth>();\n\n  readonly hoveredItemChange = new EventEmitter<PrizmMonth | null>();\n\n  @Output()\n  readonly yearChange = new EventEmitter<PrizmYear>();\n\n  isYearPickerShown = false;\n\n  hoveredItem: PrizmMonth | null = null;\n  pressedItem: PrizmMonth | null = null;\n  override readonly testId_ = 'ui_calendar_month';\n\n  constructor(@Inject(PRIZM_CALENDAR_MONTHS) readonly months$: Observable<readonly string[]>) {\n    super();\n  }\n\n  @HostBinding(`class._single`)\n  get isSingle(): boolean {\n    return this.value !== null && (this.value instanceof PrizmMonth || this.value.isSingleMonth);\n  }\n\n  get previousYearDisabled(): boolean {\n    return this.year.yearSameOrBefore(this.min);\n  }\n\n  get nextYearDisabled(): boolean {\n    return this.year.yearSameOrAfter(this.max);\n  }\n\n  public getItemState(item: PrizmMonth): PrizmInteractiveState | null {\n    const { disabledItemHandlerWithMinMax, pressedItem, hoveredItem } = this;\n\n    if (disabledItemHandlerWithMinMax(item)) {\n      return PrizmInteractiveState.Disabled;\n    }\n\n    // if (pressedItem?.monthSame(item)) {\n    //     return PrizmInteractiveState.Active;\n    // }\n    //\n    // if (hoveredItem?.monthSame(item)) {\n    //     return PrizmInteractiveState.Hover;\n    // }\n\n    return null;\n  }\n\n  public getItemRange(item: PrizmMonth): PrizmRangeState | null {\n    const { value, hoveredItem } = this;\n\n    if (value === null) {\n      return null;\n    }\n\n    if (value instanceof PrizmMonth) {\n      return value.monthSame(item) ? PrizmRangeState.Single : null;\n    }\n\n    const theFirstOfRange = value.from.monthSame(item) && !value.isSingleMonth;\n    const hoveredItemAfterFrom =\n      hoveredItem?.monthAfter(value.from) && value.from.monthSame(item) && value.isSingleMonth;\n    const hoveredItemIsCandidateToBeFrom =\n      hoveredItem?.monthSame(item) && hoveredItem?.monthBefore(value.from) && value.isSingleMonth;\n\n    if (theFirstOfRange || hoveredItemAfterFrom || hoveredItemIsCandidateToBeFrom) {\n      return PrizmRangeState.Start;\n    }\n\n    const theLastOfRange = value.to.monthSame(item) && !value.isSingleMonth;\n    const hoveredItemBeforeTo =\n      value.to.monthSame(item) && hoveredItem?.monthBefore(value.to) && value.isSingleMonth;\n    const hoveredItemIsCandidateToBeTo =\n      hoveredItem?.monthSame(item) && hoveredItem?.monthAfter(value.from) && value.isSingleMonth;\n\n    if (theLastOfRange || hoveredItemBeforeTo || hoveredItemIsCandidateToBeTo) {\n      return PrizmRangeState.End;\n    }\n\n    return value.isSingleMonth && value.from.monthSame(item) ? PrizmRangeState.Single : null;\n  }\n\n  public getPrizmMonth(monthNumber: number, yearNumber: number): PrizmMonth {\n    return new PrizmMonth(yearNumber, monthNumber);\n  }\n\n  public isItemToday(item: PrizmMonth): boolean {\n    return TODAY.monthSame(item);\n  }\n\n  public isItemInsideRange(month: PrizmMonth): boolean {\n    const { value, hoveredItem } = this;\n\n    if (value === null || value instanceof PrizmMonth) {\n      return false;\n    }\n\n    if (!value.isSingleMonth) {\n      return value.from.monthSameOrBefore(month) && value.to.monthAfter(month);\n    }\n\n    if (hoveredItem === null) {\n      return false;\n    }\n\n    const range = PrizmMonthRange.sort(value.from, hoveredItem);\n\n    return range.from.monthSameOrBefore(month) && range.to.monthAfter(month);\n  }\n\n  public onPickerYearClick(year: PrizmYear): void {\n    this.isYearPickerShown = false;\n\n    if (this.year.yearSame(year)) {\n      return;\n    }\n\n    this.updateActiveYear(year);\n  }\n\n  public onItemClick(month: PrizmMonth): void {\n    if (this.disabledItemHandlerWithMinMax(month)) {\n      return;\n    }\n\n    this.monthClick.emit(month);\n  }\n\n  public onYearClick(): void {\n    this.isYearPickerShown = true;\n  }\n\n  public onNextYear(): void {\n    this.updateActiveYear(this.year.append({ year: 1 }));\n  }\n\n  public onPreviousYear(): void {\n    this.updateActiveYear(this.year.append({ year: -1 }));\n  }\n\n  public onItemHovered(hovered: boolean, item: PrizmMonth): void {\n    this.updateHoveredItem(hovered ? item : null);\n  }\n\n  public onItemPressed(pressed: boolean, item: PrizmMonth): void {\n    this.updatePressedItem(pressed ? item : null);\n  }\n\n  @prizmPure\n  private calculateDisabledItemHandlerWithMinMax(\n    disabledItemHandler: PrizmBooleanHandlerWithContext<PrizmMonth, PrizmMonthContext>,\n    value: PrizmMonth | PrizmMonthRange | null,\n    min: PrizmMonth,\n    max: PrizmMonth\n  ): PrizmBooleanHandler<PrizmMonth> {\n    return (item): boolean =>\n      item.monthBefore(min) || item.monthAfter(max) || disabledItemHandler(item, { value });\n  }\n\n  private get disabledItemHandlerWithMinMax(): PrizmBooleanHandler<PrizmMonth> {\n    return this.calculateDisabledItemHandlerWithMinMax(\n      this.disabledItemHandler,\n      this.value,\n      this.min,\n      this.max\n    );\n  }\n\n  private updateHoveredItem(month: PrizmMonth | null): void {\n    if (prizmNullableSame(this.hoveredItem, month, (a, b) => a.monthSame(b))) {\n      return;\n    }\n\n    this.hoveredItem = month;\n    this.hoveredItemChange.emit(month);\n  }\n\n  private updatePressedItem(item: PrizmMonth | null): void {\n    this.pressedItem = item;\n  }\n\n  private updateActiveYear(year: PrizmYear): void {\n    this.year = year;\n    this.yearChange.emit(year);\n  }\n}\n","<prizm-scrollbar class=\"z-scrollbar\" *ngIf=\"isYearPickerShown; else monthSelect\">\n  <prizm-primitive-year-picker\n    [min]=\"min\"\n    [max]=\"max\"\n    [initialItem]=\"year\"\n    [value]=\"value\"\n    (yearClick)=\"onPickerYearClick($event)\"\n  ></prizm-primitive-year-picker>\n</prizm-scrollbar>\n<ng-template #monthSelect>\n  <prizm-primitive-spin-button\n    [focusable]=\"false\"\n    [leftDisabled]=\"previousYearDisabled\"\n    [rightDisabled]=\"nextYearDisabled\"\n    (leftClick)=\"onPreviousYear()\"\n    (rightClick)=\"onNextYear()\"\n    prizmStopPropagation=\"mousedown\"\n  >\n    <button\n      class=\"year-btn\"\n      [prizmFocusable]=\"false\"\n      (click)=\"onYearClick()\"\n      automation-id=\"prizm-calendar-month__active-year\"\n    >\n      {{ year.formattedYear }}\n    </button>\n  </prizm-primitive-spin-button>\n  <div class=\"z-row\">\n    <ng-container *ngFor=\"let month of months$ | async; let index = index\">\n      <div\n        class=\"z-cell\"\n        *prizmLet=\"getPrizmMonth(index, year.year) as item\"\n        [class.z-cell_today]=\"isItemToday(item)\"\n        [class.z-cell_interval]=\"isItemInsideRange(item)\"\n        [attr.data-range]=\"getItemRange(item)\"\n        [attr.data-state]=\"getItemState(item)\"\n        (prizmHoveredChange)=\"onItemHovered($event, item)\"\n        (prizmPressedChange)=\"onItemHovered($event, item)\"\n        (click)=\"onItemClick(item)\"\n      >\n        <div class=\"z-item\">{{ month }}</div>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\n\nexport type PrizmMapper<T, G> = (item: T, ...args: any[]) => G;\n\n@Pipe({ name: `prizmMapper` })\nexport class PrizmMapperPipe implements PipeTransform {\n  /**\n   * Maps object to an arbitrary result through a mapper function\n   *\n   * @param value an item to transform\n   * @param mapper a mapping function\n   * @param args arbitrary number of additional arguments\n   */\n  public transform<T, G>(value: T, mapper: PrizmMapper<T, G>, ...args: any[]): G {\n    return mapper(value, ...args);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmYear } from '../../../@core/date-time/year';\nimport { prizmAsControl } from '../../../abstract/control';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMonthPipe } from '../../../pipes/month/month.pipe';\nimport { PRIZM_MONTH_FORMATTER_PROVIDER } from '../../../providers/month-formatter.provider';\nimport { prizmAsFocusableItemAccessor } from '../../../tokens/focusable-item-accessor';\nimport { PRIZM_INPUT_DATE_OPTIONS, PrizmInputDateOptions } from '../../../tokens/input-date-options';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { PrizmBooleanHandler, PrizmHandler } from '../../../types/handler';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { PRIZM_MONTHS } from '../../../tokens';\n\n@Component({\n  selector: `prizm-input-month`,\n  templateUrl: `./input-month.component.html`,\n  styleUrls: [`./input-month.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_MONTHS, 'months'),\n    prizmAsFocusableItemAccessor(PrizmInputMonthComponent),\n    prizmAsControl(PrizmInputMonthComponent),\n    PRIZM_MONTH_FORMATTER_PROVIDER,\n    PrizmMonthPipe,\n  ],\n})\nexport class PrizmInputMonthComponent\n  extends AbstractPrizmNullableControl<PrizmMonth>\n  implements PrizmWithOptionalMinMax<PrizmMonth>, PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public min: PrizmMonth = this.options.min;\n\n  @Input()\n  @prizmDefaultProp()\n  public outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  public extraButtonInjector: Injector = this.injector;\n\n  @Input()\n  @prizmDefaultProp()\n  public label = 'Выберите месяц';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  public size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  public max: PrizmMonth = this.options.max;\n\n  @Input()\n  @prizmDefaultProp()\n  public disabledItemHandler: PrizmBooleanHandler<PrizmMonth> = PRIZM_ALWAYS_FALSE_HANDLER;\n  public open = false;\n\n  public activeYear: PrizmYear = this.value || PrizmDay.currentLocal();\n  override readonly testId_ = 'ui_input_month';\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  @HostListener(`click`)\n  public onClick(): void {\n    this.open = !this.open;\n  }\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    readonly formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Inject(PRIZM_INPUT_DATE_OPTIONS)\n    private readonly options: PrizmInputDateOptions,\n    private readonly injector: Injector\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  get calendarIcon(): PrizmInputDateOptions['icon'] {\n    return this.options.icon;\n  }\n\n  public onValueChange(value: string): void {\n    if (value) {\n      return;\n    }\n\n    this.updateValue(null);\n    this.onOpenChange(true);\n  }\n\n  public onMonthClick(month: PrizmMonth): void {\n    this.updateValue(month);\n    this.close();\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n  }\n\n  public onOpenChange(open: boolean): void {\n    if (open && this.value) {\n      this.activeYear = this.value;\n    }\n    this.open = open;\n  }\n\n  public override setDisabledState(): void {\n    super.setDisabledState();\n    this.close();\n  }\n\n  private close(): void {\n    this.open = false;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"interactive\"\n  [content]=\"dropdown\"\n  [isOpen]=\"open && interactive\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <prizm-input-layout [label]=\"label\" [outer]=\"outer\" [forceClear]=\"forceClear\" [size]=\"size\">\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [placeholder]=\"placeholder\"\n      [readonly]=\"true\"\n      [disabled]=\"computedDisabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"(value | prizmMapper : formatter | async) || ''\"\n      (ngModelChange)=\"onValueChange($event || '')\"\n      prizmInput\n    />\n    <ng-container prizm-input-right>\n      <ng-container *polymorphOutlet=\"calendarIcon as data; context: { $implicit: size }\">\n        <button [prizmInputIconButton]=\"$any(data)\" [interactive]=\"true\"></button>\n      </ng-container>\n\n      <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n  <ng-template #dropdown>\n    <prizm-calendar-month\n      [(year)]=\"activeYear\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [value]=\"value\"\n      (monthClick)=\"onMonthClick($event)\"\n      prizmPreventDefault=\"mousedown\"\n    ></prizm-calendar-month>\n  </ng-template>\n</prizm-dropdown-host>\n","import { Directive, Inject } from '@angular/core';\nimport { PrizmTextfieldHost } from '../types/textfield-host';\nimport { AbstractPrizmControl } from './control';\n\n@Directive()\nexport abstract class AbstractPrizmTextfieldHost<T extends AbstractPrizmControl<any>>\n  implements PrizmTextfieldHost\n{\n  constructor(@Inject(AbstractPrizmControl) protected readonly host: T) {}\n\n  get readOnly(): boolean {\n    return this.host.readOnly;\n  }\n\n  get disabled(): boolean {\n    return this.host.computedDisabled;\n  }\n\n  get invalid(): boolean {\n    return this.host.computedInvalid;\n  }\n\n  get focusable(): boolean {\n    return this.host.computedFocusable;\n  }\n\n  get value(): string {\n    return this.host.value?.toString() || ``;\n  }\n\n  public abstract onValueChange(value: string): void;\n\n  public process(_input: HTMLInputElement): void {\n    console.log('prizm process', { _input });\n  }\n}\n","import { Directive, DoCheck, Inject, Self } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { PrizmInputMonthComponent } from './input-month.component';\nimport { AbstractPrizmTextfieldHost } from '../../../abstract/abstract-textfield-host';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { prizmAsTextfieldHost } from '../../../tokens/textfield-host.tstextfield-host';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { AbstractPrizmControl } from '../../../abstract/control';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `prizm-input-month`,\n  providers: [prizmAsTextfieldHost(PrizmInputMonthDirective), PrizmDestroyService],\n})\nexport class PrizmInputMonthDirective\n  extends AbstractPrizmTextfieldHost<PrizmInputMonthComponent>\n  implements DoCheck\n{\n  private readonly value$ = new Subject<PrizmMonth | null>();\n\n  private localizedValue = ``;\n\n  constructor(\n    @Inject(AbstractPrizmControl) host: PrizmInputMonthComponent,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Self() @Inject(PrizmDestroyService) destroy$: Observable<unknown>\n  ) {\n    super(host);\n\n    this.value$\n      .pipe(distinctUntilChanged(), switchMap(formatter), takeUntil(destroy$))\n      .subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n  }\n\n  override get readOnly(): boolean {\n    return true;\n  }\n\n  override get value(): string {\n    return this.localizedValue;\n  }\n\n  public ngDoCheck(): void {\n    this.value$.next(this.host.value);\n  }\n\n  public onValueChange(value: string): void {\n    this.host.onValueChange(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmCalendarMonthComponent } from './calendar-month.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCalendarMonthComponent],\n  exports: [PrizmCalendarMonthComponent],\n})\nexport class PrizmCalendarMonthModule {}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmMapperPipe } from './mapper.pipe';\n\n@NgModule({\n  exports: [PrizmMapperPipe],\n  declarations: [PrizmMapperPipe],\n})\nexport class PrizmMapperPipeModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmPreventDefaultModule } from '../../../directives/prevent-default';\nimport { PrizmCalendarMonthModule } from '../../calendar-month/calendar-month.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host';\nimport { PrizmMapperPipeModule } from '../../table/pipes/mapper/mapper.module';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputMonthComponent } from './input-month.component';\nimport { PrizmInputMonthDirective } from './input-month.directive';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmMaskModule } from '../../../modules/mask/mask.module';\nimport { PolymorphModule } from '../../../directives/polymorph';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmCalendarMonthModule,\n    PrizmDropdownHostModule,\n    PrizmPreventDefaultModule,\n    FormsModule,\n    PolymorphModule,\n    PrizmMaskModule,\n    PrizmInputTextModule,\n    PrizmMapperPipeModule,\n  ],\n  declarations: [PrizmInputMonthComponent, PrizmInputMonthDirective],\n  exports: [PrizmInputMonthComponent, PrizmInputMonthDirective],\n})\nexport class PrizmInputMonthModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmYear } from '../../../@core/date-time/year';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMonthPipe } from '../../../pipes/month/month.pipe';\nimport { PRIZM_MONTH_FORMATTER_PROVIDER } from '../../../providers/month-formatter.provider';\nimport { PRIZM_INPUT_DATE_OPTIONS, PrizmInputDateOptions } from '../../../tokens/input-date-options';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmDateButton } from '../../../types/date-button';\nimport { PrizmBooleanHandler, PrizmHandler } from '../../../types/handler';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputControl, PrizmInputNgControl } from '../common';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { PRIZM_MONTHS } from '../../../tokens';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCalendarMonthComponent } from '../../calendar-month';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport {\n  PolymorphOutletDirective,\n  PrizmLifecycleModule,\n  PrizmPreventDefaultModule,\n} from '../../../directives';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmMapperPipeModule } from '../../table/pipes/mapper/mapper.module';\n\n@Component({\n  selector: `prizm-input-layout-month`,\n  templateUrl: `./input-layout-month.component.html`,\n  styleUrls: [`./input-layout-month.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_MONTHS, 'months'),\n    PRIZM_MONTH_FORMATTER_PROVIDER,\n    PrizmMonthPipe,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutMonthComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutMonthComponent },\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmCalendarMonthComponent,\n    PrizmDropdownHostComponent,\n    PrizmPreventDefaultModule,\n    FormsModule,\n    PrizmLifecycleModule,\n    PolymorphOutletDirective,\n    PrizmMaskModule,\n    PrizmInputTextModule,\n    PrizmMapperPipeModule,\n  ],\n})\nexport class PrizmInputLayoutMonthComponent extends PrizmInputNgControl<PrizmMonth | null> {\n  readonly hasClearButton = true;\n  readonly nativeElementType = 'input-month';\n  override readonly testId_ = 'ui_input_month';\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public min: PrizmMonth = this.options.min;\n\n  @Input()\n  @prizmDefaultProp()\n  public extraButtonInjector: Injector = this.injector;\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  public max: PrizmMonth = this.options.max;\n\n  @Input()\n  @prizmDefaultProp()\n  public disabledItemHandler: PrizmBooleanHandler<PrizmMonth> = PRIZM_ALWAYS_FALSE_HANDLER;\n  public open = false;\n\n  public activeYear: PrizmYear = this.value || PrizmDay.currentLocal();\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  get interactive() {\n    return !this.disabled;\n  }\n\n  @HostListener(`click`)\n  public onClick(): void {\n    this.open = !this.open;\n  }\n  constructor(\n    @Inject(PRIZM_MONTH_FORMATTER)\n    readonly formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Inject(PRIZM_INPUT_DATE_OPTIONS)\n    private readonly options: PrizmInputDateOptions,\n    @Inject(Injector) injector: Injector\n  ) {\n    super(injector);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  get calendarIcon(): PrizmInputDateOptions['icon'] {\n    return this.options.icon;\n  }\n\n  public onValueChange(value: string): void {\n    if (value) {\n      return;\n    }\n\n    this.updateValue(null);\n    this.onOpenChange(true);\n  }\n\n  public onMonthClick(month: PrizmMonth): void {\n    this.updateValue(month);\n    this.close();\n  }\n\n  public onOpenChange(open: boolean): void {\n    if (open && this.value) {\n      this.activeYear = this.value;\n    }\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private close(): void {\n    this.open = false;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"interactive\"\n  [content]=\"dropdown\"\n  [isOpen]=\"open && interactive\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <input\n    class=\"input-search\"\n    #focusableElementRef\n    [placeholder]=\"placeholder\"\n    [readonly]=\"true\"\n    [disabled]=\"disabled\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"(value | prizmMapper : formatter | async) || ''\"\n    (ngModelChange)=\"onValueChange($event || '')\"\n    prizmInput\n  />\n  <ng-template #dropdown>\n    <prizm-calendar-month\n      [(year)]=\"activeYear\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [value]=\"value\"\n      (prizmAfterViewInit)=\"markAsTouched()\"\n      (monthClick)=\"onMonthClick($event)\"\n      prizmPreventDefault=\"mousedown\"\n    ></prizm-calendar-month>\n  </ng-template>\n</prizm-dropdown-host>\n<ng-container *prizmInputLayoutRight>\n  <ng-container *polymorphOutlet=\"calendarIcon as data\">\n    <button\n      [prizmInputIconButton]=\"$any(data)\"\n      [interactive]=\"true\"\n      [disabled]=\"disabled\"\n      (click)=\"onOpenChange(!open)\"\n    ></button>\n  </ng-container>\n\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n","import { Directive, DoCheck, Inject, Self } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { PrizmInputMonthComponent } from './input-month.component';\nimport { AbstractPrizmTextfieldHost } from '../../../abstract/abstract-textfield-host';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { prizmAsTextfieldHost } from '../../../tokens/textfield-host.tstextfield-host';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { AbstractPrizmControl } from '../../../abstract/control';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `prizm-input-month`,\n  standalone: true,\n  providers: [prizmAsTextfieldHost(PrizmInputLayoutMonthDirective), PrizmDestroyService],\n})\nexport class PrizmInputLayoutMonthDirective\n  extends AbstractPrizmTextfieldHost<PrizmInputMonthComponent>\n  implements DoCheck\n{\n  private readonly value$ = new Subject<PrizmMonth | null>();\n\n  private localizedValue = ``;\n\n  constructor(\n    @Inject(AbstractPrizmControl) host: PrizmInputMonthComponent,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Self() @Inject(PrizmDestroyService) destroy$: Observable<unknown>\n  ) {\n    super(host);\n\n    this.value$\n      .pipe(distinctUntilChanged(), switchMap(formatter), takeUntil(destroy$))\n      .subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n  }\n\n  override get readOnly(): boolean {\n    return true;\n  }\n\n  override get value(): string {\n    return this.localizedValue;\n  }\n\n  public ngDoCheck(): void {\n    this.value$.next(this.host.value);\n  }\n\n  public onValueChange(value: string): void {\n    this.host.onValueChange(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutMonthComponent } from './input-layout-month.component';\nimport { PrizmInputLayoutMonthDirective } from './input-layout-month.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputTextModule, PrizmInputLayoutMonthComponent, PrizmInputLayoutMonthDirective],\n  exports: [PrizmInputLayoutMonthComponent, PrizmInputTextModule, PrizmInputLayoutMonthDirective],\n})\nexport class PrizmInputLayoutMonthModule {}\n","import { forwardRef, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PrizmInputDateTimeRangeComponent } from './input-date-range-time.component';\nimport { PrizmDayRange } from '../../../@core/date-time';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens/focusable-item-accessor';\nimport { PRIZM_CALENDAR_DATA_STREAM } from '../../../tokens/calendar-data-stream';\nimport { PRIZM_DATE_TIME_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER } from '../../../providers/specific-dropdown-controllers';\nimport { prizmReplayControlValueChangesFactory } from '../../../util/common/replay-control-value-changes-factory';\n\nexport const RANGE_TIME_STREAM_FACTORY = <T extends PrizmDayRange>(\n  control: NgControl | null,\n  valueTransformer: PrizmControlValueTransformer<T>\n): Observable<T | null> | null => prizmReplayControlValueChangesFactory<T>(control, valueTransformer);\n\nexport const PRIZM_INPUT_DATE_TIME_RANGE_PROVIDERS = [\n  {\n    provide: AbstractPrizmControl,\n    useExisting: forwardRef(() => PrizmInputDateTimeRangeComponent),\n  },\n  {\n    provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => PrizmInputDateTimeRangeComponent),\n  },\n  {\n    provide: PRIZM_CALENDAR_DATA_STREAM,\n    deps: [\n      [new Optional(), new Self(), NgControl],\n      [new Optional(), forwardRef(() => PRIZM_DATE_TIME_RANGE_VALUE_TRANSFORMER)],\n    ],\n    useFactory: RANGE_TIME_STREAM_FACTORY,\n  },\n  PRIZM_LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n];\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { PRIZM_INPUT_DATE_TIME_RANGE_PROVIDERS } from './input-date-range-time.providers';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PRIZM_FIRST_DAY_WITH_TIME, PRIZM_LAST_DAY_WITH_TIME } from '../../../@core/date-time/days.const';\nimport { PrizmDayLike } from '../../../types/day-like';\nimport { PrizmDateTime } from '../../../@core/date-time/date-time';\nimport { prizmIsNativeFocusedIn } from '../../../util';\nimport { PrizmDateTimeRange } from '../../../@core/date-time/day-time-range';\nimport { PrizmDayRangePeriod } from '../../../@core/classes/day-range-period';\nimport { UntypedFormControl, NgControl } from '@angular/forms';\nimport {\n  PRIZM_DATE_RANGE_VALUE_TRANSFORMER,\n  PRIZM_DATE_TEXTS,\n  PRIZM_IS_MOBILE,\n  PRIZM_MOBILE_CALENDAR,\n  PRIZM_TIME_TEXTS,\n} from '../../../tokens';\nimport { PrizmDialogService } from '../../dialogs/dialog';\nimport { PRIZM_DATE_FORMAT, PRIZM_DATE_SEPARATOR, PrizmDayRange, PrizmTime } from '../../../@core';\nimport { PrizmControlValueTransformer, PrizmDateMode, PrizmTimeMode } from '../../../types';\nimport { Observable } from 'rxjs';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService, PrizmFormControlHelpers } from '@prizm-ui/helpers';\nimport { prizmI18nInitWithKeys } from '../../../services';\n\n@Component({\n  selector: `prizm-input-date-time-range`,\n  templateUrl: `./input-date-range-time.component.html`,\n  styleUrls: [`./input-date-range-time.component.less`],\n  providers: [\n    ...prizmI18nInitWithKeys({\n      time: PRIZM_TIME_TEXTS,\n      dateTexts: PRIZM_DATE_TEXTS,\n    }),\n    ...PRIZM_INPUT_DATE_TIME_RANGE_PROVIDERS,\n    PrizmDestroyService,\n  ],\n})\nexport class PrizmInputDateTimeRangeComponent\n  extends AbstractPrizmNullableControl<PrizmDateTimeRange>\n  implements PrizmWithOptionalMinMax<PrizmDateTime>, PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  label = 'Выберите дату и время';\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  timeItems: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmDayRangePeriod[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  timeMode: PrizmTimeMode = 'HH:MM';\n\n  @Input()\n  @prizmDefaultProp()\n  min = PRIZM_FIRST_DAY_WITH_TIME;\n\n  @Input()\n  @prizmDefaultProp()\n  max = PRIZM_LAST_DAY_WITH_TIME;\n\n  @Input()\n  @prizmDefaultProp()\n  minLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  maxLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  timeStrict = false;\n\n  override readonly testId_ = 'ui_input_date_time_range';\n\n  public dateControl = new UntypedFormControl();\n  public timeControlFrom = new UntypedFormControl();\n  public timeControlTo = new UntypedFormControl();\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  public get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    private readonly destroyed$: PrizmDestroyService,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(Injector) private readonly injector: Injector,\n    @Inject(PRIZM_IS_MOBILE) private readonly isMobile: boolean,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_MOBILE_CALENDAR)\n    private readonly mobileCalendar: Type<any> | null,\n    @Inject(PRIZM_DATE_FORMAT) readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_RANGE_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<PrizmDateTimeRange | null> | null\n  ) {\n    super(control, changeDetectorRef, valueTransformer);\n  }\n\n  protected override valueChanged(\n    previousValue: PrizmDateTimeRange | null,\n    currentValue: PrizmDateTimeRange | null\n  ): boolean {\n    return previousValue?.toString() !== currentValue?.toString();\n  }\n\n  public override ngOnInit(): void {\n    super.ngOnInit();\n    if (!this.control) return;\n    const control = this.control as UntypedFormControl;\n    this.syncValuesBetweenControls(control);\n    this.syncStateBetweenControls(control);\n    this.syncAllValidators(control);\n  }\n\n  private syncStateBetweenControls(origin: UntypedFormControl): void {\n    PrizmFormControlHelpers.syncStates(\n      origin,\n      false,\n      this.timeControlFrom,\n      this.timeControlTo,\n      this.dateControl\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe();\n  }\n\n  private syncAllValidators(origin: UntypedFormControl): void {\n    PrizmFormControlHelpers.syncAllValidators(\n      origin,\n      false,\n      this.timeControlFrom,\n      this.timeControlTo,\n      this.dateControl\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe();\n  }\n\n  private syncValuesBetweenControls(origin: UntypedFormControl): void {\n    PrizmFormControlHelpers.syncValues<PrizmDateTimeRange, PrizmDayRange>(\n      origin,\n      (value: PrizmDateTimeRange) => value?.dayRange,\n      ($event: PrizmDayRange) => {\n        const value = PrizmFormControlHelpers.getValue<PrizmDateTimeRange>(origin);\n        value?.updateDayRange($event);\n        return this.value?.copy() as any;\n      },\n      this.dateControl\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe();\n\n    PrizmFormControlHelpers.syncValues<PrizmDateTimeRange, PrizmTime>(\n      origin,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      (value: PrizmDateTimeRange) => value?.timeRange?.from,\n      ($event: PrizmTime) => {\n        const value = PrizmFormControlHelpers.getValue<PrizmDateTimeRange>(origin);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        value.timeRange.from = $event;\n        return this.value?.copy();\n      },\n      this.timeControlFrom\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe();\n\n    PrizmFormControlHelpers.syncValues<PrizmDateTimeRange, PrizmTime>(\n      origin,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      (value: PrizmDateTimeRange) => value?.timeRange?.to,\n      ($event: PrizmTime) => {\n        const value = PrizmFormControlHelpers.getValue<PrizmDateTimeRange>(origin);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        value.timeRange.to = $event;\n        return this.value?.copy();\n      },\n      this.timeControlTo\n    )\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe();\n  }\n\n  private getDefaultValue(): PrizmDateTimeRange {\n    return new PrizmDateTimeRange(\n      new PrizmDayRange(\n        PrizmDay.fromLocalNativeDate(new Date()),\n        PrizmDay.fromLocalNativeDate(new Date()).append({ month: 2 })\n      )\n    );\n  }\n}\n","<prizm-input-date-range\n  #focusableElementRef\n  [disabledItemHandler]=\"disabledItemHandler\"\n  [label]=\"label\"\n  [markerHandler]=\"markerHandler\"\n  [defaultViewedMonth]=\"defaultViewedMonth\"\n  [items]=\"items\"\n  [size]=\"size\"\n  [forceClear]=\"forceClear\"\n  [outer]=\"outer\"\n  [formControl]=\"dateControl\"\n  [placeholder]=\"placeholder\"\n  [min]=\"$any(min?.day)\"\n  [max]=\"$any(max?.day)\"\n>\n  <ng-template #footerTo let-zone=\"zone\">\n    <prizm-input-time\n      [prizmEventZoneParent]=\"zone\"\n      [size]=\"size\"\n      [style.--prizm-dropdown-host-width]=\"'100%'\"\n      [formControl]=\"timeControlFrom\"\n      [strict]=\"timeStrict\"\n      [items]=\"timeItems\"\n      [mode]=\"timeMode\"\n    >\n    </prizm-input-time>\n  </ng-template>\n  <ng-template #footerFrom let-zone=\"zone\">\n    <prizm-input-time\n      [prizmEventZoneParent]=\"zone\"\n      [style.--prizm-dropdown-host-width]=\"'100%'\"\n      [formControl]=\"timeControlTo\"\n      [items]=\"timeItems\"\n      [mode]=\"timeMode\"\n    >\n    </prizm-input-time>\n  </ng-template>\n</prizm-input-date-range>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmInputDateTimeRangeComponent } from './input-date-range-time.component';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmCalendarRangeModule } from '../../calendar-range/calendar-range.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmInputTimeModule } from '../input-time';\nimport { PrizmInputDateRangeModule } from '../input-date-range';\nimport { PrizmDropdownZoneModule } from '../../../directives';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmMaskModule,\n    PrizmLetModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmIconModule,\n    PrizmInputDateRangeModule,\n    PrizmDropdownHostModule,\n    PrizmCalendarRangeModule,\n    PrizmValueAccessorModule,\n    FormsModule,\n    PrizmInputTimeModule,\n    PrizmDropdownZoneModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [PrizmInputDateTimeRangeComponent],\n  exports: [PrizmInputDateTimeRangeComponent],\n})\nexport class PrizmInputDateTimeRangeModule {}\n","import { Provider } from '@angular/core';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\n\ntype From = PrizmDayRange | null;\ntype To = [Date | null, Date | null] | null;\n\n// TODO add support transformers later\nexport class PrizmInputDateTimeRangeNativeTransformer implements PrizmControlValueTransformer<From, To> {\n  public fromControlValue(controlValue: To): From {\n    return controlValue && PrizmDayRange.fromLocalNativeDate(controlValue[0] as any, controlValue[1] as any);\n  }\n\n  public toControlValue(componentValue: From): To | null {\n    return componentValue?.toLocalNativeDate() || null;\n  }\n}\n\nexport function prizmGetInputDateTimeRangeNativeTransformer(): Provider {\n  return {\n    provide: PRIZM_DATE_RANGE_VALUE_TRANSFORMER,\n    useClass: PrizmInputDateTimeRangeNativeTransformer,\n  };\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { PrizmDayRange } from '../../../@core/date-time/day-range';\nimport { PrizmDay } from '../../../@core/date-time/day';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmBooleanHandler } from '../../../types/handler';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PrizmMarkerHandler } from '../../../types/marker-handler';\nimport { PRIZM_DEFAULT_MARKER_HANDLER } from '../../../constants/default-marker-handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmDayRangePeriod } from '../../../@core/classes/day-range-period';\nimport { PRIZM_FIRST_DAY, PRIZM_LAST_DAY } from '../../../@core/date-time/days.const';\nimport { PrizmDayLike } from '../../../types/day-like';\nimport { PRIZM_DATE_SEPARATOR } from '../../../@core/date-time/date-separator';\nimport { PrizmDialogService } from '../../dialogs/dialog/dialog.service';\nimport { PRIZM_DATE_FORMAT } from '../../../@core/date-time/date-format';\nimport { PrizmDateMode } from '../../../types/date-mode';\nimport { PRIZM_DATE_TEXTS, PRIZM_TIME_TEXTS } from '../../../tokens/i18n';\nimport { PRIZM_DATE_RANGE_VALUE_TRANSFORMER } from '../../../tokens/date-inputs-value-transformers';\nimport { PrizmControlValueTransformer } from '../../../types/control-value-transformer';\nimport { prizmNullableSame } from '../../../util/common/nullable-same';\nimport { filterTruthy, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmInputNgControl } from '../common/base/input-ng-control.class';\nimport { debounceTime, delay, distinctUntilChanged, map, share, takeUntil, tap } from 'rxjs/operators';\nimport {\n  prizmCreateDateNgxMask,\n  PrizmDateTime,\n  PrizmDateTimeRange,\n  PrizmTime,\n  PrizmTimeRange,\n} from '../../../@core';\nimport { PrizmInputZoneDirective, PrizmInputZoneModule } from '../../../directives/input-zone';\nimport { PrizmDateButton, PrizmTimeMode } from '../../../types';\nimport { prizmCreateTimeNgxMask } from '../../../@core/mask/create-time-mask';\nimport { PRIZM_DATE_RIGHT_BUTTONS } from '../../../tokens';\nimport { PrizmDateTimeMinMax } from './model';\nimport { prizmI18nInitWithKeys } from '../../../services';\nimport { CommonModule } from '@angular/common';\nimport { PrizmMaskModule } from '../../../modules';\nimport {\n  PolymorphOutletDirective,\n  PrizmLifecycleModule,\n  PrizmValueAccessorModule,\n} from '../../../directives';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { PrizmInputLayoutTimeModule } from '../input-time';\nimport { PrizmInputTextModule } from '../input-text';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmCalendarRangeComponent } from '../../calendar-range';\n\n@Component({\n  selector: `prizm-input-layout-date-time-range`,\n  templateUrl: `./input-layout-date-time-range.component.html`,\n  styleUrls: [\n    `./input-layout-date-time-range.component.less`,\n    './../input-date/input-layout-date-shared.component.less',\n  ],\n  providers: [\n    ...prizmI18nInitWithKeys({\n      time: PRIZM_TIME_TEXTS,\n      dateTexts: PRIZM_DATE_TEXTS,\n    }),\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutDateTimeRangeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutDateTimeRangeComponent },\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmInputLayoutDateTimeRangeComponent,\n    PrizmMaskModule,\n    PrizmInputZoneModule,\n    PrizmLifecycleModule,\n    PrizmLetDirective,\n    PrizmDataListComponent,\n    PrizmInputLayoutTimeModule,\n    PolymorphOutletDirective,\n    PrizmInputTextModule,\n    PrizmIconComponent,\n    PrizmDropdownHostComponent,\n    PrizmCalendarRangeComponent,\n    PrizmValueAccessorModule,\n    FormsModule,\n  ],\n})\nexport class PrizmInputLayoutDateTimeRangeComponent\n  extends PrizmInputNgControl<PrizmDateTimeRange | null>\n  implements OnInit, AfterViewInit\n{\n  hasClearButton = true;\n  nativeElementType = 'input-layout-date-range';\n\n  @ViewChild('focusableElementRef', { read: PrizmInputZoneDirective })\n  public override readonly focusableElement?: PrizmInputZoneDirective;\n\n  @ContentChild('footerFrom', { read: TemplateRef })\n  public readonly footerFromTemplate?: TemplateRef<HTMLInputElement>;\n\n  @ContentChild('footerTo', { read: TemplateRef })\n  public readonly footerToTemplate?: TemplateRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandler<PrizmDay> = PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  markerHandler: PrizmMarkerHandler = PRIZM_DEFAULT_MARKER_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  defaultViewedMonth = PrizmMonth.currentLocal();\n\n  @Input()\n  @prizmDefaultProp()\n  items: readonly PrizmDayRangePeriod[] = [];\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmDateTimeMinMax = PRIZM_FIRST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmDateTimeMinMax = PRIZM_LAST_DAY;\n\n  @Input()\n  @prizmDefaultProp()\n  timeStrict = false;\n\n  @Input()\n  @prizmDefaultProp()\n  minLength: PrizmDayLike | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  maxLength: PrizmDayLike | null = null;\n\n  open = false;\n  // TODO: finish\n  // openTimeTemplate = false;\n\n  @Input()\n  @prizmDefaultProp()\n  timeMode: PrizmTimeMode = 'HH:MM';\n\n  @Input()\n  @prizmDefaultProp()\n  timeItems: readonly PrizmTime[] = new Array(24).fill(null).map((_, i) => new PrizmTime(i, 0, 0, 0));\n\n  @Input()\n  @prizmDefaultProp()\n  extraButtonInjector: Injector = this.injector;\n\n  override readonly testId_ = 'ui_input_date_time_range';\n\n  testRange = new PrizmDayRange(new PrizmDay(2010, 1, 1), new PrizmDay(2010, 2, 2));\n\n  get interactive() {\n    return !this.disabled;\n  }\n\n  public rightButtons$!: BehaviorSubject<PrizmDateButton[]>;\n\n  get calendarMinDay(): PrizmDay {\n    return this.getDayFromMinMax(this.min);\n  }\n\n  get calendarMaxDay(): PrizmDay {\n    return this.getDayFromMinMax(this.max);\n  }\n\n  readonly nativeValueTimeFrom$$ = new BehaviorSubject<string>('');\n  readonly nativeValueTimeTo$$ = new BehaviorSubject<string>('');\n\n  readonly nativeValueFrom$$ = new BehaviorSubject<string>('');\n  readonly nativeValueTo$$ = new BehaviorSubject<string>('');\n\n  readonly nativeValue$$ = combineLatest([\n    this.nativeValueFrom$$.pipe(distinctUntilChanged()),\n    this.nativeValueTimeFrom$$.pipe(distinctUntilChanged()),\n    this.nativeValueTo$$.pipe(distinctUntilChanged()),\n    this.nativeValueTimeTo$$.pipe(distinctUntilChanged()),\n  ]).pipe(\n    debounceTime(0),\n    map(([from, fromTime, to, toTime]) => {\n      return {\n        timeRange: [fromTime, toTime],\n        dayRange: [from, to],\n      };\n    })\n  );\n\n  readonly hasNativeValue$ = this.nativeValue$$.pipe(\n    map(value => {\n      return hasValueInArray(value?.timeRange) || hasValueInArray(value?.dayRange);\n    }),\n    share()\n  );\n\n  readonly empty$ = combineLatest([this.value$, this.nativeValue$$]).pipe(\n    map(([value, nativeValue]) => {\n      return (\n        emptyValue(value?.dayRange) &&\n        emptyValue(nativeValue.dayRange) &&\n        emptyValue(value?.timeRange) &&\n        emptyValue(nativeValue.timeRange)\n      );\n    })\n  ) as Observable<boolean>;\n\n  override get empty(): Observable<boolean> {\n    return this.empty$;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(Injector) injector: Injector,\n    @Inject(PrizmDialogService) private readonly dialogService: PrizmDialogService,\n    @Optional()\n    @Inject(PRIZM_DATE_FORMAT)\n    readonly dateFormat: PrizmDateMode,\n    @Inject(PRIZM_DATE_SEPARATOR) readonly dateSeparator: string,\n    @Inject(PRIZM_DATE_TEXTS)\n    readonly dateTexts$: Observable<Record<PrizmDateMode, string>>,\n    @Optional()\n    @Inject(PRIZM_DATE_RANGE_VALUE_TRANSFORMER)\n    override readonly valueTransformer: PrizmControlValueTransformer<PrizmDateTimeRange | null> | null\n  ) {\n    super(injector);\n  }\n\n  public get focused(): Observable<boolean> {\n    return this.focusableElement?.focused$ ?? of(false);\n  }\n\n  public get canOpen(): boolean {\n    return this.interactive;\n  }\n\n  public closeOnOutsideClick = true;\n\n  get computedTimeMask(): string {\n    return prizmCreateTimeNgxMask(this.timeMode);\n  }\n\n  get computedDateMask(): string {\n    return prizmCreateDateNgxMask(this.dateFormat, this.dateSeparator);\n  }\n\n  get fromValue(): string {\n    const value = this.value?.dayRange?.from?.toString() ?? '';\n    if (!value) {\n      return this.nativeValueFrom$$.value || '';\n    }\n    return value;\n  }\n  get fromTimeValue(): string {\n    const val = this.timeToString(this.value?.timeRange?.from) ?? '';\n    if (!val) {\n      return this.nativeValueTimeFrom$$.value || '';\n    }\n    return val;\n  }\n  get toValue(): string {\n    const value = this.value?.dayRange?.to?.toString() ?? '';\n    if (!value) {\n      return this.nativeValueTo$$.value || '';\n    }\n    return value;\n  }\n  get toTimeValue(): string {\n    const val = this.timeToString(this.value?.timeRange?.to) ?? '';\n    if (!val) {\n      return this.nativeValueTimeTo$$.value || '';\n    }\n    return val;\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private completeDateIfAreNotPending() {\n    const fromValue = this.nativeValueFrom$$.value;\n    const toValue = this.nativeValueTo$$.value;\n    const fromTimeValue = this.nativeValueTimeFrom$$.value;\n    const toTimeValue = this.nativeValueTimeTo$$.value;\n\n    // stop if empty\n    if (!fromValue && !toValue && !fromTimeValue && !toTimeValue) return;\n\n    // stop if started value\n    if (fromValue && fromValue.length !== this.computedDateMask.length) return;\n    if (toValue && toValue.length !== this.computedDateMask.length) return;\n    if (fromTimeValue && fromTimeValue.length !== this.computedTimeMask.length) return;\n    if (toTimeValue && toTimeValue.length !== this.computedTimeMask.length) return;\n\n    const parsedFrom = fromValue\n      ? PrizmDay.normalizeParse(fromValue, this.dateFormat)\n      : new PrizmDay(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n\n    const parsedTo = toValue ? PrizmDay.normalizeParse(toValue, this.dateFormat) : parsedFrom.append({});\n\n    const parsedTimeTo = PrizmTime.correctTime(\n      toTimeValue ? PrizmTime.fromString(toTimeValue) : new PrizmTime(23, 59)\n    );\n\n    const parsedTimeFrom = PrizmTime.correctTime(\n      fromTimeValue ? PrizmTime.fromString(fromTimeValue) : new PrizmTime(0, 0)\n    );\n\n    this.nativeValueTo$$.next(parsedTo.toString(this.dateFormat));\n    this.nativeValueFrom$$.next(parsedFrom.toString(this.dateFormat));\n    this.nativeValueTimeTo$$.next(parsedTimeTo.toString(this.timeMode));\n    this.nativeValueTimeFrom$$.next(parsedTimeFrom.toString(this.timeMode));\n  }\n\n  public ngAfterViewInit(): void {\n    this.focusableElement?.blur$\n      .pipe(\n        debounceTime(0),\n        filterTruthy(),\n        tap(() => this.completeDateIfAreNotPending()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public override ngOnInit() {\n    super.ngOnInit();\n    this.rightButtons$ = this.extraButtonInjector.get(PRIZM_DATE_RIGHT_BUTTONS);\n\n    this.nativeValue$$\n      .pipe(\n        tap(({ dayRange, timeRange }) => {\n          const fromValue = dayRange[0];\n          const toValue = dayRange[1];\n          const fromTimeValue = timeRange[0];\n          const toTimeValue = timeRange[1];\n\n          if (!fromValue || fromValue.length !== this.computedDateMask.length) return;\n          if (!toValue || toValue.length !== this.computedDateMask.length) return;\n          if (!fromTimeValue || fromTimeValue.length !== this.computedTimeMask.length) return;\n          if (!toTimeValue || toTimeValue.length !== this.computedTimeMask.length) return;\n\n          if (\n            fromValue === this.value?.dayRange?.from.toString() &&\n            fromTimeValue === this.value?.timeRange?.from.toString(this.timeMode) &&\n            toValue === this.value?.dayRange?.to.toString() &&\n            toTimeValue === this.value?.timeRange?.to.toString(this.timeMode)\n          ) {\n            return;\n          }\n\n          this.updateWithCorrectDateAndTime(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            fromValue && fromValue.length === this.computedDateMask.length && fromValue,\n            toValue && toValue.length === this.computedDateMask.length && toValue,\n            fromTimeValue && fromTimeValue.length === this.computedTimeMask.length && fromTimeValue,\n            toTimeValue && toTimeValue.length === this.computedTimeMask.length && toTimeValue\n          );\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private timeToString(value: PrizmTime | unknown): string | null {\n    return value instanceof PrizmTime ? value.toString(this.timeMode) : null;\n  }\n\n  public onDateValueChange(value: string, isFormValue: boolean): void {\n    if (isFormValue && value === this.fromValue) return;\n    if (!isFormValue && value === this.toValue) return;\n\n    if (isFormValue) this.nativeValueFrom$$.next(value);\n    else this.nativeValueTo$$.next(value);\n\n    if (value == null) {\n      this.onOpenChange(true);\n    }\n  }\n\n  public onTimeValueChange(value: string, isFormValue: boolean): void {\n    if (isFormValue && value === this.fromTimeValue) return;\n    if (!isFormValue && value === this.toTimeValue) return;\n    if (isFormValue) this.nativeValueTimeFrom$$.next(value);\n    else this.nativeValueTimeTo$$.next(value);\n\n    if (value == null) {\n      this.onOpenChange(true);\n    }\n  }\n\n  public onRangeChange(range: PrizmDayRange | null): void {\n    this.focusInput();\n\n    if (!range) {\n      this.nativeValueTo$$.next('');\n      this.nativeValueFrom$$.next('');\n    }\n\n    if (!prizmNullableSame<PrizmDayRange>(this.value?.dayRange as any, range, (a, b) => a?.daySame(b))) {\n      const newValue = new PrizmDateTimeRange(range as any, (this.value?.timeRange ?? null) as any);\n      this.updateValue(newValue);\n      this.open = false;\n    }\n    this.nativeValueTo$$.next(range?.to?.toString() ?? '');\n    this.nativeValueFrom$$.next(range?.from?.toString() ?? '');\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private updateWithCorrectDateAndTime(from: string, to: string, fromTime: string, toTime: string): void {\n    let parsedFrom = from ? PrizmDay.normalizeParse(from, this.dateFormat) : this.value?.dayRange?.from;\n    let parsedTo = to ? PrizmDay.normalizeParse(to, this.dateFormat) : this.value?.dayRange?.to;\n\n    if (parsedFrom) parsedFrom = this.dayLimit(parsedFrom);\n    if (parsedTo) parsedTo = this.dayLimit(parsedTo);\n\n    let parsedTimeFrom = fromTime && PrizmTime.correctTime(PrizmTime.fromString(fromTime));\n    let parsedTimeTo = toTime && PrizmTime.correctTime(PrizmTime.fromString(toTime));\n\n    if (parsedTimeFrom) parsedTimeFrom = this.timeLimit([parsedFrom as any, parsedTimeFrom]) as any;\n    if (parsedTimeTo) parsedTimeTo = this.timeLimit([parsedTo as any, parsedTimeTo]) as any;\n\n    if (parsedTimeTo || parsedTimeFrom) {\n      if (!parsedFrom) {\n        parsedFrom = PrizmDay.fromLocalNativeDate(new Date());\n      }\n\n      if (!parsedTo) {\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        parsedTo = PrizmDay.fromLocalNativeDate(tomorrow);\n      }\n    }\n\n    this.updateValue(\n      new PrizmDateTimeRange(\n        (parsedFrom && parsedTo ? new PrizmDayRange(parsedFrom, parsedTo) : null) as any,\n        (parsedTimeFrom && parsedTimeTo ? new PrizmTimeRange(parsedTimeFrom, parsedTimeTo) : null) as any\n      )\n    );\n  }\n\n  private timeLimit(value: [PrizmDay, PrizmTime] | null): PrizmTime | null {\n    if (!value) return null;\n    let [, parsedTime] = value;\n    if (parsedTime)\n      parsedTime = parsedTime.timeLimit(this.getTimeFromMinMax(this.min), this.getTimeFromMinMax(this.max));\n\n    return parsedTime;\n  }\n\n  private getDayFromMinMax(value: PrizmDateTimeMinMax): PrizmDay {\n    return Array.isArray(value) ? value[0] : value instanceof PrizmDateTime ? value.day : value;\n  }\n\n  private getTimeFromMinMax(value: PrizmDateTimeMinMax): PrizmTime | null {\n    return Array.isArray(value) ? value[1] : value instanceof PrizmDateTime ? value.time : null;\n  }\n\n  private dayLimit(value: PrizmDay): PrizmDay {\n    return value.dayLimit(this.getDayFromMinMax(this.min), this.getDayFromMinMax(this.max));\n  }\n\n  public override writeValue(value: PrizmDateTimeRange | null): void {\n    super.writeValue(value as any);\n    this.nativeValueTimeFrom$$.next(value?.timeRange?.from?.toString(this.timeMode) ?? '');\n    this.nativeValueTimeTo$$.next(value?.timeRange?.to?.toString(this.timeMode) ?? '');\n    this.nativeValueFrom$$.next(value?.dayRange?.from?.toString() ?? '');\n    this.nativeValueTo$$.next(value?.dayRange?.to?.toString() ?? '');\n  }\n\n  private toggle(): void {\n    this.open = !this.open;\n  }\n\n  private focusInput(): void {\n    this.focusableElement?.focus(0);\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    super.clear(ev);\n    this.nativeValueTo$$.next('');\n    this.nativeValueFrom$$.next('');\n    this.nativeValueTimeFrom$$.next('');\n    this.nativeValueTimeTo$$.next('');\n    this.layoutComponent?.cdr.markForCheck();\n  }\n\n  public updateTimeTo(value: PrizmTime): void {\n    // TODO: #mz add min max\n    if (\n      value &&\n      this.value?.timeRange?.to instanceof PrizmTime &&\n      this.value?.timeRange?.to?.isSameTime(value)\n    )\n      return;\n    const range = PrizmDateTimeRange.safeUpdateTimeTo(this.value, value);\n    this.updateValue(range?.copy());\n  }\n\n  public updateTimeFrom(value: PrizmTime): void {\n    // TODO: #mz add min max\n    if (\n      value &&\n      this.value?.timeRange?.from instanceof PrizmTime &&\n      this.value?.timeRange?.from?.isSameTime(value)\n    )\n      return;\n    // const range = PrizmDateTimeRange.safeUpdateTimeFrom(this.value, value);\n    // this.updateValue(range?.copy());\n    this.nativeValueTimeFrom$$.next(value.toString(this.timeMode));\n  }\n\n  public referFocusToMain(referFocus = true) {\n    if (!referFocus) return;\n    // TODO create operator and rxjs functin to run sequence in event loop\n    of(null)\n      .pipe(\n        delay(0),\n        tap(() => {\n          this.focusableElement?.selectionToStart();\n        })\n      )\n      .subscribe();\n  }\n}\n\n// TODO refactotor and move to utils\nfunction hasValueInArray(values: unknown[]) {\n  return !!values.find(i => Boolean(i));\n}\nfunction emptyValue(values: unknown | unknown[]): boolean {\n  return !values || (Array.isArray(values) && !hasValueInArray(values));\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"canOpen\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  [closeOnOutsideClick]=\"closeOnOutsideClick\"\n  [prizmDropdownHostWidth]=\"'auto'\"\n  [isOpen]=\"canOpen && !disabled && open\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <div\n    class=\"multiple-input-box\"\n    #focusableElementRef=\"prizmInputZone\"\n    [attr.data-placeholder]=\"placeholder\"\n    prizmInputZone\n  >\n    <input\n      class=\"input-main\"\n      [class.show-placeholder]=\"\n        (empty | async) && (disabled || (focusableElementRef.focused$ | async) !== true)\n      \"\n      [placeholder]=\"placeholder\"\n      [mask]=\"computedDateMask\"\n      [clearIfNotMatch]=\"false\"\n      [showMaskTyped]=\"(focusableElementRef.focused$ | async) || (hasNativeValue$ | async)\"\n      [dropSpecialCharacters]=\"false\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"fromValue\"\n      [size]=\"computedDateMask.length\"\n      [maxLength]=\"computedDateMask.length + 1\"\n      [maxSize]=\"computedDateMask.length\"\n      (click)=\"referFocusToMain(!fromValue)\"\n      (ngModelChange)=\"onDateValueChange($event || '', true)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <input\n      class=\"input-time\"\n      [mask]=\"computedTimeMask\"\n      [dropSpecialCharacters]=\"false\"\n      [clearIfNotMatch]=\"false\"\n      [showMaskTyped]=\"(focusableElementRef.focused$ | async) || (hasNativeValue$ | async)\"\n      [disabled]=\"disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"fromTimeValue\"\n      [size]=\"computedTimeMask.length\"\n      [maxLength]=\"computedTimeMask.length + 1\"\n      [maxSize]=\"computedTimeMask.length\"\n      (ngModelChange)=\"onTimeValueChange($event, true)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <span class=\"delimiter\">-</span>\n    <input\n      class=\"input-time\"\n      [mask]=\"computedDateMask\"\n      [dropSpecialCharacters]=\"false\"\n      [clearIfNotMatch]=\"false\"\n      [showMaskTyped]=\"(focusableElementRef.focused$ | async) || (hasNativeValue$ | async)\"\n      [disabled]=\"!!disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"toValue\"\n      [size]=\"computedDateMask.length\"\n      [maxLength]=\"computedDateMask.length + 1\"\n      [maxSize]=\"computedDateMask.length\"\n      (ngModelChange)=\"onDateValueChange($event || '', false)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n    <input\n      class=\"input-time\"\n      [mask]=\"computedTimeMask\"\n      [dropSpecialCharacters]=\"false\"\n      [clearIfNotMatch]=\"false\"\n      [showMaskTyped]=\"(focusableElementRef.focused$ | async) || (hasNativeValue$ | async)\"\n      [disabled]=\"!!disabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"toTimeValue\"\n      [size]=\"computedTimeMask.length\"\n      [maxLength]=\"computedTimeMask.length + 1\"\n      [maxSize]=\"computedTimeMask.length\"\n      (ngModelChange)=\"onTimeValueChange($event, false)\"\n      style=\"padding: 0\"\n      prizmInput\n      prizmInputInZone\n    />\n  </div>\n\n  <!--  TODO add after create time range component -->\n  <!--  <ng-template #dropdownTimeTemplate>-->\n  <!--    <prizm-data-list-->\n  <!--      class=\"block\"-->\n  <!--      *ngIf=\"timeItems.length\"-->\n  <!--      [style.&#45;&#45;prizm-data-list-border]=\"0\"-->\n  <!--      (prizmAfterViewInit)=\"markAsTouched(); prizmDropdownHostComponent.reCalculatePositions()\"-->\n  <!--      (prizmOnDestroy)=\"openTimeTemplate = false\"-->\n  <!--      prizmLifecycle-->\n  <!--    >-->\n  <!--      <ng-container>-->\n  <!--        <div-->\n  <!--          class=\"time-item\"-->\n  <!--          *ngFor=\"let item of timeItems; let idx = index\"-->\n  <!--          (click)=\"$event.stopPropagation(); onTimeMenuClick(item, $event)\"-->\n  <!--        >-->\n  <!--        <span class=\"text\">-->\n  <!--          {{ item }}-->\n  <!--        </span>-->\n  <!--        </div>-->\n  <!--      </ng-container>-->\n  <!--    </prizm-data-list>-->\n  <!--  </ng-template>-->\n  <!--  -->\n  <ng-template #dropdown>\n    <prizm-calendar-range\n      [style.--prizm-input-layout-width]=\"'100%'\"\n      [style.--prizm-dropdown-host-width]=\"'100%'\"\n      [defaultViewedMonth]=\"defaultViewedMonth\"\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [items]=\"items\"\n      [min]=\"calendarMinDay\"\n      [max]=\"calendarMaxDay\"\n      [markerHandler]=\"markerHandler\"\n      [minLength]=\"minLength\"\n      [maxLength]=\"maxLength\"\n      [value]=\"$any(value?.dayRange)\"\n      (prizmAfterViewInit)=\"markAsTouched()\"\n      (valueChange)=\"onRangeChange($event)\"\n    >\n      <ng-container footerFrom>\n        <prizm-input-layout label=\"Время\">\n          <prizm-input-layout-time\n            [style.--prizm-dropdown-host-width]=\"'100%'\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [ngModel]=\"value?.timeRange?.from\"\n            [items]=\"timeItems\"\n            [strict]=\"timeStrict\"\n            [mode]=\"timeMode\"\n            (ngModelChange)=\"updateTimeFrom($event)\"\n          >\n          </prizm-input-layout-time>\n        </prizm-input-layout>\n      </ng-container>\n      <ng-container footerTo>\n        <prizm-input-layout label=\"Время\">\n          <prizm-input-layout-time\n            [style.--prizm-dropdown-host-width]=\"'100%'\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [ngModel]=\"value?.timeRange?.to\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [strict]=\"timeStrict\"\n            [items]=\"timeItems\"\n            [mode]=\"timeMode\"\n            (ngModelChange)=\"updateTimeTo($event)\"\n          >\n          </prizm-input-layout-time>\n        </prizm-input-layout>\n      </ng-container>\n    </prizm-calendar-range>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [style.--prizm-input-icon-button-width]=\"'24px'\"\n    [disabled]=\"!!disabled\"\n    (click)=\"focusableElementRef.focus(); onOpenChange(!open)\"\n    prizmInputIconButton=\"date-calendar-range\"\n  ></button>\n  <!--  TODO add after create time-range modal -->\n  <!--  <button-->\n  <!--    [interactive]=\"true\"-->\n  <!--    [disabled]=\"disabled\"-->\n  <!--    (click)=\"onOpen(!open)\"-->\n  <!--    prizmInputIconButton=\"date-clock\"-->\n  <!--  ></button>-->\n  <ng-container *ngFor=\"let button of rightButtons$ | async\" [ngTemplateOutlet]=\"button.template\">\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PolymorphModule } from '../../../directives/polymorph/polymorph.module';\nimport { PrizmValueAccessorModule } from '../../../directives/value-accessor/value-accessor.module';\nimport { PrizmCalendarRangeModule } from '../../calendar-range/calendar-range.module';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmIconModule } from '../../icon/icon.module';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host/dropdown-host.module';\nimport { PrizmMaskModule } from '../../../modules';\nimport { PrizmInputLayoutDateTimeRangeComponent } from './input-layout-date-time-range.component';\nimport { PrizmInputZoneModule } from '../../../directives/input-zone';\nimport { PrizmLifecycleModule } from '../../../directives/lifecycle/lifecycle.module';\nimport { PrizmDataListModule } from '../../data-list';\nimport { PrizmInputLayoutTimeModule } from '../input-time';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputTextModule, PrizmInputLayoutDateTimeRangeComponent],\n  exports: [PrizmInputLayoutDateTimeRangeComponent, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutDateTimeRangeModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { prizmAsControl } from '../../../abstract/control';\nimport { PrizmMonthPipe } from '../../../pipes/month/month.pipe';\nimport { PRIZM_MONTH_FORMATTER_PROVIDER } from '../../../providers/month-formatter.provider';\nimport { prizmAsFocusableItemAccessor } from '../../../tokens/focusable-item-accessor';\nimport { AbstractPrizmNullableControl } from '../../../abstract/nullable-control';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { PrizmWithOptionalMinMax } from '../../../types/with-optional-min-max';\nimport { PrizmFocusableElementAccessor } from '../../../types/focusable-element-accessor';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmBooleanHandlerWithContext } from '../../../types/handler-with-context';\nimport { PrizmMonthContext } from '../../../@core/date-time/month-context';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PrizmInputDateOptions, PRIZM_INPUT_DATE_OPTIONS } from '../../../tokens/input-date-options';\nimport { PRIZM_CHAR_EN_DASH } from '../../../constants/unicode-chars';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PrizmInputSize } from '../common/models/prizm-input.models';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { PRIZM_MONTHS } from '../../../tokens';\n\n@Component({\n  selector: `prizm-input-month-range`,\n  templateUrl: `./input-month-range.component.html`,\n  styleUrls: [`./input-month-range.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_MONTHS, 'months'),\n    prizmAsFocusableItemAccessor(PrizmInputMonthRangeComponent),\n    prizmAsControl(PrizmInputMonthRangeComponent),\n    PRIZM_MONTH_FORMATTER_PROVIDER,\n    PrizmMonthPipe,\n  ],\n})\nexport class PrizmInputMonthRangeComponent\n  extends AbstractPrizmNullableControl<PrizmMonthRange>\n  implements PrizmWithOptionalMinMax<PrizmMonth>, PrizmFocusableElementAccessor\n{\n  override readonly testId_ = 'ui_input_month_range';\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public outer = false;\n\n  @Input()\n  @prizmDefaultProp()\n  public label = 'Выберите период';\n\n  @Input() forceClear: boolean | null = null;\n\n  @Input()\n  @prizmDefaultProp()\n  public size: PrizmInputSize = 'm';\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmMonth = this.options.min;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmMonth = this.options.max;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandlerWithContext<PrizmMonth, PrizmMonthContext> =\n    PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  public extraButtonInjector: Injector = this.injector;\n\n  open = false;\n\n  @HostListener(`click`)\n  public onClick(): void {\n    this.open = !this.open;\n  }\n\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    readonly formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Inject(PRIZM_INPUT_DATE_OPTIONS)\n    private readonly options: PrizmInputDateOptions,\n    private readonly injector: Injector\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  get calendarIcon(): PrizmInputDateOptions['icon'] {\n    return this.options.icon;\n  }\n\n  public computeValue(from: string | null, to: string | null): string {\n    const formattedTo = from === to && this.focused && !this.readOnly ? `` : to;\n\n    return `${from} ${PRIZM_CHAR_EN_DASH} ${formattedTo}`;\n  }\n\n  public onValueChange(value: string): void {\n    if (value) {\n      return;\n    }\n\n    this.updateValue(null);\n    this.onOpenChange(true);\n  }\n\n  public onMonthClick(month: PrizmMonth): void {\n    if (this.value === null || !this.value.isSingleMonth) {\n      this.writeValue(new PrizmMonthRange(month, month));\n\n      return;\n    }\n\n    this.updateValue(PrizmMonthRange.sort(this.value.from, month));\n    this.close();\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n  }\n\n  public onActiveZone(focused: boolean): void {\n    this.updateFocused(focused);\n\n    if (focused) {\n      return;\n    }\n\n    if (this.value?.isSingleMonth) {\n      this.updateValue(new PrizmMonthRange(this.value.from, this.value.from));\n    }\n  }\n\n  public override setDisabledState(): void {\n    super.setDisabledState();\n    this.close();\n  }\n\n  private close(): void {\n    this.open = false;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"interactive\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  [isOpen]=\"open && interactive\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <prizm-input-layout [label]=\"label\" [outer]=\"outer\" [forceClear]=\"forceClear\" [size]=\"size\">\n    <input\n      class=\"input-search\"\n      #focusableElementRef\n      [readOnly]=\"true\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"computedDisabled\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      [ngModel]=\"\n        value\n          ? computeValue(\n              value.from | prizmMapper : formatter | async,\n              value.to | prizmMapper : formatter | async\n            )\n          : ''\n      \"\n      (ngModelChange)=\"onValueChange($event || '')\"\n      prizmInput\n    />\n\n    <ng-container prizm-input-right>\n      <button [interactive]=\"true\" prizmInputIconButton=\"date-calendar-range\"></button>\n    </ng-container>\n  </prizm-input-layout>\n  <ng-template #dropdown>\n    <prizm-calendar-month\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [value]=\"value\"\n      (monthClick)=\"onMonthClick($event)\"\n      prizmPreventDefault=\"mousedown\"\n    ></prizm-calendar-month>\n  </ng-template>\n</prizm-dropdown-host>\n","import { Directive, DoCheck, Inject, Self } from '@angular/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { PrizmInputMonthRangeComponent } from './input-month-range.component';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { AbstractPrizmTextfieldHost } from '../../../abstract/abstract-textfield-host';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { prizmAsTextfieldHost } from '../../../tokens/textfield-host.tstextfield-host';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `prizm-input-month-range`,\n  providers: [prizmAsTextfieldHost(PrizmInputMonthRangeDirective), PrizmDestroyService],\n})\nexport class PrizmInputMonthRangeDirective\n  extends AbstractPrizmTextfieldHost<PrizmInputMonthRangeComponent>\n  implements DoCheck\n{\n  private readonly value$ = new Subject<PrizmMonthRange | null>();\n\n  private localizedValue: [string, string] = [``, ``];\n\n  constructor(\n    @Inject(AbstractPrizmControl) host: PrizmInputMonthRangeComponent,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Self() @Inject(PrizmDestroyService) destroy$: Observable<unknown>\n  ) {\n    super(host);\n\n    this.value$\n      .pipe(\n        distinctUntilChanged(),\n        switchMap((value: PrizmMonthRange | null) =>\n          combineLatest([formatter(value?.from || null), formatter(value?.to || null)])\n        ),\n        takeUntil(destroy$)\n      )\n      .subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n  }\n\n  public override get readOnly(): boolean {\n    return true;\n  }\n\n  public override get value(): string {\n    return this.localizedValue[0] ? this.host.computeValue(...this.localizedValue) : ``;\n  }\n\n  public ngDoCheck(): void {\n    this.value$.next(this.host.value);\n  }\n\n  public onValueChange(value: string): void {\n    this.host.onValueChange(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmCalendarMonthComponent } from '../../calendar-month';\nimport { PrizmMapperPipeModule } from '../../table/pipes/mapper/mapper.module';\nimport { PrizmInputMonthRangeComponent } from './input-month-range.component';\nimport { PrizmInputMonthRangeDirective } from './input-month-range.directive';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmDropdownHostComponent } from '../../dropdowns/dropdown-host';\nimport { PrizmPreventDefaultModule } from '../../../directives/prevent-default';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PrizmCalendarMonthComponent,\n    PrizmDropdownHostComponent,\n    PrizmPreventDefaultModule,\n    PrizmMapperPipeModule,\n    PrizmInputTextModule,\n    FormsModule,\n  ],\n  declarations: [PrizmInputMonthRangeComponent, PrizmInputMonthRangeDirective],\n  exports: [PrizmInputMonthRangeComponent, PrizmInputMonthRangeDirective],\n})\nexport class PrizmInputMonthRangeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PrizmMonthPipe } from '../../../pipes/month/month.pipe';\nimport { PRIZM_MONTH_FORMATTER_PROVIDER } from '../../../providers/month-formatter.provider';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmMonth } from '../../../@core/date-time/month';\nimport { PrizmBooleanHandlerWithContext } from '../../../types/handler-with-context';\nimport { PrizmMonthContext } from '../../../@core/date-time/month-context';\nimport { PRIZM_ALWAYS_FALSE_HANDLER } from '../../../constants/always-false-handler';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PRIZM_INPUT_DATE_OPTIONS, PrizmInputDateOptions } from '../../../tokens/input-date-options';\nimport { PRIZM_CHAR_EN_DASH } from '../../../constants/unicode-chars';\nimport { prizmIsNativeFocusedIn } from '../../../util/is-native-focused-in';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmInputControl } from '../common/base/input-control.class';\nimport { PrizmInputNgControl } from '../common/base/input-ng-control.class';\nimport { prizmI18nInitWithKey } from '../../../services';\nimport { PRIZM_MONTHS } from '../../../tokens';\nimport { CommonModule } from '@angular/common';\nimport { PrizmLifecycleModule, PrizmPreventDefaultModule } from '../../../directives';\nimport { PrizmCalendarMonthModule } from '../../calendar-month';\nimport { PrizmDropdownHostModule } from '../../dropdowns/dropdown-host';\nimport { PrizmMapperPipeModule } from '../../table/pipes/mapper/mapper.module';\nimport { PrizmInputTextModule } from '../input-text';\n\n@Component({\n  selector: `prizm-input-layout-month-range`,\n  templateUrl: `./input-layout-month-range.component.html`,\n  styleUrls: [`./input-layout-month-range.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ...prizmI18nInitWithKey(PRIZM_MONTHS, 'months'),\n    PRIZM_MONTH_FORMATTER_PROVIDER,\n    PrizmMonthPipe,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputLayoutMonthRangeComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputLayoutMonthRangeComponent },\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmLifecycleModule,\n    PrizmCalendarMonthModule,\n    PrizmDropdownHostModule,\n    PrizmPreventDefaultModule,\n    PrizmMapperPipeModule,\n    PrizmInputTextModule,\n    FormsModule,\n  ],\n})\nexport class PrizmInputLayoutMonthRangeComponent extends PrizmInputNgControl<PrizmMonthRange | null> {\n  readonly nativeElementType = 'input-month-range';\n  readonly hasClearButton = true;\n  override readonly testId_ = 'ui_input_month_range';\n\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  public placeholder = '';\n\n  @Input()\n  @prizmDefaultProp()\n  min: PrizmMonth = this.options.min;\n\n  @Input()\n  @prizmDefaultProp()\n  max: PrizmMonth = this.options.max;\n\n  @Input()\n  @prizmDefaultProp()\n  disabledItemHandler: PrizmBooleanHandlerWithContext<PrizmMonth, PrizmMonthContext> =\n    PRIZM_ALWAYS_FALSE_HANDLER;\n\n  @Input()\n  @prizmDefaultProp()\n  public extraButtonInjector: Injector = this.injector;\n\n  open = false;\n\n  get interactive() {\n    return !this.disabled;\n  }\n\n  constructor(\n    @Inject(PRIZM_MONTH_FORMATTER)\n    readonly formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Inject(PRIZM_INPUT_DATE_OPTIONS)\n    private readonly options: PrizmInputDateOptions,\n    @Inject(Injector) injector: Injector\n  ) {\n    super(injector);\n  }\n\n  public get nativeFocusableElement(): HTMLInputElement | null {\n    return this.focusableElement ? (this.focusableElement.nativeElement as HTMLInputElement) : null;\n  }\n\n  get focused(): boolean {\n    return this.focusableElement?.nativeElement\n      ? prizmIsNativeFocusedIn(this.focusableElement.nativeElement)\n      : false;\n  }\n\n  public override get empty(): boolean {\n    return !this.value || !(this.value instanceof PrizmMonthRange);\n  }\n\n  public computeValue(from: string | null, to: string | null): string {\n    const formattedTo = from === to && this.focused ? `` : to;\n    if (!from || !to) return '';\n    return `${from} ${PRIZM_CHAR_EN_DASH} ${formattedTo}`;\n  }\n\n  public onValueChange(value: string): void {\n    if (value) {\n      return;\n    }\n\n    this.updateValue(null);\n    this.onOpenChange(true);\n  }\n\n  public onMonthClick(month: PrizmMonth): void {\n    if (this.value === null || !this.value.isSingleMonth) {\n      this.updateValue(new PrizmMonthRange(month, month));\n\n      return;\n    }\n\n    this.updateValue(PrizmMonthRange.sort(this.value.from, month));\n    this.close();\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public onOpenChange(open: boolean): void {\n    this.open = open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private close(): void {\n    this.open = false;\n  }\n}\n","<prizm-dropdown-host\n  class=\"z-hosted\"\n  [canOpen]=\"interactive\"\n  [content]=\"dropdown\"\n  [closeByEsc]=\"true\"\n  [isOpen]=\"open && interactive\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  prizmDropdownHostWidth=\"auto\"\n>\n  <input\n    class=\"input-search\"\n    #focusableElementRef\n    [readOnly]=\"true\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"\n      value\n        ? computeValue(\n            value.from | prizmMapper : formatter | async,\n            value.to | prizmMapper : formatter | async\n          )\n        : ''\n    \"\n    (click)=\"open = !open\"\n    (ngModelChange)=\"onValueChange($event || '')\"\n    prizmInput\n  />\n\n  <ng-template #dropdown>\n    <prizm-calendar-month\n      [disabledItemHandler]=\"disabledItemHandler\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [value]=\"value\"\n      (prizmAfterViewInit)=\"markAsTouched()\"\n      (monthClick)=\"onMonthClick($event)\"\n      prizmPreventDefault=\"mousedown\"\n    ></prizm-calendar-month>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <button\n    [interactive]=\"true\"\n    [disabled]=\"disabled\"\n    (click)=\"onOpenChange(!open)\"\n    prizmInputIconButton=\"date-calendar-range\"\n  ></button>\n</ng-container>\n","import { Directive, DoCheck, Inject, Self } from '@angular/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { PrizmInputMonthRangeComponent } from './input-month-range.component';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { AbstractPrizmTextfieldHost } from '../../../abstract/abstract-textfield-host';\nimport { PrizmMonthRange } from '../../../@core/date-time/month-range';\nimport { prizmAsTextfieldHost } from '../../../tokens/textfield-host.tstextfield-host';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { PRIZM_MONTH_FORMATTER } from '../../../tokens/month-formatter';\nimport { PrizmHandler } from '../../../types/handler';\nimport { PrizmMonth } from '../../../@core/date-time/month';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `prizm-input-month-range`,\n  providers: [prizmAsTextfieldHost(PrizmInputLayoutMonthRangeDirective), PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmInputLayoutMonthRangeDirective\n  extends AbstractPrizmTextfieldHost<PrizmInputMonthRangeComponent>\n  implements DoCheck\n{\n  private readonly value$ = new Subject<PrizmMonthRange | null>();\n\n  private localizedValue: [string, string] = [``, ``];\n\n  constructor(\n    @Inject(AbstractPrizmControl) host: PrizmInputMonthRangeComponent,\n    @Inject(PRIZM_MONTH_FORMATTER)\n    formatter: PrizmHandler<PrizmMonth | null, Observable<string>>,\n    @Self() @Inject(PrizmDestroyService) destroy$: Observable<unknown>\n  ) {\n    super(host);\n\n    this.value$\n      .pipe(\n        distinctUntilChanged(),\n        switchMap((value: PrizmMonthRange | null) =>\n          combineLatest([formatter(value?.from || null), formatter(value?.to || null)])\n        ),\n        takeUntil(destroy$)\n      )\n      .subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n  }\n\n  public override get readOnly(): boolean {\n    return true;\n  }\n\n  public override get value(): string {\n    return this.localizedValue[0] ? this.host.computeValue(...this.localizedValue) : ``;\n  }\n\n  public ngDoCheck(): void {\n    this.value$.next(this.host.value);\n  }\n\n  public onValueChange(value: string): void {\n    this.host.onValueChange(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../input-text/input-text.module';\nimport { PrizmInputLayoutMonthRangeComponent } from './input-layout-month-range.component';\nimport { PrizmInputLayoutMonthRangeDirective } from './input-layout-month-range.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputLayoutMonthRangeComponent, PrizmInputLayoutMonthRangeDirective, PrizmInputTextModule],\n  exports: [PrizmInputLayoutMonthRangeComponent, PrizmInputLayoutMonthRangeDirective, PrizmInputTextModule],\n})\nexport class PrizmInputLayoutMonthRangeModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { prizmIsTextOverflow$ } from '../../../util/dom/is-textoverflow';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { PrizmCallFuncPipe, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmElementReadyDirective, PrizmHintDirective, PrizmLifecycleDirective } from '../../../directives';\n\n@Component({\n  selector: 'prizm-chips-item',\n  templateUrl: './chips-item.component.html',\n  styleUrls: ['./chips-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgIf,\n    PrizmCallFuncPipe,\n    PrizmLifecycleDirective,\n    PrizmElementReadyDirective,\n    PrizmLetDirective,\n    PrizmHintDirective,\n  ],\n})\nexport class PrizmChipsItemComponent extends PrizmAbstractTestId {\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: BooleanInput) {\n    this._selected = coerceBooleanProperty(value);\n  }\n  private _selected = false;\n\n  @Input() deletable = true;\n  @Output() deleted = new EventEmitter<MouseEvent>();\n  @Input() hintCanShow = true;\n  @Input() hintText!: string;\n  @Input() hintDirection: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n\n  override readonly testId_ = 'ui_chips_item';\n\n  readonly prizmIsTextOverflow$ = (\n    elem: HTMLElement,\n    hintCanShow: boolean,\n    forceShowHint: boolean\n  ): Observable<boolean> => {\n    return of(forceShowHint).pipe(\n      switchMap(val => {\n        if (val) {\n          return of(true);\n        }\n\n        if (!hintCanShow) {\n          return of(false);\n        }\n\n        return prizmIsTextOverflow$(elem);\n      })\n    );\n  };\n  constructor(public readonly el: ElementRef) {\n    super();\n  }\n}\n","<button class=\"chips-list__item\" [disabled]=\"disabled\" [class.chips-list__item_selected]=\"selected\">\n  <div\n    class=\"chips-name\"\n    #div\n    [prizmHint]=\"hintText\"\n    [prizmHintHost]=\"el.nativeElement\"\n    [prizmHintDirection]=\"hintDirection\"\n    [prizmHintCanShow]=\"\n      $any(!!hintText && (div | prizmCallFunc : prizmIsTextOverflow$ : hintCanShow : null | async))\n    \"\n  >\n    <ng-content></ng-content>\n  </div>\n  <button\n    class=\"chips-cancel prizm-icon cancel-close-small\"\n    *ngIf=\"deletable\"\n    [disabled]=\"disabled\"\n    (click)=\"deleted.emit($event)\"\n  ></button>\n</button>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrizmOverlayOutsidePlacement } from '../../modules';\nimport { BehaviorSubject, Observable, Subscription, timer } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { PrizmCallFuncPipe, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { AsyncPipe, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { PrizmElementReadyDirective, PrizmHintDirective, PrizmLifecycleDirective } from '../../directives';\nimport { PrizmChipsItemComponent } from './chips-item';\n\n@Component({\n  selector: 'prizm-chips',\n  templateUrl: './chips.component.html',\n  styleUrls: ['./chips.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmChipsComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n  ],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    NgTemplateOutlet,\n    AsyncPipe,\n    PrizmChipsItemComponent,\n    PrizmCallFuncPipe,\n    PrizmLifecycleDirective,\n    PrizmElementReadyDirective,\n    PrizmLetDirective,\n    PrizmHintDirective,\n  ],\n})\nexport class PrizmChipsComponent\n  extends PrizmAbstractTestId\n  implements ControlValueAccessor, OnInit, OnDestroy, AfterViewInit\n{\n  @Input() @HostBinding('attr.data-size') public size: 's' | 'l' = 'l';\n  @Input() set chips(data: string[]) {\n    this.chipsList = data;\n  }\n  @Input() public deletable = true;\n  @Input() public singleLine = true;\n  @Input() public hintCanShow = true;\n  @Input() public hintDirection: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n\n  @Output() public addChipEvent: EventEmitter<string> = new EventEmitter();\n  @Output() public removeChipEvent: EventEmitter<string> = new EventEmitter();\n  @Output() public clickChipEvent: EventEmitter<string> = new EventEmitter();\n\n  override readonly testId_ = 'ui_chips';\n\n  public accessorIsDisabled = false;\n  public readonly overflowedChipsList$ = new BehaviorSubject<Set<number>>(new Set());\n\n  public chipsList$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  private subscription: Subscription = new Subscription();\n  readonly ready: (el: ElementRef) => boolean = (el: ElementRef) => {\n    const { x, y } = el.nativeElement.getBoundingClientRect();\n    return Math.max(x, y) > 0;\n  };\n\n  constructor(private readonly cdRef: ChangeDetectorRef, private readonly destroy$: PrizmDestroyService) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public onChange: (value: unknown) => void = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public onTouched: (value: unknown) => void = () => {};\n\n  get chipsList(): string[] {\n    return this.chipsList$.getValue() ?? ([] as string[]);\n  }\n\n  set chipsList(data: string[]) {\n    this.chipsList$.next(data);\n  }\n\n  public addChips(chipName: string): void {\n    if (this.accessorIsDisabled) return;\n    this.chipsList = [...this.chipsList, chipName];\n    this.addChipEvent.emit(chipName);\n    this.cdRef.markForCheck();\n  }\n\n  public removeChips(event: MouseEvent, idx: number): void {\n    if (this.accessorIsDisabled) return;\n    this.overflowedChipsList$.value.delete(idx);\n    this.overflowedChipsList$.next(this.overflowedChipsList$.value);\n\n    event.stopPropagation();\n    this.removeChipEvent.emit(this.chipsList[idx]);\n    this.chipsList = this.chipsList.filter((item, i) => i !== idx);\n    this.cdRef.markForCheck();\n  }\n\n  public chipClick(chipName: string): void {\n    this.clickChipEvent.emit(chipName);\n  }\n\n  public ngOnInit(): void {\n    this.subscription = this.chipsList$.pipe(takeUntil(this.destroy$)).subscribe(chips => {\n      this.onChange(chips);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.chipsList$.complete();\n    this.subscription.unsubscribe();\n  }\n\n  public writeValue(data: string[]): void {\n    this.chipsList = data;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.accessorIsDisabled = isDisabled;\n    this.cdRef.markForCheck();\n  }\n\n  public registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  public isChipsContent$(\n    observable: Observable<ElementRef>,\n    parent: HTMLElement,\n    singleLine: boolean,\n    chips: string,\n    idx: number,\n    allChipsCount: number\n  ): Observable<string> {\n    return this.chipsList$.pipe(\n      switchMap(() => observable),\n      map((current: ElementRef) => {\n        if (idx === 0) this.overflowedChipsList$.value.clear();\n        if (!singleLine || this.chipsList.length === 1) return false;\n        if (idx === 0) return 0;\n        const maxPadding = 2;\n        const needWidthPlaceForShowDots = 35;\n        const offsetY = Math.abs(parent.offsetTop - current.nativeElement.offsetTop) > maxPadding;\n\n        const parentX = parent.offsetLeft + parent.offsetWidth;\n        const currentX = current.nativeElement.offsetLeft + current.nativeElement.offsetWidth;\n        const result = offsetY || parentX - currentX < needWidthPlaceForShowDots;\n\n        if (result) this.overflowedChipsList$.value.add(idx);\n        else this.overflowedChipsList$.value.delete(idx);\n\n        this.overflowedChipsList$.next(this.overflowedChipsList$.value);\n\n        return result;\n      }),\n      map(i => (i ? 'hidden' : 'visible'))\n    );\n  }\n\n  public getOverflowedChipsListHint(): string {\n    const list = [...this.overflowedChipsList$.value.values()];\n    return [...list]\n      .map(i => {\n        return this.chipsList[i];\n      })\n      .join(', ');\n  }\n\n  ngAfterViewInit(): void {\n    timer(0).subscribe(() => {\n      this.chipsList = [...this.chipsList];\n    });\n  }\n\n  public trackByIdx(idx: number): number {\n    return idx;\n  }\n}\n","<div\n  class=\"chips-list\"\n  #prizmElementReady=\"prizmElementReady\"\n  #parent\n  *ngIf=\"!!(chipsList$ | async)?.length\"\n  [class.hidden]=\"singleLine\"\n  [checker]=\"ready\"\n  prizmElementReady\n>\n  <ng-container *ngIf=\"prizmElementReady.ready$ | async\">\n    <ng-container\n      *ngFor=\"let item of chipsList$ | async; let i = index; trackBy: trackByIdx\"\n      [ngTemplateOutlet]=\"buttonTemplate\"\n      [ngTemplateOutletContext]=\"{\n        item: item,\n        idx: i,\n        allChipsCount: (chipsList$ | async)?.length ?? 0,\n        parent: parent,\n        singleLine: singleLine\n      }\"\n    >\n    </ng-container>\n\n    <ng-container *ngIf=\"overflowedChipsList$ | async as chipsOverflowedList\">\n      <div\n        class=\"more-item\"\n        *ngIf=\"chipsOverflowedList.size\"\n        [prizmHint]=\"getOverflowedChipsListHint()\"\n        [prizmHintDirection]=\"hintDirection\"\n      >\n        ...\n      </div>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template\n  #buttonTemplate\n  let-item=\"item\"\n  let-idx=\"idx\"\n  let-parent=\"parent\"\n  let-background=\"background\"\n  let-hint=\"hint\"\n  let-allChipsCount=\"allChipsCount\"\n  let-hideDelete=\"hideDelete\"\n  let-singleLine=\"singleLine\"\n  let-forceShowHint=\"forceShowHint\"\n>\n  <prizm-chips-item\n    class=\"{{\n      prizmLifecycle.afterViewInit$\n        | prizmCallFunc : isChipsContent$ : parent : singleLine : item : idx : allChipsCount\n        | async\n    }}\"\n    #prizmLifecycle=\"prizmLifecycle\"\n    [hintCanShow]=\"hintCanShow\"\n    [hintDirection]=\"hintDirection\"\n    [class.single-line]=\"singleLine\"\n    [hintText]=\"item\"\n    [deletable]=\"!hideDelete && deletable\"\n    [disabled]=\"accessorIsDisabled\"\n    (deleted)=\"removeChips($event, idx)\"\n    (click)=\"chipClick(item)\"\n    prizmLifecycle\n  >\n    {{ item }}\n  </prizm-chips-item>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmChipsComponent } from './chips.component';\nimport { PrizmChipsItemComponent } from './chips-item/chips-item.component';\n\n@NgModule({\n  imports: [PrizmChipsComponent, PrizmChipsItemComponent],\n  exports: [PrizmChipsComponent, PrizmChipsItemComponent],\n})\nexport class PrizmChipsModule {}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PolymorphContent } from '../../../directives';\nimport { PrizmInputSize } from '../../input';\nimport { PrizmContextWithImplicit } from '../../../types';\nimport {\n  PrizmSelectIdentityMatcher,\n  PrizmSelectSearchMatcher,\n  PrizmSelectValueTransformver,\n} from './select.model';\nimport { Observable } from 'rxjs';\n\nexport type PrizmSelectIconContext = { opened: boolean; disabled: boolean };\nexport interface PrizmSelectOptions<T> {\n  readonly items: unknown[];\n  readonly searchable: boolean;\n  /**\n   * @deprecated\n   * before ng16!\n   * */\n  readonly forceClear: boolean | null;\n  readonly icon: PolymorphContent<PrizmSelectIconContext>;\n  /**\n   * @deprecated\n   * TODO ng16! rename to defaultLabel after remove prizm-select\n   * */\n  readonly label: string;\n  readonly placeholder: string;\n  /**\n   * @deprecated\n   * before ng16!\n   * */\n  readonly size: PrizmInputSize;\n  readonly search: string | null;\n  readonly stringify: PrizmSelectStringify<T>;\n  readonly emptyContent: PolymorphContent;\n  readonly nullContent: PolymorphContent;\n  readonly searchMatcher: PrizmSelectSearchMatcher<T>;\n  readonly identityMatcher: PrizmSelectIdentityMatcher<T>;\n  readonly transformer: PrizmSelectValueTransformver<T, unknown>;\n  readonly minDropdownHeight: number;\n  /**\n   * @deprecated\n   * before ng16!\n   * */\n  readonly outer: boolean;\n  readonly maxDropdownHeight: number;\n  readonly dropdownWidth: string;\n  readonly valueContent: PolymorphContent<PrizmSelectValueContext<T>>;\n  readonly listItemTemplate: PolymorphContent<PrizmSelectValueContext<T>>;\n}\n\nexport type PrizmSelectStringify<T> = (i: T, nullContent?: string) => string | Observable<string>;\nexport type PrizmSelectValueContext<T> = PrizmContextWithImplicit<T> & { stringify: string; value: any };\n\n/** Default values for dropdown-host options */\nexport const PRIZM_SELECT_DEFAULT_OPTIONS: PrizmSelectOptions<unknown> = {\n  items: [],\n  searchable: false,\n  outer: false,\n  search: null,\n  icon: 'chevrons-dropdown',\n\n  forceClear: null,\n  dropdownWidth: '100%',\n  minDropdownHeight: 0,\n  maxDropdownHeight: 342,\n  emptyContent: 'Ничего не найдено',\n  nullContent: 'Не выбрано',\n  transformer: item => item,\n  searchMatcher: (searchValue: string, item: unknown): boolean => {\n    return !!item?.toString()?.toLowerCase().includes(searchValue?.toLowerCase());\n  },\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  stringify: (i: unknown, nullContent: string) => {\n    if (i == null && nullContent) return nullContent;\n    return i?.toString?.();\n  },\n  identityMatcher: (a: unknown, b: unknown): boolean => {\n    return a === b;\n  },\n  valueContent: '',\n  listItemTemplate: null as any,\n  placeholder: '',\n  size: 'l',\n  label: 'Выберите из списка',\n};\n\nexport const PRIZM_SELECT_OPTIONS = new InjectionToken<PrizmSelectOptions<unknown>>(\n  'Default parameters for select',\n  {\n    factory: (): PrizmSelectOptions<unknown> => PRIZM_SELECT_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmSelectOptionsProvider: (options: Partial<PrizmSelectOptions<unknown>>) => ValueProvider = (\n  options: Partial<PrizmSelectOptions<unknown>>\n) => ({\n  provide: PRIZM_SELECT_OPTIONS,\n  useValue: { ...PRIZM_SELECT_DEFAULT_OPTIONS, ...options },\n});\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport {\n  Compare,\n  PrizmCallFuncModule,\n  PrizmDestroyService,\n  PrizmFormControlHelpers,\n  PrizmLetModule,\n} from '@prizm-ui/helpers';\nimport { FormsModule, NgControl, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport {\n  PolymorphContent,\n  PolymorphModule,\n  PrizmAutoFocusModule,\n  PrizmDropdownControllerModule,\n  PrizmHintModule,\n  PrizmLifecycleModule,\n} from '../../../directives';\nimport { PRIZM_SELECT_OPTIONS, PrizmSelectOptions, PrizmSelectValueContext } from './select.options';\nimport { PrizmFocusableElementAccessor, PrizmNativeFocusableElement } from '../../../types';\nimport { PrizmInputSize, PrizmInputTextComponent, PrizmInputTextModule } from '../../input';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { prizmIsNativeFocused, prizmIsTextOverflow$ } from '../../../util';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { BehaviorSubject, concat, timer } from 'rxjs';\nimport { PrizmSelectIdentityMatcher, PrizmSelectSearchMatcher } from './select.model';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmDropdownHostComponent, PrizmDropdownHostModule } from '../dropdown-host';\nimport { PrizmOverlayModule, PrizmOverlayOutsidePlacement } from '../../../modules/overlay';\nimport { PrizmScrollbarModule, PrizmScrollbarVisibility } from '../../scrollbar';\nimport { PrizmChipsModule } from '../../chips';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../../icon';\nimport { PrizmDataListModule } from '../../data-list';\n\n/**\n * @deprecated\n * use only PrizmSelectInputComponent\n * will be removed after ng 15 update\n * for auto update use our migrator https://prizm.site/forZIIoT/update-from-beta\n * */\n@Component({\n  selector: 'prizm-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    PrizmDestroyService,\n    {\n      provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n      useExisting: forwardRef(() => PrizmSelectComponent),\n    },\n  ],\n  standalone: true,\n  imports: [\n    PrizmOverlayModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmChipsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PrizmLetModule,\n    PrizmAutoFocusModule,\n    PrizmHintModule,\n    PrizmIconModule,\n    PrizmCallFuncModule,\n    PrizmScrollbarModule,\n    PrizmDropdownControllerModule,\n    PrizmLifecycleModule,\n    PrizmDataListModule,\n    PrizmDropdownHostModule,\n  ],\n  exportAs: 'prizmDropdownSelect',\n})\nexport class PrizmSelectComponent<T>\n  extends AbstractPrizmControl<T>\n  implements PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @ViewChild('dropdownHostRef')\n  public readonly dropdownHostElement?: PrizmDropdownHostComponent;\n\n  @Input() set items(data: T[]) {\n    this.items$.next(data as any);\n  }\n  get items(): T[] {\n    return this.items$.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownScroll: PrizmScrollbarVisibility = 'auto';\n\n  @Input()\n  @prizmDefaultProp()\n  searchable = this.options.searchable;\n\n  @Input()\n  @prizmDefaultProp()\n  forceClear = this.options.forceClear;\n\n  @Input()\n  @prizmDefaultProp()\n  icon = this.options.icon;\n\n  @Input()\n  @prizmDefaultProp()\n  label = this.options.label;\n\n  @Input()\n  @prizmDefaultProp()\n  minDropdownHeight = this.options.minDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  maxDropdownHeight = this.options.maxDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = this.options.placeholder;\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownWidth = this.options.dropdownWidth;\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = this.options.size;\n\n  @Input()\n  @prizmDefaultProp()\n  search: string | null = this.options.search;\n\n  @Input()\n  @prizmDefaultProp()\n  searchMatcher: PrizmSelectSearchMatcher<T> = this.options.searchMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  emptyContent: PolymorphContent = this.options.emptyContent;\n\n  @Input()\n  @prizmDefaultProp()\n  nullContent: PolymorphContent = this.options.nullContent;\n\n  readonly prizmIsTextOverflow$ = prizmIsTextOverflow$;\n\n  private readonly stop$ = new BehaviorSubject(false);\n\n  /**\n   * need only clear function\n   * */\n  @Input()\n  @prizmDefaultProp()\n  stringify: (i: T, content?: string) => any = this.options.stringify as any;\n\n  @Input()\n  @prizmDefaultProp()\n  identityMatcher: PrizmSelectIdentityMatcher<T> = this.options.identityMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  valueTemplate: PolymorphContent<PrizmSelectValueContext<T>> = this.options.valueContent;\n\n  @Input()\n  @prizmDefaultProp()\n  outer: boolean = this.options.outer;\n\n  override readonly testId_ = 'ui_select';\n\n  @Output()\n  public readonly searchChange = new EventEmitter<string | null>();\n\n  public inputTextElement!: PrizmInputTextComponent | null;\n  public open = false;\n  public readonly direction: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n  public readonly items$ = new BehaviorSubject([]);\n  public readonly requiredInputControl = new UntypedFormControl();\n  public readonly defaultIcon = 'chevrons-dropdown';\n\n  readonly filteredItems$ = this.requiredInputControl.valueChanges.pipe(\n    tap(value => this.searchEmit(value)),\n    startWith(''),\n    switchMap(value => {\n      return this.items$.pipe(\n        map(items => {\n          if (!this.searchable || !value?.toString().replace(/[ ]+/g, '')) return items;\n          const searchValue = (this.searchValue = value.toString().trim());\n          return items?.filter(item => this.searchMatcher(searchValue, item)) ?? [];\n        }),\n        map(items => {\n          if (this.nullContent && items?.length && items[0] !== null) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            items = [null, ...items];\n          }\n          return items;\n        }),\n        tap(items => {\n          this.filteredItems = items;\n          this.dropdownHostElement?.reCalculatePositions(1000 / 60);\n        }),\n        debounceTime(0)\n        // tap(() => this.safeOpenModal())\n      );\n    })\n  );\n\n  public filteredItems: T[] = [];\n  private searchValue!: string;\n  readonly isNullish = Compare.isNullish;\n\n  constructor(\n    @Inject(PRIZM_SELECT_OPTIONS) private readonly options: PrizmSelectOptions<T>,\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    this.initControlStatusChangerIfExist();\n    this.initControlValueChangerIfExist();\n    this.initControlValidatorsIfExist();\n  }\n\n  private initControlValidatorsIfExist(): void {\n    if (this.control)\n      PrizmFormControlHelpers.syncAllValidators(\n        this.control as UntypedFormControl,\n        false,\n        this.requiredInputControl\n      )\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  private initControlStatusChangerIfExist(): void {\n    if (this.control)\n      PrizmFormControlHelpers.syncValidators(\n        this.control as UntypedFormControl,\n        false,\n        this.requiredInputControl\n      )\n        .pipe(\n          // debounceTime(0),\n          // tap(() => this.changeDetectorRef.detectChanges()),\n          takeUntil(this.destroy$)\n        )\n        .subscribe();\n  }\n\n  private initControlValueChangerIfExist(): void {\n    let counter = 0;\n    concat(timer(0).pipe(map(() => this.control?.value)), this.internalValue$.pipe(debounceTime(0)))\n      .pipe(\n        distinctUntilChanged(),\n        tap(value => {\n          if (value) {\n            value = this.items$.value?.find(i => value && i && this.identityMatcher(value, i));\n          }\n          this.select(value);\n          this.updateValue(value);\n          if (counter === 0) this.control?.markAsPristine();\n          counter++;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement | null {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  public onClear(): void {\n    this.select(null as any);\n  }\n\n  protected getFallbackValue(): T {\n    return null as any;\n  }\n\n  public select(item: T): void {\n    if (!this.identityMatcher(item, this.value)) {\n      this.updateValue(item);\n    }\n    this.requiredInputControl.setValue(item !== undefined && this.stringify(item));\n    // TODO remove after add update inputs\n    if (this.inputTextElement) this.inputTextElement.markAsTouched();\n    this.open = false;\n  }\n\n  public safeOpenModal(): void {\n    const inputElement = this.focusableElement?.nativeElement;\n    // if (this.stop$.value) return\n    const open = !this.open && this.interactive && inputElement && prizmIsNativeFocused(inputElement);\n    this.open = !!open;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  // TODO remove after finish activezone to dropdown component\n  public safeStopPropagation(value: string, $event: Event): void {\n    this.open = false;\n    this.changeDetectorRef.markForCheck();\n    if (!value) $event.stopImmediatePropagation();\n  }\n\n  public isMostRelevant(idx: number, items: T[], wroteInputValue: string): boolean {\n    const itIsNotCurrentValue = wroteInputValue && !this.identityMatcher(wroteInputValue as T, this.value);\n    const isCanSearch = this.searchable;\n    const hasNullValue = items[0] === null;\n    const result =\n      isCanSearch && itIsNotCurrentValue && ((hasNullValue && idx === 1) || (!hasNullValue && idx === 0));\n\n    return !!result;\n  }\n\n  private searchEmit(value: string): void {\n    if (this.search === value) return;\n    this.search = value;\n    this.searchChange.emit(value);\n  }\n}\n","<prizm-dropdown-host\n  #dropdownHostRef\n  *prizmLet=\"filteredItems$ | async as items\"\n  [(isOpen)]=\"open\"\n  [content]=\"dropdown\"\n  [prizmDropdownHostWidth]=\"dropdownWidth\"\n  [prizmDropdownMinHeight]=\"minDropdownHeight\"\n  [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n>\n  <prizm-input-layout\n    [label]=\"label\"\n    [forceClear]=\"forceClear\"\n    [outer]=\"outer\"\n    [size]=\"size\"\n    (click)=\"safeOpenModal()\"\n    (clear)=\"safeStopPropagation(focusableElementRef.value, $event)\"\n  >\n    <input\n      class=\"input-search\"\n      #inputText=\"prizmInput\"\n      #focusableElementRef\n      [placeholder]=\"placeholder\"\n      [disabled]=\"this.disabled\"\n      [readonly]=\"!searchable || this.disabled\"\n      [formControl]=\"requiredInputControl\"\n      (prizmOnInit)=\"inputTextElement = inputText\"\n      (onClear)=\"onClear()\"\n      prizmInput\n    />\n    <ng-container prizm-input-right>\n      <ng-container\n        *polymorphOutlet=\"icon || defaultIcon as iconName; context: { opened: open, disabled: disabled }\"\n      >\n        <prizm-icon\n          *ngIf=\"!disabled\"\n          [class.opened]=\"open\"\n          [class.active]=\"focusableElementRef.focused\"\n          [class.icon-dropdown]=\"iconName === defaultIcon\"\n          [iconClass]=\"$any(iconName)\"\n          (click)=\"focusableElementRef.focus()\"\n        >\n        </prizm-icon>\n      </ng-container>\n    </ng-container>\n  </prizm-input-layout>\n\n  <ng-template #dropdown>\n    <prizm-data-list class=\"block\" [scroll]=\"dropdownScroll\" [style.--prizm-data-list-border]=\"0\">\n      <ng-container *ngIf=\"items?.length; else emptyTemplate\">\n        <div\n          class=\"item\"\n          #hostHint\n          *ngFor=\"let item of filteredItems$ | async; let idx = index\"\n          [class.most-relevant]=\"isMostRelevant(idx, items, focusableElementRef.value)\"\n          [class.selected]=\"\n            item === value || (item && value && (item | prizmCallFunc : identityMatcher : value))\n          \"\n          (click)=\"select(item)\"\n        >\n          <ng-container *ngIf=\"!isNullish(item); else nullContentTemplate\">\n            <span\n              class=\"text\"\n              #elem\n              *prizmLet=\"item | prizmCallFunc : stringify : $any(nullContent) as text\"\n              [prizmHint]=\"text\"\n              [prizmHintHost]=\"hostHint\"\n              [prizmHintDirection]=\"direction\"\n              [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n            >\n              <ng-container\n                *polymorphOutlet=\"\n                  $any(valueTemplate) as content;\n                  context: {\n                    $implicit: item,\n                    stringify: text\n                  }\n                \"\n              >\n                {{ text }}\n              </ng-container>\n            </span>\n          </ng-container>\n\n          <ng-template #nullContentTemplate>\n            <ng-container *ngIf=\"nullContent\">\n              <ng-container *polymorphOutlet=\"nullContent as content\">\n                {{ content }}\n              </ng-container>\n            </ng-container>\n          </ng-template>\n        </div>\n      </ng-container>\n      <ng-template #emptyTemplate>\n        <div class=\"empty-template\">\n          <ng-container *polymorphOutlet=\"emptyContent as content\">\n            {{ content }}\n          </ng-container>\n        </div>\n      </ng-template>\n    </prizm-data-list>\n  </ng-template>\n</prizm-dropdown-host>\n","import { NgModule } from '@angular/core';\nimport { PrizmSelectComponent } from './select.component';\n\n/**\n * @deprecated\n * use PrizmInputSelectModule\n * */\n@NgModule({\n  imports: [PrizmSelectComponent],\n  exports: [PrizmSelectComponent],\n})\nexport class PrizmSelectModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class PrizmInputSelectOptionService<T = any> {\n  private readonly selected$$ = new BehaviorSubject<T | null>(null);\n  public readonly selected$ = this.selected$$.asObservable();\n\n  public selected(value: T): void {\n    this.selected$$.next(value);\n  }\n}\n","import { Directive, EventEmitter, HostListener, inject, Input, Output } from '@angular/core';\nimport { PrizmInputSelectOptionService } from './input-select-option.service';\n\n@Directive({\n  selector: '[prizmInputSelectOption]',\n  exportAs: 'prizmInputSelectOption',\n  standalone: true,\n})\nexport class PrizmInputSelectOptionDirective<T = any> {\n  @Input() value!: T;\n  @Output() selected = new EventEmitter();\n  private inputSelectOptionService: PrizmInputSelectOptionService<T> | null = inject(\n    PrizmInputSelectOptionService,\n    {\n      optional: true,\n    }\n  );\n\n  @HostListener('click', ['$event']) public onClick(event: MouseEvent) {\n    this.selected.next(this.value);\n    this.inputSelectOptionService?.selected(this.value);\n  }\n}\n","import { ChangeDetectionStrategy, Component, inject, Input } from '@angular/core';\nimport {\n  PrizmCallFuncPipe,\n  PrizmDestroyService,\n  PrizmLetDirective,\n  PrizmToObservablePipe,\n} from '@prizm-ui/helpers';\nimport { PolymorphOutletDirective } from '../../../directives/polymorph';\nimport { PrizmInputSelectOptionDirective } from './input-select-option.directive';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { PrizmHintDirective } from '../../../directives';\nimport { PrizmSelectInputComponent } from './input-select.component';\n\n@Component({\n  selector: 'prizm-input-select-item',\n  templateUrl: './input-select-item.component.html',\n  styleUrls: ['./input-select-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    NgIf,\n    PrizmInputSelectOptionDirective,\n    PrizmCallFuncPipe,\n    PrizmLetDirective,\n    PrizmHintDirective,\n    PolymorphOutletDirective,\n    PrizmToObservablePipe,\n    AsyncPipe,\n  ],\n  providers: [PrizmDestroyService],\n  exportAs: 'prizmSelectInputItem',\n})\nexport class PrizmSelectInputItemComponent<T> {\n  @Input() item!: T;\n  readonly parent = inject(PrizmSelectInputComponent);\n\n  public isMostRelevant(items: T[]): boolean {\n    const idx = this.parent.items.findIndex(i => this.item === i);\n    const wroteInputValue = this.parent.printing$.value;\n    const valueFromItems = this.parent.value && this.parent.getValueFromItems(this.parent.value, items);\n    const itIsNotCurrentValue =\n      valueFromItems && wroteInputValue && !this.parent.searchMatcher(wroteInputValue, valueFromItems);\n    const isCanSearch = this.parent.searchable;\n    const hasNullValue = items[0] === null;\n    const result =\n      isCanSearch && itIsNotCurrentValue && ((hasNullValue && idx === 1) || (!hasNullValue && idx === 0));\n\n    return !!result;\n  }\n}\n","<div\n  class=\"item\"\n  #hostHint\n  [class.most-relevant]=\"isMostRelevant(parent.items)\"\n  [class.selected]=\"\n    item === parent.value ||\n    (item &&\n      parent.value &&\n      (parent.transformer(item) | prizmCallFunc : parent.identityMatcher : parent.value))\n  \"\n  [value]=\"item\"\n  prizmInputSelectOption\n>\n  <ng-container *ngIf=\"!parent.isNullish(item); else nullContentTemplate\">\n    <span\n      class=\"text\"\n      #elem\n      *prizmLet=\"\n        item | prizmCallFunc : parent.stringify : $any(parent.nullContent) | prizmToObservable | async as text\n      \"\n      [prizmHint]=\"text\"\n      [prizmHintHost]=\"hostHint\"\n      [prizmHintDirection]=\"parent.direction\"\n      [prizmHintCanShow]=\"$any(elem | prizmCallFunc : parent.prizmIsTextOverflow$ | async)\"\n    >\n      <ng-container\n        *polymorphOutlet=\"\n          parent.listItemTemplate ?? parent.valueTemplate as content;\n          context: {\n            $implicit: item,\n            value: item | prizmCallFunc : parent.transformer,\n            stringify: text\n          }\n        \"\n      >\n        {{ text }}\n      </ng-container>\n    </span>\n  </ng-container>\n\n  <ng-template #nullContentTemplate>\n    <ng-container *ngIf=\"parent.nullContent\">\n      <ng-container *polymorphOutlet=\"parent.nullContent as content\">\n        {{ content }}\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</div>\n","import { Directive, EventEmitter, HostListener, inject, Input, Output, TemplateRef } from '@angular/core';\nimport { PrizmInputSelectOptionService } from './input-select-option.service';\n\n@Directive({\n  selector: 'ng-template[prizmInputSelectDataList]',\n  exportAs: 'prizmInputSelectDataList',\n  standalone: true,\n})\nexport class PrizmInputSelectDataListDirective<T = any> {\n  constructor(public readonly template: TemplateRef<any>) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  inject,\n  Inject,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  Compare,\n  PrizmCallFuncPipe,\n  PrizmDestroyService,\n  PrizmLetDirective,\n  PrizmToObservablePipe,\n} from '@prizm-ui/helpers';\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport {\n  isPolymorphPrimitive,\n  PolymorphContent,\n  PolymorphOutletDirective,\n} from '../../../directives/polymorph';\nimport {\n  PRIZM_SELECT_OPTIONS,\n  PrizmSelectOptions,\n  PrizmSelectStringify,\n  PrizmSelectValueContext,\n} from './select.options';\nimport { PrizmNativeFocusableElement } from '../../../types';\nimport { PrizmInputControl, PrizmInputTextModule } from '../../input';\nimport { prizmIsNativeFocused, prizmIsTextOverflow$ } from '../../../util';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport {\n  BehaviorSubject,\n  concat,\n  defer,\n  fromEvent,\n  isObservable,\n  merge,\n  Observable,\n  of,\n  Subject,\n  timer,\n} from 'rxjs';\nimport {\n  PrizmSelectIdentityMatcher,\n  PrizmSelectSearchMatcher,\n  PrizmSelectValueTransformer,\n} from './select.model';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  PrizmDropdownHostClasses,\n  PrizmDropdownHostComponent,\n  PrizmDropdownHostStyles,\n} from '../dropdown-host';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules/overlay';\nimport { PrizmInputNgControl } from '../../input/common/base/input-ng-control.class';\nimport { PrizmScrollbarVisibility } from '../../scrollbar';\nimport { PrizmInputSelectOptionDirective } from './input-select-option.directive';\nimport { PrizmInputSelectOptionService } from './input-select-option.service';\nimport { PrizmChipsModule } from '../../chips';\nimport { CommonModule } from '@angular/common';\nimport {\n  PrizmAutoFocusModule,\n  PrizmDropdownControllerModule,\n  PrizmHintDirective,\n  PrizmLifecycleDirective,\n} from '../../../directives';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { prizmWatch } from '../../../observables';\nimport { PrizmSelectInputItemComponent } from './input-select-item.component';\nimport { PrizmInputSelectDataListDirective } from './input-select-data-list.directive';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { PrizmScrollbarDirective } from '../../scrollbar/scrollbar.directive';\nimport { PrizmOverlayComponent } from '../../../modules/overlay/overlay.component';\n\n@Component({\n  selector: 'prizm-input-select',\n  templateUrl: './input-select.component.html',\n  styleUrls: ['./input-select.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    PrizmOverlayComponent,\n    PrizmInputSelectOptionDirective,\n    PolymorphOutletDirective,\n    PrizmInputTextModule,\n    PrizmChipsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PrizmLetDirective,\n    PrizmAutoFocusModule,\n    PrizmHintDirective,\n    PrizmIconComponent,\n    PrizmCallFuncPipe,\n    PrizmScrollbarDirective,\n    PrizmDropdownControllerModule,\n    PrizmLifecycleDirective,\n    PrizmDataListComponent,\n    PrizmSelectInputItemComponent,\n    PrizmDropdownHostComponent,\n    PrizmToObservablePipe,\n    PrizmInputSelectOptionDirective,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmSelectInputComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    PrizmInputSelectOptionService,\n    { provide: PrizmInputControl, useExisting: PrizmSelectInputComponent },\n  ],\n  exportAs: 'prizmSelectInput',\n})\nexport class PrizmSelectInputComponent<T> extends PrizmInputNgControl<T> implements OnInit {\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n  @ViewChild('dropdownHostRef')\n  public readonly dropdownHostElement?: PrizmDropdownHostComponent;\n\n  @ContentChild(PrizmInputSelectDataListDirective) customItemDataList?: PrizmInputSelectDataListDirective;\n\n  @Input() prizmHintDirection: PrizmOverlayOutsidePlacement = 't';\n\n  @Input() prizmHintCanShow!: BooleanInput;\n\n  @Input() set items(data: T[]) {\n    this.items$.next(data as any);\n  }\n  get items(): T[] {\n    return this.items$.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownScroll: PrizmScrollbarVisibility = 'auto';\n\n  @Input() dropdownStyles: PrizmDropdownHostStyles;\n  @Input() dropdownClasses: PrizmDropdownHostClasses;\n\n  @Input()\n  @prizmDefaultProp()\n  searchable = this.options.searchable;\n\n  @Input()\n  @prizmDefaultProp()\n  icon = this.options.icon;\n\n  @Input()\n  @prizmDefaultProp()\n  minDropdownHeight = this.options.minDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  maxDropdownHeight = this.options.maxDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = this.options.placeholder;\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownWidth = this.options.dropdownWidth;\n\n  @Input()\n  @prizmDefaultProp()\n  search: string | null = this.options.search;\n\n  @Input()\n  @prizmDefaultProp()\n  transformer: PrizmSelectValueTransformer<T> = this.options.transformer;\n\n  @Input()\n  @prizmDefaultProp()\n  searchMatcher: PrizmSelectSearchMatcher<T> = this.options.searchMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  emptyContent: PolymorphContent = this.options.emptyContent;\n\n  @Input()\n  @prizmDefaultProp()\n  nullContent: PolymorphContent = this.options.nullContent;\n\n  readonly isPolymorphPrimitive = isPolymorphPrimitive;\n  readonly prizmIsTextOverflow$ = prizmIsTextOverflow$;\n  public readonly printing$ = new BehaviorSubject<string>('');\n\n  /**\n   * need only clear function\n   * */\n  @Input()\n  @prizmDefaultProp()\n  stringify: PrizmSelectStringify<T> = this.options.stringify;\n\n  @Input()\n  @prizmDefaultProp()\n  identityMatcher: PrizmSelectIdentityMatcher<T> = this.options.identityMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  valueTemplate: PolymorphContent<PrizmSelectValueContext<T>> = this.options.valueContent;\n\n  @Input()\n  @prizmDefaultProp()\n  listItemTemplate: PolymorphContent<PrizmSelectValueContext<T>> = this.options.listItemTemplate;\n\n  override readonly testId_ = 'ui_select';\n\n  readonly isNotNullish = Compare.isNotNullish;\n\n  @Output()\n  public readonly searchChange = new EventEmitter<string | null>();\n\n  override defaultLabel = this.options.label;\n\n  public readonly direction: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n  public readonly items$ = new BehaviorSubject([]);\n  public readonly defaultIcon = 'chevrons-dropdown';\n  public readonly nativeElementType = 'select';\n  public readonly hasClearButton = true;\n  readonly isNullish = Compare.isNullish;\n\n  filteredItems$!: any;\n\n  public filteredItems: T[] = [];\n  private searchValue!: string;\n\n  readonly focused$$ = new Subject<boolean>();\n  readonly focused$ = this.focused$$.asObservable();\n  readonly opened$$ = new BehaviorSubject<boolean>(false);\n  readonly opened$: Observable<boolean> = this.opened$$.asObservable();\n  private readonly inputSelectOptionService = inject(PrizmInputSelectOptionService, {\n    self: true,\n  });\n  constructor(\n    @Inject(PRIZM_SELECT_OPTIONS) private readonly options: PrizmSelectOptions<T>,\n    @Inject(Injector) injector: Injector\n  ) {\n    super(injector);\n  }\n\n  private initSelectListener() {\n    this.inputSelectOptionService.selected$\n      .pipe(\n        tap(item => {\n          this.select(item);\n        }),\n        prizmWatch(this.changeDetectorRef),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public override ngOnInit() {\n    super.ngOnInit();\n    this.initSelectListener();\n    fromEvent(this.layoutComponent?.el.nativeElement ?? this.elRef_.nativeElement, 'click')\n      .pipe(\n        tap(() => {\n          this.safeOpenModal();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.filteredItems$ = concat(this.printing$.pipe()).pipe(\n      tap(value => this.searchEmit(value as string)),\n      distinctUntilChanged(),\n      switchMap(value => {\n        return this.items$.pipe(\n          map(items => {\n            if (!this.searchable || !value?.toString().replace(/[ ]+/g, '')) return items;\n            const searchValue = (this.searchValue = value.toString().trim());\n            return items?.filter(item => this.searchMatcher(searchValue, item)) ?? [];\n          }),\n          map(items => {\n            if (this.nullContent && items?.length && items[0] !== null) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              items = [null, ...items];\n            }\n            return items;\n          }),\n          tap(items => {\n            this.filteredItems = items;\n            this.dropdownHostElement?.reCalculatePositions(1000 / 60);\n          }),\n          debounceTime(0),\n          shareReplay(1)\n        );\n      })\n    );\n  }\n\n  public override get empty(): Observable<boolean> {\n    return this.value$.pipe(map(value => value == null));\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement | null {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  public onClear(): void {\n    timer(0)\n      .pipe(\n        tap(() => {\n          this.select(null as any);\n          this.changeDetectorRef.markForCheck();\n        })\n      )\n      .subscribe();\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    this.updateValue(null as any);\n    this.markAsTouched();\n\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public select(item: T): void {\n    this.markAsTouched();\n    const selectedValue = item && this.transformer(item);\n    if (!this.identityMatcher(selectedValue, this.value)) {\n      this.updateValue(selectedValue);\n    }\n    this.opened$$.next(false);\n  }\n\n  public safeOpenModal(): void {\n    if (this.disabled) return;\n    this.printing$.next('');\n    const open = !this.opened$$.value && !this.disabled; // && inputElement && prizmIsNativeFocused(inputElement);\n    this.opened$$.next(open);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public override updateValue(value: T) {\n    super.updateValue(value);\n\n    // set touched on change value\n    this.ngControl.control?.markAsTouched();\n  }\n\n  private searchEmit(value: string): void {\n    if (this.search === value) return;\n    this.search = value;\n    this.searchChange.emit(value);\n  }\n\n  public getValueFromItems(value: T, items: T[]) {\n    const newItem = items.find(i => this.identityMatcher(this.transformer(i), value));\n    return newItem;\n  }\n\n  public getCurrentValue(value: T, items: T[]): string | Observable<string> {\n    const newItem = this.getFullObjectOfCurrent(this.value, items);\n    if (Compare.isNullish(newItem)) return '';\n    return this.stringify(newItem ?? value);\n  }\n\n  public getFullObjectOfCurrent(value: T, items: T[]): T {\n    if (Compare.isNullish(value)) return null as any;\n    const newItem = this.getValueFromItems(this.value, items);\n    return newItem as any;\n  }\n\n  public stringifyForInner(\n    i: T,\n    outer?: boolean,\n    label?: string | null,\n    placeholder?: string,\n    nullContent?: PolymorphContent\n  ): Observable<string> {\n    if (!this.layoutComponent) {\n      return defer(() => {\n        const result = this.stringify(i, nullContent);\n        return isObservable(result) ? result : of(result);\n      });\n    }\n\n    let hideNullContent;\n    return merge(this.value$, this.layoutComponent.changes$).pipe(\n      startWith(),\n      switchMap(() => {\n        hideNullContent = (outer && placeholder) || !outer;\n        const flow$ = this.stringify(i, hideNullContent ? null : nullContent);\n        return isObservable(flow$) ? flow$ : of(flow$);\n      })\n    );\n  }\n}\n","<ng-container *prizmLet=\"items$ | async as itemList\">\n  <prizm-dropdown-host\n    #dropdownHostRef\n    *prizmLet=\"items && value | prizmCallFunc : getFullObjectOfCurrent : itemList as val\"\n    [content]=\"dropdown\"\n    [isOpen]=\"$any(opened$ | async)\"\n    [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n    [prizmDropdownHostWidth]=\"dropdownWidth\"\n    [prizmDropdownMinHeight]=\"minDropdownHeight\"\n    [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n    [dropdownStyles]=\"dropdownStyles\"\n    [dropdownClasses]=\"dropdownClasses\"\n    (isOpenChange)=\"opened$$.next($event)\"\n  >\n    <ng-container>\n      <ng-container\n        *polymorphOutlet=\"\n          valueTemplate && editableTemplate as content;\n          context: {\n            $implicit: $any(val),\n            value: val | prizmCallFunc : transformer,\n            stringify: $any(val | prizmCallFunc : stringify : $any(nullContent) | prizmToObservable | async)\n          }\n        \"\n      >\n        <ng-container\n          *prizmLet=\"\n            val\n              | prizmCallFunc\n                : stringifyForInner\n                : layoutComponent?.outer\n                : layoutComponent?.label\n                : placeholder\n                : nullContent\n              | async as text\n          \"\n        >\n          <input\n            class=\"input-search\"\n            #focusableElementRef\n            [placeholder]=\"placeholder\"\n            [disabled]=\"disabled\"\n            [tabIndex]=\"!disabled ? 0 : -1\"\n            [title]=\"val\"\n            [readonly]=\"true\"\n            [prizmHintDirection]=\"prizmHintDirection\"\n            [prizmHintCanShow]=\"prizmHintCanShow\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [ngModel]=\"text ?? ''\"\n            (focus)=\"focused$$.next(true)\"\n            (blur)=\"focused$$.next(false)\"\n            prizmInput\n          />\n        </ng-container>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #editableTemplate>\n      <div\n        #focusableElementRef\n        *prizmLet=\"value | prizmCallFunc : getFullObjectOfCurrent : itemList as val\"\n        [ngModelOptions]=\"{ standalone: true }\"\n        [ngModel]=\"(value | prizmCallFunc : getCurrentValue : itemList) ?? ''\"\n        [attr.contenteditable]=\"false\"\n        [tabIndex]=\"!disabled ? 1 : -1\"\n        [disabled]=\"disabled\"\n        (focus)=\"focused$$.next(true)\"\n        (blur)=\"focused$$.next(false)\"\n        prizmInput\n      >\n        <ng-container *ngIf=\"isNotNullish(val); else placeholderTemplate\">\n          <ng-container\n            *polymorphOutlet=\"\n              valueTemplate as content;\n              context: {\n                $implicit: $any(val),\n                value: val | prizmCallFunc : transformer,\n                stringify: $any(\n                  val | prizmCallFunc : stringify : $any(nullContent) | prizmToObservable | async\n                )\n              }\n            \"\n          >\n            <ng-container\n              *prizmLet=\"\n                val | prizmCallFunc : stringify : $any(nullContent) | prizmToObservable | async as text\n              \"\n            >\n              {{ text }}\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <ng-template #placeholderTemplate>\n          <div class=\"placeholder\">{{ placeholder }}</div>\n        </ng-template>\n      </div>\n    </ng-template>\n\n    <ng-template #dropdown>\n      <ng-container> </ng-container>\n      <prizm-data-list\n        class=\"block\"\n        *prizmLet=\"(filteredItems$ | async) ?? [] as items\"\n        [scroll]=\"customItemDataList ? 'none' : dropdownScroll\"\n        [style.--prizm-data-list-border]=\"0\"\n      >\n        <div class=\"list-search-item\" *ngIf=\"searchable\">\n          <prizm-input-layout size=\"m\" label=\"Поиск\">\n            <input\n              class=\"input-search\"\n              [ngModel]=\"printing$.value\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              (ngModelChange)=\"dropdownHostRef.reCalculatePositions(1000 / 16); printing$.next($event)\"\n              prizmInput\n              prizmAutoFocus\n            />\n            <button [interactive]=\"true\" prizmInputIconButton=\"sort-zoom-in\" prizm-input-right></button>\n          </prizm-input-layout>\n        </div>\n        <ng-container *ngIf=\"items?.length; else emptyTemplate\">\n          <ng-container *polymorphOutlet=\"customItemDataList?.template\">\n            <prizm-input-select-item *ngFor=\"let item of items\" [item]=\"item\"></prizm-input-select-item>\n          </ng-container>\n          <!--          <div-->\n          <!--            class=\"item\"-->\n          <!--            #hostHint-->\n          <!--            *ngFor=\"let item of items; let idx = index\"-->\n          <!--            [class.most-relevant]=\"isMostRelevant(idx, items)\"-->\n          <!--            [class.selected]=\"-->\n          <!--              item === value ||-->\n          <!--              (item && value && (transformer(item) | prizmCallFunc : identityMatcher : value))-->\n          <!--            \"-->\n          <!--            prizmInputSelectOption-->\n          <!--            [value]='item'-->\n          <!--          >-->\n          <!--            <ng-container *ngIf=\"!isNullish(item); else nullContentTemplate\">-->\n          <!--              <span-->\n          <!--                class=\"text\"-->\n          <!--                #elem-->\n          <!--                *prizmLet=\"-->\n          <!--                  item | prizmCallFunc : stringify : $any(nullContent) | prizmToObservable | async as text-->\n          <!--                \"-->\n          <!--                [prizmHint]=\"text\"-->\n          <!--                [prizmHintHost]=\"hostHint\"-->\n          <!--                [prizmHintDirection]=\"direction\"-->\n          <!--                [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"-->\n          <!--              >-->\n          <!--                <ng-container-->\n          <!--                  *polymorphOutlet=\"-->\n          <!--                    listItemTemplate ?? valueTemplate as content;-->\n          <!--                    context: {-->\n          <!--                      $implicit: item,-->\n          <!--                      value: item | prizmCallFunc : transformer,-->\n          <!--                      stringify: text-->\n          <!--                    }-->\n          <!--                  \"-->\n          <!--                >-->\n          <!--                  {{ text }}-->\n          <!--                </ng-container>-->\n          <!--              </span>-->\n          <!--            </ng-container>-->\n\n          <!--            <ng-template #nullContentTemplate>-->\n          <!--              <ng-container *ngIf=\"nullContent\">-->\n          <!--                <ng-container *polymorphOutlet=\"nullContent as content\">-->\n          <!--                  {{ content }}-->\n          <!--                </ng-container>-->\n          <!--              </ng-container>-->\n          <!--            </ng-template>-->\n          <!--          </div>-->\n        </ng-container>\n        <ng-template #emptyTemplate>\n          <div class=\"empty-template\">\n            <ng-container *polymorphOutlet=\"emptyContent as content\">\n              {{ content }}\n            </ng-container>\n          </div>\n        </ng-template>\n      </prizm-data-list>\n    </ng-template>\n  </prizm-dropdown-host>\n\n  <ng-container *prizmInputLayoutRight>\n    <ng-container\n      *polymorphOutlet=\"\n        icon || defaultIcon as iconName;\n        context: $any({ opened: opened$ | async, disabled: disabled })\n      \"\n    >\n      <prizm-icon\n        [class.disabled]=\"disabled\"\n        [class.opened]=\"opened$ | async\"\n        [class.active]=\"(focused$ | async) || (opened$ | async)\"\n        [class.icon-dropdown]=\"iconName === defaultIcon\"\n        [iconClass]=\"$any(iconName)\"\n        (click)=\"(!disabled)\"\n      >\n      </prizm-icon>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../../input/input-text/input-text.module';\nimport { PrizmSelectInputComponent } from './input-select.component';\nimport { PrizmSelectInputItemComponent } from './input-select-item.component';\nimport { PrizmInputSelectDataListDirective } from './input-select-data-list.directive';\n\n/**\n * @deprecated\n * use standalone directives\n * */\n@NgModule({\n  imports: [\n    PrizmSelectInputComponent,\n    PrizmSelectInputItemComponent,\n    PrizmInputSelectDataListDirective,\n    PrizmInputTextModule,\n  ],\n  exports: [\n    PrizmSelectInputComponent,\n    PrizmSelectInputItemComponent,\n    PrizmInputSelectDataListDirective,\n    PrizmInputTextModule,\n  ],\n})\nexport class PrizmInputSelectModule {}\n","import { coerceNumberProperty, NumberInput } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { AsyncSubject, Observable } from 'rxjs';\nimport {\n  PrizmPaginatorData,\n  PrizmPaginatorOptions,\n  PrizmPaginatorOutput,\n  PrizmPaginatorType,\n} from './interfaces/prizm-paginator.interface';\nimport { PolymorphContent, PolymorphOutletDirective } from '../../directives';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PrizmLanguagePaginator } from '@prizm-ui/i18n';\nimport { PRIZM_PAGINATOR } from '../../tokens';\nimport { prizmI18nInitWithKey } from '../../services';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCallFuncPipe, PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';\nimport { PrizmIconComponent } from '../icon';\nimport { PrizmInputSelectModule } from '../dropdowns/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrizmButtonModule } from '../button';\n\n@Component({\n  selector: 'prizm-paginator',\n  templateUrl: './prizm-paginator.component.html',\n  styleUrls: ['./prizm-paginator.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [...prizmI18nInitWithKey(PRIZM_PAGINATOR, 'paginator')],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmCallFuncPipe,\n    PolymorphOutletDirective,\n    PrizmLetDirective,\n    PrizmIconComponent,\n    PrizmInputSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n    PrizmButtonModule,\n    PrizmPluckPipe,\n  ],\n})\nexport class PrizmPaginatorComponent extends PrizmAbstractTestId implements OnInit {\n  @Input() public paginatorType: PrizmPaginatorType = 'finite';\n  @Input() textOnPage: PolymorphContent = 'Строк на странице';\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get totalRecords(): number | null {\n    return this.paginatorType === 'finite' ? this._totalRecords : null;\n  }\n  set totalRecords(value: NumberInput) {\n    this._totalRecords = Math.max(coerceNumberProperty(value), 0);\n    this.changeDetectorRef.markForCheck();\n  }\n  private _totalRecords = 0;\n\n  // Сколько номеров видно на экране\n  @Input() public pageLinkSize: number = Number.POSITIVE_INFINITY;\n  @Input() public showMoreDisabled = false;\n  // disabled\n  @Input() public disabled = false;\n\n  /** Number of items to display on a page. */\n  @Input()\n  get rows(): number {\n    return this._rows;\n  }\n  set rows(value: NumberInput) {\n    this._rows = Math.max(coerceNumberProperty(value), 0);\n    if (!this._rows) {\n      this._rows = this.rowsCountOptions[0];\n    }\n\n    this.changeDetectorRef.markForCheck();\n  }\n  private _rows!: number;\n\n  /** The 1-based page index of the displayed list of items. Defaulted to 1. */\n  @Input()\n  get page(): number {\n    return this.currentPage;\n  }\n  set page(value: NumberInput) {\n    this.currentPage = Math.max(coerceNumberProperty(value), 1);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  @Input() paginatorOptions: PrizmPaginatorOptions = {\n    noRowsSelector: false,\n    noRowsSelectorLabel: false,\n    noInfo: false,\n    noPages: false,\n  };\n\n  @Input() public leftButtonLabel = '';\n  @Input() public rightButtonLabel = '';\n  @Input() moreButtonLabel = 'Показать еще';\n\n  @Input() public rowsCountOptions: number[] = [];\n  @Output() public paginatorChange: EventEmitter<PrizmPaginatorOutput> =\n    new EventEmitter<PrizmPaginatorOutput>();\n  @Output() public pageChange: EventEmitter<number> = new EventEmitter<number>();\n  @Output() public rowsChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  override readonly testId_ = 'ui_paginator';\n\n  /**\n   * The 1-based page index of the displayed list of items.\n   */\n  public currentPage = 1;\n  // Количесвто пакетов = Суммарное количество данных / Сколько данных в одном пакете\n  public pagesCount = 0;\n\n  // `AsyncSubject` used so what late subscribers notified immediately.\n  private readonly initialized$$ = new AsyncSubject<void>();\n\n  public readonly initialized = this.initialized$$.asObservable();\n\n  constructor(\n    @Inject(PRIZM_PAGINATOR)\n    public readonly paginator$: Observable<PrizmLanguagePaginator['paginator']>,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.paginationGenerator();\n    this.initialized$$.next();\n    this.initialized$$.complete();\n  }\n\n  /**\n   * Updates the list of page options to display to the user.\n   */\n  public paginationGenerator(): PrizmPaginatorData | null {\n    if (this.isDataValid) {\n      const allNumbers = new Array(this.pagesCount).fill(0).map((page, i) => i + 1);\n\n      let mid: number[];\n      if (this.currentPage - Math.ceil((this.pageLinkSize - 1) / 2) <= 1) {\n        mid = allNumbers.filter(item => item <= this.pageLinkSize);\n      } else if (this.currentPage + Math.ceil((this.pageLinkSize - 1) / 2) >= this.pagesCount) {\n        mid = allNumbers.filter(item => item > this.pagesCount - this.pageLinkSize);\n      } else {\n        mid = allNumbers.filter(\n          item =>\n            item >= this.currentPage - Math.ceil((this.pageLinkSize - 1) / 2) &&\n            item <= this.currentPage + Math.floor((this.pageLinkSize - 1) / 2)\n        );\n      }\n\n      this.changeDetectorRef.markForCheck();\n\n      return {\n        mid: mid,\n        left: mid[0] === 1 ? null : 1,\n        right: mid[mid.length - 1] === this.pagesCount ? null : this.pagesCount,\n      };\n    }\n\n    return null;\n  }\n\n  public get realTotalRecord(): number | null {\n    return this.paginatorType === 'infinite' ? this.rows * (this.currentPage + 1) : this.totalRecords;\n  }\n\n  /**\n   * Tries to normalize paginator configuration.\n   */\n  public get isDataValid(): boolean {\n    if (!this.rows) return false;\n    if (!this.totalRecords) return false;\n\n    this.pagesCount = Math.ceil(this.totalRecords / this.rows);\n    this.currentPage = Math.min(this.currentPage, this.pagesCount) || 1;\n\n    return true;\n  }\n\n  public changePage(page: number): void {\n    const prev = this.currentPage;\n    this.page = page;\n\n    // Emit only if real value was changed by the setter\n    if (this.currentPage !== prev) {\n      this.emitPageChange();\n    }\n  }\n\n  public increase(): void {\n    this.changePage(this.page + 1);\n  }\n\n  public decrease(): void {\n    this.changePage(this.page - 1);\n  }\n  public toLastPage(): void {\n    this.changePage(this.pagesCount);\n  }\n\n  public toFirstPage(): void {\n    this.changePage(0);\n  }\n\n  private emitPageChange(): void {\n    this.pageChange.emit(this.currentPage);\n    this.emitPaginatorChanges();\n  }\n\n  private emitPaginatorChanges(): void {\n    this.paginatorChange.emit({\n      page: this.currentPage,\n      first: (this.currentPage - 1) * this.rows + 1,\n      rows: this.rows,\n      pagesCount: this.paginatorType === 'infinite' ? null : this.pagesCount,\n    });\n  }\n\n  public changeRows(rows: null | number): void {\n    if (this.rows === rows) return;\n    this.rows = rows;\n    this.paginationGenerator();\n    this.rowsChange.emit(this.rows);\n    this.emitPaginatorChanges();\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <span\n      class=\"rows rows__count\"\n      *ngIf=\"!paginatorOptions?.noRowsSelector && !paginatorOptions?.noRowsSelectorLabel\"\n    >\n      <ng-container *polymorphOutlet=\"textOnPage as title\">\n        {{ title }}\n      </ng-container>\n    </span>\n    <div class=\"rows-selector\" *ngIf=\"!paginatorOptions?.noRowsSelector\">\n      <prizm-input-layout [forceClear]=\"false\" [outer]=\"true\" label=\"\" size=\"s\">\n        <prizm-input-select\n          [items]=\"$any(this.rowsCountOptions?.length) > 0 ? this.rowsCountOptions : [rows]\"\n          [disabled]=\"disabled\"\n          [ngModel]=\"rows\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          [nullContent]=\"$any(null)\"\n          (ngModelChange)=\"changeRows($event)\"\n        ></prizm-input-select>\n      </prizm-input-layout>\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <span class=\"rows rows__show\" *ngIf=\"!paginatorOptions?.noInfo\" [hidden]=\"disabled\">\n      {{ paginator$ | async | prizmPluck : ['linesShown'] }} {{ (currentPage - 1) * rows + 1 }}-{{\n        currentPage * rows > $any(totalRecords) ? totalRecords : currentPage * rows\n      }}\n      из {{ realTotalRecord }}\n    </span>\n    <div\n      class=\"paginator paginator__finite\"\n      *ngIf=\"paginatorType === 'finite' && paginationGenerator() as pagingData\"\n    >\n      <button\n        class=\"control control_left\"\n        *ngIf=\"paginatorOptions.noToFirstPageBtn ?? true\"\n        [icon]=\"'chevrons-double-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"toFirstPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <button\n        class=\"control control_left\"\n        *ngIf=\"!leftButtonLabel; else leftLabelBtn\"\n        [icon]=\"'arrows-chevron-left'\"\n        [disabled]=\"disabled || currentPage === 1\"\n        (click)=\"decrease()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #leftLabelBtn>\n        <button\n          class=\"control control_left\"\n          *ngIf=\"leftButtonLabel\"\n          [icon]=\"'arrows-chevron-left'\"\n          [disabled]=\"disabled || currentPage === 1\"\n          (click)=\"decrease()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ leftButtonLabel }}\n        </button>\n      </ng-template>\n\n      <ng-container *ngIf=\"!paginatorOptions?.noPages\">\n        <ng-container *ngIf=\"pagingData.left\">\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.left)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.left }}\n          </button>\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.left + 1 !== pagingData.mid[0]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n        </ng-container>\n\n        <button\n          class=\"page\"\n          *ngFor=\"let page of pagingData.mid\"\n          [disabled]=\"disabled\"\n          [pseudoPressed]=\"page === currentPage\"\n          (click)=\"changePage(page)\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ page }}\n        </button>\n\n        <ng-container *ngIf=\"pagingData.right\">\n          <div\n            class=\"dots\"\n            *ngIf=\"pagingData.right - 1 !== pagingData.mid[pagingData.mid.length - 1]\"\n            [class.dots_disabled]=\"disabled\"\n          >\n            ...\n          </div>\n          <button\n            class=\"page\"\n            [disabled]=\"disabled\"\n            (click)=\"changePage(pagingData.right)\"\n            prizmButton\n            appearanceType=\"ghost\"\n            appearance=\"secondary\"\n            size=\"m\"\n          >\n            {{ pagingData.right }}\n          </button>\n        </ng-container>\n      </ng-container>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"!rightButtonLabel; else rightLabelBtn\"\n        [icon]=\"'arrows-chevron-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"increase()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n      <ng-template #rightLabelBtn>\n        <button\n          class=\"control_right\"\n          [iconRight]=\"'arrows-chevron-right'\"\n          [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n          (click)=\"increase()\"\n          prizmButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        >\n          {{ rightButtonLabel }}\n        </button>\n      </ng-template>\n\n      <button\n        class=\"control control_right\"\n        *ngIf=\"paginatorOptions.noToLastPageBtn ?? true\"\n        [icon]=\"'chevrons-double-right'\"\n        [disabled]=\"disabled || (currentPage === pagesCount ?? currentPage === 0)\"\n        (click)=\"toLastPage()\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </div>\n\n    <div class=\"paginator paginator__infinite\" *ngIf=\"paginatorType === 'infinite'\">\n      <button\n        [disabled]=\"disabled || showMoreDisabled\"\n        (click)=\"increase()\"\n        prizmButton\n        appearanceType=\"ghost\"\n        appearance=\"primary\"\n        size=\"m\"\n      >\n        {{ moreButtonLabel }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmPaginatorComponent } from './prizm-paginator.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmPaginatorComponent],\n  exports: [PrizmPaginatorComponent],\n})\nexport class PrizmPaginatorModule {}\n","import { PrizmToastOptions } from './types';\nimport { ReplaySubject, Subject, timer } from 'rxjs';\nimport { PrizmToastDefaultOptions } from './toast-options';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PolymorphContent } from '../../directives/polymorph';\nimport { PrizmToastService } from './toast.service';\nimport { prizmGenerateId } from '@prizm-ui/helpers';\n\nexport class PrizmToastRef {\n  private show$ = new ReplaySubject<boolean>(1);\n  private destroy$ = new Subject<void>();\n  private hash_ = prizmGenerateId();\n  get hash(): string {\n    return this.hash_;\n  }\n  get buttonAppearance(): string {\n    return this.appearance === 'info' ? 'primary' : (this.appearance as string);\n  }\n  constructor(\n    public content: PolymorphContent,\n    readonly weight: PrizmToastOptions['weight'],\n    readonly closeAfter: PrizmToastOptions['timer'],\n    public title: PrizmToastOptions['title'],\n    readonly data: PrizmToastOptions['data'],\n    readonly position: PrizmToastOptions['position'],\n    readonly id: PrizmToastOptions['id'],\n    readonly appearance: PrizmToastOptions['appearance'],\n    readonly options: PrizmToastDefaultOptions,\n    readonly toastService: PrizmToastService,\n    public show: boolean = true,\n    readonly isPlatform: PrizmToastOptions['isPlatform']\n  ) {\n    if (this.show) this.open();\n    if (this.closeAfter) this.close(this.closeAfter);\n  }\n\n  public readonly destroy = (): void => {\n    this.destroy$.next();\n  };\n\n  public readonly close = (closeAfterMs?: number): void => {\n    this.destroy();\n    if (!closeAfterMs) {\n      this.toastService.delete(this.id as string);\n    }\n\n    if (!closeAfterMs) return void this.changeVisibleState(false);\n    timer(closeAfterMs)\n      .pipe(\n        tap(() => this.close()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  };\n\n  public readonly open = (): void => {\n    this.changeVisibleState(true);\n  };\n\n  public readonly updateContent = (content: PolymorphContent): void => {\n    if (content === this.content) return;\n    this.content = content;\n    this.detect();\n  };\n\n  public readonly updateTitle = (title: PrizmToastOptions['title']): void => {\n    if (title === this.title) return;\n    this.title = title;\n    this.detect();\n  };\n\n  private changeVisibleState(show: boolean): void {\n    this.show$.next((this.show = show));\n    this.detect();\n  }\n\n  private detect(): void {\n    this.hash_ = prizmGenerateId();\n    this.toastService.detect();\n  }\n}\n","import { prizmGenerateId } from '@prizm-ui/helpers';\nimport { PRIZM_TOAST_ID } from './types';\n\nexport function generateToastId(): PRIZM_TOAST_ID {\n  return `prizm-toast-id__${prizmGenerateId()}`;\n}\n","import { PolymorphContent } from '../../directives/polymorph';\n\nexport enum PrizmToastPosition {\n  TOP_MIDDLE = 'tm',\n  TOP_LEFT = 'tl',\n  TOP_RIGHT = 'tr',\n  BOTTOM_MIDDLE = 'bm',\n  BOTTOM_LEFT = 'bl',\n  BOTTOM_RIGHT = 'br',\n}\n\nexport type PRIZM_TOAST_ID = string;\nexport type PRIZM_TOAST_CONTAINER_ID = string;\n\nexport type PrizmToastAppearance = 'info' | 'success' | 'warning' | 'danger' | 'secondary';\n\nexport type PrizmToastOptions = {\n  position?: PrizmToastPosition | PRIZM_TOAST_CONTAINER_ID;\n  /* weight - use for DESC sorting */\n  weight?: number;\n  title?: PolymorphContent;\n  data?: Record<string, unknown>;\n  appearance?: PrizmToastAppearance;\n  id?: PRIZM_TOAST_ID;\n  timer?: number;\n  autoClose?: boolean;\n  context?: Record<string, unknown>;\n  show?: boolean;\n  isPlatform?: boolean;\n};\n","import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { IndicatorStatus, IndicatorType } from './indicator.models';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'prizm-indicator',\n  templateUrl: './indicator.component.html',\n  styleUrls: ['./indicator.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [NgIf],\n})\nexport class PrizmIndicatorComponent extends PrizmAbstractTestId {\n  @Input() public type: IndicatorType = 'simple';\n  @Input() public status: IndicatorStatus = 'info';\n\n  override readonly testId_ = 'ui_indicator';\n\n  public readonly iconMap = {\n    info: 'alerts-information-variant',\n    secondary: 'alerts-information-variant',\n    success: 'selection-check-simple',\n    warning: 'alerts-mark',\n    danger: 'alerts-mark',\n  };\n}\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const IndicatorComponent = PrizmIndicatorComponent;\n","<div\n  class=\"indicator\"\n  [class.indicator_with-icon]=\"type === 'icon'\"\n  [attr.status]=\"status\"\n  [attr.type]=\"type\"\n>\n  <span class=\"indicator__icon prizm-icon {{iconMap?.[status]}}\" *ngIf=\"type === 'icon'\"></span>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PolymorphContent } from '../../../directives/polymorph';\nimport { PrizmToastRef } from '../toast-ref';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-toast-single',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToastComponent extends PrizmAbstractTestId {\n  override readonly testId_ = 'ui_toast_single';\n\n  // TODO remove record to context type\n  get context(): Record<string, any> {\n    return this.toastRef as Record<string, any>;\n  }\n  get temp(): PolymorphContent {\n    return this.toastRef.content;\n  }\n  constructor(public readonly toastRef: PrizmToastRef) {\n    super();\n  }\n}\n","<div\n  class=\"prizm-toast-info-container {{ toastRef.appearance }}\"\n  [class.is-platform]=\"toastRef.isPlatform\"\n  prizmTheme\n>\n  <div class=\"icon-block\">\n    <prizm-indicator [status]=\"$any(toastRef.appearance)\" type=\"icon\"></prizm-indicator>\n  </div>\n  <div class=\"content-box\">\n    <span class=\"title prizm-font-dynamic-title-h4\" *ngIf=\"toastRef.title\">\n      <ng-container *polymorphOutlet=\"toastRef.title as content; context: context\">{{\n        content\n      }}</ng-container>\n    </span>\n    <div class=\"content prizm-font-main-body-14\">\n      <ng-container *polymorphOutlet=\"temp as content; context: context\">{{ content }}</ng-container>\n    </div>\n  </div>\n\n  <div class=\"control\">\n    <button\n      [size]=\"16\"\n      [interactive]=\"true\"\n      (click)=\"toastRef.close()\"\n      prizmInputIconButton=\"cancel-close\"\n    ></button>\n  </div>\n</div>\n","import { InjectionToken, Type, ValueProvider } from '@angular/core';\nimport { PrizmToastAppearance, PrizmToastOptions, PrizmToastPosition } from './types';\nimport { ToastComponent } from './toast/toast.component';\n\nexport interface PrizmToastDefaultOptions {\n  readonly position: PrizmToastPosition;\n  readonly timer: number;\n  readonly data: PrizmToastOptions['data'];\n  readonly title: PrizmToastOptions['title'];\n  readonly appearance: PrizmToastAppearance;\n  readonly templateSuccess: Type<unknown>;\n  readonly templateDanger: Type<unknown>;\n  readonly templateWarning: Type<unknown>;\n  readonly templateInfo: Type<unknown>;\n  readonly isPlatform: boolean;\n}\n\n/** Default values for the toast options. */\nexport const PRIZM_TOAST_DEFAULT_OPTIONS: PrizmToastDefaultOptions = {\n  position: PrizmToastPosition.TOP_RIGHT,\n  timer: 5000,\n  title: '',\n  appearance: 'info',\n  isPlatform: false,\n  data: {},\n  /* You can use also different components for each appearance*/\n  templateSuccess: ToastComponent,\n  templateDanger: ToastComponent,\n  templateWarning: ToastComponent,\n  templateInfo: ToastComponent,\n};\n\nexport const PRIZM_TOAST_OPTIONS = new InjectionToken<PrizmToastDefaultOptions>(\n  'Default parameters for toast component',\n  {\n    factory: (): typeof PRIZM_TOAST_DEFAULT_OPTIONS => PRIZM_TOAST_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmToastOptionsProvider: (options: Partial<PrizmToastDefaultOptions>) => ValueProvider = (\n  options: Partial<PrizmToastDefaultOptions>\n) => ({\n  provide: PRIZM_TOAST_OPTIONS,\n  useValue: { ...PRIZM_TOAST_DEFAULT_OPTIONS, ...options },\n});\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { PolymorphContent } from '../../directives/polymorph';\nimport { PRIZM_TOAST_ID, PrizmToastOptions } from './types';\nimport { PrizmToastRef } from './toast-ref';\nimport { generateToastId } from './util';\nimport { PRIZM_TOAST_OPTIONS, PrizmToastDefaultOptions } from './toast-options';\nimport { PrizmToastExistException } from '../../exceptions/toast-exist.exception';\nimport { Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { PrizmToastNotExistException } from '../../exceptions/toast-not-exist.exception';\n\nexport type ToastRefMap = Map<PRIZM_TOAST_ID, PrizmToastRef>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmToastService implements OnDestroy {\n  /* main storage for control by id */\n  private readonly refs: ToastRefMap = new Map();\n  private readonly changesSource$ = new Subject<void>();\n  readonly changes$ = this.changesSource$.pipe(\n    map(() => [...this.refs.values()].sort((a, b) => (b?.weight ?? 0) - (a?.weight ?? 0))),\n    shareReplay(1)\n  );\n\n  readonly destroy$ = new Subject<void>();\n\n  constructor(@Inject(PRIZM_TOAST_OPTIONS) private readonly options: PrizmToastDefaultOptions) {}\n\n  get size(): number {\n    return this.refs.size;\n  }\n\n  public create(content: PolymorphContent, options: PrizmToastOptions = {}): PrizmToastRef {\n    const id = options.id || generateToastId();\n    if (this.refs.has(id)) throw new PrizmToastExistException(id);\n    const ref = new PrizmToastRef(\n      content,\n      options.weight ?? 0,\n      options.timer ?? this.options.timer,\n      options.title ?? this.options.title,\n      options.data ?? this.options.data,\n      options.position ?? this.options.position,\n      id,\n      options.appearance ?? this.options.appearance,\n      this.options,\n      this,\n      options.show,\n      options.isPlatform ?? this.options.isPlatform\n    );\n\n    this.refs.set(id, ref);\n    this.detect();\n    return ref;\n  }\n\n  public detect(): void {\n    this.changesSource$.next();\n  }\n\n  public updateContent(id: PRIZM_TOAST_ID, content: PolymorphContent): void {\n    if (!this.refs.has(id)) throw new PrizmToastNotExistException(id);\n    this.refs.get(id)?.updateContent(content);\n  }\n\n  public updateTitle(id: PRIZM_TOAST_ID, title: PrizmToastOptions['title']): PrizmToastRef {\n    if (!this.refs.has(id)) throw new PrizmToastNotExistException(id);\n    const ref = this.refs.get(id);\n    ref?.updateTitle(title);\n\n    return ref as PrizmToastRef;\n  }\n\n  public delete(id: PRIZM_TOAST_ID): void {\n    if (!this.refs.has(id)) throw new PrizmToastNotExistException(id);\n    this.refs.get(id)?.destroy();\n    this.refs.delete(id);\n    this.detect();\n  }\n\n  public deleteAll(): void {\n    this.refs.forEach((_, id) => {\n      this.delete(id);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { PrizmToastRef } from '../toast-ref';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-toast-wrapper',\n  templateUrl: './toast-wrapper.component.html',\n  styleUrls: ['./toast-wrapper.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ToastWrapperComponent extends PrizmAbstractTestId implements OnInit {\n  @Input() ref!: PrizmToastRef;\n\n  override readonly testId_ = 'ui_toast_wrapper';\n\n  @HostBinding('attr.id') get getRefId(): string {\n    return 'prizm-toast-id' + this.ref.id;\n  }\n\n  get component(): Type<unknown> {\n    switch (this.ref.appearance) {\n      case 'danger':\n        return this.ref.options.templateDanger;\n      case 'warning':\n        return this.ref.options.templateWarning;\n      case 'success':\n        return this.ref.options.templateSuccess;\n\n      default:\n      case 'info':\n        return this.ref.options.templateInfo;\n    }\n  }\n  tempInjector!: Injector;\n\n  constructor(private readonly injector: Injector) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.createInjectorForChild();\n  }\n\n  private createInjectorForChild(): void {\n    this.tempInjector = Injector.create({\n      providers: [\n        {\n          provide: PrizmToastRef,\n          useValue: this.ref,\n        },\n      ],\n      parent: this.injector,\n    });\n  }\n}\n","<ng-container [ngComponentOutlet]=\"component\" [ngComponentOutletInjector]=\"tempInjector\"> </ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  OnChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { PrizmToastRef } from '../toast-ref';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmToastPosition } from '../types';\nimport { PrizmToastService } from '../toast.service';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-toast-container',\n  templateUrl: './toast-container.component.html',\n  styleUrls: ['./toast-container.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PrizmToastContainerComponent extends PrizmAbstractTestId implements OnChanges {\n  /* get from overlay service after add this component */\n  refs$!: Observable<PrizmToastRef[]>;\n\n  @Input() containerId?: string;\n  @Input() position?: PrizmToastPosition;\n\n  override readonly testId_ = 'ui_toast_container';\n\n  constructor(private readonly prizmToastService: PrizmToastService) {\n    super();\n  }\n\n  ngOnChanges(): void {\n    this.refs$ =\n      (this.containerId\n        ? this.prizmToastService.changes$.pipe(\n            map(refs => refs.filter(ref => ref.position === this.containerId))\n          )\n        : this.refs$) ?? of([]);\n  }\n\n  public trackByHash(_: number, item: PrizmToastRef): string {\n    return item.hash;\n  }\n}\n","<prizm-scrollbar [visibility]=\"'hidden'\">\n  <div class=\"prizm-toast-container {{ position }}\">\n    <!--  TODO think how to add focusable sub elements [focusTrap] -->\n    <ng-container *ngFor=\"let ref of refs$ | async; trackBy: trackByHash\">\n      <prizm-toast-wrapper [ref]=\"ref\"></prizm-toast-wrapper>\n    </ng-container>\n  </div>\n</prizm-scrollbar>\n","import { NgModule } from '@angular/core';\nimport { PrizmIndicatorComponent } from './indicator.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmIndicatorComponent],\n  exports: [PrizmIndicatorComponent],\n})\nexport class PrizmIndicatorModule {}\n","import { Observable, Subject } from 'rxjs';\nimport { PrizmToastOptions, PrizmToastPosition } from './types';\nimport { finalize, map, shareReplay, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmToastRef } from './toast-ref';\nimport { PrizmToastContainerComponent } from './toast-container/toast-container.component';\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  PrizmOverlayControl,\n  PrizmOverlayGlobalPosition,\n  PrizmOverlayInsidePlacement,\n  PrizmOverlayService,\n} from '../../modules/overlay';\nimport { PrizmToastService } from './toast.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmToastControl {\n  readonly destroy$ = new Subject<void>();\n  constructor(\n    private readonly overlayService: PrizmOverlayService,\n    private readonly toastService: PrizmToastService,\n    private readonly injector: Injector\n  ) {\n    this.init(PrizmToastPosition.TOP_RIGHT);\n    this.init(PrizmToastPosition.TOP_LEFT);\n    this.init(PrizmToastPosition.TOP_MIDDLE);\n    this.init(PrizmToastPosition.BOTTOM_RIGHT);\n    this.init(PrizmToastPosition.BOTTOM_LEFT);\n    this.init(PrizmToastPosition.BOTTOM_MIDDLE);\n  }\n\n  private create(\n    changesForThisPosition$: Observable<PrizmToastRef[]>,\n    position: PrizmToastOptions['position']\n  ): PrizmOverlayControl | void {\n    const placement = this.getOverlayPosition(position);\n    if (!placement) return;\n    const overlayPosition = new PrizmOverlayGlobalPosition({\n      placement,\n      width: 'auto',\n      height: 'auto',\n    });\n\n    const control = this.overlayService\n      .position(overlayPosition)\n      .content(PrizmToastContainerComponent, {\n        refs$: changesForThisPosition$,\n        position: position,\n      })\n      .create({ parentInjector: this.injector });\n\n    return control;\n  }\n\n  private getOverlayPosition(position: PrizmToastOptions['position']): PrizmOverlayInsidePlacement | void {\n    switch (position) {\n      case PrizmToastPosition.BOTTOM_LEFT:\n        return PrizmOverlayInsidePlacement.BOTTOM_LEFT;\n      case PrizmToastPosition.BOTTOM_RIGHT:\n        return PrizmOverlayInsidePlacement.BOTTOM_RIGHT;\n      case PrizmToastPosition.BOTTOM_MIDDLE:\n        return PrizmOverlayInsidePlacement.BOTTOM;\n      case PrizmToastPosition.TOP_LEFT:\n        return PrizmOverlayInsidePlacement.TOP_LEFT;\n      case PrizmToastPosition.TOP_RIGHT:\n        return PrizmOverlayInsidePlacement.TOP_RIGHT;\n      case PrizmToastPosition.TOP_MIDDLE:\n        return PrizmOverlayInsidePlacement.TOP;\n    }\n  }\n\n  public init(position: PrizmToastOptions['position']): void {\n    const changesForThisPosition$ = this.toastService.changes$.pipe(\n      map(items => items.filter(item => item.position === position && item.show)),\n      shareReplay(1)\n    );\n    const control = this.create(changesForThisPosition$, position);\n    if (!control) return;\n\n    changesForThisPosition$\n      .pipe(\n        tap(refs => {\n          if (!refs.length) return this.close(control);\n          this.open(control);\n        }),\n        finalize(() => this.destroy(control)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private destroy(control: PrizmOverlayControl | null): void {\n    this.close(control);\n    control = null;\n  }\n\n  private close(control: PrizmOverlayControl | null): void {\n    control?.close();\n  }\n\n  private open(control: PrizmOverlayControl | null): void {\n    control?.open();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmToastContainerComponent } from './toast-container/toast-container.component';\nimport { CommonModule } from '@angular/common';\nimport { PrizmOverlayModule } from '../../modules/overlay';\nimport { ToastComponent } from './toast/toast.component';\nimport { ToastWrapperComponent } from './toast-wrapper/toast-wrapper.component';\nimport { PolymorphModule } from '../../directives';\nimport { PrizmToastControl } from './toast-control';\nimport { PrizmFocusTrapModule } from '../../directives/focus-trap';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmIndicatorModule } from '../indicator';\nimport { PrizmInputCommonModule } from '../input';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmScrollbarModule } from '../scrollbar';\n\n@NgModule({\n  exports: [PrizmToastContainerComponent],\n  imports: [\n    CommonModule,\n    PrizmOverlayModule,\n    PrizmInputCommonModule,\n    PrizmIndicatorModule,\n    PolymorphModule,\n    PrizmButtonModule,\n    PrizmThemeModule,\n    PrizmFocusTrapModule,\n    PrizmScrollbarModule,\n  ],\n  declarations: [PrizmToastContainerComponent, ToastWrapperComponent, ToastComponent],\n})\nexport class PrizmToastModule {\n  constructor(private readonly toastControl: PrizmToastControl) {}\n}\n","import { defer, Observable, of } from 'rxjs';\nimport { filterTruthy } from '@prizm-ui/helpers';\nimport { tap } from 'rxjs/operators';\n\nexport function invokeIfCanCloseSidebar(\n  cb: () => void,\n  canClose?: () => Observable<boolean>\n): Observable<any> {\n  return defer(() => (canClose && typeof canClose === 'function' ? canClose() : of(true))).pipe(\n    filterTruthy(),\n    tap(() => cb())\n  );\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PRIZM_ANIMATIONS_DURATION } from '../../../tokens';\nimport { PRIZM_DIALOG_CLOSE_STREAM, PRIZM_DIALOG_PROVIDERS } from '../dialog/dialog-options';\nimport { PrizmAnimationOptions, prizmFadeIn, prizmSlideInTop } from '../../../animations';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { PrizmDestroyService, PrizmToObservablePipe } from '@prizm-ui/helpers';\nimport { PrizmBaseDialogContext, PrizmDialogSize } from '../dialog';\nimport { PrizmSidebarOptions, PrizmSidebarResultDefaultType } from './sidebar.models';\nimport { invokeIfCanCloseSidebar } from './util';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PolymorphOutletDirective, PrizmFocusTrapModule } from '../../../directives';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmInputIconButtonModule } from '../../input';\nimport { PrizmButtonComponent } from '../../button';\nimport { PrizmScrollbarComponent } from '../../scrollbar';\nimport { PrizmOverlayComponent } from '../../../modules/overlay/overlay.component';\n\n@Component({\n  selector: 'prizm-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: PRIZM_DIALOG_PROVIDERS,\n  animations: [prizmSlideInTop, prizmFadeIn],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PolymorphOutletDirective,\n    PrizmThemeModule,\n    PrizmToObservablePipe,\n    PrizmOverlayComponent,\n    PrizmInputIconButtonModule,\n    PrizmButtonComponent,\n    PrizmFocusTrapModule,\n    PrizmScrollbarComponent,\n  ],\n})\nexport class PrizmSidebarComponent<DATA = unknown> extends PrizmAbstractTestId {\n  @Input()\n  public context!: PrizmBaseDialogContext<PrizmSidebarResultDefaultType, PrizmSidebarOptions<DATA>>;\n\n  @Input()\n  public close!: () => void;\n\n  @HostBinding('attr.prizm-size')\n  public get size(): PrizmDialogSize {\n    return this.context.size as PrizmDialogSize;\n  }\n\n  @HostBinding('attr.prizm-sidebar-id')\n  public get id(): string {\n    return this.context.id as string;\n  }\n\n  @HostBinding('class.full-width')\n  public get fullWidth(): boolean {\n    return ['b', 't'].includes(this.context.position);\n  }\n\n  @HostBinding('style.full-height')\n  public get fullHeight(): boolean {\n    return true;\n  }\n\n  @HostBinding('@prizmSlideInTop')\n  @HostBinding('@prizmFadeIn')\n  public get slideInTop(): PrizmAnimationOptions {\n    return this.animation;\n  }\n\n  override readonly testId_ = 'ui_area--sidebar';\n\n  private readonly animation = {\n    value: '',\n    params: {\n      start: '40px',\n      duration: this.duration,\n    },\n  } as const;\n\n  constructor(\n    @Inject(PRIZM_ANIMATIONS_DURATION) private readonly duration: number,\n    @Inject(PRIZM_DIALOG_CLOSE_STREAM) readonly close$: Observable<unknown>,\n    private readonly destroy$: PrizmDestroyService\n  ) {\n    super();\n    close$\n      .pipe(takeUntil(this.destroy$))\n      .pipe(\n        tap(() => this.closeSidebar()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public closeSidebar(): void {\n    invokeIfCanCloseSidebar(() => this.close(), this.context.canClose)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n}\n","<div class=\"box\" prizmFocusTrap prizmTheme>\n  <div\n    class=\"header prizm-font-title-h4\"\n    *ngIf=\"context.headerTemplate ?? context.header\"\n    [ngSwitch]=\"!!context.headerTemplate\"\n  >\n    <ng-container *ngSwitchCase=\"true\">\n      <ng-container *polymorphOutlet=\"context.headerTemplate as headerTemplate; context: context\">\n        {{ headerTemplate }}\n      </ng-container>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <prizm-scrollbar\n        *polymorphOutlet=\"context.header as data; context: context\"\n        [visibility]=\"context.scrollbarVisibility ?? 'hidden'\"\n      >\n        <div class=\"title\">\n          {{ data }}\n        </div>\n      </prizm-scrollbar>\n      <button\n        *ngIf=\"context.closeable\"\n        [size]=\"'m'\"\n        [icon]=\"'cancel-close'\"\n        (click)=\"closeSidebar()\"\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        prizmIconButton\n      ></button>\n    </ng-container>\n  </div>\n\n  <div class=\"content prizm-font-main-body-14\">\n    <ng-container *polymorphOutlet=\"context.outerContent as outerContent\">\n      <ng-container *ngIf=\"outerContent; else innerTemplate\">\n        {{ outerContent }}\n      </ng-container>\n      <ng-template #innerTemplate>\n        <prizm-scrollbar class=\"scrollbar full-height\" [visibility]=\"context.scrollbarVisibility ?? 'auto'\">\n          <div class=\"full-height\" *polymorphOutlet=\"context.content as text; context: context\">\n            {{ text }}\n          </div>\n        </prizm-scrollbar>\n      </ng-template>\n    </ng-container>\n  </div>\n\n  <div class=\"footer prizm-font-btn-links-14\" *ngIf=\"!context.hideFooter\">\n    <ng-container *ngIf=\"context.footer; else notFooter\">\n      <div *polymorphOutlet=\"context.footer as footer; context: context\">\n        {{ footer }}\n      </div>\n    </ng-container>\n    <ng-template #notFooter>\n      <ng-container>\n        <div class=\"horizontal\">\n          <div class=\"left\">\n            <ng-container\n              *ngIf=\"context.supportButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.supportButton }\"\n            >\n            </ng-container>\n          </div>\n          <div class=\"right\">\n            <ng-container\n              *ngIf=\"context.cancelButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.cancelButton }\"\n            >\n            </ng-container>\n\n            <ng-container\n              *ngIf=\"context.confirmButton\"\n              [ngTemplateOutlet]=\"buttonTemplate\"\n              [ngTemplateOutletContext]=\"{ button: context.confirmButton }\"\n            >\n            </ng-container>\n          </div>\n        </div>\n      </ng-container>\n\n      <ng-template #buttonTemplate let-button=\"button\">\n        <button\n          [style]=\"button.style\"\n          [appearance]=\"button.appearance\"\n          [appearanceType]=\"button.appearanceType\"\n          [disabled]=\"$any(button.disabled ?? false | prizmToObservable | async)\"\n          [showLoader]=\"$any(button.showLoader ?? false | prizmToObservable | async)\"\n          [size]=\"button.size\"\n          [icon]=\"button.icon\"\n          (click)=\"button.action(context)\"\n          prizmButton\n        >\n          {{ button.text }}\n        </button>\n      </ng-template>\n    </ng-template>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmSidebarComponent } from './sidebar.component';\n\n/**\n * @deprecated\n * use standalone component instead\n * */\n@NgModule({\n  imports: [PrizmSidebarComponent],\n  exports: [PrizmSidebarComponent],\n})\nexport class PrizmSidebarModule {}\n","import { PolymorphContent } from '../../../directives';\nimport {\n  PrizmBaseDialogContext,\n  PrizmDialogBaseOptions,\n  PrizmDialogButton,\n  PrizmDialogSize,\n} from '../dialog/dialog.models';\nimport { PrizmOverscrollMode } from '../../../directives/overscroll/overscroll.model';\nimport { PrizmOverlayInsidePlacement } from '../../../modules/overlay';\nimport { PrizmContent } from '../../button';\nimport { Observable } from 'rxjs';\nimport { PrizmScrollbarVisibility } from '../../scrollbar';\n\nexport type PrizmSidebarButton = Omit<PrizmDialogButton, 'action'> &\n  Partial<Pick<PrizmDialogButton, 'action'>> & { icon?: PrizmContent };\n\nexport interface PrizmSidebarOptions<DATA = unknown> extends PrizmDialogBaseOptions {\n  confirmButton?: PrizmSidebarButton | string;\n  supportButton?: PrizmSidebarButton | string | null;\n  cancelButton?: PrizmSidebarButton | string | null;\n  styleVars?: Record<string, unknown>;\n  overlayStyleVars?: Record<string, unknown>;\n  showByVertical?: boolean;\n  data?: DATA;\n  size?: PrizmDialogSize;\n  title: PolymorphContent<PrizmBaseDialogContext<PrizmSidebarResultDefaultType, PrizmSidebarOptions<DATA>>>;\n  description?: PolymorphContent<\n    PrizmBaseDialogContext<PrizmSidebarResultDefaultType, PrizmSidebarOptions<DATA>>\n  >;\n  overscrollMode?: PrizmOverscrollMode;\n\n  closeWord: string;\n  readonly content?: any;\n  readonly outerContent?: any;\n  readonly closeable: boolean;\n  readonly scrollbarVisibility?: PrizmScrollbarVisibility;\n  /**\n   * header (not include close button)\n   * @deprecated use headerTemplate\n   * */\n  readonly header?: any;\n  /**\n   * for change full header with close button\n   * */\n  readonly headerTemplate?: any;\n  readonly canClose?: () => Observable<boolean>;\n  readonly hideFooter?: boolean;\n  readonly footer: PolymorphContent<\n    PrizmBaseDialogContext<PrizmSidebarResultDefaultType, PrizmSidebarOptions<DATA>>\n  > | null;\n}\n\nexport enum PrizmSidebarResultDefaultType {\n  confirmed = 'confirmed',\n  support = 'support',\n  cancel = 'cancel',\n}\nexport type PrizmSidebarResult = PrizmSidebarResultDefaultType | any;\n","import { AbstractPrizmDialogService } from '../../../abstract/dialog.service';\nimport { Injectable } from '@angular/core';\nimport {\n  PrizmOverlayControl,\n  PrizmOverlayGlobalPosition,\n  PrizmOverlayInsidePlacement,\n} from '../../../modules/overlay';\nimport { Observable, Observer } from 'rxjs';\nimport { PrizmSidebarComponent } from './sidebar.component';\nimport {\n  PrizmSidebarButton,\n  PrizmSidebarOptions,\n  PrizmSidebarResult,\n  PrizmSidebarResultDefaultType,\n} from './sidebar.models';\nimport { PrizmBaseDialogContext } from '../dialog/dialog.models';\nimport { PrizmAppearance, PrizmAppearanceType } from '../../../types';\nimport { PrizmSize } from '../../../util';\nimport { invokeIfCanCloseSidebar } from './util';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Compare } from '@prizm-ui/helpers';\n\nconst DEFAULT_OPTIONS = {\n  position: PrizmOverlayInsidePlacement.CENTER,\n  dismissible: true,\n  showByVertical: true,\n  confirmButton: null,\n  supportButton: null,\n  cancelButton: null,\n} as unknown as PrizmSidebarOptions<PrizmSidebarResult>;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmSidebarService<\n  T extends PrizmSidebarOptions<PrizmSidebarResult> = PrizmSidebarOptions<PrizmSidebarResult>\n> extends AbstractPrizmDialogService<T, PrizmSidebarResult> {\n  protected readonly component = PrizmSidebarComponent;\n  protected readonly defaultOptions = DEFAULT_OPTIONS as T;\n\n  public override open(\n    title: T['title'],\n    options: Omit<Partial<T>, 'title' | 'closeWord'>,\n    cb?: (data: {\n      control: PrizmOverlayControl;\n      dialog: PrizmBaseDialogContext<PrizmSidebarResult, PrizmSidebarOptions>;\n      observer: Observer<PrizmSidebarResult>;\n      destroy$: Observable<void>;\n    }) => void\n  ): Observable<PrizmSidebarResult> {\n    options = {\n      ...options,\n      title,\n      dismissible: options.dismissible ?? false,\n      backdrop: options.backdrop,\n      containerClass: options.backdrop || options.parentContainer ? '' : 'no-width no-height',\n    };\n    this.safeUpdateButtonsWithDefaultStyles(options as Partial<T>);\n    return super.open<PrizmSidebarResult, unknown>(title, options as Partial<T>, cb);\n  }\n\n  protected override getPosition(dialog: PrizmBaseDialogContext<any, any>): PrizmOverlayGlobalPosition {\n    return new PrizmOverlayGlobalPosition({\n      placement: dialog.position ?? PrizmOverlayInsidePlacement.LEFT,\n      width: (['t', 'b'].includes(dialog.position) && '100%') || dialog.width,\n      height: (['l', 'r'].includes(dialog.position) && '100%') || dialog.height,\n    });\n  }\n\n  // TODO add i18n support for default cases\n  private safeUpdateButtonsWithDefaultStyles(options: Partial<T>): void {\n    const supportButton =\n      Compare.isNotNullish(options.supportButton) &&\n      this.generateButton(\n        options,\n        options.supportButton as any,\n        'Продолжить',\n        PrizmSidebarResultDefaultType.confirmed,\n        'danger',\n        'ghost'\n      );\n\n    const confirmButton = this.generateButton(\n      options,\n      options.confirmButton as any,\n      'Подтвердить',\n      PrizmSidebarResultDefaultType.confirmed,\n      'primary'\n    );\n\n    const cancelButton =\n      options.cancelButton !== null &&\n      this.generateButton(\n        options,\n        options.cancelButton as any,\n        'Отмена',\n        PrizmSidebarResultDefaultType.cancel,\n        'secondary',\n        'ghost'\n      );\n\n    options.confirmButton = confirmButton;\n    options.cancelButton = cancelButton as any;\n    options.supportButton = supportButton as any;\n  }\n\n  private generateButton(\n    options: Partial<T>,\n    button: PrizmSidebarButton | string,\n    defaultText: string,\n    defaultComplete: PrizmSidebarResultDefaultType,\n    defaultAppearance?: PrizmAppearance,\n    defaultAppearanceType?: PrizmAppearanceType\n  ): PrizmSidebarButton {\n    const buttonText = (typeof button === 'string' ? button : button?.text) ?? defaultText;\n    const btn = ((typeof button === 'string' ? {} : button) ?? {}) as Partial<PrizmSidebarButton>;\n\n    return {\n      ...btn,\n      text: buttonText,\n      size: btn.size ?? (options.size as PrizmSize),\n      action:\n        btn.action ??\n        ((c): void => {\n          invokeIfCanCloseSidebar(() => c.completeWith(defaultComplete), options.canClose)\n            .pipe(take(1))\n            .subscribe();\n        }),\n      appearance: btn.appearance ?? defaultAppearance,\n      appearanceType: btn.appearanceType ?? defaultAppearanceType,\n    };\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { PrizmAbstractTestId, prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmHandler } from '../../../types';\n\n@Directive({\n  selector: 'prizm-tree[childrenHandler]',\n})\nexport class PrizmTreeChildrenDirective<T> {\n  @Input()\n  @prizmDefaultProp()\n  childrenHandler: PrizmHandler<T, readonly T[]> = PrizmTreeChildrenDirective.defaultHandler;\n\n  public static defaultHandler<G>(item: G): readonly G[] {\n    return Array.isArray(item) ? item : [];\n  }\n}\n","import { ChangeDetectionStrategy, Component, forwardRef, HostBinding, Inject } from '@angular/core';\nimport { POLYMORPH_CONTEXT } from '../../../../directives';\n\nimport { PRIZM_DEFAULT_TREE_CONTROLLER } from '../../misc/tree.constants';\nimport { PrizmTreeController, PrizmTreeItemContext } from '../../misc/tree.interfaces';\nimport { PRIZM_TREE_CONTROLLER } from '../../misc/tree.tokens';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-tree-item-content',\n  templateUrl: './tree-item-content.component.html',\n  styleUrls: ['./tree-item-content.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmTreeItemContentComponent extends PrizmAbstractTestId {\n  override readonly testId_ = 'ui_tree_item_content';\n\n  constructor(\n    @Inject(POLYMORPH_CONTEXT) readonly context: PrizmTreeItemContext,\n    @Inject(forwardRef(() => PRIZM_TREE_CONTROLLER))\n    private readonly controller: PrizmTreeController\n  ) {\n    super();\n  }\n\n  public get isExpanded(): boolean {\n    return this.context.$implicit.isExpanded;\n  }\n\n  @HostBinding('class._expandable')\n  public get isExpandable(): boolean {\n    return this.context.$implicit.isExpandable && this.controller !== PRIZM_DEFAULT_TREE_CONTROLLER;\n  }\n\n  public onClick(): void {\n    this.controller.toggle(this.context.$implicit);\n  }\n}\n","<button\n  class=\"z-button\"\n  *ngIf=\"isExpandable\"\n  [icon]=\"(context.$implicit.expanded$ | async) ? 'chevrons-down' : 'chevrons-right'\"\n  [class.t-button_expanded]=\"isExpanded\"\n  (click)=\"onClick()\"\n  prizmIconButton\n  appearance=\"secondary\"\n  appearanceType=\"ghost\"\n  size=\"xs\"\n></button>\n<ng-container [ngTemplateOutlet]=\"context.template\"></ng-container>\n","import { PRIZM_EMPTY_FUNCTION } from '@prizm-ui/core';\nimport { PolymorphComponent } from '../../../directives/polymorph';\nimport { PrizmTreeItemContentComponent } from '../components/tree-item-content/tree-item-content.component';\nimport { PrizmTreeController } from './tree.interfaces';\n\nexport const PRIZM_TREE_ITEM_CONTENT = new PolymorphComponent(PrizmTreeItemContentComponent);\n\nexport const PRIZM_DEFAULT_TREE_CONTROLLER: PrizmTreeController = {\n  isExpanded: () => true,\n  toggle: PRIZM_EMPTY_FUNCTION as () => void,\n};\n","import { InjectionToken } from '@angular/core';\nimport { PolymorphContent } from '../../../directives/polymorph';\nimport { PRIZM_DEFAULT_TREE_CONTROLLER, PRIZM_TREE_ITEM_CONTENT } from './tree.constants';\nimport {\n  PrizmTreeAccessor,\n  PrizmTreeController,\n  PrizmTreeItemContext,\n  PrizmTreeLoader,\n} from './tree.interfaces';\n\nexport const PRIZM_TREE_ACCESSOR = new InjectionToken<PrizmTreeAccessor<unknown>>(\n  'Controller for tracking value - PrizmTreeItemComponent pairs'\n);\n\nexport const PRIZM_TREE_CONTROLLER = new InjectionToken<PrizmTreeController>(\n  'Controller for expanding the tree',\n  {\n    factory: (): PrizmTreeController => PRIZM_DEFAULT_TREE_CONTROLLER,\n  }\n);\n\nexport const PRIZM_TREE_NODE = new InjectionToken('A node of a tree view');\n\nexport const PRIZM_TREE_LOADING = new InjectionToken('A tree node placeholder for loading', {\n  factory: (): unknown => ({}),\n});\n\nexport const PRIZM_TREE_START = new InjectionToken('A tree node starting point');\n\nexport const PRIZM_TREE_LOADER = new InjectionToken<PrizmTreeLoader<unknown>>(\n  'A service to load tree progressively'\n);\n\nexport const PRIZM_TREE_CONTENT = new InjectionToken<PolymorphContent<PrizmTreeItemContext>>(\n  'Content for a tree item',\n  {\n    factory: (): PolymorphContent<PrizmTreeItemContext> => PRIZM_TREE_ITEM_CONTENT,\n  }\n);\n\nexport const PRIZM_TREE_LEVEL = new InjectionToken<number>('Nesting level of current TreeView node', {\n  factory: (): number => -1,\n});\n","import { forwardRef, Provider, SkipSelf } from '@angular/core';\nimport { PRIZM_TREE_LEVEL, PRIZM_TREE_NODE } from '../../misc/tree.tokens';\nimport { PrizmTreeItemComponent } from './tree-item.component';\n\nexport const PRIZM_TREE_ITEM_PROVIDERS: Provider[] = [\n  {\n    provide: PRIZM_TREE_LEVEL,\n    deps: [[new SkipSelf(), PRIZM_TREE_LEVEL]],\n    useFactory: treeLevelFactory,\n  },\n  {\n    provide: PRIZM_TREE_NODE,\n    useExisting: forwardRef(() => PrizmTreeItemComponent),\n  },\n];\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function treeLevelFactory(level: number): number {\n  return ++level;\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[prizmExpandContent]',\n  standalone: true,\n})\nexport class PrizmExpandContentDirective {}\n","/**\n * An event indicating that async data for expand has finished loading.\n * Dispatch to finish loading states for {@link PrizmExpandComponent}.\n */\nexport const PRIZM_EXPAND_LOADED = 'prizm-expand-loaded';\n","import { CommonModule, NgIfContext } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { prizmDefaultProp, prizmRequiredSetter } from '@prizm-ui/core';\nimport { prizmIsCurrentTarget } from '../../util/dom';\n\nimport { PrizmExpandContentDirective } from './expand-content.directive';\nimport { PRIZM_EXPAND_LOADED } from './expand.const';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PrizmLoaderModule } from '../loader';\n\nenum State {\n  Idle,\n  Loading,\n  Prepared,\n  Animated,\n}\n\nconst LOADER_HEIGHT = 48;\n\n@Component({\n  selector: 'prizm-expand',\n  templateUrl: './expand.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./expand.component.less'],\n  standalone: true,\n  imports: [CommonModule, PrizmLoaderModule],\n})\nexport class PrizmExpandComponent extends PrizmAbstractTestId {\n  @ViewChild('wrapper')\n  private readonly contentWrapper?: ElementRef<HTMLDivElement>;\n\n  private state = State.Idle;\n\n  @Input()\n  @prizmDefaultProp()\n  isLoading = false;\n\n  @Input()\n  @prizmRequiredSetter()\n  set expanded(expanded: boolean | null) {\n    if (this.expanded_ === null) {\n      this.expanded_ = expanded;\n\n      return;\n    }\n\n    if (this.state !== State.Idle) {\n      this.expanded_ = expanded;\n      this.state = State.Animated;\n\n      return;\n    }\n\n    this.expanded_ = expanded;\n    this.reTrigger(this.isLoading && expanded ? State.Loading : State.Animated);\n  }\n\n  @ContentChild(PrizmExpandContentDirective, { read: TemplateRef })\n  public content: TemplateRef<NgIfContext<boolean>> | null = null;\n\n  @HostBinding('class._expanded')\n  @HostBinding('attr.aria-expanded')\n  private expanded_: boolean | null = null;\n\n  override readonly testId_ = 'ui-area--expand';\n\n  @HostListener('transitionend', ['$event'])\n  public onTransitionEnd(event: TransitionEvent): void {\n    if (prizmIsCurrentTarget(event) && event.propertyName === 'opacity' && this.state === State.Animated) {\n      this.state = State.Idle;\n    }\n  }\n\n  @HostListener(PRIZM_EXPAND_LOADED, ['$event'])\n  public onExpandLoaded(event: Event): void {\n    event.stopPropagation();\n\n    if (this.state === State.Loading) {\n      this.reTrigger(State.Animated);\n    }\n  }\n\n  constructor(@Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  @HostBinding('class._overflow')\n  get overflow(): boolean {\n    return this.state !== State.Idle;\n  }\n\n  @HostBinding('class._loading')\n  get loading(): boolean {\n    return !!this.expanded_ && this.isLoading && this.state === State.Loading;\n  }\n\n  @HostBinding('style.height.px')\n  get height(): number | null {\n    const { expanded_, state, contentWrapper } = this;\n\n    if ((expanded_ && state === State.Prepared) || (!expanded_ && state === State.Animated)) {\n      return 0;\n    }\n\n    if (\n      contentWrapper &&\n      ((!expanded_ && state === State.Prepared) || (expanded_ && state === State.Animated))\n    ) {\n      return contentWrapper.nativeElement.offsetHeight;\n    }\n\n    if (contentWrapper && expanded_ && state === State.Loading) {\n      return Math.max(contentWrapper.nativeElement.offsetHeight, LOADER_HEIGHT);\n    }\n\n    return null;\n  }\n\n  get contentVisible(): boolean {\n    return this.expanded_ || this.state !== State.Idle;\n  }\n\n  private reTrigger(state: State): void {\n    this.state = State.Prepared;\n\n    // We need delay to re-trigger CSS height transition from the correct number\n    setTimeout(() => {\n      if (this.state !== State.Prepared) {\n        return;\n      }\n\n      this.state = state;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n}\n","<div class=\"wrapper\" #wrapper>\n  <ng-container *ngIf=\"contentVisible\">\n    <ng-content></ng-content>\n    <prizm-loader *ngIf=\"this.isLoading; else content\" [overlay]=\"true\" [showLoader]=\"loading\" size=\"l\">\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n    </prizm-loader>\n  </ng-container>\n</div>\n","import {\n  Input,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  QueryList,\n} from '@angular/core';\nimport { PolymorphContent } from '../../../../directives';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { PrizmTreeController } from '../../misc/tree.interfaces';\nimport {\n  PRIZM_TREE_CONTENT,\n  PRIZM_TREE_CONTROLLER,\n  PRIZM_TREE_LEVEL,\n  PRIZM_TREE_NODE,\n} from '../../misc/tree.tokens';\nimport { PRIZM_TREE_ITEM_PROVIDERS } from './tree-item.providers';\nimport { PRIZM_EMPTY_QUERY } from '@prizm-ui/core';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-tree-item',\n  templateUrl: './tree-item.component.html',\n  styleUrls: ['./tree-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: PRIZM_TREE_ITEM_PROVIDERS,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    role: 'treeitem',\n  },\n  exportAs: 'prizmTreeItem',\n})\nexport class PrizmTreeItemComponent extends PrizmAbstractTestId implements DoCheck {\n  @ContentChildren(PRIZM_TREE_NODE as any)\n  private readonly nested: QueryList<unknown> = PRIZM_EMPTY_QUERY;\n\n  private readonly change$ = new Subject<void>();\n\n  readonly expanded$ = this.change$.pipe(\n    startWith(null),\n    map(() => this.isExpanded),\n    distinctUntilChanged()\n  );\n\n  readonly attached$ = this.change$.pipe(\n    map(() => this.elementRef.nativeElement.isConnected),\n    distinctUntilChanged()\n  );\n\n  override readonly testId_ = 'ui_tree--item';\n\n  @HostBinding('class._expandable')\n  get isExpandable(): boolean {\n    return !!this.nested.length;\n  }\n\n  get isExpanded(): boolean {\n    return this.controller.isExpanded(this);\n  }\n\n  @HostBinding('class.use-padding-indent')\n  @Input()\n  usePaddingIndent!: boolean;\n\n  @Input()\n  @HostBinding('class.active')\n  active = false;\n\n  @HostBinding('style.--prizm-tree-level')\n  get levelVar() {\n    return this.level;\n  }\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly elementRef: ElementRef<HTMLElement>,\n    @Inject(forwardRef(() => PRIZM_TREE_CONTROLLER))\n    private readonly controller: PrizmTreeController,\n    @Inject(forwardRef(() => PRIZM_TREE_LEVEL))\n    readonly level: number,\n    @Inject(forwardRef(() => PRIZM_TREE_CONTENT))\n    readonly content: PolymorphContent\n  ) {\n    super();\n  }\n\n  ngDoCheck(): void {\n    this.change$.next();\n  }\n}\n","<ng-template #template>\n  <ng-content></ng-content>\n</ng-template>\n<div\n  class=\"prizm-tree-item__dynamic-content prizm-tree-item__main prizm-font-main-body-12\"\n  [style.--prizm-tree-item-indent-level]=\"level\"\n>\n  <ng-container *polymorphOutlet=\"content; context: { $implicit: this, template: template }\"> </ng-container>\n</div>\n<prizm-expand\n  class=\"prizm-tree-item__children prizm-font-main-body-12\"\n  *ngIf=\"isExpandable\"\n  [expanded]=\"expanded$ | async\"\n  role=\"group\"\n>\n  <div>\n    <ng-content select=\"prizm-tree-item\"></ng-content>\n    <ng-content select=\"prizm-tree\"></ng-content>\n  </div>\n</prizm-expand>\n<ng-container *ngIf=\"attached$ | async\"></ng-container>\n","import { Directive, Inject, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { PrizmTreeItemComponent } from '../components/tree-item/tree-item.component';\nimport { PrizmTreeAccessor } from '../misc/tree.interfaces';\nimport { PRIZM_TREE_ACCESSOR } from '../misc/tree.tokens';\n\n@Directive({\n  selector: 'prizm-tree-item[prizmTreeNode]',\n})\nexport class PrizmTreeNodeDirective<T> implements OnDestroy {\n  @Input()\n  public set prizmTreeNode(value: T) {\n    this.directive?.register(this.component, value);\n  }\n\n  constructor(\n    @Optional()\n    @Inject(PRIZM_TREE_ACCESSOR)\n    private readonly directive: PrizmTreeAccessor<T>,\n    @Inject(PrizmTreeItemComponent)\n    private readonly component: PrizmTreeItemComponent\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.directive?.unregister(this.component);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  HostBinding,\n  Inject,\n  Input,\n  Optional,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, tap } from 'rxjs/operators';\nimport { PrizmTreeChildrenDirective } from '../../directives/tree-children.directive';\nimport { PRIZM_TREE_NODE } from '../../misc/tree.tokens';\nimport { PrizmTreeItemComponent } from '../tree-item/tree-item.component';\nimport { PrizmHandler } from '../../../../types';\nimport { PolymorphContent } from '../../../../directives';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-tree[value]',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: PRIZM_TREE_NODE,\n      useExisting: PrizmTreeComponent,\n    },\n  ],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    role: 'tree',\n  },\n  exportAs: 'prizmTree',\n})\nexport class PrizmTreeComponent<T> extends PrizmAbstractTestId implements DoCheck {\n  private readonly check$ = new Subject<void>();\n\n  @Input()\n  value!: T;\n\n  @ViewChild(PrizmTreeItemComponent)\n  readonly item?: PrizmTreeItemComponent;\n\n  @ViewChild(PrizmTreeComponent)\n  readonly child?: PrizmTreeComponent<T>;\n\n  readonly children$ = this.check$.pipe(\n    startWith(null),\n    map(() => this.handler(this.value)),\n    distinctUntilChanged()\n  );\n\n  override readonly testId_ = 'ui_tree';\n\n  @Input()\n  usePaddingIndent!: boolean;\n\n  @Input()\n  content: PolymorphContent = ({ $implicit }: any) => String($implicit);\n\n  constructor(\n    @Optional()\n    @Inject(PrizmTreeChildrenDirective)\n    readonly directive: PrizmTreeChildrenDirective<T> | null\n  ) {\n    super();\n  }\n\n  ngDoCheck(): void {\n    this.check$.next();\n    this.item?.ngDoCheck();\n    this.child?.ngDoCheck();\n  }\n\n  private get handler(): PrizmHandler<T, readonly T[]> {\n    return this.directive?.childrenHandler ?? PrizmTreeChildrenDirective.defaultHandler;\n  }\n}\n","<prizm-tree-item\n  #view\n  *prizmLet=\"children$ | async as children\"\n  [prizmTreeNode]=\"value\"\n  [usePaddingIndent]=\"usePaddingIndent\"\n>\n  <ng-container *ngIf=\"$any(value) !== children\">\n    <div *polymorphOutlet=\"content as val; context: { $implicit: value, node: view }\">{{ val }}</div>\n  </ng-container>\n\n  <prizm-tree *ngFor=\"let child of children\" [value]=\"child\" [content]=\"content\"></prizm-tree>\n</prizm-tree-item>\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { PrizmTreeItemComponent } from '../components/tree-item/tree-item.component';\nimport { PrizmTreeAccessor, PrizmTreeController } from '../misc/tree.interfaces';\nimport { PRIZM_TREE_ACCESSOR, PRIZM_TREE_CONTROLLER } from '../misc/tree.tokens';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { prizmIsPresent } from '../../../util';\n\n@Directive({\n  selector: '[prizmTreeController][map]',\n  exportAs: 'prizmTreeController',\n  providers: [\n    {\n      provide: PRIZM_TREE_ACCESSOR,\n      useExisting: PrizmTreeControllerDirective,\n    },\n    {\n      provide: PRIZM_TREE_CONTROLLER,\n      useExisting: PrizmTreeControllerDirective,\n    },\n  ],\n})\nexport class PrizmTreeControllerDirective<T> implements PrizmTreeController, PrizmTreeAccessor<T> {\n  @Input()\n  @prizmDefaultProp()\n  prizmTreeController = true;\n\n  @Input()\n  @prizmDefaultProp()\n  map: Map<T, boolean> = new Map();\n\n  @Output()\n  readonly toggled = new EventEmitter<T>();\n\n  @Output()\n  readonly expandedChanged = new EventEmitter<{ value: T; isExpanded: boolean }>();\n\n  readonly items = new Map<PrizmTreeItemComponent, T>();\n\n  public register(item: PrizmTreeItemComponent, value: T): void {\n    this.items.set(item, value);\n  }\n\n  public unregister(item: PrizmTreeItemComponent): void {\n    this.items.delete(item);\n  }\n\n  public isExpanded(item: PrizmTreeItemComponent): boolean {\n    const value = this.items.get(item);\n\n    return (value && this.map.get(value)) ?? this.prizmTreeController;\n  }\n\n  public toggle(item: PrizmTreeItemComponent): void {\n    const value = this.items.get(item);\n    const isExpanded = !this.isExpanded(item);\n\n    if (!prizmIsPresent(value)) {\n      return;\n    }\n\n    this.toggled.emit(value);\n    this.expandedChanged.emit({\n      value,\n      isExpanded,\n    });\n    this.map.set(value, isExpanded);\n  }\n\n  public toggleByItemValue(value: T, forceState?: boolean): void {\n    const isExpanded = forceState ?? !this.map.get(value);\n\n    this.toggled.emit(value);\n    this.expandedChanged.emit({\n      value,\n      isExpanded,\n    });\n    this.map.set(value, isExpanded);\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { prizmDefaultProp } from '@prizm-ui/core';\n\nimport { PrizmTreeItemComponent } from '../components/tree-item/tree-item.component';\nimport { PrizmTreeController } from '../misc/tree.interfaces';\nimport { PRIZM_TREE_CONTROLLER } from '../misc/tree.tokens';\n\n@Directive({\n  selector: '[prizmTreeController]:not([map])',\n  exportAs: 'prizmTreeController',\n  providers: [\n    {\n      provide: PRIZM_TREE_CONTROLLER,\n      useExisting: PrizmTreeItemControllerDirective,\n    },\n  ],\n})\nexport class PrizmTreeItemControllerDirective implements PrizmTreeController {\n  private map = new WeakMap<PrizmTreeItemComponent, boolean>();\n  private _prizmTreeController = true;\n\n  @Input()\n  @prizmDefaultProp()\n  set prizmTreeController(value: boolean) {\n    this._prizmTreeController = value ?? true;\n    this.map = new WeakMap<PrizmTreeItemComponent, boolean>();\n  }\n\n  public isExpanded(item: PrizmTreeItemComponent): boolean {\n    return this.map.get(item) ?? this._prizmTreeController;\n  }\n\n  public toggle(item: PrizmTreeItemComponent): void {\n    this.map.set(item, !this.isExpanded(item));\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, mapTo, startWith, switchMap, tap } from 'rxjs/operators';\n\nimport { PrizmTreeLoader } from './tree.interfaces';\nimport { PRIZM_TREE_LOADER, PRIZM_TREE_LOADING, PRIZM_TREE_START } from './tree.tokens';\n\n// @dynamic\n@Injectable()\nexport class PrizmTreeService<T> {\n  private readonly map = new Map<T, readonly T[]>([[this.loading, []]]);\n\n  private readonly load$ = new Subject<T>();\n\n  public readonly data$ = this.load$.pipe(\n    switchMap(item =>\n      this.loader.loadChildren(item).pipe(\n        tap(children => this.map.set(item, children)),\n        map(children => children.filter(item => !this.loader.hasChildren(item))),\n        tap(children => children.forEach(child => this.map.set(child, [])))\n      )\n    ),\n    startWith(null),\n    mapTo(this.start)\n  );\n\n  constructor(\n    @Inject(PRIZM_TREE_LOADING) private readonly loading: T,\n    @Inject(PRIZM_TREE_START) private readonly start: T,\n    @Inject(PRIZM_TREE_LOADER) private readonly loader: PrizmTreeLoader<T>\n  ) {}\n\n  public getChildren(item: T): readonly T[] {\n    return this.map.get(item) ?? [this.loading];\n  }\n\n  public loadChildren(item: T): void {\n    if (this.map.get(item)) {\n      return;\n    }\n\n    this.map.set(item, [this.loading]);\n    this.load$.next(item);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PrizmExpandComponent } from './expand.component';\nimport { PrizmExpandContentDirective } from './expand-content.directive';\n\n@NgModule({\n  imports: [PrizmExpandComponent, PrizmExpandContentDirective],\n  exports: [PrizmExpandComponent, PrizmExpandContentDirective],\n})\nexport class PrizmExpandModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmTreeComponent } from './components/tree/tree.component';\nimport { PrizmTreeItemComponent } from './components/tree-item/tree-item.component';\nimport { PrizmTreeItemContentComponent } from './components/tree-item-content/tree-item-content.component';\nimport { PrizmTreeChildrenDirective } from './directives/tree-children.directive';\nimport { PrizmTreeControllerDirective } from './directives/tree-controller.directive';\nimport { PrizmTreeItemControllerDirective } from './directives/tree-item-controller.directive';\nimport { PrizmTreeNodeDirective } from './directives/tree-node.directive';\nimport { PrizmExpandModule } from '../expand';\nimport { PrizmLetModule } from '@prizm-ui/helpers';\nimport { PrizmButtonModule } from '../button';\nimport { PolymorphModule } from '../../directives';\n\n@NgModule({\n  imports: [CommonModule, PolymorphModule, PrizmExpandModule, PrizmLetModule, PrizmButtonModule],\n  declarations: [\n    PrizmTreeComponent,\n    PrizmTreeItemComponent,\n    PrizmTreeItemContentComponent,\n    PrizmTreeChildrenDirective,\n    PrizmTreeItemControllerDirective,\n    PrizmTreeControllerDirective,\n    PrizmTreeNodeDirective,\n  ],\n  exports: [\n    PrizmTreeComponent,\n    PrizmTreeItemComponent,\n    PrizmTreeChildrenDirective,\n    PrizmTreeItemControllerDirective,\n    PrizmTreeControllerDirective,\n  ],\n})\nexport class PrizmTreeModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { prizmGetShadow, PrizmShadowModule, PrizmShadowType } from '../../directives/shadow';\nimport { PrizmShadowValue } from '../../directives/shadow/models';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n  standalone: true,\n  imports: [CommonModule, PrizmShadowModule],\n})\nexport class PrizmCardComponent extends PrizmAbstractTestId {\n  @Input() shadow: PrizmShadowType = 'mini-bottom';\n\n  @HostBinding('style.box-shadow')\n  private get boxShadow(): PrizmShadowValue {\n    return prizmGetShadow(this.shadow);\n  }\n\n  override readonly testId_ = 'ui_card';\n}\n","<ng-content></ng-content>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmCardComponent } from './card.component';\nimport { PrizmShadowModule } from '../../directives/shadow';\n\n/**\n * @deprecated\n * user standalone\n * */\n@NgModule({\n  imports: [PrizmCardComponent],\n  exports: [PrizmCardComponent],\n})\nexport class PrizmCardModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PolymorphContent, PolymorphOutletDirective } from '../../directives';\nimport { PrizmShadowType } from '../../directives/shadow';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCardComponent } from '../card';\nimport { PrizmIconComponent } from '../icon';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmButtonModule } from '../button';\n\n@Component({\n  selector: 'prizm-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmCardComponent,\n    PrizmIconComponent,\n    PrizmThemeModule,\n    PolymorphOutletDirective,\n    PrizmButtonModule,\n  ],\n})\nexport class PrizmWidgetComponent extends PrizmAbstractTestId {\n  @Input() public header: PolymorphContent = '';\n  @Input() public title: PolymorphContent = '';\n  @Input() public icons: PolymorphContent<{ idx: number }>[] | PolymorphContent = [];\n  @Output() public iconClick: EventEmitter<string> = new EventEmitter();\n  readonly shadow: PrizmShadowType = 'none';\n\n  override readonly testId_ = 'ui_area--widget';\n\n  get hasLine(): boolean {\n    return Array.isArray(this.icons) ? this.icons.length > 0 : false;\n  }\n}\n","<prizm-card [shadow]=\"shadow\">\n  <div class=\"header prizm-font-title-h4\">\n    <ng-container *polymorphOutlet=\"header\">\n      <div class=\"title\">\n        <ng-container *polymorphOutlet=\"title\">\n          {{ title }}\n        </ng-container>\n      </div>\n      <ng-container *polymorphOutlet=\"icons\">\n        <div class=\"icons\" [class.divider]=\"hasLine\">\n          <ng-container *ngFor=\"let icon of $any(icons); let idx = index\">\n            <ng-container *polymorphOutlet=\"icon; context: { idx: idx }\">\n              <button\n                [icon]=\"$any(icon)\"\n                (click)=\"iconClick.emit(icon)\"\n                prizmIconButton\n                appearanceType=\"ghost\"\n                appearance=\"secondary\"\n                size=\"s\"\n              ></button>\n            </ng-container>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div class=\"body prizm-font-main-body-14\">\n    <ng-content></ng-content>\n  </div>\n</prizm-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PolymorphModule } from '../../directives';\nimport { PrizmCardModule } from '../card';\nimport { PrizmWidgetComponent } from './widget.component';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\n\n@NgModule({\n  imports: [PrizmWidgetComponent],\n  exports: [PrizmWidgetComponent],\n})\nexport class PrizmWidgetModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\n\n@Component({\n  selector: 'prizm-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PanelComponent extends PrizmAbstractTestId {\n  @Input() withBackButton = false;\n  @Input() header: string | null = null;\n  @Input() subheader: string | null = null;\n\n  @Output() backClick: EventEmitter<void> = new EventEmitter<void>();\n  @ViewChild('headerElement', { static: true }) public headerRef!: ElementRef;\n\n  override readonly testId_ = 'ui_panel';\n\n  public back(): void {\n    this.backClick.emit();\n  }\n}\n","<div class=\"panel\">\n  <div class=\"back-btn-wrapper\" *ngIf=\"withBackButton\">\n    <button\n      [icon]=\"'arrows-back'\"\n      (click)=\"back()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n  </div>\n  <div class=\"buttons\">\n    <ng-content select=\"[buttons]\"></ng-content>\n  </div>\n  <div class=\"title\" *ngIf=\"!!(header || subheader)\" [class.not-left-indent]=\"withBackButton\">\n    <span class=\"title__main\">{{ header }}</span>\n    <span class=\"title__sub\">{{ subheader }}</span>\n  </div>\n  <div class=\"header\" #headerElement [class.header_empty]=\"headerRef.nativeElement.children.length === 0\">\n    <ng-content select=\"[header]\"></ng-content>\n  </div>\n  <div class=\"instruments\">\n    <ng-content select=\"[instruments]\"></ng-content>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PanelComponent } from './panel.component';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmButtonModule } from '../button';\n\n@NgModule({\n  declarations: [PanelComponent],\n  imports: [CommonModule, PrizmIconModule, PrizmButtonModule],\n  exports: [PanelComponent],\n})\nexport class PrizmPanelModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { PrizmAbstractTestId, prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmSizeM, PrizmSizeS } from '../../../util/size-bigger';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `progress[prizmProgressBar]`,\n  template: ``,\n  styleUrls: [`./progress-bar.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmProgressBarComponent extends PrizmAbstractTestId {\n  @Input()\n  @HostBinding(`style.--prizm-progress-color`)\n  color?: string | null;\n\n  @Input()\n  @HostBinding(`style.--prizm-progress-track-color`)\n  @prizmDefaultProp()\n  trackColor: string | null = null;\n\n  @Input()\n  @HostBinding(`attr.data-size`)\n  @prizmDefaultProp()\n  size: PrizmSizeS | PrizmSizeM = `m`;\n\n  override readonly testId_ = 'ui_progress_bar';\n}\n","export const PRIZM_CHROMIUM_EDGE_START_VERSION = 79;\n","import { Directive, ElementRef, Inject, Input } from '@angular/core';\nimport { USER_AGENT } from '@ng-web-apis/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmResizeService } from '../../../services/resize.service';\nimport { prizmIsEdgeOlderThan } from '../../../util/browser/is-edge-older-than';\nimport { PRIZM_CHROMIUM_EDGE_START_VERSION } from '../../../constants/chromium';\nimport { prizmPure } from '@prizm-ui/core';\n\nfunction calculateColorSegments(colors: string[], progressWidth: number): string {\n  const segmentWidth = Math.ceil(progressWidth / colors.length);\n  const colorsString = colors.reduce(\n    (acc, color, i) => `${acc}, ${color} ${i * segmentWidth}px ${(i + 1) * segmentWidth}px`,\n    ``\n  );\n\n  return `linear-gradient(to right ${colorsString})`;\n}\n\n@Directive({\n  selector: `progress[prizmProgressBar][prizmProgressColorSegments]`,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[$.style.--prizm-progress-color]': `calcSegments$`,\n    '($.style.--prizm-progress-color)': `0`,\n  },\n  standalone: true,\n  providers: [PrizmDestroyService, PrizmResizeService],\n})\nexport class PrizmProgressColorSegmentsDirective {\n  // TODO: drop support of legacy Edge (EdgeHTML) in v4.x\n  private readonly isOldBrowsers = prizmIsEdgeOlderThan(PRIZM_CHROMIUM_EDGE_START_VERSION, this.userAgent);\n\n  @Input()\n  prizmProgressColorSegments: string[] = [];\n\n  @prizmPure\n  get calcSegments$(): Observable<string> {\n    return this.resize$.pipe(\n      map(() =>\n        this.isOldBrowsers\n          ? this.prizmProgressColorSegments[0]\n          : calculateColorSegments(this.prizmProgressColorSegments, this.elementRef.nativeElement.offsetWidth)\n      )\n    );\n  }\n\n  constructor(\n    @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLProgressElement>,\n    @Inject(PrizmResizeService) private readonly resize$: Observable<unknown>,\n    @Inject(USER_AGENT) private readonly userAgent: string\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { USER_AGENT, WINDOW } from '@ng-web-apis/common';\nimport { PrizmAbstractTestId, prizmDefaultProp } from '@prizm-ui/core';\nimport { PRIZM_CHROMIUM_EDGE_START_VERSION } from '../../../constants/chromium';\nimport { PrizmSizeS, PrizmSizesXl } from '../../../util/size-bigger';\nimport { prizmIsEdgeOlderThan } from '../../../util/browser/is-edge-older-than';\n\n@Component({\n  selector: `prizm-progress-circle`,\n  templateUrl: `./progress-circle.component.html`,\n  styleUrls: [`./progress-circle.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmProgressCircleComponent extends PrizmAbstractTestId {\n  @ViewChild(`progressCircle`, { static: true })\n  private readonly progressCircle!: ElementRef<SVGCircleElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  value = 0;\n\n  @Input()\n  @prizmDefaultProp()\n  max = 1;\n\n  @Input()\n  @HostBinding(`style.--prizm-progress-color`)\n  @prizmDefaultProp()\n  color: string | null = null;\n\n  @Input()\n  @HostBinding(`style.--prizm-progress-circle-track-color`)\n  @prizmDefaultProp()\n  trackColor: string | null = null;\n\n  @Input()\n  @HostBinding(`attr.data-size`)\n  @prizmDefaultProp()\n  size: PrizmSizeS | PrizmSizesXl = `m`;\n\n  @HostBinding(`style.--progress-percentage`)\n  get progressPercentage(): number {\n    return this.value / this.max;\n  }\n\n  // TODO: drop support of legacy Edge (EdgeHTML) in v4.x\n  get oldEdgeRadiusFallback(): number | null {\n    if (!prizmIsEdgeOlderThan(PRIZM_CHROMIUM_EDGE_START_VERSION, this.userAgent)) {\n      return null;\n    }\n\n    const strokeWidth = parseInt(\n      this.windowRef.getComputedStyle(this.progressCircle.nativeElement).strokeWidth,\n      10\n    );\n\n    return (this.elementRef.nativeElement.offsetWidth - strokeWidth) / 2;\n  }\n  override readonly testId_ = 'ui_progress_circle';\n\n  constructor(\n    @Inject(USER_AGENT) private readonly userAgent: string,\n    @Inject(WINDOW) private readonly windowRef: Window,\n    @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>\n  ) {\n    super();\n  }\n}\n","<progress class=\"z-hidden-progress\" [value]=\"value\" [max]=\"max\"></progress>\n\n<svg class=\"z-svg\" height=\"100%\" width=\"100%\" aria-hidden=\"true\">\n  <circle class=\"z-track\" [attr.r]=\"oldEdgeRadiusFallback\" cx=\"50%\" cy=\"50%\"></circle>\n\n  <circle class=\"z-progress\" #progressCircle [attr.r]=\"oldEdgeRadiusFallback\" cx=\"50%\" cy=\"50%\"></circle>\n</svg>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: `label[prizmProgressLabel]`,\n  templateUrl: `./progress-label.component.html`,\n  styleUrls: [`./progress-label.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmProgressLabelComponent extends PrizmAbstractTestId {\n  override readonly testId_ = 'ui_progress_label';\n}\n","<ng-content select=\"progress\"></ng-content>\n<ng-content select=\"prizm-progress-circle\"></ng-content>\n<span class=\"z-label prizm-font-input-text-helper\">\n  <ng-content></ng-content>\n</span>\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { PrizmAbstractTestId, prizmDefaultProp } from '@prizm-ui/core';\nimport { prizmIsString } from '../../../util/common/is-string';\nimport { PrizmRepeatTimesDirective } from '../../../directives';\n\n@Component({\n  selector: `prizm-progress-segmented`,\n  templateUrl: `./progress-segmented.component.html`,\n  styleUrls: [`./progress-segmented.component.less`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PrizmRepeatTimesDirective],\n})\nexport class PrizmProgressSegmentedComponent extends PrizmAbstractTestId {\n  @Input()\n  @prizmDefaultProp(\n    (value: number) => Number.isInteger(value) && value >= 0,\n    `Must be non-negative integer between 0 and max`\n  )\n  value = 0;\n\n  @Input()\n  @prizmDefaultProp((value: number) => Number.isInteger(value) && value > 0, `Must be positive integer`)\n  max = 1;\n\n  @Input()\n  @HostBinding(`attr.data-size`)\n  size: 's' | 'm' = `m`;\n\n  @Input()\n  @prizmDefaultProp()\n  colors: string | readonly string[] = `var(--prizm-v3-status-info-primary-default)`;\n\n  override readonly testId_ = 'ui_progress_segmented';\n\n  public getActiveColor(index = 0): string | null {\n    return prizmIsString(this.colors)\n      ? this.colors\n      : this.colors[index] || this.colors[this.colors.length - 1];\n  }\n}\n","<progress class=\"z-hidden-progress\" [value]=\"value\" [max]=\"max\"></progress>\n\n<span\n  class=\"z-segment\"\n  *prizmRepeatTimes=\"let index of max\"\n  [style.background]=\"index < value ? getActiveColor(index) : null\"\n  aria-hidden=\"true\"\n></span>\n","import { NgModule } from '@angular/core';\nimport { PrizmProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { PrizmProgressColorSegmentsDirective } from './progress-bar/progress-color-segments.directive';\nimport { PrizmProgressCircleComponent } from './progress-circle/progress-circle.component';\nimport { PrizmProgressLabelComponent } from './progress-label/progress-label.component';\nimport { PrizmProgressSegmentedComponent } from './progress-segmented/progress-segmented.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmProgressBarComponent,\n    PrizmProgressColorSegmentsDirective,\n    PrizmProgressCircleComponent,\n    PrizmProgressLabelComponent,\n    PrizmProgressSegmentedComponent,\n  ],\n  exports: [\n    PrizmProgressBarComponent,\n    PrizmProgressCircleComponent,\n    PrizmProgressColorSegmentsDirective,\n    PrizmProgressLabelComponent,\n    PrizmProgressSegmentedComponent,\n  ],\n})\nexport class PrizmProgressModule {}\n","import { IndicatorStatus } from '../indicator';\n\nexport interface IScreen {\n  title: string;\n  icon?: string;\n}\n\nexport interface INavigationTree extends IScreen {\n  isExpanded?: boolean;\n  children?: INavigationTree[];\n  indicatorStatus?: IndicatorStatus;\n  indicatorValue?: number;\n}\n\nexport enum StatusDictionary {\n  'info',\n  'secondary',\n  'success',\n  'warning',\n  'danger',\n}\n","import { Injectable } from '@angular/core';\nimport { INavigationTree } from '../navigation.interfaces';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class ActiveNavigationItemService {\n  public activeItem$: BehaviorSubject<INavigationTree | null> = new BehaviorSubject<INavigationTree | null>(\n    null\n  );\n\n  public set activeItem(item: INavigationTree | null) {\n    this.activeItem$.next(item);\n  }\n\n  public get activeItem(): INavigationTree | null {\n    return this.activeItem$.getValue();\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { INavigationTree } from '../../navigation.interfaces';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { ActiveNavigationItemService } from '../../services/active-navigation-item.service';\nimport { map } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-navigation-item-simple',\n  templateUrl: './prizm-navigation-item-simple.component.html',\n  styleUrls: ['./prizm-navigation-item-simple.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmNavigationItemSimpleComponent extends PrizmAbstractTestId {\n  @Input() public set data(tree: INavigationTree) {\n    this.data$.next(tree);\n  }\n  @Input() public deep!: number;\n  override readonly testId_ = 'ui_navigation--item-simple';\n\n  public data$: BehaviorSubject<INavigationTree | null> = new BehaviorSubject<INavigationTree | null>(null);\n  public isActive$: Observable<boolean> = combineLatest([\n    this.activeItemService.activeItem$,\n    this.data$,\n  ]).pipe(map(([activeItem, data]) => activeItem === data));\n\n  public get menuItem(): INavigationTree | null {\n    return this.data$.getValue();\n  }\n\n  constructor(public activeItemService: ActiveNavigationItemService) {\n    super();\n  }\n\n  public navClick(): void {\n    const data = this.data$.getValue();\n    const current = this.activeItemService.activeItem$.getValue();\n    this.activeItemService.activeItem = current === data ? null : data;\n  }\n}\n","<div class=\"nav\" [class.nav_active]=\"isActive$ | async\" (click)=\"navClick()\">\n  <span class=\"nav__title\" [style.marginLeft.px]=\"deep > 0 ? (deep - 1) * 24 : 0\">{{ menuItem?.title }}</span>\n  <div class=\"nav__status\">\n    <div\n      class=\"indicator indicator_{{ menuItem?.indicatorStatus }}\"\n      *ngIf=\"menuItem?.indicatorValue && menuItem?.indicatorStatus\"\n      [prizmHint]=\"$any(menuItem?.indicatorValue)\"\n    >\n      {{ menuItem?.indicatorValue }}\n    </div>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { INavigationTree } from './../../navigation.interfaces';\nimport { expandAnimation } from '../../../accordion/accordion.animation';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ActiveNavigationItemService } from '../../services/active-navigation-item.service';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-navigation-item-expandable',\n  templateUrl: './prizm-navigation-item-expandable.component.html',\n  styleUrls: ['./prizm-navigation-item-expandable.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [expandAnimation],\n})\nexport class PrizmNavigationItemExpandableComponent extends PrizmAbstractTestId {\n  @Input() public set data(tree: INavigationTree) {\n    this.data$.next(tree);\n  }\n  @Input() public deep!: number;\n\n  public isExpanded = false;\n  override readonly testId_ = 'ui_navigation--item-expandable';\n\n  public data$ = new BehaviorSubject<INavigationTree | null>(null);\n  public isActive$: Observable<boolean> = combineLatest([\n    this.activeItemService.activeItem$,\n    this.data$,\n  ]).pipe(map(([activeItem, data]) => activeItem === data));\n\n  public get menuItem(): INavigationTree | null {\n    return this.data$.getValue();\n  }\n\n  constructor(public activeItemService: ActiveNavigationItemService) {\n    super();\n  }\n\n  public toggle($event: Event): void {\n    $event.stopPropagation();\n    this.isExpanded = !this.isExpanded;\n  }\n\n  public navClick(): void {\n    const data = this.data$.getValue();\n    const current = this.activeItemService.activeItem$.getValue();\n    this.activeItemService.activeItem = current === data ? null : data;\n  }\n}\n","<div class=\"container\">\n  <div class=\"nav\" [class.nav_active]=\"isActive$ | async\" (click)=\"navClick()\">\n    <div class=\"nav__icon\" [style.marginLeft.px]=\"deep > 0 ? 8 + 16 * deep : 0\">\n      <prizm-icon [iconClass]=\"menuItem?.icon || 'files-folder'\"></prizm-icon>\n    </div>\n    <span class=\"nav__title\">{{ menuItem?.title }}</span>\n\n    <div class=\"nav__status\">\n      <div\n        class=\"indicator {{\n          menuItem?.indicatorStatus && !isExpanded ? 'indicator_' + menuItem?.indicatorStatus : ''\n        }}\"\n      ></div>\n    </div>\n\n    <button class=\"nav__chevron\" [class.nav__chevron_expanded]=\"isExpanded\" (click)=\"toggle($event)\">\n      <prizm-icon class=\"icon\" iconClass=\"arrows-chevron-right\"></prizm-icon>\n    </button>\n  </div>\n\n  <div class=\"expandable\" [@expand]=\"isExpanded ? 'expanded' : 'init'\">\n    <ng-container *ngFor=\"let item of menuItem?.children ?? []\">\n      <prizm-navigation-item-simple\n        *ngIf=\"!item?.children\"\n        [data]=\"item\"\n        [deep]=\"deep + 1\"\n      ></prizm-navigation-item-simple>\n\n      <prizm-navigation-item-expandable\n        *ngIf=\"$any(item?.children?.length) > 0\"\n        [data]=\"item\"\n        [deep]=\"deep + 1\"\n      ></prizm-navigation-item-expandable>\n    </ng-container>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, Output } from '@angular/core';\nimport { INavigationTree, StatusDictionary } from './navigation.interfaces';\nimport { IndicatorStatus } from '../indicator';\nimport { ActiveNavigationItemService } from './services/active-navigation-item.service';\nimport { skip } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-navigation',\n  templateUrl: './prizm-navigation.component.html',\n  styleUrls: ['./prizm-navigation.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ActiveNavigationItemService],\n})\nexport class PrizmNavigationComponent extends PrizmAbstractTestId {\n  @Input() public set data(tree: INavigationTree[]) {\n    tree.forEach(treeItem => this.calculateStatuses(treeItem));\n\n    this.menuItems = tree;\n  }\n  @Input() set activeElement(el: INavigationTree) {\n    this.activeItemService.activeItem = el;\n  }\n  @Output() activeItemChange = this.activeItemService.activeItem$.pipe(skip(1));\n\n  public menuItems: INavigationTree[] = [];\n\n  override readonly testId_ = 'ui_navigation';\n  constructor(private readonly activeItemService: ActiveNavigationItemService) {\n    super();\n  }\n\n  public calculateStatuses(data: INavigationTree): void {\n    if (data?.children?.length && data.children.length > 0) {\n      data.children.forEach(child => this.calculateStatuses(child));\n\n      let maxStatus = -1;\n\n      data.children\n        .filter(child => child?.indicatorStatus)\n        .forEach(child => {\n          maxStatus =\n            StatusDictionary[child.indicatorStatus as IndicatorStatus] > maxStatus\n              ? StatusDictionary[child.indicatorStatus as IndicatorStatus]\n              : maxStatus;\n        });\n\n      data.indicatorStatus = StatusDictionary[maxStatus] as IndicatorStatus;\n    }\n  }\n}\n","<ng-container *ngFor=\"let item of menuItems\">\n  <prizm-navigation-item-simple\n    *ngIf=\"!item?.children\"\n    [data]=\"$any(item)\"\n    [deep]=\"1\"\n  ></prizm-navigation-item-simple>\n\n  <prizm-navigation-item-expandable\n    *ngIf=\"$any(item?.children?.length) > 0\"\n    [data]=\"$any(item)\"\n    [deep]=\"1\"\n  ></prizm-navigation-item-expandable>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmNavigationComponent } from './prizm-navigation.component';\n\nimport { PrizmNavigationItemSimpleComponent } from './components/prizm-navigation-item-simple/prizm-navigation-item-simple.component';\nimport { PrizmNavigationItemExpandableComponent } from './components/prizm-navigation-item-expandable/prizm-navigation-item-expandable.component';\nimport { PrizmIconModule } from '../icon';\nimport { ActiveNavigationItemService } from './services/active-navigation-item.service';\nimport { PrizmHintModule } from '../../directives';\n\n@NgModule({\n  declarations: [\n    PrizmNavigationComponent,\n    PrizmNavigationItemSimpleComponent,\n    PrizmNavigationItemExpandableComponent,\n  ],\n  imports: [CommonModule, PrizmIconModule, PrizmHintModule],\n  exports: [PrizmNavigationComponent],\n  providers: [ActiveNavigationItemService],\n})\nexport class PrizmNavigationModule {}\n","import {\n  PrizmNavigationMenuEmptyMessageConfig,\n  PrizmNavigationMenuHeaderConfig,\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuSettingsConfig,\n  PrizmNavigationMenuToolbarConfig,\n} from '../interfaces';\n\nexport const DEFAULT_HEADER_CONFIG: PrizmNavigationMenuHeaderConfig = {\n  showSettings: false,\n  showHome: true,\n};\n\nexport const DEFAULT_SETTINGS: PrizmNavigationMenuSettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard',\n};\n\nexport const DEFAULT_TOOLBAR_CONFIG: PrizmNavigationMenuToolbarConfig = {\n  filter: false,\n  group: false,\n  folderMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n};\n\nexport const DEFAULT_SEARCH_CONFIG: PrizmNavigationMenuSearchConfig = {\n  searchSource: 'hierarchical',\n  searchDebounce: 300,\n  searchPlaceholder: '',\n};\n\nexport const DEFAULT_EMPTY_MESSAGE_CONFIG: PrizmNavigationMenuEmptyMessageConfig = {\n  title: 'Нет данных для отображения',\n  subtitle: 'Чтобы просмотреть информацию в этой области нужно изменить условия отображения или фильтрации.',\n};\n","import { InjectionToken } from '@angular/core';\nimport { DEFAULT_SEARCH_CONFIG, DEFAULT_SETTINGS } from '../defaults';\nimport {\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuSettingsConfig,\n} from '../interfaces/prizm-navigation-menu-configuration.interfaces';\n\nexport const PRIZM_NAVIGATION_MENU_SETTINGS_CONFIG = new InjectionToken<PrizmNavigationMenuSettingsConfig>(\n  'PRIZM_NAVIGATION_MENU_SETTINGS_CONFIG',\n  {\n    factory: (): PrizmNavigationMenuSettingsConfig => DEFAULT_SETTINGS,\n  }\n);\n\nexport const PRIZM_NAVIGATION_MENU_SEARCH_CONFIG = new InjectionToken<PrizmNavigationMenuSearchConfig>(\n  'PRIZM_NAVIGATION_MENU_SEARCH_CONFIG',\n  {\n    factory: (): PrizmNavigationMenuSearchConfig => DEFAULT_SEARCH_CONFIG,\n  }\n);\n","import { InjectionToken } from '@angular/core';\nimport { InternalPrizmNavigationMenuItem } from '../interfaces';\nimport { PrizmHandler } from '../../../types';\nimport { PRIZM_EMPTY_ARRAY } from '@prizm-ui/core';\n\nexport type PrizmNavigationMenuChildrenHandler<T> = PrizmHandler<\n  InternalPrizmNavigationMenuItem<T>,\n  readonly InternalPrizmNavigationMenuItem<T>[]\n>;\n\nexport const defaultNavigationMenuChildrenHandler: PrizmNavigationMenuChildrenHandler<unknown> = item => {\n  return item.children || PRIZM_EMPTY_ARRAY;\n};\n\nexport const PRIZM_NAVIGATION_MENU_CHILDREN_HANDLER = new InjectionToken<\n  PrizmNavigationMenuChildrenHandler<unknown>\n>('PRIZM_NAVIGATION_MENU_CHILDREN_HANDLER', {\n  factory: () => defaultNavigationMenuChildrenHandler,\n});\n","import { InternalPrizmNavigationMenuItem } from '../interfaces';\n\nexport type SimpleItem<T = any> = { text: string; children?: T[] };\n\nexport type FilterPredicate<Item extends SimpleItem<Item>> = (item: Item) => boolean;\n\nexport type MapperPredicate<Item extends SimpleItem<Item>, ResultType> = (item: Item) => ResultType;\n\nexport function filterItems<Item extends SimpleItem<Item>>(\n  items: Item[],\n  filterPredicate: FilterPredicate<Item>\n): Item[] {\n  const getChildren = (acc: Item[], item: Item): Item[] => {\n    if (filterPredicate(item)) {\n      acc.push(item);\n      return acc;\n    }\n\n    if (Array.isArray(item.children)) {\n      const children: Item[] =\n        item.children?.reduce((acc: Item[], item: Item) => {\n          return getChildren(acc, item) as Item[];\n        }, []) ?? [];\n\n      if (children.length) acc.push({ ...item, children });\n    }\n    return acc;\n  };\n\n  return items.reduce(getChildren, []);\n}\n\nexport function findItem<Item extends SimpleItem<Item>>(\n  items: Item[],\n  filterPredicate: FilterPredicate<Item>\n): Item | null {\n  for (const item of items) {\n    if (filterPredicate(item)) return item;\n\n    if (item.children) {\n      const targetItem = findItem(item.children, filterPredicate);\n      if (targetItem) return targetItem;\n    }\n  }\n  return null;\n}\n\nexport function toRubricatorItems<UserItem>(\n  nodes: InternalPrizmNavigationMenuItem<UserItem>[]\n): InternalPrizmNavigationMenuItem<UserItem>[] {\n  const sortedNodes = flatItems(nodes).sort((a, b) => sortByText(a, b));\n  const letters = new Set(sortedNodes.map(({ text }) => text.charAt(0).toUpperCase()));\n  const rubricatorNodes: InternalPrizmNavigationMenuItem<UserItem>[] = [];\n\n  letters.forEach(letter => {\n    rubricatorNodes.push({\n      isRubricator: true,\n      text: letter,\n      children: sortedNodes.filter(({ text }) => text.charAt(0).toUpperCase() === letter),\n      original: null,\n      groupId: null,\n      parent: null,\n      icon: null,\n      breadcrumbs: null,\n      extraTemplate: null,\n    });\n  });\n  return rubricatorNodes;\n}\n\nexport function flatItems<Item extends SimpleItem<any>>(items: Item[]): Item[] {\n  const flat: Item[] = [];\n\n  function extract(item: Item): void {\n    if (item.children) {\n      item.children.forEach(extract);\n      flat.push(item);\n    } else {\n      flat.push(item);\n    }\n  }\n\n  items.forEach(extract);\n\n  return flat;\n}\n\nexport function sortByText<Item extends SimpleItem<Item>>(a: Item, b: Item): number {\n  if (a.text > b.text) return 1;\n  if (a.text < b.text) return -1;\n  return 0;\n}\n\nexport function traverseAllDeep<Item extends SimpleItem<Item>>(\n  items: Item[],\n  callback: (item: Item) => void\n): void {\n  return items.forEach(item => {\n    callback(item);\n\n    if (item.children) {\n      traverseAllDeep(item.children, callback);\n    }\n  });\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { traverseAllDeep } from '../helpers/prizm-navigation-menu-items-helpers';\nimport {\n  DEFAULT_EMPTY_MESSAGE_CONFIG,\n  DEFAULT_SEARCH_CONFIG,\n  DEFAULT_SETTINGS,\n  DEFAULT_TOOLBAR_CONFIG,\n} from '../defaults';\nimport {\n  InternalPrizmNavigationMenuItem,\n  PrizmNavigationMenuEmptyMessageConfig,\n  PrizmNavigationMenuItem,\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuSettingsConfig,\n  PrizmNavigationMenuToolbarConfig,\n} from '../interfaces';\nimport { PRIZM_NAVIGATION_MENU_SEARCH_CONFIG, PRIZM_NAVIGATION_MENU_SETTINGS_CONFIG } from '../tokens';\n\ninterface InternalItemsState<UserItem> {\n  [groupId: string]: InternalPrizmNavigationMenuItem<UserItem>[];\n}\n\n@Injectable()\nexport class PrizmNavigationMenuService<\n  UserItem extends Omit<PrizmNavigationMenuItem, 'children'> & { children?: UserItem[] }\n> {\n  private internalItemsState$$ = new BehaviorSubject<InternalItemsState<UserItem>>({});\n\n  private internalToUserMap = new Map<InternalPrizmNavigationMenuItem<UserItem>, UserItem>();\n  private userToInternalMap = new Map<UserItem, InternalPrizmNavigationMenuItem<UserItem>>();\n\n  private expandedGroupsMap$$ = new BehaviorSubject<Map<string, boolean>>(new Map());\n  private userExpandedItemsMap$$ = new BehaviorSubject<Map<UserItem, boolean>>(new Map());\n\n  private activeItem$$ = new BehaviorSubject<InternalPrizmNavigationMenuItem<UserItem> | null>(null);\n\n  get activeItem(): InternalPrizmNavigationMenuItem<UserItem> | null {\n    return this.activeItem$$.value;\n  }\n\n  activeItem$: Observable<InternalPrizmNavigationMenuItem<UserItem> | null> =\n    this.activeItem$$.asObservable();\n\n  internalExpandedItemsMap: Map<InternalPrizmNavigationMenuItem<UserItem>, boolean> = new Map();\n\n  itemKeyName = 'id';\n\n  /** CONFIGURATION */\n\n  private searchConfig$$ = new BehaviorSubject<PrizmNavigationMenuSearchConfig>({\n    ...DEFAULT_SEARCH_CONFIG,\n    ...this.searchConfigToken,\n  });\n\n  private toolbarConfig$$ = new BehaviorSubject<PrizmNavigationMenuToolbarConfig>(DEFAULT_TOOLBAR_CONFIG);\n\n  private settingsConfig$$ = new BehaviorSubject<PrizmNavigationMenuSettingsConfig>({\n    ...DEFAULT_SETTINGS,\n    ...this.settingsConfigToken,\n    selectionMode: 'single',\n  });\n\n  private emptySearchResultMessageConfig$$ = new BehaviorSubject<PrizmNavigationMenuEmptyMessageConfig>(\n    DEFAULT_EMPTY_MESSAGE_CONFIG\n  );\n\n  private emptyDataMessageConfig$$ = new BehaviorSubject<PrizmNavigationMenuEmptyMessageConfig>({\n    title: '',\n    subtitle: '',\n  });\n\n  get settingsConfig(): PrizmNavigationMenuSettingsConfig {\n    return this.settingsConfig$$.value;\n  }\n\n  get searchConfig(): PrizmNavigationMenuSearchConfig {\n    return this.searchConfig$$.value;\n  }\n\n  get toolbarConfig(): PrizmNavigationMenuToolbarConfig {\n    return this.toolbarConfig$$.value;\n  }\n\n  searchConfig$: Observable<PrizmNavigationMenuSearchConfig> = this.searchConfig$$.asObservable();\n\n  toolbarConfig$: Observable<PrizmNavigationMenuToolbarConfig> = this.toolbarConfig$$.asObservable();\n\n  emptySearchResultMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.emptySearchResultMessageConfig$$.asObservable();\n\n  emptyDataMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.emptyDataMessageConfig$$.asObservable();\n\n  toolbarIsNotEmpty!: boolean;\n\n  /** FORWARD EVENTS */\n\n  activeItemChangedEvent$ = new Subject<UserItem>();\n\n  breadCrumbsChangedEvent$ = new Subject<UserItem[]>();\n\n  expandedItemsMapChangedEvent$ = new Subject<Map<UserItem, boolean>>();\n\n  expandedGroupsMapChangedEvent$ = new Subject<Map<string, boolean>>();\n\n  itemExpandedChangedEvent$ = new Subject<{\n    item: UserItem;\n    isExpanded: boolean;\n  }>();\n\n  groupExpandedChangedEvent$ = new Subject<{\n    groupId: string;\n    isExpanded: boolean;\n  }>();\n\n  constructor(\n    @Inject(PRIZM_NAVIGATION_MENU_SEARCH_CONFIG)\n    private searchConfigToken: PrizmNavigationMenuSearchConfig,\n    @Inject(PRIZM_NAVIGATION_MENU_SETTINGS_CONFIG)\n    private settingsConfigToken: PrizmNavigationMenuSettingsConfig\n  ) {}\n\n  /** ITEMS RELATED */\n\n  public registerGroupItems(groupId: string, items: UserItem[]): void {\n    const internalItems = this.mapToInternalItemsAndUpdateSetMap(items, groupId);\n\n    this.internalItemsState$$.next({\n      ...this.internalItemsState$$.value,\n      [groupId]: internalItems,\n    });\n\n    this.fillInternalExpandedItemsMapWithUser();\n  }\n\n  public getGroupItems(groupId: string): Observable<InternalPrizmNavigationMenuItem<UserItem>[]> {\n    return this.internalItemsState$$.pipe(map(s => s[groupId] ?? []));\n  }\n\n  public getUserItem(internalItem: InternalPrizmNavigationMenuItem<UserItem>): UserItem {\n    return this.internalToUserMap.get(internalItem) as UserItem;\n  }\n\n  public getInternalItem(userItem: UserItem): InternalPrizmNavigationMenuItem<UserItem> {\n    return this.userToInternalMap.get(userItem) as InternalPrizmNavigationMenuItem<UserItem>;\n  }\n\n  /** EXPANDED RELATED */\n\n  public registerExpandedItemsMap(expandedItemsMap: Map<UserItem, boolean>): void {\n    this.userExpandedItemsMap$$.next(expandedItemsMap);\n  }\n\n  public registerExpandedGroupsMap(expandedGroupsMap: Map<string, boolean>): void {\n    this.expandedGroupsMap$$.next(expandedGroupsMap);\n  }\n\n  public getGroupIsExpanded(groupId: string): boolean {\n    return Boolean(this.expandedGroupsMap$$.value.get(groupId));\n  }\n\n  public handleExpandedChanged(event: {\n    item: InternalPrizmNavigationMenuItem<UserItem>;\n    isExpanded: boolean;\n  }): void {\n    const userItem = this.getUserItem(event.item);\n    this.userExpandedItemsMap$$.value.set(userItem, event.isExpanded);\n    this.itemExpandedChangedEvent$.next({\n      item: userItem,\n      isExpanded: event.isExpanded,\n    });\n    this.expandedItemsMapChangedEvent$.next(this.userExpandedItemsMap$$.value);\n  }\n\n  public handleGroupExpandedChanged(event: { groupId: string; isExpanded: boolean }): void {\n    this.expandedGroupsMap$$.value.set(event.groupId, event.isExpanded);\n    this.groupExpandedChangedEvent$.next(event);\n    this.expandedGroupsMapChangedEvent$.next(this.expandedGroupsMap$$.value);\n  }\n\n  public clearExpandedItemsMap(groupId?: string): void {\n    if (groupId) {\n      const groupItems = this.internalItemsState$$.value[groupId];\n      traverseAllDeep(groupItems, internalItem => {\n        const userItem = this.getUserItem(internalItem);\n        this.internalExpandedItemsMap.delete(internalItem);\n        this.userExpandedItemsMap$$.value.delete(userItem);\n      });\n    } else {\n      this.internalExpandedItemsMap.clear();\n      this.userExpandedItemsMap$$.value.clear();\n    }\n    this.expandedItemsMapChangedEvent$.next(this.userExpandedItemsMap$$.value);\n  }\n\n  /** ACTIVE RELATED */\n\n  public setActiveItem(userItem: UserItem): void {\n    const internal = this.getInternalItem(userItem);\n    if (internal !== this.activeItem$$.value) {\n      this.activeItem$$.next(internal);\n    }\n  }\n\n  public handleActiveItemChange(internalItem: InternalPrizmNavigationMenuItem<UserItem>): void {\n    if (internalItem.isRubricator) return;\n\n    const breadcrumbs = internalItem.breadcrumbs ?? [];\n    const userItem = breadcrumbs[breadcrumbs.length - 1];\n    this.activeItem$$.next(internalItem);\n    this.activeItemChangedEvent$.next(userItem);\n    this.breadCrumbsChangedEvent$.next(internalItem.breadcrumbs ?? []);\n  }\n\n  /** CONFIGURATION RELATED */\n\n  public setSettingsConfiguration(settingsConfig: PrizmNavigationMenuSettingsConfig): void {\n    this.settingsConfig$$.next({ ...DEFAULT_SETTINGS, ...settingsConfig });\n  }\n\n  public setSearchConfig(config: PrizmNavigationMenuSearchConfig): void {\n    this.searchConfig$$.next({ ...DEFAULT_SEARCH_CONFIG, ...config });\n  }\n\n  public setToolbarConfig(config: PrizmNavigationMenuToolbarConfig): void {\n    this.toolbarConfig$$.next({ ...DEFAULT_TOOLBAR_CONFIG, ...config, folderMode: false });\n    this.toolbarIsNotEmpty = Object.values(this.toolbarConfig).some(Boolean);\n  }\n\n  public setItemKeyName(itemKeyName: string): void {\n    this.itemKeyName = itemKeyName;\n  }\n\n  public setEmptySearchResultMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig): void {\n    this.emptySearchResultMessageConfig$$.next(config);\n  }\n\n  public setEmptyDataMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig): void {\n    this.emptyDataMessageConfig$$.next(config);\n  }\n\n  /** PRIVATE */\n\n  private fillInternalExpandedItemsMapWithUser(): void {\n    const entries = this.userExpandedItemsMap$$.value.entries();\n\n    for (const [userItem, isExpanded] of entries) {\n      const internalItem = this.getInternalItem(userItem);\n      this.internalExpandedItemsMap.set(internalItem, isExpanded);\n    }\n  }\n\n  private mapToInternalItemsAndUpdateSetMap(\n    items: UserItem[],\n    groupId: string\n  ): InternalPrizmNavigationMenuItem<UserItem>[] {\n    return items.map(item => this.mapWithMetadataAndUpdateMaps(item, groupId, null));\n  }\n\n  private mapWithMetadataAndUpdateMaps(\n    item: UserItem,\n    groupId: string,\n    parent: InternalPrizmNavigationMenuItem<UserItem> | null\n  ): InternalPrizmNavigationMenuItem<UserItem> {\n    if (!item.children) {\n      const internal: InternalPrizmNavigationMenuItem<UserItem> = {\n        ...item,\n        original: item,\n        groupId,\n        parent,\n        breadcrumbs: parent ? [...(parent.breadcrumbs ?? []), item] : [item],\n        children: undefined,\n      };\n\n      this.internalToUserMap.set(internal, item);\n      this.userToInternalMap.set(item, internal);\n      return internal;\n    }\n\n    const internalWithMappedChildren: InternalPrizmNavigationMenuItem<UserItem> = {\n      ...item,\n      original: item,\n      groupId,\n      parent,\n      breadcrumbs: parent ? [...(parent.breadcrumbs ?? []), item] : [item],\n      children: [],\n    };\n    internalWithMappedChildren.children = item.children.map(child =>\n      this.mapWithMetadataAndUpdateMaps(child, groupId, internalWithMappedChildren)\n    );\n\n    this.internalToUserMap.set(internalWithMappedChildren, item);\n    this.userToInternalMap.set(item, internalWithMappedChildren);\n    return internalWithMappedChildren;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { ViewMode } from '../interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PrizmNavigationMenuToolbarService {\n  private searchVisible$$ = new BehaviorSubject<boolean>(false);\n  private searchValue$$ = new BehaviorSubject<string>('');\n  private viewMode$$ = new BehaviorSubject<ViewMode>('hierarchy');\n\n  closeAll$ = new Subject<void>();\n\n  searchVisible$: Observable<boolean> = this.searchVisible$$.asObservable();\n\n  searchState$: Observable<{\n    enabled: boolean;\n    value: string;\n  }> = combineLatest([this.searchVisible$$, this.searchValue$$]).pipe(\n    map(([enabled, value]) => ({ enabled, value }))\n  );\n\n  viewMode$: Observable<ViewMode> = this.viewMode$$.asObservable();\n\n  public changeSearchValue(searchValue: string): void {\n    this.searchValue$$.next(searchValue);\n  }\n\n  public toggleSearch(): void {\n    const newValue = !this.searchVisible$$.value;\n    this.searchVisible$$.next(newValue);\n\n    if (!newValue) {\n      this.searchValue$$.next('');\n    }\n  }\n\n  public changeViewMode(viewMode: ViewMode): void {\n    const newValue = this.viewMode$$.value === viewMode ? 'hierarchy' : viewMode;\n    this.viewMode$$.next(newValue);\n  }\n\n  public closeAll(): void {\n    this.closeAll$.next();\n  }\n}\n","import { Inject, Injectable, OnDestroy, Optional, Self, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport {\n  filterItems,\n  toRubricatorItems,\n  traverseAllDeep,\n} from '../helpers/prizm-navigation-menu-items-helpers';\nimport {\n  InternalPrizmNavigationMenuItem,\n  PrizmNavigationMenuEmptyMessageConfig,\n  PrizmNavigationMenuItem,\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuToolbarConfig,\n  ViewMode,\n} from '../interfaces';\nimport { PrizmNavigationMenuToolbarService } from './prizm-navigation-menu-toolbar.service';\nimport { PrizmNavigationMenuService } from './prizm-navigation-menu.service';\nimport { PRIZM_NAVIGATION_MENU_SEARCH_CONFIG } from '../tokens';\nimport { DEFAULT_TOOLBAR_CONFIG, DEFAULT_SEARCH_CONFIG, DEFAULT_EMPTY_MESSAGE_CONFIG } from '../defaults';\n\n@Injectable()\nexport class PrizmNavigationMenuGroupService<\n  UserItem extends Omit<PrizmNavigationMenuItem, 'children'> & { children?: UserItem[] }\n> implements OnDestroy\n{\n  private groupId$$ = new BehaviorSubject<string | null>(null);\n\n  private emptySearchResultMessageConfig$$ = new BehaviorSubject<PrizmNavigationMenuEmptyMessageConfig>(\n    DEFAULT_EMPTY_MESSAGE_CONFIG\n  );\n\n  private emptyDataMessageConfig$$ = new BehaviorSubject<PrizmNavigationMenuEmptyMessageConfig>({\n    title: '',\n    subtitle: '',\n  });\n\n  private toolbarConfig$$ = new BehaviorSubject<PrizmNavigationMenuToolbarConfig>(DEFAULT_TOOLBAR_CONFIG);\n\n  private searchConfig$$ = new BehaviorSubject<PrizmNavigationMenuSearchConfig>({\n    ...DEFAULT_SEARCH_CONFIG,\n    ...this.searchConfigToken,\n  });\n\n  private searchState$$ = new BehaviorSubject<{\n    enabled: boolean;\n    value: string;\n  }>({\n    enabled: false,\n    value: '',\n  });\n\n  private viewMode$$ = new BehaviorSubject<ViewMode>('hierarchy');\n\n  private folderItem$$ = new BehaviorSubject<InternalPrizmNavigationMenuItem<UserItem | null> | null>(null);\n\n  private persistentExpandedItemsMap$$ = new BehaviorSubject<\n    Map<InternalPrizmNavigationMenuItem<UserItem>, boolean>\n  >(this.menuService.internalExpandedItemsMap);\n\n  private temporaryExpandedItemsMap: Map<InternalPrizmNavigationMenuItem<UserItem>, boolean> = new Map();\n\n  private internalItems$: Observable<InternalPrizmNavigationMenuItem<UserItem>[]> = this.groupId$$.pipe(\n    filter(groupId => !!groupId),\n    switchMap(groupId => this.menuService.getGroupItems(groupId as string))\n  );\n\n  private modeBasedItems$: Observable<InternalPrizmNavigationMenuItem<UserItem>[]> = combineLatest([\n    this.internalItems$,\n    this.viewMode$$,\n  ]).pipe(\n    switchMap(([internalItems, viewMode]) => {\n      if (viewMode === 'rubricator') {\n        const rubricatorItems = toRubricatorItems(internalItems);\n        rubricatorItems.forEach(rootLevelItem => this.temporaryExpandedItemsMap.set(rootLevelItem, false));\n        return of(rubricatorItems);\n      }\n\n      if (viewMode === 'folder') {\n        return this.folderItem$$.pipe(\n          map(folderItem => {\n            if (folderItem) {\n              if (!folderItem.children) {\n                return [folderItem];\n              }\n\n              return folderItem.children || [];\n            }\n\n            return internalItems;\n          })\n        );\n      }\n\n      return of(internalItems);\n    })\n  );\n\n  viewMode$: Observable<ViewMode> = this.viewMode$$.asObservable();\n\n  groupItems$: Observable<InternalPrizmNavigationMenuItem<UserItem>[]> = combineLatest([\n    this.modeBasedItems$,\n    this.searchState$$,\n  ]).pipe(\n    map(([modeBasedItems, searchState]) => {\n      if (searchState.enabled && searchState.value === '') {\n        return [];\n      }\n\n      if (searchState.enabled) {\n        const filtered = filterItems(modeBasedItems, item =>\n          item.text.toLowerCase().includes(searchState.value.toLowerCase())\n        );\n        traverseAllDeep(filtered, item => this.temporaryExpandedItemsMap.set(item, true));\n        return filtered;\n      }\n\n      return modeBasedItems;\n    })\n  );\n\n  expandedItemsMap$: Observable<Map<InternalPrizmNavigationMenuItem<UserItem>, boolean>> = combineLatest([\n    this.viewMode$$,\n    this.searchState$$,\n    this.persistentExpandedItemsMap$$,\n  ]).pipe(\n    map(([viewMode, searchState, persistentExpandedItemsMap]) => {\n      return viewMode === 'folder' || viewMode === 'rubricator' || searchState.enabled\n        ? this.temporaryExpandedItemsMap\n        : persistentExpandedItemsMap;\n    })\n  );\n\n  closeAll$ = new Subject<void>();\n\n  searchEnabled$: Observable<boolean> = this.searchState$$.pipe(map(s => s.enabled));\n\n  searchConfig$: Observable<PrizmNavigationMenuSearchConfig> = this.searchConfig$$.asObservable();\n\n  toolbarConfig$: Observable<PrizmNavigationMenuToolbarConfig> = this.toolbarConfig$$.asObservable();\n\n  emptySearchResultMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.menuService.emptySearchResultMessageConfig$;\n\n  emptyDataMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.menuService.emptyDataMessageConfig$;\n\n  get groupId(): string | null {\n    return this.groupId$$.value;\n  }\n\n  get searchConfig(): PrizmNavigationMenuSearchConfig {\n    return this.searchConfig$$.value;\n  }\n\n  get viewMode(): ViewMode {\n    return this.viewMode$$.value;\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private menuService: PrizmNavigationMenuService<UserItem>,\n    @Inject(PRIZM_NAVIGATION_MENU_SEARCH_CONFIG) private searchConfigToken: PrizmNavigationMenuSearchConfig,\n    @Self()\n    private groupToolbarService: PrizmNavigationMenuToolbarService,\n    @SkipSelf() @Optional() private menuToolbarService?: PrizmNavigationMenuToolbarService\n  ) {\n    this.filterItemsOnSearchChange();\n    this.configureViewMode();\n    this.clearExpandedItemsOnToolbarAction();\n  }\n\n  public goToParentFolder(item: InternalPrizmNavigationMenuItem<UserItem>): void {\n    item.breadcrumbs = item.breadcrumbs ?? [];\n    const parentUserItem = item.breadcrumbs[item.breadcrumbs.length - 3];\n    const parent = this.menuService.getInternalItem(parentUserItem);\n\n    this.temporaryExpandedItemsMap.clear();\n    this.folderItem$$.next(parent);\n  }\n\n  public goToRootFolder(): void {\n    this.temporaryExpandedItemsMap.clear();\n    this.folderItem$$.next(null);\n  }\n\n  public handleFolderExpanded(item: InternalPrizmNavigationMenuItem<UserItem>): void {\n    this.folderItem$$.next(item);\n  }\n\n  public setGroupId(groupId: string): void {\n    this.groupId$$.next(groupId);\n  }\n\n  public setToolbarConfig(toolbarConfig: PrizmNavigationMenuToolbarConfig): void {\n    this.toolbarConfig$$.next({ ...DEFAULT_TOOLBAR_CONFIG, ...toolbarConfig, folderMode: false });\n  }\n\n  public setSearchConfig(config: PrizmNavigationMenuSearchConfig): void {\n    this.searchConfig$$.next({\n      ...DEFAULT_SEARCH_CONFIG,\n      ...config,\n    });\n  }\n\n  public setEmptySearchResultMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig): void {\n    this.emptySearchResultMessageConfig$$.next(config);\n  }\n\n  public setEmptyDataMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig): void {\n    this.emptyDataMessageConfig$$.next(config);\n  }\n\n  public applySearchState(value: { enabled: boolean; value: string }): void {\n    this.searchState$$.next(value);\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private filterItemsOnSearchChange(): void {\n    this.searchConfig$\n      .pipe(\n        switchMap(config => {\n          switch (config.searchSource) {\n            case 'group':\n              return this.groupToolbarService.searchState$;\n\n            case 'menu':\n              return this.menuToolbarService?.searchState$ as any;\n\n            case 'hierarchical':\n            default:\n              return combineLatest([\n                this.groupToolbarService.searchState$,\n                ...(this.menuToolbarService?.searchState$ ? [this.menuToolbarService?.searchState$] : []),\n              ]).pipe(\n                map(([groupValue, menuValue]) => {\n                  if (groupValue?.enabled) {\n                    return groupValue;\n                  }\n\n                  if (menuValue?.enabled) {\n                    return menuValue;\n                  }\n\n                  return {\n                    enabled: false,\n                    value: '',\n                  };\n                })\n              );\n          }\n        }),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(v => this.applySearchState(v as any));\n  }\n\n  private configureViewMode(): void {\n    const menuViewMode$ = this.menuToolbarService?.viewMode$.pipe(\n      filter(menuViewMode => {\n        if (menuViewMode === 'folder' && !this.toolbarConfig$$.value.folderMode) return false;\n        if (menuViewMode === 'rubricator' && !this.toolbarConfig$$.value.rubricatorMode) return false;\n        return true;\n      })\n    );\n\n    menuViewMode$\n      ?.pipe(\n        withLatestFrom(this.viewMode$$),\n        filter(([menuViewMode, currentViewMode]) => menuViewMode !== currentViewMode),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(([menuViewMode]) => {\n        this.viewMode$$.next(menuViewMode);\n        this.groupToolbarService.changeViewMode(menuViewMode);\n      });\n\n    this.groupToolbarService.viewMode$\n      .pipe(\n        filter(groupViewMode => groupViewMode !== this.viewMode$$.value),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(groupViewMode => {\n        this.viewMode$$.next(groupViewMode);\n      });\n  }\n\n  private clearExpandedItemsOnToolbarAction(): void {\n    this.menuToolbarService?.closeAll$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.temporaryExpandedItemsMap.clear();\n      this.menuService.clearExpandedItemsMap();\n      this.closeAll$.next();\n    });\n\n    this.groupToolbarService.closeAll$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.temporaryExpandedItemsMap.clear();\n      this.menuService.clearExpandedItemsMap(this.groupId as string);\n      this.closeAll$.next();\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { InternalPrizmNavigationMenuItem, ViewMode } from '../../interfaces';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { PrizmIconsSvgModule } from '@prizm-ui/icons';\nimport { NgIf, NgTemplateOutlet } from '@angular/common';\nimport { PrizmInputCommonModule } from '../../../input/common/input-common.module';\nimport { PrizmHoveredModule } from '../../../../directives/hovered';\nimport { PrizmHintDirective } from '../../../../directives';\nimport { PrizmButtonComponent } from '../../../button';\nimport { prizmIsTextOverflow } from '../../../../util';\n\n@Component({\n  selector: 'prizm-navigation-menu-item',\n  templateUrl: './prizm-navigation-menu-item.component.html',\n  styleUrls: ['./prizm-navigation-menu-item.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    PrizmIconsSvgModule,\n    PrizmHoveredModule,\n    NgIf,\n    NgTemplateOutlet,\n    PrizmInputCommonModule,\n    PrizmButtonComponent,\n    PrizmHintDirective,\n  ],\n})\nexport class PrizmNavigationMenuItemComponent<T> extends PrizmAbstractTestId {\n  @Output() interaction = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n  @Output() toggleExpanded = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n  @Output() goToParentItem = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n  @Output() goToRootItem = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n\n  @Input() itemExtraTemplate!: TemplateRef<unknown>;\n  @Input() isExpandable!: boolean;\n  @Input() isExpanded!: boolean;\n  @Input() isActive!: boolean;\n  @Input() item!: InternalPrizmNavigationMenuItem<T>;\n  @Input() mode!: ViewMode;\n  @Input() showGoToButtons!: boolean;\n\n  public readonly prizmIsTextOverflow = prizmIsTextOverflow;\n  public isHovered = false;\n\n  get expandButtonVisible(): boolean {\n    return this.mode === 'rubricator' ? !!this.item.isRubricator : this.isExpandable;\n  }\n\n  get goToButtonsVisible(): boolean {\n    this.item.breadcrumbs = this.item.breadcrumbs ?? [];\n    return this.mode === 'folder' && this.item.breadcrumbs.length > 1;\n  }\n  override readonly testId_ = 'ui_navigation_menu_item';\n\n  constructor(public cdr: ChangeDetectorRef) {\n    super();\n  }\n}\n","<div\n  class=\"prizm-navigation-menu-item\"\n  [class.prizm-navigation-menu-item_active]=\"isActive\"\n  [class.prizm-navigation-menu-item_hovered]=\"isHovered\"\n  [class.prizm-navigation-menu-item_expandable]=\"isExpandable\"\n  [tabindex]=\"0\"\n  [prizmHint]=\"item.text\"\n  [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\"\n  (keydown.space)=\"interaction.emit(item)\"\n  (keydown.enter)=\"interaction.emit(item)\"\n  (click)=\"interaction.emit(item)\"\n  (prizmHoveredChange)=\"isHovered = $event\"\n>\n  <prizm-icons-svg\n    class=\"prizm-navigation-menu-item__icon\"\n    *ngIf=\"item.icon\"\n    [name]=\"item.icon\"\n  ></prizm-icons-svg>\n  <p class=\"prizm-navigation-menu-item__text\" #elem>\n    {{ item.text }}\n  </p>\n  <div class=\"prizm-navigation-menu-item__extra\">\n    <ng-container\n      [ngTemplateOutlet]=\"item.extraTemplate || itemExtraTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: item, isHovered: isHovered }\"\n    ></ng-container>\n  </div>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-corner-left-up'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToParentItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    *ngIf=\"goToButtonsVisible\"\n    [size]=\"'m'\"\n    [icon]=\"'arrows-arrow-up-level'\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    (click)=\"$event.stopPropagation(); goToRootItem.emit(item)\"\n    prizmIconButton\n  ></button>\n  <button\n    class=\"expand-button\"\n    *ngIf=\"expandButtonVisible\"\n    [appearance]=\"'secondary'\"\n    [appearanceType]=\"'ghost'\"\n    [size]=\"'m'\"\n    [icon]=\"isExpanded ? 'chevrons-down' : 'chevrons-right'\"\n    [class.t-button_expanded]=\"isExpanded\"\n    (click)=\"$event.stopPropagation(); toggleExpanded.emit(item)\"\n    prizmIconButton\n  ></button>\n</div>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  TemplateRef,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  ViewChildren,\n  QueryList,\n  Inject,\n} from '@angular/core';\nimport { InternalPrizmNavigationMenuItem, ViewMode } from '../../interfaces';\nimport { PrizmNavigationMenuItemComponent } from '../prizm-navigation-menu-item/prizm-navigation-menu-item.component';\nimport { findItem } from '../../helpers/prizm-navigation-menu-items-helpers';\nimport { PRIZM_NAVIGATION_MENU_CHILDREN_HANDLER, PrizmNavigationMenuChildrenHandler } from '../../tokens';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { PrizmTreeControllerDirective, PrizmTreeModule } from '../../../tree';\nimport { NgFor } from '@angular/common';\nimport { prizmEmptyQueryList } from '@prizm-ui/helpers';\n\n@Component({\n  selector: 'prizm-navigation-menu-items',\n  templateUrl: './prizm-navigation-menu-items.component.html',\n  styleUrls: ['./prizm-navigation-menu-items.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [PrizmTreeModule, NgFor, PrizmNavigationMenuItemComponent],\n})\nexport class PrizmNavigationMenuItemsComponent<\n  T extends { children?: unknown[] }\n> extends PrizmAbstractTestId {\n  @ViewChildren(PrizmNavigationMenuItemComponent) private menuItemsList: QueryList<\n    PrizmNavigationMenuItemComponent<T>\n  > = prizmEmptyQueryList();\n\n  @Output() itemExpandedChanged = new EventEmitter<{\n    item: InternalPrizmNavigationMenuItem<T>;\n    isExpanded: boolean;\n  }>();\n\n  @Output() activeItemChanged = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n\n  @Output() goToRootItem = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n\n  @Output() goToParentItem = new EventEmitter<InternalPrizmNavigationMenuItem<T>>();\n\n  @Input() items!: InternalPrizmNavigationMenuItem<T>[];\n  @Input() mode!: ViewMode;\n  @Input() activeItem!: InternalPrizmNavigationMenuItem<T>;\n  @Input() itemExtraTemplate!: TemplateRef<unknown>;\n  @Input() expandedItemsMap: Map<InternalPrizmNavigationMenuItem<T>, boolean> = new Map<\n    InternalPrizmNavigationMenuItem<T>,\n    boolean\n  >();\n  @Input() childrenHandler!: PrizmNavigationMenuChildrenHandler<T>;\n\n  get menuItemsChildrenHandler(): PrizmNavigationMenuChildrenHandler<T> {\n    return this.childrenHandler || this.childrenHandlerToken;\n  }\n  override readonly testId_ = 'ui_navigation_menu_items';\n\n  constructor(\n    @Inject(PRIZM_NAVIGATION_MENU_CHILDREN_HANDLER)\n    private childrenHandlerToken: PrizmNavigationMenuChildrenHandler<T>,\n    public cdr: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  public handleInteraction(\n    item: InternalPrizmNavigationMenuItem<T>,\n    treeCtrl: PrizmTreeControllerDirective<InternalPrizmNavigationMenuItem<T>>\n  ): void {\n    if (item.isGroup) {\n      treeCtrl.toggleByItemValue(item);\n    } else {\n      this.activeItemChanged.emit(item);\n    }\n  }\n\n  public handleExpandedChanged({\n    value,\n    isExpanded,\n  }: {\n    value: InternalPrizmNavigationMenuItem<T>;\n    isExpanded: boolean;\n  }): void {\n    this.itemExpandedChanged.emit({\n      item: value,\n      isExpanded,\n    });\n  }\n\n  public getItemIsExpanded(item: InternalPrizmNavigationMenuItem<T>): boolean {\n    return this.expandedItemsMap.get(item) ?? false;\n  }\n\n  public getItemIsActive(item: InternalPrizmNavigationMenuItem<T>): boolean {\n    if (item === this.activeItem) return true;\n\n    if (!this.getItemIsExpanded(item) && item.children && this.mode !== 'rubricator') {\n      const anyActiveChild = findItem(item.children, item => item === this.activeItem);\n      return !!anyActiveChild;\n    }\n\n    return false;\n  }\n\n  public triggerCdr(): void {\n    this.cdr.markForCheck();\n    this.menuItemsList?.forEach(itemComponent => itemComponent.cdr.markForCheck());\n  }\n}\n","<prizm-tree\n  #treeCtrl=\"prizmTreeController\"\n  *ngFor=\"let item of items\"\n  [prizmTreeController]=\"false\"\n  [map]=\"expandedItemsMap\"\n  [content]=\"content\"\n  [value]=\"item\"\n  [childrenHandler]=\"menuItemsChildrenHandler\"\n  (expandedChanged)=\"handleExpandedChanged($event)\"\n>\n  <ng-template #content let-item>\n    <prizm-navigation-menu-item\n      [item]=\"item\"\n      [mode]=\"mode\"\n      [itemExtraTemplate]=\"itemExtraTemplate\"\n      [isActive]=\"getItemIsActive(item)\"\n      [isExpandable]=\"menuItemsChildrenHandler(item).length > 0\"\n      [isExpanded]=\"getItemIsExpanded(item)\"\n      (toggleExpanded)=\"treeCtrl.toggleByItemValue($event)\"\n      (interaction)=\"handleInteraction($event, treeCtrl)\"\n      (goToParentItem)=\"goToParentItem.emit($event)\"\n      (goToRootItem)=\"goToRootItem.emit($event)\"\n    ></prizm-navigation-menu-item>\n  </ng-template>\n</prizm-tree>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { PrizmButtonModule } from '../../../button';\nimport { PrizmInputCommonModule } from '../../../input/common/input-common.module';\nimport { PrizmInputTextComponent } from '../../../input';\n\n@Component({\n  selector: 'prizm-navigation-menu-search',\n  templateUrl: './prizm-navigation-menu-search.component.html',\n  styleUrls: ['./prizm-navigation-menu-search.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [PrizmButtonModule, ReactiveFormsModule, PrizmInputCommonModule, PrizmInputTextComponent],\n})\nexport class PrizmNavigationMenuSearchComponent extends PrizmAbstractTestId implements AfterViewInit {\n  @ViewChild('searchInput', {\n    read: ElementRef,\n  })\n  public searchInput!: ElementRef<HTMLInputElement>;\n\n  @Output() searchChange = new EventEmitter<string>();\n\n  @Input() searchDebounce!: number;\n\n  @Input() placeholder!: string;\n  override readonly testId_ = 'ui_navigation_menu_search';\n\n  public searchFormControl: UntypedFormControl = new UntypedFormControl('');\n\n  constructor(private destroy$: PrizmDestroyService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    this.searchFormControl.valueChanges\n      .pipe(debounceTime(this.searchDebounce || 0), takeUntil(this.destroy$))\n      .subscribe(this.searchChange);\n\n    this.searchInput.nativeElement.focus();\n  }\n}\n","<div class=\"prizm-navigation-menu-search\">\n  <prizm-input-layout class=\"prizm-navigation-menu-search__input\" label=\"\" size=\"m\">\n    <input #searchInput [formControl]=\"searchFormControl\" [placeholder]=\"placeholder || ''\" prizmInput />\n    <ng-container prizm-input-right>\n      <button prizmInputIconButton=\"sort-zoom-in\"></button>\n    </ng-container>\n  </prizm-input-layout>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';\nimport { PrizmNavigationMenuSearchConfig, PrizmNavigationMenuToolbarConfig } from '../../interfaces';\nimport { PrizmNavigationMenuToolbarService } from '../../services/prizm-navigation-menu-toolbar.service';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmNavigationMenuSearchComponent } from '../prizm-navigation-menu-search/prizm-navigation-menu-search.component';\nimport { PrizmButtonModule } from '../../../button/button.module';\nimport { PrizmLetDirective } from '@prizm-ui/helpers';\n\n@Component({\n  selector: 'prizm-navigation-menu-toolbar',\n  templateUrl: './prizm-navigation-menu-toolbar.component.html',\n  styleUrls: ['./prizm-navigation-menu-toolbar.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PrizmButtonModule, PrizmNavigationMenuSearchComponent, PrizmLetDirective],\n})\nexport class PrizmNavigationMenuToolbarComponent extends PrizmAbstractTestId {\n  @Input() toolbarExtraTemplate!: TemplateRef<unknown>;\n\n  @Input() toolbarConfig!: PrizmNavigationMenuToolbarConfig;\n\n  @Input() searchConfig!: PrizmNavigationMenuSearchConfig;\n\n  @Input() hideGroupAppearance!: boolean;\n\n  get toolbarIsVisible(): boolean {\n    return !this.hideGroupAppearance && this.toolbarConfig && Object.values(this.toolbarConfig).some(Boolean);\n  }\n  override readonly testId_ = 'ui_navigation_menu_toolbar';\n\n  constructor(public toolbarService: PrizmNavigationMenuToolbarService) {\n    super();\n  }\n}\n","<ng-container *prizmLet=\"toolbarService.searchVisible$ | async as searchVisible\">\n  <div class=\"prizm-navigation-menu-toolbar\" *ngIf=\"toolbarIsVisible\">\n    <div class=\"instruments\">\n      <ng-container *ngTemplateOutlet=\"toolbarExtraTemplate\"></ng-container>\n\n      <ng-container *ngIf=\"toolbarService.viewMode$ | async as viewMode\">\n        <button\n          *ngIf=\"toolbarConfig.hierarchyMode ?? true\"\n          [pseudoPressed]=\"viewMode === 'hierarchy'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-mode'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('hierarchy')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.rubricatorMode\"\n          [pseudoPressed]=\"viewMode === 'rubricator'\"\n          [size]=\"'m'\"\n          [icon]=\"'editor-alfavit'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('rubricator')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.folderMode\"\n          [pseudoPressed]=\"viewMode === 'folder'\"\n          [size]=\"'m'\"\n          [icon]=\"'files-folder'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.changeViewMode('folder')\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.closeAll\"\n          [size]=\"'m'\"\n          [icon]=\"'chevrons-close-all'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.closeAll()\"\n          prizmIconButton\n        ></button>\n\n        <button\n          *ngIf=\"toolbarConfig.search\"\n          [pseudoPressed]=\"searchVisible\"\n          [size]=\"'m'\"\n          [icon]=\"'sort-zoom-in'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"toolbarService.toggleSearch()\"\n          prizmIconButton\n        ></button>\n      </ng-container>\n    </div>\n  </div>\n  <prizm-navigation-menu-search\n    *ngIf=\"searchVisible\"\n    [searchDebounce]=\"$any(searchConfig.searchDebounce)\"\n    (searchChange)=\"toolbarService.changeSearchValue($event)\"\n  ></prizm-navigation-menu-search>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { debounceTime, map, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport {\n  InternalPrizmNavigationMenuItem,\n  PrizmNavigationMenuEmptyMessageConfig,\n  PrizmNavigationMenuItem,\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuToolbarConfig,\n  ViewMode,\n} from '../../interfaces';\nimport { PrizmNavigationMenuService } from '../../services/prizm-navigation-menu.service';\nimport { PrizmNavigationMenuGroupService } from '../../services/prizm-navigation-menu-group.service';\nimport { PrizmNavigationMenuToolbarService } from '../../services/prizm-navigation-menu-toolbar.service';\nimport { PrizmNavigationMenuItemsComponent } from '../prizm-navigation-menu-items/prizm-navigation-menu-items.component';\nimport { PrizmHandler } from '../../../../../lib/types';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PolymorphOutletDirective } from '../../../../directives';\nimport {\n  PrizmAccordionComponent,\n  PrizmAccordionContentDirective,\n  PrizmAccordionItemComponent,\n} from '../../../accordion';\nimport { PrizmNavigationMenuToolbarComponent } from '../prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component';\n\n@Component({\n  selector: 'prizm-navigation-menu-group',\n  templateUrl: './prizm-navigation-menu-group.component.html',\n  styleUrls: ['./prizm-navigation-menu-group.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmNavigationMenuToolbarService, PrizmNavigationMenuGroupService],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PrizmAccordionItemComponent,\n    PrizmAccordionComponent,\n    PrizmNavigationMenuToolbarComponent,\n    PrizmNavigationMenuItemsComponent,\n    PrizmAccordionContentDirective,\n    PolymorphOutletDirective,\n  ],\n})\nexport class PrizmNavigationMenuGroupComponent<\n    UserItem extends Omit<PrizmNavigationMenuItem, 'children'> & { children?: UserItem[] }\n  >\n  extends PrizmAbstractTestId\n  implements OnInit\n{\n  @ViewChild(PrizmNavigationMenuItemsComponent)\n  private menuItemsComponent!: PrizmNavigationMenuItemsComponent<UserItem>;\n\n  @Output() itemExpandedChanged = new EventEmitter<{\n    item: UserItem;\n    isExpanded: boolean;\n  }>();\n\n  @Output() groupExpandedChanged = new EventEmitter<{\n    groupId: string;\n    isExpanded: boolean;\n  }>();\n\n  @Input() groupId!: string;\n  @Input() title!: string;\n  @Input() hideGroupAppearance?: boolean;\n  @Input() icon?: string;\n  @Input() toolbarExtraTemplate!: TemplateRef<unknown>;\n  @Input() itemExtraTemplate?: TemplateRef<unknown>;\n\n  @Input() set items(items: UserItem[]) {\n    this.items$$.next(items);\n  }\n\n  @Input() set toolbarConfig(toolbarConfig: PrizmNavigationMenuToolbarConfig) {\n    this.groupService.setToolbarConfig(toolbarConfig);\n  }\n\n  @Input() set emptySearchResultMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig) {\n    this.groupService.setEmptySearchResultMessageConfig(config);\n  }\n\n  @Input() set emptyDataMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig) {\n    this.groupService.setEmptyDataMessageConfig(config);\n  }\n\n  @Input() set searchConfig(config: PrizmNavigationMenuSearchConfig) {\n    this.groupService.setSearchConfig(config);\n  }\n\n  @Input() childrenHandler!: PrizmHandler<\n    InternalPrizmNavigationMenuItem<UserItem>,\n    readonly InternalPrizmNavigationMenuItem<UserItem>[]\n  >;\n\n  override readonly testId_ = 'ui_navigation_menu_group';\n  groupIsExpanded!: boolean;\n\n  groupItems$: Observable<InternalPrizmNavigationMenuItem<UserItem>[]> = this.groupService.groupItems$;\n\n  expandedItemsMap$: Observable<Map<InternalPrizmNavigationMenuItem<UserItem>, boolean>> =\n    this.groupService.expandedItemsMap$;\n\n  toolbarConfig$: Observable<PrizmNavigationMenuToolbarConfig> = this.groupService.toolbarConfig$;\n\n  searchConfig$: Observable<PrizmNavigationMenuSearchConfig> = this.groupService.searchConfig$;\n\n  emptyMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.groupService.searchEnabled$.pipe(\n      withLatestFrom(\n        this.groupService.emptySearchResultMessageConfig$,\n        this.groupService.emptyDataMessageConfig$\n      ),\n      map(([searchEnabled, emptySearchResultMessageConfig, emptyDataMessageConfig]) => {\n        return searchEnabled ? emptySearchResultMessageConfig : emptyDataMessageConfig;\n      })\n    );\n\n  activeItem$: Observable<InternalPrizmNavigationMenuItem<UserItem> | null> = this.menuService.activeItem$;\n\n  mode$: Observable<ViewMode> = this.groupService.viewMode$;\n\n  private items$$ = new BehaviorSubject<UserItem[]>([]);\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private destroy$: PrizmDestroyService,\n    private groupService: PrizmNavigationMenuGroupService<UserItem>,\n    private menuService: PrizmNavigationMenuService<UserItem>\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.registerItems();\n    this.setGroupIsExpanded();\n    this.ensureViewUpdatesCorrectly();\n  }\n\n  public handleActiveItemChange(item: InternalPrizmNavigationMenuItem<UserItem>): void {\n    this.menuService.handleActiveItemChange(item);\n  }\n\n  public handleItemExpandedChanged(event: {\n    item: InternalPrizmNavigationMenuItem<UserItem>;\n    isExpanded: boolean;\n  }): void {\n    if (this.groupService.viewMode === 'rubricator') return;\n\n    if (this.groupService.viewMode === 'folder') {\n      return this.groupService.handleFolderExpanded(event.item);\n    }\n\n    this.menuService.handleExpandedChanged(event);\n    this.itemExpandedChanged.emit({\n      item: this.menuService.getUserItem(event.item),\n      isExpanded: event.isExpanded,\n    });\n  }\n\n  public handleGroupExpandedChanged(isExpanded: boolean): void {\n    const event = {\n      groupId: this.groupId,\n      isExpanded,\n    };\n\n    this.menuService.handleGroupExpandedChanged(event);\n    this.groupExpandedChanged.emit(event);\n  }\n\n  public handleGoToParentItem(item: InternalPrizmNavigationMenuItem<UserItem>): void {\n    this.groupService.goToParentFolder(item);\n  }\n\n  public handleGoToRootItem(_item: InternalPrizmNavigationMenuItem<UserItem>): void {\n    this.groupService.goToRootFolder();\n  }\n\n  private registerItems(): void {\n    const groupId: string = this.groupId || this.title;\n    this.groupService.setGroupId(groupId);\n    this.items$$.pipe(takeUntil(this.destroy$)).subscribe(items => {\n      this.menuService.registerGroupItems(groupId, items);\n    });\n  }\n\n  private setGroupIsExpanded(): void {\n    this.groupIsExpanded = this.menuService.getGroupIsExpanded(this.groupId);\n  }\n\n  private ensureViewUpdatesCorrectly(): void {\n    merge(\n      this.activeItem$,\n      this.groupService.closeAll$,\n      this.groupService.viewMode$,\n      this.menuService.itemExpandedChangedEvent$\n    )\n      .pipe(debounceTime(0), takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n        this.menuItemsComponent?.triggerCdr();\n      });\n  }\n}\n","<div class=\"prizm-navigation-menu-group\" [class.prizm-navigation-menu-group_expanded]=\"groupIsExpanded\">\n  <prizm-accordion *ngIf=\"!hideGroupAppearance; else noGroupAppearanceTemplate\">\n    <prizm-accordion-item\n      [icon]=\"$any(icon)\"\n      [title]=\"$any(title)\"\n      [isExpanded]=\"groupIsExpanded\"\n      (isExpandedChange)=\"handleGroupExpandedChanged($event)\"\n    >\n      <ng-template prizmAccordionContent>\n        <ng-container [ngTemplateOutlet]=\"itemsTemplate\"></ng-container>\n      </ng-template>\n    </prizm-accordion-item>\n  </prizm-accordion>\n\n  <ng-template #noGroupAppearanceTemplate>\n    <ng-container [ngTemplateOutlet]=\"itemsTemplate\"></ng-container>\n  </ng-template>\n</div>\n\n<ng-template #itemsTemplate>\n  <prizm-navigation-menu-toolbar\n    [searchConfig]=\"$any(searchConfig$ | async)\"\n    [toolbarConfig]=\"$any(toolbarConfig$ | async)\"\n    [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n    [hideGroupAppearance]=\"$any(hideGroupAppearance)\"\n  ></prizm-navigation-menu-toolbar>\n  <ng-container *ngIf=\"groupItems$ | async as groupItems\">\n    <prizm-navigation-menu-items\n      [items]=\"groupItems\"\n      [itemExtraTemplate]=\"$any(itemExtraTemplate)\"\n      [childrenHandler]=\"childrenHandler\"\n      [expandedItemsMap]=\"$any(expandedItemsMap$ | async)\"\n      [activeItem]=\"$any(activeItem$ | async)\"\n      [mode]=\"$any(mode$ | async)\"\n      (activeItemChanged)=\"handleActiveItemChange($event)\"\n      (itemExpandedChanged)=\"handleItemExpandedChanged($event)\"\n      (goToParentItem)=\"handleGoToParentItem($event)\"\n      (goToRootItem)=\"handleGoToRootItem($event)\"\n    ></prizm-navigation-menu-items>\n\n    <ng-container *ngIf=\"!groupItems.length\">\n      <div\n        class=\"prizm-navigation-menu-group__no-items-content\"\n        *ngIf=\"emptyMessageConfig$ | async as emptyMessageConfig\"\n      >\n        <div class=\"empty-message\">\n          <span class=\"empty-message__main\">{{ emptyMessageConfig.title }}</span>\n          <span class=\"empty-message__sub\">{{ emptyMessageConfig.subtitle }}</span>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { PRIZM_EMPTY_ARRAY, PrizmAbstractTestId } from '@prizm-ui/core';\nimport { PrizmHandler } from '../../../../types';\nimport { PrizmNavigationMenuGroupComponent } from '../prizm-navigation-menu-group/prizm-navigation-menu-group.component';\nimport { PrizmNavigationMenuToolbarService } from '../../services/prizm-navigation-menu-toolbar.service';\nimport { PrizmNavigationMenuService } from '../../services/prizm-navigation-menu.service';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport {\n  GroupExpandedChangedEvent,\n  ItemExpandedChangedEvent,\n  PrizmNavigationMenuEmptyMessageConfig,\n  PrizmNavigationMenuHeaderConfig,\n  PrizmNavigationMenuItem,\n  PrizmNavigationMenuSearchConfig,\n  PrizmNavigationMenuSettingsConfig,\n  PrizmNavigationMenuToolbarConfig,\n} from '../../interfaces';\nimport { DEFAULT_HEADER_CONFIG } from '../../defaults';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PrizmTreeModule } from '../../../tree';\nimport { PrizmIconsSvgModule } from '@prizm-ui/icons';\nimport { PrizmButtonComponent } from '../../../button';\nimport { PolymorphOutletDirective, PrizmHintDirective, PrizmHoveredDirective } from '../../../../directives';\nimport { PrizmAccordionComponent } from '../../../accordion';\nimport { PrizmNavigationMenuToolbarComponent } from '../prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component';\nimport { prizmIsTextOverflow } from '../../../../util';\n\n@Component({\n  selector: 'prizm-navigation-menu',\n  templateUrl: './prizm-navigation-menu.component.html',\n  styleUrls: ['./prizm-navigation-menu.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PrizmTreeModule,\n    PrizmIconsSvgModule,\n    PrizmButtonComponent,\n    PrizmHoveredDirective,\n    PrizmAccordionComponent,\n    PolymorphOutletDirective,\n    PrizmNavigationMenuGroupComponent,\n    PrizmNavigationMenuToolbarComponent,\n    PrizmHintDirective,\n  ],\n  providers: [PrizmNavigationMenuService, PrizmNavigationMenuToolbarService, PrizmDestroyService],\n})\nexport class PrizmNavigationMenuComponent<\n  UserItem extends Omit<PrizmNavigationMenuItem, 'children'> & { children?: UserItem[] }\n> extends PrizmAbstractTestId {\n  @ContentChildren(PrizmNavigationMenuGroupComponent)\n  menuGroups: QueryList<PrizmNavigationMenuGroupComponent<UserItem>> = prizmEmptyQueryList();\n\n  @Output() homeClicked = new EventEmitter<void>();\n  @Output() activeItemChanged = new EventEmitter<UserItem>();\n  @Output() breadcrumbsChanged = new EventEmitter<UserItem[]>();\n  @Output() expandedItemsMapChanged = new EventEmitter<Map<UserItem, boolean>>();\n  @Output() expandedGroupsMapChangedEvent = new EventEmitter<Map<string, boolean>>();\n  @Output() itemExpandedChanged = new EventEmitter<ItemExpandedChangedEvent<UserItem>>();\n  @Output() groupExpandedChanged = new EventEmitter<GroupExpandedChangedEvent>();\n\n  @Input() title!: string;\n  @Input() items!: UserItem[];\n  @Input() toolbarExtraTemplate!: TemplateRef<unknown>;\n  @Input() itemExtraTemplate!: TemplateRef<unknown>;\n  @Input() headerExtraTemplate!: TemplateRef<unknown>;\n\n  @Input() set activeItem(activeItem: UserItem | null) {\n    this.menuService.setActiveItem(activeItem as UserItem);\n  }\n  @Input() set itemKeyName(keyName: string) {\n    this.menuService.setItemKeyName(keyName);\n  }\n  @Input() set expandedItemsMap(expandedItemsMap: Map<UserItem, boolean>) {\n    this.menuService.registerExpandedItemsMap(expandedItemsMap);\n  }\n  @Input() set expandedGroupsMap(expandedGroupsMap: Map<string, boolean>) {\n    this.menuService.registerExpandedGroupsMap(expandedGroupsMap);\n  }\n  @Input() set settingsConfig(settings: PrizmNavigationMenuSettingsConfig) {\n    this.menuService.setSettingsConfiguration(settings);\n  }\n  @Input() set emptySearchResultMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig) {\n    this.menuService.setEmptySearchResultMessageConfig(config);\n  }\n  @Input() set emptyDataMessageConfig(config: PrizmNavigationMenuEmptyMessageConfig) {\n    this.menuService.setEmptyDataMessageConfig(config);\n  }\n  @Input() set headerConfig(config: PrizmNavigationMenuHeaderConfig) {\n    this.headerConfiguration = { ...config, showSettings: false };\n  }\n  @Input() set searchConfig(config: PrizmNavigationMenuSearchConfig) {\n    this.menuService.setSearchConfig(config);\n  }\n  @Input() set toolbarConfig(config: PrizmNavigationMenuToolbarConfig) {\n    this.menuService.setToolbarConfig(config);\n  }\n\n  override testId_ = 'ui_navigation_menu';\n  menuToolbarConfig$: Observable<PrizmNavigationMenuToolbarConfig> = this.menuService.toolbarConfig$;\n\n  menuSearchConfig$: Observable<PrizmNavigationMenuSearchConfig> = this.menuService.searchConfig$;\n\n  emptySearchResultMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.menuService.emptySearchResultMessageConfig$;\n\n  emptyDataMessageConfig$: Observable<PrizmNavigationMenuEmptyMessageConfig> =\n    this.menuService.emptyDataMessageConfig$;\n\n  settingsConfiguration: PrizmNavigationMenuSettingsConfig = this.menuService.settingsConfig;\n\n  headerConfiguration: PrizmNavigationMenuHeaderConfig = DEFAULT_HEADER_CONFIG;\n\n  headerIsHovered!: boolean;\n\n  public readonly prizmIsTextOverflow = prizmIsTextOverflow;\n\n  constructor(\n    private menuService: PrizmNavigationMenuService<UserItem>,\n    private destroy$: PrizmDestroyService\n  ) {\n    super();\n    this.forwardEvents();\n  }\n\n  public handleHomeClicked(): void {\n    this.homeClicked.emit();\n  }\n\n  readonly handler: PrizmHandler<PrizmNavigationMenuItem, readonly PrizmNavigationMenuItem[]> = item =>\n    item.children || PRIZM_EMPTY_ARRAY;\n\n  private forwardEvents(): void {\n    this.menuService.activeItemChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.activeItemChanged.emit(event));\n\n    this.menuService.breadCrumbsChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.breadcrumbsChanged.emit(event));\n\n    this.menuService.itemExpandedChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.itemExpandedChanged.emit(event));\n\n    this.menuService.groupExpandedChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.groupExpandedChanged.emit(event));\n\n    this.menuService.expandedItemsMapChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.expandedItemsMapChanged.emit(event));\n\n    this.menuService.expandedGroupsMapChangedEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(event => this.expandedGroupsMapChangedEvent.emit(event));\n  }\n\n  public handleSettingsClicked(): void {\n    // TODO\n  }\n}\n","<div class=\"prizm-navigation-menu\">\n  <header class=\"prizm-navigation-menu__header header\">\n    <div class=\"header__top\" (prizmHoveredChange)=\"headerIsHovered = $event\">\n      <div class=\"header__title\" #elem [prizmHint]=\"title\" [prizmHintCanShow]=\"prizmIsTextOverflow(elem)\">\n        {{ title }}\n      </div>\n      <div class=\"header__instruments\">\n        <ng-container\n          [ngTemplateOutlet]=\"headerExtraTemplate\"\n          [ngTemplateOutletContext]=\"{ headerIsHovered: headerIsHovered }\"\n        ></ng-container>\n        <button\n          *ngIf=\"headerConfiguration.showSettings\"\n          [size]=\"'m'\"\n          [icon]=\"'settings'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleSettingsClicked()\"\n          prizmIconButton\n        ></button>\n        <button\n          *ngIf=\"headerConfiguration.showHome\"\n          [size]=\"'m'\"\n          [icon]=\"'social-home'\"\n          [appearance]=\"'secondary'\"\n          [appearanceType]=\"'ghost'\"\n          (click)=\"handleHomeClicked()\"\n          prizmIconButton\n        ></button>\n      </div>\n    </div>\n    <prizm-navigation-menu-toolbar\n      class=\"header__toolbar\"\n      [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n      [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n      [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n    ></prizm-navigation-menu-toolbar>\n  </header>\n\n  <main class=\"prizm-navigation-menu__content groups-content\" [ngClass]=\"settingsConfiguration.selectedSize\">\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\n      <section class=\"groups-content__top\">\n        <ng-content></ng-content>\n        <ng-content select=\"[top]\"></ng-content>\n      </section>\n      <section class=\"groups-content__bottom\">\n        <ng-content select=\"[bottom]\"></ng-content>\n      </section>\n    </ng-container>\n\n    <ng-template #noGroups>\n      <div class=\"no-groups-content\">\n        <prizm-navigation-menu-group\n          [groupId]=\"'prizm-navigation-menu-default-group'\"\n          [hideGroupAppearance]=\"true\"\n          [items]=\"items\"\n          [toolbarExtraTemplate]=\"toolbarExtraTemplate\"\n          [itemExtraTemplate]=\"itemExtraTemplate\"\n          [searchConfig]=\"$any(menuSearchConfig$ | async)\"\n          [toolbarConfig]=\"$any(menuToolbarConfig$ | async)\"\n          [emptySearchResultMessageConfig]=\"$any(emptySearchResultMessageConfig$ | async)\"\n          [emptyDataMessageConfig]=\"$any(emptyDataMessageConfig$ | async)\"\n        ></prizm-navigation-menu-group>\n      </div>\n    </ng-template>\n  </main>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmNavigationMenuToolbarComponent } from './components/prizm-navigation-menu-toolbar/prizm-navigation-menu-toolbar.component';\nimport { PrizmNavigationMenuComponent } from './components/prizm-navigation-menu/prizm-navigation-menu.component';\nimport { PrizmNavigationMenuGroupComponent } from './components/prizm-navigation-menu-group/prizm-navigation-menu-group.component';\nimport { PrizmNavigationMenuItemsComponent } from './components/prizm-navigation-menu-items/prizm-navigation-menu-items.component';\nimport { PrizmNavigationMenuSearchComponent } from './components/prizm-navigation-menu-search/prizm-navigation-menu-search.component';\nimport { PrizmNavigationMenuItemComponent } from './components/prizm-navigation-menu-item/prizm-navigation-menu-item.component';\n\n@NgModule({\n  imports: [\n    PrizmNavigationMenuComponent,\n    PrizmNavigationMenuToolbarComponent,\n    PrizmNavigationMenuGroupComponent,\n    PrizmNavigationMenuItemsComponent,\n    PrizmNavigationMenuSearchComponent,\n    PrizmNavigationMenuItemComponent,\n  ],\n  exports: [\n    PrizmNavigationMenuComponent,\n    PrizmNavigationMenuGroupComponent,\n    PrizmNavigationMenuItemsComponent,\n  ],\n})\nexport class PrizmNavigationMenuModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'prizm-header',\n  templateUrl: './prizm-header.component.html',\n  styleUrls: ['./prizm-header.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class PrizmHeaderComponent {}\n","<ng-content></ng-content>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IScreen } from './../../../navigation/navigation.interfaces';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../../../icon';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmDropdownHostModule } from '../../../dropdowns/dropdown-host';\nimport { PrizmDataListModule } from '../../../data-list';\nimport { PrizmButtonModule } from '../../../button';\nimport { PrizmHintModule } from '../../../../directives';\n\n@Component({\n  selector: 'prizm-header-dropdown',\n  templateUrl: './prizm-header-dropdown.component.html',\n  styleUrls: ['./prizm-header-dropdown.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmIconModule,\n    PrizmThemeModule,\n    PrizmDropdownHostModule,\n    PrizmDataListModule,\n    PrizmButtonModule,\n    PrizmHintModule,\n  ],\n})\nexport class PrizmHeaderDropdownComponent {\n  @Input() public data: IScreen[] = [];\n  @Input() public currentScreenIdx = 0;\n  @Output() screenIdxChange: EventEmitter<number> = new EventEmitter<number>();\n\n  public openDropdown = false;\n\n  public changeScreen(idx: number): void {\n    if (this.currentScreenIdx === idx) return;\n\n    this.currentScreenIdx = idx;\n    this.openDropdown = false;\n    this.screenIdxChange.emit(idx);\n  }\n}\n","<prizm-dropdown-host\n  class=\"dropdown-host\"\n  [(isOpen)]=\"openDropdown\"\n  [content]=\"dropdown\"\n  prizmTheme\n  prizmDropdownHostWidth=\"100%\"\n>\n  <button\n    class=\"dropdown\"\n    *ngIf=\"data.length > 0\"\n    [class.dropdown_active]=\"openDropdown\"\n    (click)=\"openDropdown = !openDropdown\"\n  >\n    <div class=\"screen\">\n      <prizm-icon\n        class=\"screen__icon\"\n        [iconClass]=\"data[currentScreenIdx]?.icon || 'files-folder'\"\n      ></prizm-icon>\n      <span class=\"screen__title\">{{ data[currentScreenIdx]?.title }}</span>\n    </div>\n    <prizm-icon class=\"dropdown__icon\" iconClass=\"chevrons-menu-right\"></prizm-icon>\n  </button>\n</prizm-dropdown-host>\n\n<ng-template #dropdown>\n  <prizm-data-list class=\"screen-list\">\n    <div\n      class=\"screen-list__item\"\n      *ngFor=\"let item of data; let i = index\"\n      [class.selected]=\"i === currentScreenIdx\"\n      (click)=\"changeScreen(i)\"\n    >\n      <div class=\"screen\">\n        <prizm-icon class=\"screen__icon\" [iconClass]=\"item?.icon || 'files-folder'\"></prizm-icon>\n        <span class=\"screen__title\">{{ item?.title }}</span>\n      </div>\n    </div>\n  </prizm-data-list>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IndicatorStatus } from '../../../indicator/indicator.models';\nimport { CommonModule } from '@angular/common';\nimport { PrizmButtonModule } from '../../../button';\nimport { PrizmHintDirective } from '../../../../directives';\n\n@Component({\n  selector: 'prizm-header-module-btn',\n  templateUrl: './prizm-header-module-btn.component.html',\n  styleUrls: ['./prizm-header-module-btn.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PrizmButtonModule, PrizmHintDirective],\n})\nexport class PrizmHeaderModuleBtnComponent {\n  @Input() public icon = 'alerts-bell';\n  @Input() public alertsCount = 0;\n  @Input() public title = '';\n  @Input() public status: IndicatorStatus = 'info';\n}\n","<div class=\"icon\">\n  <button [icon]=\"icon\" prizmIconButton size=\"l\" appearanceType=\"ghost\" appearance=\"secondary\"></button>\n\n  <div class=\"indicator indicator_{{ status }}\" *ngIf=\"alertsCount\" [prizmHint]=\"alertsCount\">\n    {{ alertsCount }}\n  </div>\n</div>\n\n<span class=\"title\" *ngIf=\"title\">{{ title }}</span>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmHeaderComponent } from './prizm-header.component';\nimport { PrizmHeaderDropdownComponent } from './components/prizm-header-dropdown/prizm-header-dropdown.component';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmDropdownHostModule } from '../dropdowns/dropdown-host';\nimport { PrizmDataListModule } from '../data-list';\nimport { PrizmHeaderModuleBtnComponent } from './components/prizm-header-module-btn/prizm-header-module-btn.component';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmHintModule } from '../../directives';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmHeaderComponent, PrizmHeaderDropdownComponent, PrizmHeaderModuleBtnComponent],\n  exports: [PrizmHeaderComponent, PrizmHeaderDropdownComponent, PrizmHeaderModuleBtnComponent],\n})\nexport class PrizmHeaderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.less'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCounterComponent extends PrizmAbstractTestId {\n  @Input()\n  @HostBinding('class._disabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  @HostBinding('class')\n  class = '';\n\n  @Input()\n  maxValue: number | undefined;\n\n  @Input()\n  @HostBinding('attr.status')\n  status = '';\n\n  override readonly testId_ = 'ui_counter';\n\n  public _value!: number;\n\n  @HostBinding('class.hidden') get hidden() {\n    return !this._value;\n  }\n\n  @Input() set value(val: number | undefined) {\n    this._value = val ?? 0;\n  }\n}\n","<div class=\"counter-container\">\n  {{ maxValue && _value > maxValue ? maxValue + '+' : _value }}\n</div>\n","import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  ViewContainerRef,\n  inject,\n} from '@angular/core';\nimport { PrizmCounterComponent } from './counter.component';\nimport { PrizmCounterPosition, PrizmCounterStatus } from './counter.models';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[prizmCounter]',\n  standalone: true,\n})\nexport class PrizmCounterDirective implements OnChanges, OnDestroy {\n  @Input()\n  get counterDisabled() {\n    return this._counterDisabled;\n  }\n  set counterDisabled(value: BooleanInput) {\n    this._counterDisabled = coerceBooleanProperty(value);\n  }\n  private _counterDisabled = false;\n\n  @Input() counterStatus: PrizmCounterStatus = 'info';\n\n  @Input() counterPosition: PrizmCounterPosition = 'tr';\n\n  @Input() prizmCounter: number | undefined;\n\n  @Input() counterMaxValue: number | undefined;\n\n  private vcr: ViewContainerRef;\n  private counterRef!: ComponentRef<PrizmCounterComponent>;\n\n  constructor(private elRef: ElementRef<HTMLElement>) {\n    this.vcr = inject(ViewContainerRef);\n    if (!this.elRef.nativeElement.style.position || this.elRef.nativeElement.style.position === 'static') {\n      this.elRef.nativeElement.style.position = 'relative';\n    }\n  }\n\n  ngOnChanges(): void {\n    this.updateCounter();\n  }\n\n  ngOnDestroy() {\n    if (this.counterRef) {\n      this.counterRef.destroy();\n    }\n  }\n\n  private updateCounter() {\n    if (!this.counterRef) {\n      this.createCounter();\n    }\n\n    this.setCounterData();\n    this.setCounterPosition();\n  }\n\n  private createCounter(): void {\n    this.counterRef = this.vcr.createComponent(PrizmCounterComponent);\n    const counter = (this.counterRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    this.elRef.nativeElement.appendChild(counter);\n  }\n\n  private setCounterData(): void {\n    this.counterRef.instance.value = this.prizmCounter;\n    this.counterRef.instance.status = this.counterStatus;\n    this.counterRef.instance.disabled = this.counterDisabled;\n    this.counterRef.instance.maxValue = this.counterMaxValue;\n  }\n\n  private setCounterPosition() {\n    this.counterRef.instance.class = `counter counter_${this.counterPosition}`;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmCounterDirective } from './counter.directive';\nimport { PrizmCounterComponent } from './counter.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCounterDirective, PrizmCounterComponent],\n  exports: [PrizmCounterDirective, PrizmCounterComponent],\n})\nexport class PrizmCounterModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, concat, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, take, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmTabComponent } from './components/tab.component';\nimport { filterTruthy, PrizmDestroyService, prizmFromMutationObserver$ } from '@prizm-ui/helpers';\nimport { PrizmTabCanOpen } from './tabs.model';\n\n@Injectable()\nexport class PrizmTabsService implements OnDestroy {\n  readonly tabs = new Map<number, PrizmTabComponent>();\n  readonly changes$$ = new Subject<Map<number, PrizmTabComponent>>();\n  readonly removed$$ = new Subject<PrizmTabComponent>();\n  private changeParent$_!: Observable<any>;\n  get changeParent$() {\n    return this.changeParent$_;\n  }\n  readonly closeTab$$ = new Subject<Map<number, PrizmTabComponent>>();\n  private readonly activeTabIdx$$ = new BehaviorSubject<number>(0);\n  readonly activeTabIdx$ = this.activeTabIdx$$.pipe(distinctUntilChanged());\n\n  get activeTabIdx() {\n    return this.activeTabIdx$$.value;\n  }\n  get tabs$() {\n    return concat(of(this.tabs), this.changes$$);\n  }\n  public canOpenTab: PrizmTabCanOpen | null = null;\n\n  constructor(private readonly destroy: PrizmDestroyService) {}\n\n  public initObservingTabsParent(el: HTMLElement) {\n    this.changeParent$_ = prizmFromMutationObserver$(el, {\n      subtree: true,\n      childList: true,\n    });\n  }\n  public isActiveTab(tab: PrizmTabComponent): Observable<boolean> {\n    return combineLatest([this.activeTabIdx$$, this.tabs$]).pipe(\n      map(([activeTabIdx]) => {\n        const tabIdx = this.findTabIdx(tab);\n        return activeTabIdx === tabIdx;\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  public getTabByIdx(idx: number): PrizmTabComponent {\n    return this.tabs.get(idx) as PrizmTabComponent;\n  }\n\n  public moveTab(idx: number, toIndex: number, tab: PrizmTabComponent): void {\n    if (tab !== this.getTabByIdx(idx)) return;\n    this.tabs.delete(idx);\n    this.updateTab(tab, toIndex);\n    if (this.activeTabIdx$$.value === idx) {\n      this.activeTabIdx$$.next(toIndex);\n    }\n  }\n\n  public updateTab(tab: PrizmTabComponent, idx?: number): void {\n    const tabIdx = typeof idx !== 'number' ? this.tabs.size : idx;\n    if (this.tabs.get(tabIdx) === tab) return;\n    this.tabs.set(tabIdx, tab);\n    this.changes$$.next(this.tabs);\n  }\n\n  public removeTab(tab: PrizmTabComponent): void {\n    const idx = this.findTabIdx(tab);\n    this.tabs.delete(idx);\n    this.removed$$.next(tab);\n    const newIdx = this.correctActiveTabIdx(idx);\n    if (idx !== newIdx) this.changes$$.next(this.tabs);\n  }\n\n  private correctActiveTabIdx(idx: number = this.activeTabIdx$$.value): number {\n    if (this.tabs.has(this.activeTabIdx$$.value)) return this.activeTabIdx$$.value;\n    if (!this.tabs.size) return -1;\n    const indexes = Array.from(this.tabs.keys()).sort();\n    const nextIdx = indexes.find(i => i > idx);\n    const newIdx = nextIdx ?? (indexes.pop() as number);\n    this.activeTabIdx$$.next(newIdx);\n    return newIdx;\n  }\n  public findTabIdx(tab: PrizmTabComponent): number {\n    return Array.from(this.tabs.entries()).find(([, t]) => t === tab)?.[0] ?? -1;\n  }\n  public selectTab(tab: PrizmTabComponent): void {\n    const idx = this.findTabIdx(tab);\n\n    if (idx === -1) {\n      return;\n    }\n    this.selectTabIfCanOpen(tab, idx);\n  }\n\n  private selectTabIfCanOpen(tab: PrizmTabComponent, idx: number): void {\n    if (idx === this.activeTabIdx) {\n      return;\n    }\n    (typeof this.canOpenTab === 'function' ? this.canOpenTab(tab) : of(true))\n      .pipe(\n        take(1),\n        filterTruthy(),\n        tap(() => this.activeTabIdx$$.next(idx)),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.closeTab$$.complete();\n    this.closeTab$$.unsubscribe();\n    this.activeTabIdx$$.complete();\n    this.activeTabIdx$$.unsubscribe();\n    this.changes$$.unsubscribe();\n    this.changes$$.unsubscribe();\n  }\n\n  public updateActiveTab(idx: number): void {\n    this.activeTabIdx$$.next(idx);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { PrizmTabCounterOptions, PrizmTabType } from '../tabs.interface';\nimport { PrizmTabsService } from '../tabs.service';\nimport { PolymorphContent, PolymorphOutletDirective } from '../../../directives';\nimport { combineLatest, fromEvent, Observable, of, switchMap, timeout } from 'rxjs';\nimport { Compare, PrizmDestroyService, PrizmLetContextService } from '@prizm-ui/helpers';\nimport { PrizmTabContext, PrizmTabMenuContext } from '../tabs.model';\nimport { filter, first, map, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '../../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmCounterModule } from '../../counter';\n\n@Component({\n  selector: 'prizm-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  imports: [CommonModule, PrizmIconComponent, PolymorphOutletDirective, PrizmCounterModule],\n  standalone: true,\n})\nexport class PrizmTabComponent extends PrizmAbstractTestId implements OnInit, OnDestroy {\n  @Input() @HostBinding('attr.tab-type') public type: PrizmTabType = 'line';\n  @Input() icon: PolymorphContent<PrizmTabContext> | null = null;\n  @Input() content: PolymorphContent<PrizmTabContext> | null = null;\n  @Input() closeIcon: PolymorphContent<PrizmTabContext> = 'cancel-close';\n  @Input() count = 0;\n\n  public _counterOptions: PrizmTabCounterOptions = {\n    status: 'info',\n    disabled: false,\n  };\n\n  @Input()\n  set counterOptions(value: Partial<PrizmTabCounterOptions> | undefined) {\n    this._counterOptions = { ...this._counterOptions, ...value };\n  }\n\n  @Input() closable!: boolean;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  private idx_: number | null = null;\n  public readonly idx$ = this.tabsService.tabs$.pipe(\n    map(() => this.inMenuContextService?.context?.inMenuIdx ?? this.tabsService?.findTabIdx?.(this)),\n    tap(idx => (this.idx_ = idx))\n  );\n  public get idx(): number | null {\n    return this.idx_;\n  }\n  @Output() public closeTab = new EventEmitter<void>();\n\n  private currentDomIdx!: number;\n  override readonly testId_ = 'ui_tab';\n  readonly isActiveTab$: Observable<boolean> = combineLatest([\n    this.idx$,\n    this.tabsService.activeTabIdx$,\n  ]).pipe(map(([current, active]) => current === active));\n\n  readonly tab$ = this.idx$.pipe(\n    map(idx => (typeof idx === 'number' ? this.tabsService.getTabByIdx(idx) : this))\n  );\n\n  constructor(\n    @Optional()\n    private readonly inMenuContextService: PrizmLetContextService<PrizmTabMenuContext>,\n    public readonly tabsService: PrizmTabsService,\n    public readonly destroy: PrizmDestroyService,\n    public readonly el: ElementRef<HTMLElement>\n  ) {\n    super();\n  }\n\n  public ngOnDestroy(): void {\n    this.tab$\n      .pipe(\n        first(),\n        tap(tab => {\n          if (tab === this) this.tabsService.removeTab(tab);\n        }),\n        timeout(25),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  private isFromMenuTab(): boolean {\n    return Compare.isNotNullish(this.inMenuContextService?.context?.inMenuIdx);\n  }\n\n  private isMainProjectedTab(): boolean {\n    return !this.isFromMenuTab();\n  }\n\n  private initUpdateIndexOnDomUpdateListener(): void {\n    this.tabsService.removed$$\n      .pipe(\n        switchMap(() => this.tabsService.changeParent$),\n        startWith(void 0),\n        filter(() => this.isMainProjectedTab()),\n        tap(() => {\n          const currentDomIdx = Array.from(this.el.nativeElement.parentElement?.children ?? []).indexOf(\n            this.el.nativeElement\n          );\n          if (Compare.isNotNullish(this.currentDomIdx) && currentDomIdx !== this.currentDomIdx) {\n            this.tabsService.moveTab(this.currentDomIdx, currentDomIdx, this);\n          } else {\n            this.tabsService.updateTab(this, currentDomIdx);\n          }\n          this.currentDomIdx = currentDomIdx;\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  private initClickListenerToSelectTab(): void {\n    fromEvent(this.el.nativeElement, 'click')\n      .pipe(\n        switchMap(() => {\n          if (this.disabled) return of(null);\n          return this.selectTab$();\n        }),\n        takeUntil(this.destroy)\n      )\n      .subscribe();\n  }\n\n  public ngOnInit(): void {\n    this.initUpdateIndexOnDomUpdateListener();\n    this.initClickListenerToSelectTab();\n  }\n\n  public selectTab$(): Observable<unknown> {\n    return this.tab$.pipe(\n      first(),\n      tap(tab => {\n        this.tabsService?.selectTab(tab);\n      })\n    );\n  }\n\n  public onClose(event: MouseEvent): void {\n    event.stopPropagation();\n    this.tab$.pipe(\n      first(),\n      tap(tab => {\n        tab.closeTab.emit();\n      }),\n      takeUntil(this.destroy)\n    );\n\n    this.closeTab.emit();\n  }\n}\n","<button\n  class=\"page\"\n  [class.page_active]=\"isActiveTab$ | async\"\n  [disabled]=\"disabled\"\n  [tabIndex]=\"(isActiveTab$ | async) ? -1 : ''\"\n>\n  <div class=\"page__icon\" *ngIf=\"icon\">\n    <ng-container *polymorphOutlet=\"icon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n    </ng-container>\n  </div>\n  <span class=\"page__title\" *ngIf=\"content\">\n    <ng-container *polymorphOutlet=\"content; context: $any({ idx: idx$ | async, tab: this })\">\n      {{ content }}\n    </ng-container>\n  </span>\n  <prizm-counter\n    [value]=\"count\"\n    [status]=\"_counterOptions.status\"\n    [disabled]=\"_counterOptions.disabled\"\n    [maxValue]=\"_counterOptions.maxValue\"\n  ></prizm-counter>\n  <div class=\"page__cancel\" *ngIf=\"closable && !disabled\" (click)=\"onClose($event)\">\n    <ng-container *polymorphOutlet=\"closeIcon; context: $any({ idx: idx$ | async, tab: this })\">\n      <prizm-icon class=\"icon\" [iconClass]=\"$any(closeIcon)\" [size]=\"16\"></prizm-icon>\n    </ng-container>\n  </div>\n</button>\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PrizmTabComponent } from './components/tab.component';\n@Directive({\n  selector: '[prizmTabMenuItem]',\n  standalone: true,\n})\nexport class PrizmTabMenuItemDirective implements OnInit {\n  constructor(\n    private readonly templateRef: TemplateRef<PrizmTabComponent>,\n    private readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnInit(): void {\n    this.viewContainer.createEmbeddedView(this.templateRef);\n  }\n}\n","import { Pipe, PipeTransform, QueryList } from '@angular/core';\nimport { PrizmTabComponent } from '../components/tab.component';\n\n@Pipe({\n  name: `prizmIconTabs`,\n  pure: false,\n  standalone: true,\n})\nexport class PrizmIconTabsPipe implements PipeTransform {\n  public transform(tabs: QueryList<PrizmTabComponent>): boolean {\n    return tabs.some(el => !!el.icon);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmTabSize } from './tabs.interface';\nimport { animationFrameScheduler, Subject, Subscription } from 'rxjs';\nimport { debounceTime, observeOn, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmTabsService } from './tabs.service';\nimport { PrizmTabComponent } from './components/tab.component';\nimport { PrizmTabMenuItemDirective } from './tab-menu-item.directive';\nimport { PrizmDropdownHostComponent } from '../dropdowns/dropdown-host';\nimport {\n  PrizmCallFuncPipe,\n  PrizmDestroyService,\n  prizmEmptyQueryList,\n  PrizmLetDirective,\n} from '@prizm-ui/helpers';\nimport { PrizmTabCanOpen } from './tabs.model';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { CommonModule } from '@angular/common';\nimport {\n  PolymorphOutletDirective,\n  PrizmDropdownControllerModule,\n  PrizmHintDirective,\n  PrizmLifecycleModule,\n} from '../../directives';\nimport { PrizmButtonModule } from '../button';\nimport { PrizmDataListComponent } from '../data-list';\nimport { PrizmListingItemComponent } from '../listing-item';\nimport { PrizmCounterComponent } from '../counter';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmIconTabsPipe } from './pipes/icon-tabs.pipe';\nimport { prizmIsTextOverflow$ } from '../../util';\n\n@Component({\n  selector: 'prizm-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmTabsService, PrizmDestroyService],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PolymorphOutletDirective,\n    PrizmLifecycleModule,\n    PrizmDropdownHostComponent,\n    PrizmCallFuncPipe,\n    PrizmLetDirective,\n    PrizmButtonModule,\n    PrizmDropdownControllerModule,\n    PrizmDataListComponent,\n    PrizmTabComponent,\n    PrizmListingItemComponent,\n    PrizmCounterComponent,\n    PrizmIconModule,\n    PrizmIconTabsPipe,\n    PrizmHintDirective,\n  ],\n})\nexport class PrizmTabsComponent extends PrizmAbstractTestId implements OnInit, OnDestroy {\n  @Input() @HostBinding('attr.data-size') public size: PrizmTabSize = 'adaptive';\n  @Input() public set activeTabIndex(idx: number) {\n    if (idx === this.tabsService.activeTabIdx) return;\n    this.tabsService.updateActiveTab(idx);\n  }\n  get activeTabIndex(): number {\n    return this.tabsService.activeTabIdx;\n  }\n  @Input() canShowMenu = true;\n  @Input() set canOpen(func: PrizmTabCanOpen | null) {\n    this.tabsService.canOpenTab = func;\n  }\n  get canOpen() {\n    return this.tabsService.canOpenTab;\n  }\n  @Output() readonly activeTabIndexChange: EventEmitter<number> = new EventEmitter<number>();\n  @ViewChild('tabsContainer', { static: true }) public tabsContainer!: ElementRef;\n  @ViewChild('tabsDropdown', { static: true }) public tabsDropdown!: PrizmDropdownHostComponent;\n  public tabsMoreDropdown!: PrizmDropdownHostComponent;\n\n  @ContentChildren(PrizmTabComponent, { descendants: true })\n  public tabElements: QueryList<PrizmTabComponent> = prizmEmptyQueryList();\n\n  @ContentChildren(PrizmTabMenuItemDirective, { read: TemplateRef, descendants: true })\n  public menuElements: QueryList<TemplateRef<PrizmTabComponent>> = prizmEmptyQueryList();\n\n  override readonly testId_ = 'ui_tabs';\n\n  public openLeft = false;\n  public openRight = false;\n\n  public isLeftBtnActive = false;\n  public isRightBtnActive = false;\n\n  readonly prizmIsTextOverflow$ = prizmIsTextOverflow$;\n\n  private mutationObserver!: MutationObserver;\n  private resizeObserver!: ResizeObserver;\n  private mutationDetector$: Subject<void> = new Subject<void>();\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly elRef: ElementRef,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly tabsService: PrizmTabsService\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.tabsService.initObservingTabsParent(this.tabsContainer.nativeElement);\n    this.mutationObserver = new MutationObserver(() => this.mutationDetector$.next());\n    this.resizeObserver = new ResizeObserver(() => this.mutationDetector$.next());\n    this.mutationObserver.observe(this.tabsContainer.nativeElement, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n    });\n    this.resizeObserver.observe(this.tabsContainer.nativeElement);\n    this.initTabClickListener();\n\n    this.subscription.add(\n      this.mutationDetector$\n        .pipe(debounceTime(200), observeOn(animationFrameScheduler))\n        .subscribe(() => this.overflowChecker())\n    );\n  }\n\n  private initTabClickListener(): void {\n    this.tabsService.activeTabIdx$\n      .pipe(\n        tap(idx => {\n          this.tabClickHandler(idx);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public ngOnDestroy(): void {\n    this.mutationObserver.disconnect();\n    this.resizeObserver.disconnect();\n    this.mutationDetector$.complete();\n    this.subscription.unsubscribe();\n  }\n\n  public tabClickHandler(idx: number): void {\n    this.activeTabIndex = idx;\n    this.activeTabIndexChange.emit(this.activeTabIndex);\n    this.focusTabByIdx(idx);\n  }\n\n  public increase(): void {\n    const tabsContainerElement: HTMLElement = this.tabsContainer.nativeElement;\n    const scrollLeft =\n      tabsContainerElement.scrollLeft + (1.5 * tabsContainerElement.offsetWidth) / this.tabsService.tabs.size;\n    this.calculateControlsState(scrollLeft);\n    tabsContainerElement.scrollLeft = scrollLeft;\n  }\n\n  public decrease(): void {\n    const tabsContainerElement: HTMLElement = this.tabsContainer.nativeElement;\n    const scrollLeft =\n      tabsContainerElement.scrollLeft - (1.5 * tabsContainerElement.offsetWidth) / this.tabsService.tabs.size;\n    this.calculateControlsState(scrollLeft);\n    tabsContainerElement.scrollLeft = scrollLeft;\n  }\n\n  private calculateControlsState(scrollLeft: number): void {\n    const tabsContainerElement: HTMLElement = this.tabsContainer.nativeElement;\n    const scrollWidth = tabsContainerElement.scrollWidth;\n    const offsetWidth = tabsContainerElement.offsetWidth;\n    this.isLeftBtnActive = scrollLeft > 20;\n    this.isRightBtnActive = scrollWidth - offsetWidth - scrollLeft > 20;\n  }\n\n  private overflowChecker(): void {\n    if (!this.tabElements?.length) return;\n    let tabsWidth = 0;\n    const tabContainerElement = this.tabsContainer.nativeElement;\n    this.tabElements.forEach(item => {\n      tabsWidth += item?.el.nativeElement.clientWidth;\n    });\n\n    if (tabsWidth > tabContainerElement.clientWidth) {\n      const scrollLeft = tabContainerElement.scrollLeft;\n      if (scrollLeft === 0) {\n        this.isRightBtnActive = true;\n      } else {\n        this.calculateControlsState(scrollLeft);\n      }\n    } else {\n      this.isRightBtnActive = false;\n      this.isLeftBtnActive = false;\n      this.openLeft = false;\n      this.openRight = false;\n    }\n\n    this.cdRef.markForCheck();\n  }\n\n  private focusTabByIdx(idx: number): void {\n    if (!this.tabElements?.length) return;\n    const selectedTabElement = this.tabElements.find((item, index) => index === idx)?.el.nativeElement;\n    if (!selectedTabElement) return;\n    this.tabsContainer.nativeElement.scrollLeft =\n      selectedTabElement.offsetLeft -\n      this.tabsContainer.nativeElement.offsetWidth / 2 +\n      selectedTabElement.offsetWidth / 2;\n    this.mutationDetector$.next();\n  }\n\n  public reCalculatePositions(): void {\n    (this.tabsDropdown ?? this.tabsMoreDropdown)?.reCalculatePositions();\n  }\n\n  public closeTab(idx: number): void {\n    this.tabsService.getTabByIdx(idx)?.closeTab.emit();\n    this.reCalculatePositions();\n  }\n\n  public clickTab(index: number): void {\n    this.openLeft = this.openRight = false;\n    this.tabClickHandler(index);\n  }\n}\n","<div class=\"container\">\n  <div class=\"control\" [class.control_active]=\"isLeftBtnActive\">\n    <button\n      [icon]=\"'arrows-chevron-left'\"\n      (click)=\"decrease()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #dropdownMore=\"prizm-dropdown-host\"\n      *ngIf=\"canShowMenu && !isRightBtnActive\"\n      [(isOpen)]=\"openLeft\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = dropdownMore\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openLeft = !openLeft\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n  </div>\n\n  <div class=\"tabs\" #tabsContainer>\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"control\" *ngIf=\"canShowMenu\" [class.control_active]=\"isRightBtnActive\">\n    <prizm-dropdown-host\n      class=\"dropdown-host\"\n      #tabsDropdown\n      [(isOpen)]=\"openRight\"\n      [content]=\"dropdown\"\n      (prizmAfterViewInit)=\"tabsMoreDropdown = tabsDropdown\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <button\n        [icon]=\"'settings-more-vert'\"\n        (click)=\"openRight = !openRight\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"m\"\n      ></button>\n    </prizm-dropdown-host>\n    <button\n      [icon]=\"'arrows-chevron-right'\"\n      (click)=\"increase()\"\n      prizmIconButton\n      appearanceType=\"ghost\"\n      appearance=\"secondary\"\n      size=\"m\"\n    ></button>\n  </div>\n\n  <ng-template #dropdown>\n    <prizm-data-list>\n      <div class=\"tabs-column prizm-tab-menu-container\" *prizmLet=\"tabElements | prizmIconTabs as hasIcons\">\n        <ng-container *ngFor=\"let tabElement of tabElements; let i = index\">\n          <ng-container *ngIf=\"tabElement as tab\">\n            <prizm-listing-item\n              [disabled]=\"$any(tab.disabled)\"\n              [selected]=\"activeTabIndex === i\"\n              (click)=\"clickTab(i)\"\n            >\n              <ng-container *ngIf=\"tab.icon || hasIcons\" leftBox>\n                <ng-container *ngIf=\"tab.icon as icon; else placeholder\">\n                  <ng-container *polymorphOutlet=\"icon; context: $any({ idx: i, tab: tab })\">\n                    <prizm-icon class=\"icon icon__mark\" [size]=\"16\" [iconClass]=\"$any(icon)\"> </prizm-icon>\n                  </ng-container>\n                </ng-container>\n                <ng-template #placeholder>\n                  <div class=\"icon-placeholder\"></div>\n                </ng-template>\n              </ng-container>\n\n              <ng-container>\n                <div\n                  class=\"tab-content\"\n                  #elem\n                  [prizmHint]=\"tab.content\"\n                  [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n                >\n                  {{ tab.content }}\n                </div>\n              </ng-container>\n\n              <ng-container rightBox>\n                <prizm-counter\n                  *ngIf=\"tab.count\"\n                  [value]=\"tab.count\"\n                  [status]=\"tab._counterOptions.status\"\n                  [disabled]=\"tab._counterOptions.disabled\"\n                  [maxValue]=\"tab._counterOptions.maxValue\"\n                ></prizm-counter>\n                <prizm-icon\n                  class=\"icon\"\n                  [class.hidden]=\"!tab.closable\"\n                  [iconClass]=\"'cancel-close'\"\n                  [size]=\"16\"\n                  (click)=\"closeTab($any(tabElement.idx))\"\n                ></prizm-icon>\n              </ng-container>\n            </prizm-listing-item>\n          </ng-container>\n        </ng-container>\n      </div>\n    </prizm-data-list>\n  </ng-template>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmTabComponent } from './components/tab.component';\nimport { PrizmTabsComponent } from './tabs.component';\nimport { PrizmTabMenuItemDirective } from './tab-menu-item.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmTabsComponent, PrizmTabComponent, PrizmTabMenuItemDirective],\n  exports: [PrizmTabsComponent, PrizmTabComponent],\n})\nexport class PrizmTabsModule {}\n","import { Directive, Inject, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\n\n@Directive({\n  selector: 'ng-template[prizmBreadcrumb]',\n  providers: [PrizmDestroyService],\n  standalone: true,\n})\nexport class PrizmBreadcrumbDirective implements OnDestroy {\n  constructor(\n    @Inject(TemplateRef) readonly template: TemplateRef<any>,\n    private readonly viewContainer: ViewContainerRef\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { IBreadcrumb } from './breadcrumb.interface';\nimport { animationFrameScheduler, BehaviorSubject, merge, Subject } from 'rxjs';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\nimport { debounceTime, observeOn, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PrizmBreadcrumbDirective } from './breadcrumbs.directive';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../icon';\nimport { PrizmDropdownHostModule } from '../dropdowns/dropdown-host';\n\n@Component({\n  selector: 'prizm-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n  standalone: true,\n  imports: [\n    CommonModule,\n    // TODO !ng16 change all icon module to svg module\n    PrizmIconModule,\n    PrizmDropdownHostModule,\n  ],\n})\nexport class PrizmBreadcrumbsComponent<Breadcrumb extends IBreadcrumb>\n  extends PrizmAbstractTestId\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  @Input() set breadcrumbs(data: Breadcrumb[]) {\n    this.breadcrumbs$.next(data);\n  }\n\n  public get breadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbs$.getValue();\n  }\n\n  override readonly testId_ = 'ui_breadcrumbs';\n\n  @Output() public breadcrumbChange: EventEmitter<Breadcrumb> = new EventEmitter();\n  @ViewChild('container', { static: true }) public containerRef!: ElementRef;\n  @ViewChild('breadcrumbsFake', { static: true }) public fakeBreadcrumbContainer!: ElementRef;\n  @ViewChildren('breadcrumb', { read: ElementRef }) public breadcrumbsList: QueryList<ElementRef> =\n    prizmEmptyQueryList();\n  @ContentChildren(PrizmBreadcrumbDirective) public breadcrumbsItem: QueryList<PrizmBreadcrumbDirective> =\n    prizmEmptyQueryList();\n\n  public breadcrumbs$: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\n  public breadcrumbsToShow$: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\n  public breadcrumbsInMenu$: BehaviorSubject<Breadcrumb[]> = new BehaviorSubject<Breadcrumb[]>([]);\n\n  public isDropdownOpened = false;\n  public isContainerOverflowed = false;\n  public breadcrumbsElementsWidth!: number;\n\n  public get activeBreadcrumbIdx(): number {\n    return this.breadcrumbsToShow$.getValue().length - 1;\n  }\n\n  private resizeObserver!: ResizeObserver;\n  private mutationDetector$: Subject<void> = new Subject<void>();\n\n  constructor(private readonly cdRef: ChangeDetectorRef, private readonly destroy: PrizmDestroyService) {\n    super();\n  }\n\n  public changeBreadcrumb(idx: number): void {\n    this.breadcrumbs = this.breadcrumbs.filter((item, i) => i <= idx);\n    this.breadcrumbChange.emit(this.breadcrumbs[idx]);\n  }\n\n  public ngOnInit(): void {\n    this.resizeObserver = new ResizeObserver(() => this.mutationDetector$.next());\n    this.resizeObserver.observe(this.containerRef.nativeElement);\n  }\n\n  public ngAfterViewInit(): void {\n    const $mutation = this.mutationDetector$.pipe(\n      debounceTime(200),\n      observeOn(animationFrameScheduler),\n      tap(() => {\n        this.calculateOverflowState();\n        this.setViewBreadcrumbs(this.breadcrumbs);\n      })\n    );\n\n    const $breadcrumbsChange = this.breadcrumbs$.pipe(\n      debounceTime(200),\n      observeOn(animationFrameScheduler),\n      tap(item => {\n        this.calculateBreadcrumbsWidth();\n        this.calculateOverflowState();\n        this.setViewBreadcrumbs(item);\n      })\n    );\n\n    merge($breadcrumbsChange, $mutation)\n      .pipe(debounceTime(200), takeUntil(this.destroy))\n      .subscribe(() => this.cdRef.detectChanges());\n  }\n\n  public ngOnDestroy(): void {\n    this.resizeObserver.disconnect();\n    this.mutationDetector$.complete();\n  }\n\n  private calculateOverflowState(): void {\n    const containerWidth = this.containerRef.nativeElement.clientWidth;\n    const contentWidth = this.breadcrumbsElementsWidth;\n\n    if (contentWidth > containerWidth) {\n      this.isContainerOverflowed = this.breadcrumbs.length > 2;\n    } else {\n      this.isDropdownOpened = false;\n      this.isContainerOverflowed = false;\n    }\n  }\n\n  private calculateBreadcrumbsWidth(): void {\n    this.breadcrumbsElementsWidth = this.fakeBreadcrumbContainer.nativeElement.clientWidth;\n  }\n\n  private setViewBreadcrumbs(breadcrumbs: Breadcrumb[]): void {\n    if (this.isContainerOverflowed) {\n      this.breadcrumbsInMenu$.next(breadcrumbs.filter((item, i) => i > 0 && i < breadcrumbs.length - 1));\n      this.breadcrumbsToShow$.next(breadcrumbs.filter((item, i) => i === 0 || i === breadcrumbs.length - 1));\n    } else {\n      this.breadcrumbsInMenu$.next([]);\n      this.breadcrumbsToShow$.next(breadcrumbs);\n    }\n  }\n}\n","<div class=\"container\" #container>\n  <div class=\"breadcrumbs\" *ngFor=\"let item of breadcrumbsItem; let i = index\">\n    <prizm-icon\n      class=\"breadcrumbs__chevron\"\n      *ngIf=\"i !== 0\"\n      [size]=\"16\"\n      iconClass=\"chevrons-right\"\n    ></prizm-icon>\n\n    <div class=\"breadcrumb breadcrumb__name\">\n      <ng-container [ngTemplateOutlet]=\"item.template\" [ngTemplateOutletContext]=\"{ idx: i }\"></ng-container>\n    </div>\n\n    <prizm-dropdown-host\n      class=\"breadcrumbs__dots\"\n      *ngIf=\"i === 0 && this.isContainerOverflowed\"\n      [(isOpen)]=\"isDropdownOpened\"\n      [content]=\"dropdown\"\n      prizmDropdownHostWidth=\"auto\"\n    >\n      <div class=\"dropdown-inner\">\n        <prizm-icon class=\"breadcrumbs__chevron\" [size]=\"16\" iconClass=\"chevrons-right\"></prizm-icon>\n        <button class=\"dots-buttons\" (click)=\"isDropdownOpened = !isDropdownOpened\">...</button>\n      </div>\n    </prizm-dropdown-host>\n  </div>\n\n  <ng-container>\n    <div class=\"breadcrumbs\" #breadcrumb *ngFor=\"let breadcrumb of breadcrumbsToShow$ | async; let i = index\">\n      <prizm-icon\n        class=\"breadcrumbs__chevron\"\n        *ngIf=\"i !== 0\"\n        [size]=\"16\"\n        iconClass=\"chevrons-right\"\n      ></prizm-icon>\n\n      <button\n        class=\"breadcrumb\"\n        [class.breadcrumb_active]=\"i === activeBreadcrumbIdx\"\n        (click)=\"changeBreadcrumb(i)\"\n      >\n        <prizm-icon\n          class=\"breadcrumb__icon\"\n          *ngIf=\"breadcrumb.icon\"\n          [size]=\"16\"\n          [iconClass]=\"breadcrumb.icon\"\n        ></prizm-icon>\n        <span class=\"breadcrumb__name\" *ngIf=\"breadcrumb.name\">{{ breadcrumb.name }}</span>\n      </button>\n\n      <prizm-dropdown-host\n        class=\"breadcrumbs__dots\"\n        *ngIf=\"i === 0 && this.isContainerOverflowed\"\n        [(isOpen)]=\"isDropdownOpened\"\n        [content]=\"dropdown\"\n        prizmDropdownHostWidth=\"auto\"\n      >\n        <div class=\"dropdown-inner\">\n          <prizm-icon class=\"breadcrumbs__chevron\" [size]=\"16\" iconClass=\"chevrons-right\"></prizm-icon>\n          <button class=\"dots-buttons\" (click)=\"isDropdownOpened = !isDropdownOpened\">...</button>\n        </div>\n      </prizm-dropdown-host>\n    </div>\n  </ng-container>\n</div>\n\n<div class=\"container container__fake\" #breadcrumbsFake>\n  <div class=\"breadcrumbs\" #breadcrumbsFake *ngFor=\"let breadcrumb of breadcrumbs$ | async; let i = index\">\n    <prizm-icon\n      class=\"breadcrumbs__chevron\"\n      *ngIf=\"i !== 0\"\n      [size]=\"16\"\n      iconClass=\"chevrons-right\"\n    ></prizm-icon>\n    <button class=\"breadcrumb\">\n      <prizm-icon\n        class=\"breadcrumb__icon\"\n        *ngIf=\"!!breadcrumb.icon\"\n        [size]=\"16\"\n        [iconClass]=\"breadcrumb.icon\"\n      ></prizm-icon>\n      <span class=\"breadcrumb__name\">{{ breadcrumb?.name }}</span>\n    </button>\n  </div>\n</div>\n\n<ng-template #dropdown>\n  <div class=\"dropdown-content\" *ngIf=\"breadcrumbsInMenu$ | async as breadcrumbsInMenu\">\n    <ng-container *ngFor=\"let breadcrumb of breadcrumbsInMenu; let i = index\">\n      <button class=\"dropdown-breadcrumb\" (click)=\"changeBreadcrumb(i + 1)\">\n        <prizm-icon\n          class=\"dropdown-breadcrumb__icon\"\n          *ngIf=\"!!breadcrumb.icon\"\n          [size]=\"16\"\n          [iconClass]=\"breadcrumb.icon\"\n        ></prizm-icon>\n        <span class=\"dropdown-breadcrumb__name\">{{ breadcrumb?.name }}</span>\n      </button>\n    </ng-container>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmBreadcrumbsComponent } from './breadcrumbs.component';\nimport { PrizmBreadcrumbDirective } from './breadcrumbs.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  declarations: [],\n  imports: [PrizmBreadcrumbsComponent, PrizmBreadcrumbDirective],\n  exports: [PrizmBreadcrumbsComponent, PrizmBreadcrumbDirective],\n})\nexport class PrizmBreadcrumbsModule {}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PolymorphContent } from '../../../directives';\nimport { PrizmInputSize } from '../../input';\nimport { PrizmContextWithImplicit } from '../../../types';\nimport {\n  PrizmMultiSelectIdentityMatcher,\n  PrizmMultiSelectItemStringifyFunc,\n  PrizmMultiSelectItemWithChecked,\n  PrizmMultiSelectSearchMatcher,\n  PrizmMultiSelectValueTransformer,\n} from './multi-select.model';\n\nexport type PrizmMultiSelectIconContext = { opened: boolean; disabled: boolean };\n\nexport interface PrizmMultiSelectOptions<T> {\n  readonly items: T[];\n  readonly chooseAllItem: T;\n  readonly icon: PolymorphContent<PrizmMultiSelectIconContext>;\n  readonly transformer: PrizmMultiSelectValueTransformer<T, unknown>;\n  readonly searchable: boolean;\n  /**\n   * @deprecated\n   * TODO ng16! remove\n   * * */\n  readonly forceClear: null | boolean;\n  readonly isChipsDeletable: boolean;\n  /**\n   * @deprecated\n   * TODO ng16! rename to defaultLabel after remove prizm-select\n   * */\n  readonly label: string;\n  readonly placeholder: string;\n  /**\n   * @deprecated\n   * TODO ng16! remove\n   * */\n  readonly size: PrizmInputSize;\n  readonly stringify: PrizmMultiSelectItemStringifyFunc<T>;\n  readonly emptyContent: PolymorphContent;\n  readonly searchMatcher: PrizmMultiSelectSearchMatcher<T>;\n  readonly identityMatcher: PrizmMultiSelectIdentityMatcher<T>;\n  readonly minDropdownHeight: number;\n  /**\n   * @deprecated\n   * TODO ng16! remove\n   * */\n  readonly outer: boolean;\n  readonly maxDropdownHeight: number;\n  readonly dropdownWidth: string;\n  readonly valueContent: PolymorphContent<PrizmContextWithImplicit<PrizmMultiSelectItemWithChecked<T>>>;\n}\n\n/** Default values for dropdown-host options */\nexport const PRIZM_MULTI_SELECT_DEFAULT_OPTIONS: PrizmMultiSelectOptions<unknown> = {\n  items: [],\n  chooseAllItem: null,\n  icon: null as any,\n  searchable: false,\n  forceClear: null,\n  isChipsDeletable: true,\n  outer: false,\n  dropdownWidth: '100%',\n  minDropdownHeight: 0,\n  maxDropdownHeight: 342,\n  emptyContent: 'Ничего не найдено',\n  transformer: item => item,\n  searchMatcher: (searchValue: string, item: unknown): boolean => {\n    return !!item?.toString()?.toLowerCase().includes(searchValue?.toLowerCase());\n  },\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  stringify: (i: Omit<PrizmMultiSelectItemWithChecked<unknown>, 'stringify'>, nullContent: string) => {\n    if (i.obj == null && nullContent) return nullContent;\n    return i.obj?.toString?.();\n  },\n  identityMatcher: (a: unknown, b: unknown): boolean => {\n    return a === b;\n  },\n  valueContent: '',\n  placeholder: '',\n  size: 'l',\n  label: 'Выберите из списка',\n};\n\nexport const PRIZM_MULTI_SELECT_OPTIONS = new InjectionToken<PrizmMultiSelectOptions<unknown>>(\n  'Default parameters for select',\n  {\n    factory: (): PrizmMultiSelectOptions<unknown> => PRIZM_MULTI_SELECT_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmMultiSelectOptionsProvider: (\n  options: Partial<PrizmMultiSelectOptions<unknown>>\n) => ValueProvider = (options: Partial<PrizmMultiSelectOptions<unknown>>) => ({\n  provide: PRIZM_MULTI_SELECT_OPTIONS,\n  useValue: { ...PRIZM_MULTI_SELECT_DEFAULT_OPTIONS, ...options },\n});\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { filter, takeUntil, tap } from 'rxjs/operators';\nimport { prizmWatch } from '../../observables';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: 'prizm-checkbox',\n    '[attr.tabindex]': \"disabled ? null : '0'\",\n  },\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class PrizmCheckboxComponent\n  extends PrizmAbstractTestId\n  implements ControlValueAccessor, OnDestroy, OnChanges, OnInit\n{\n  @Input() @HostBinding('attr.data-size') public size: 's' | 'l' = 's';\n\n  @Input() indeterminate = false;\n  @Input() host: HTMLElement | null = null;\n\n  @Input()\n  @HostBinding('class.prizm-checkbox--disabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  private _checked = false;\n  get checked(): boolean {\n    return this._checked;\n  }\n  @Input() set checked(val: boolean) {\n    if (this.ngControl) return;\n    this.setValue(val);\n  }\n\n  @Output() changed = new EventEmitter<boolean>();\n\n  override readonly testId_ = 'ui_checkbox';\n\n  changeFn!: (value: boolean) => void;\n  touchedFn!: () => void;\n  private readonly destroyElement$ = new Subject<void>();\n\n  constructor(\n    private readonly el: ElementRef,\n    @Optional() @Self() private ngControl: NgControl,\n    private cdr: ChangeDetectorRef\n  ) {\n    super();\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.initListener();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.host) this.initListener();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyElement$.next();\n    this.destroyElement$.complete();\n  }\n\n  private onClick(event: Event): void {\n    event.preventDefault();\n    if (this.disabled) {\n      return;\n    }\n\n    this._checked = !this._checked;\n\n    if (this.ngControl) {\n      this.touchedFn();\n      this.changeFn(this._checked);\n    }\n\n    this.changed.next(this._checked);\n  }\n\n  private initListener(): void {\n    this.destroyElement$.next();\n    const el = this.host ?? this.el.nativeElement;\n    merge(fromEvent(el, 'click'), fromEvent<KeyboardEvent>(el, 'keydown').pipe(filter(i => i.key === ' ')))\n      .pipe(\n        tap(event => this.onClick(event as Event)),\n        prizmWatch(this.cdr),\n        takeUntil(this.destroyElement$)\n      )\n      .subscribe();\n  }\n\n  private setValue(value: boolean): void {\n    this._checked = value;\n    this.cdr.markForCheck();\n  }\n\n  public writeValue(value: boolean): void {\n    this.setValue(value);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.changeFn = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.touchedFn = fn;\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","<div\n  class=\"checkbox checkbox--size-{{ size }}\"\n  [ngClass]=\"{ 'checkbox--checked': checked, 'checkbox--indeterminate': indeterminate }\"\n>\n  <div\n    class=\"checkbox__icon prizm-icon checkbox__icon--size-{{ size }}\"\n    [ngClass]=\"{\n      'checkbox__icon--no-icon': indeterminate === false && checked === false,\n      'checkbox__icon--checked': indeterminate === false && checked === true,\n      'checkbox__icon--indeterminate': indeterminate,\n      'selection-check-simple': indeterminate === false && checked === true,\n      'delete-minus': indeterminate === true\n    }\"\n  ></div>\n</div>\n\n<div class=\"label label--size-{{ size }}\"><ng-content></ng-content></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PrizmCheckboxComponent } from './checkbox.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCheckboxComponent],\n  exports: [PrizmCheckboxComponent],\n})\nexport class PrizmCheckboxModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport {\n  PrizmCallFuncModule,\n  PrizmDestroyService,\n  PrizmFormControlHelpers,\n  PrizmLetModule,\n} from '@prizm-ui/helpers';\nimport { FormsModule, NgControl, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport {\n  PolymorphContent,\n  PolymorphModule,\n  PrizmAutoFocusModule,\n  PrizmDropdownControllerModule,\n  PrizmHintModule,\n  PrizmLifecycleModule,\n} from '../../../directives';\nimport { PRIZM_MULTI_SELECT_OPTIONS, PrizmMultiSelectOptions } from './multi-select.options';\nimport {\n  PrizmContextWithImplicit,\n  PrizmFocusableElementAccessor,\n  PrizmNativeFocusableElement,\n} from '../../../types';\nimport { PrizmInputSize, PrizmInputTextComponent, PrizmInputTextModule } from '../../input';\nimport { AbstractPrizmControl } from '../../../abstract/control';\nimport { prizmIsNativeFocused, prizmIsTextOverflow$ } from '../../../util';\nimport { debounceTime, map, shareReplay, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { PRIZM_FOCUSABLE_ITEM_ACCESSOR } from '../../../tokens';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { PrizmDropdownHostComponent, PrizmDropdownHostModule } from '../dropdown-host';\nimport {\n  PrizmMultiSelectIdentityMatcher,\n  PrizmMultiSelectItemStringifyFunc,\n  PrizmMultiSelectItemWithChecked,\n  PrizmMultiSelectSearchMatcher,\n} from './multi-select.model';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules/overlay/models';\nimport { PrizmScrollbarModule, PrizmScrollbarVisibility } from '../../scrollbar';\nimport { PrizmOverlayModule } from '../../../modules';\nimport { PrizmChipsModule } from '../../chips';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconModule } from '../../icon';\nimport { PrizmDataListModule } from '../../data-list';\nimport { PrizmCheckboxModule } from '../../checkbox';\n\n/**\n * @deprecated\n * use only PrizmMultiSelectInputComponent\n * will be removed after ng 15 update\n * for auto update use our migrator https://prizm.site/forZIIoT/update-from-beta\n * */\n@Component({\n  selector: 'prizm-multi-select',\n  templateUrl: './multi-select.component.html',\n  styleUrls: ['./multi-select.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    PrizmDestroyService,\n    {\n      provide: PRIZM_FOCUSABLE_ITEM_ACCESSOR,\n      useExisting: forwardRef(() => PrizmMultiSelectComponent),\n    },\n  ],\n  imports: [\n    PrizmOverlayModule,\n    PolymorphModule,\n    PrizmInputTextModule,\n    PrizmChipsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PrizmLetModule,\n    PrizmHintModule,\n    PrizmIconModule,\n    PrizmCallFuncModule,\n    PrizmAutoFocusModule,\n    PrizmScrollbarModule,\n    PrizmDropdownControllerModule,\n    PrizmDataListModule,\n    PrizmCheckboxModule,\n    PrizmLifecycleModule,\n    PrizmDropdownHostModule,\n  ],\n  standalone: true,\n  exportAs: 'prizmDropdownSelect',\n})\nexport class PrizmMultiSelectComponent<T>\n  extends AbstractPrizmControl<T[]>\n  implements PrizmFocusableElementAccessor\n{\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public readonly focusableElement?: ElementRef<HTMLElement>;\n\n  @ViewChild('dropdownHostRef')\n  public readonly dropdownHostElement?: PrizmDropdownHostComponent;\n\n  @Input() set items(data: T[]) {\n    this.items$.next((data as any) ?? []);\n  }\n  get items(): T[] {\n    return this.items$.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownScroll: PrizmScrollbarVisibility = 'auto';\n\n  @Input()\n  @prizmDefaultProp()\n  icon = this.options.icon;\n\n  @Input()\n  @prizmDefaultProp()\n  selectAllItem: T | null = this.options.chooseAllItem;\n\n  @Input()\n  @prizmDefaultProp()\n  searchable = this.options.searchable;\n\n  @Input()\n  @prizmDefaultProp()\n  forceClear = this.options.forceClear;\n\n  @Input()\n  @prizmDefaultProp()\n  isChipsDeletable = this.options.isChipsDeletable;\n\n  @Input()\n  @prizmDefaultProp()\n  label = this.options.label;\n\n  @Input()\n  @prizmDefaultProp()\n  minDropdownHeight = this.options.minDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownWidth = this.options.dropdownWidth;\n\n  @Input()\n  @prizmDefaultProp()\n  maxDropdownHeight = this.options.maxDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = this.options.placeholder;\n\n  @Input()\n  @prizmDefaultProp()\n  size: PrizmInputSize = this.options.size;\n\n  @Input()\n  @prizmDefaultProp()\n  searchMatcher: PrizmMultiSelectSearchMatcher<T> = this.options.searchMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  emptyContent: PolymorphContent = this.options.emptyContent;\n\n  /** need only clear function */\n  @Input()\n  @prizmDefaultProp()\n  stringify: PrizmMultiSelectItemStringifyFunc<T> = this.options.stringify;\n\n  @Input()\n  @prizmDefaultProp()\n  identityMatcher: PrizmMultiSelectIdentityMatcher<T> = this.options.identityMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  valueTemplate: PolymorphContent<PrizmContextWithImplicit<PrizmMultiSelectItemWithChecked<T>>> =\n    this.options.valueContent;\n\n  @Input()\n  @prizmDefaultProp()\n  outer: boolean = this.options.outer;\n\n  override readonly testId_ = 'ui-muilti-select';\n\n  public inputTextElement!: PrizmInputTextComponent | null;\n  public readonly defaultIcon = 'chevrons-dropdown';\n  readonly prizmIsTextOverflow$ = prizmIsTextOverflow$;\n  public readonly direction: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n\n  public open = false;\n  public readonly items$ = new BehaviorSubject([]);\n  public readonly requiredInputControl = new UntypedFormControl();\n  public readonly searchInputControl = new UntypedFormControl();\n  public readonly chipsControl = new UntypedFormControl([] as string[]);\n\n  readonly filteredItems$: Observable<PrizmMultiSelectItemWithChecked<T>[]> = this.controlReady$.pipe(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    switchMap(() =>\n      combineLatest([\n        this.searchInputControl.valueChanges.pipe(startWith('')),\n        this.internalValue$.pipe(debounceTime(0), startWith(this.value)),\n      ])\n    ),\n    switchMap(([searchValue, selectedItems]: [string, T[]]) => {\n      return this.items$.pipe(\n        map(items => {\n          if (!this.searchable || !searchValue?.toString().replace(/[ ]+/g, '')) return items;\n          searchValue = this.searchValue = searchValue.toString().trim();\n          return items?.filter(item => this.searchMatcher(searchValue, item)) ?? [];\n        }),\n        map((items: T[]) => {\n          const selectItems = items.map((item: T) => {\n            return {\n              checked: !!selectedItems?.find(selected => this.identityMatcher(selected, item)),\n              obj: item,\n            } as PrizmMultiSelectItemWithChecked<T>;\n          });\n          const selectedCount = this.value?.length;\n          const allItem = this.items$.value?.length;\n          const currentlySearching = this.searchInputControl.value;\n          const addSelectAllItem = this.selectAllItem && !currentlySearching;\n\n          return [\n            ...((addSelectAllItem ? [this.selectAllItem] : []).map(item => ({\n              checked: allItem === selectedCount,\n              indeterminate: selectedCount && allItem !== this.value.length,\n              obj: item,\n            })) as PrizmMultiSelectItemWithChecked<T>[]),\n            ...selectItems,\n          ];\n        }),\n        tap(items => {\n          this.filteredItems = items;\n          this.dropdownHostElement?.reCalculatePositions(1000 / 60);\n        }),\n        debounceTime(0)\n      );\n    })\n  );\n\n  readonly selectedItems$: Observable<T[]> = this.internalValue$\n    .pipe(debounceTime(0), startWith(this.value))\n    .pipe(\n      switchMap(() => {\n        const selectedItems = this.value;\n        return this.items$.pipe(\n          map(items => {\n            return (\n              items?.filter(item =>\n                (selectedItems ?? []).find(selectedItem => this.identityMatcher(selectedItem, item))\n              ) ?? []\n            );\n          })\n        );\n      }),\n      shareReplay(1)\n    );\n\n  readonly chipsSet = new Map<string, T>();\n  readonly selectedItemsChips$: Observable<string[]> = this.selectedItems$.pipe(\n    map((selectedItems: T[]) => {\n      this.chipsSet.clear();\n      const result =\n        selectedItems?.map(i => {\n          const str = this.stringify({\n            checked: true,\n            obj: i,\n          });\n\n          this.chipsSet.set(str, i);\n          return str;\n        }) ?? [];\n\n      return result;\n    }),\n    shareReplay(1)\n  );\n\n  public filteredItems: PrizmMultiSelectItemWithChecked<T>[] = [];\n  private searchValue!: string;\n\n  constructor(\n    @Inject(PRIZM_MULTI_SELECT_OPTIONS) private readonly options: PrizmMultiSelectOptions<T>,\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    public readonly cdRef: ChangeDetectorRef,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.initControlStatusChangerIfExist();\n    this.initControlValueChangerIfExist();\n    this.initControlValidatorsIfExist();\n    this.selectedItems$\n      .pipe(\n        tap(items => {\n          this.chipsControl.setValue(items as any, { emitEvent: true });\n          // TODO remove after add update inputs\n          if (this.inputTextElement) this.inputTextElement.markAsTouched();\n        }),\n        tap(() => this.cdRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private initControlStatusChangerIfExist(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncStates(this.control as UntypedFormControl, false, this.requiredInputControl)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  private initControlValueChangerIfExist(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncValues(\n        this.control as UntypedFormControl,\n        i => i?.length,\n        null,\n        this.requiredInputControl\n      )\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  private initControlValidatorsIfExist(): void {\n    if (this.control instanceof UntypedFormControl)\n      PrizmFormControlHelpers.syncAllValidators(\n        this.control as UntypedFormControl,\n        false,\n        this.requiredInputControl\n      )\n        .pipe(takeUntil(this.destroy$))\n        .subscribe();\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement | null {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  public onClear(): void {\n    this.control?.setValue(null);\n  }\n\n  protected getFallbackValue(): T[] {\n    return [];\n  }\n\n  private isSelectAllItem(item: PrizmMultiSelectItemWithChecked<T>): boolean {\n    return Boolean(this.selectAllItem && this.identityMatcher(this.selectAllItem, item.obj));\n  }\n\n  public select(item: PrizmMultiSelectItemWithChecked<T>): void {\n    const newItemState = !item.checked;\n    let values: T[];\n    if (this.isSelectAllItem(item)) {\n      values = newItemState ? [...this.items] : [];\n    } else {\n      values = newItemState\n        ? [...(this.value ?? []), item.obj]\n        : this.value.filter(i => !this.identityMatcher(i, item.obj));\n    }\n\n    this.updateValue(values);\n    this.dropdownHostElement?.reCalculatePositions();\n  }\n\n  public safeOpenModal(): void {\n    const inputElement = this.focusableElement?.nativeElement;\n    this.searchInputControl.setValue('');\n    this.open =\n      !this.open &&\n      this.interactive &&\n      !!inputElement; /*&& (this.outer || prizmIsNativeFocused(inputElement));*/\n    this.changeDetectorRef.markForCheck();\n  }\n\n  // TODO remove after finish activezone to dropdown component\n  public safeStopPropagation(value: string, $event: Event): void {\n    this.open = false;\n    this.cdRef.markForCheck();\n    if (!value) $event.stopImmediatePropagation();\n  }\n\n  public removeChip(str: string): void {\n    const item = this.chipsSet.get(str);\n    this.select({\n      checked: true,\n      obj: item,\n    } as PrizmMultiSelectItemWithChecked<T>);\n  }\n}\n","<prizm-dropdown-host\n  #dropdownHostRef\n  *prizmLet=\"{ selectedItems: selectedItems$ | async, filteredItems: filteredItems$ | async } as $\"\n  [(isOpen)]=\"open\"\n  [content]=\"dropdown\"\n  [prizmDropdownHostWidth]=\"dropdownWidth\"\n  [prizmDropdownMinHeight]=\"minDropdownHeight\"\n  [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n>\n  <prizm-input-layout\n    [label]=\"label\"\n    [forceClear]=\"(forceClear || forceClear === null) && $.selectedItems.length > 0\"\n    [outer]=\"outer\"\n    [size]=\"size\"\n    [ngSwitch]=\"outer\"\n    (clear)=\"focusableElementRef.focus(); safeStopPropagation(focusableElementRef.value, $event)\"\n    (click)=\"safeOpenModal()\"\n  >\n    <input\n      #focusableElementRef\n      #inputText=\"prizmInput\"\n      [style.display]=\"outer ? 'none' : ''\"\n      [style.visibility]=\"outer ? 'none' : 'hidden'\"\n      [hidden]=\"true\"\n      [disabled]=\"disabled\"\n      [readonly]=\"true\"\n      [placeholder]=\"placeholder\"\n      [formControl]=\"requiredInputControl\"\n      (prizmOnInit)=\"inputTextElement = inputText\"\n      (onClear)=\"onClear()\"\n      prizmInput\n    />\n    <div class=\"in-body-chips-box\" *ngSwitchCase=\"true\" prizm-input-in-body>\n      <ng-container [ngTemplateOutlet]=\"chipsTemplate\"></ng-container>\n    </div>\n\n    <ng-container *ngSwitchCase=\"false\" prizm-input-bottom>\n      <ng-container [ngTemplateOutlet]=\"chipsTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-template #chipsTemplate>\n      <ng-container *ngIf=\"selectedItemsChips$ | async as chips\">\n        <prizm-chips\n          #chipsComponent\n          *ngIf=\"chips.length\"\n          [class.inner]=\"!outer\"\n          [singleLine]=\"true\"\n          [deletable]=\"!disabled && isChipsDeletable\"\n          [chips]=\"chips\"\n          (removeChipEvent)=\"removeChip($event)\"\n        ></prizm-chips>\n      </ng-container>\n    </ng-template>\n\n    <ng-container prizm-input-right>\n      <ng-container\n        *polymorphOutlet=\"icon || defaultIcon as iconName; context: { opened: open, disabled: disabled }\"\n      >\n        <prizm-icon\n          *ngIf=\"!disabled\"\n          [class.opened]=\"open\"\n          [class.active]=\"focusableElementRef.focused\"\n          [class.icon-dropdown]=\"iconName === defaultIcon\"\n          [iconClass]=\"$any(iconName)\"\n          (click)=\"focusableElementRef.focus()\"\n        >\n        </prizm-icon>\n      </ng-container>\n    </ng-container>\n\n    <!--    <prizm-icon-->\n    <!--      *ngIf=\"!disabled\"-->\n    <!--      (click)=\"focusableElementRef.focus()\"-->\n    <!--      [class.active]=\"focusableElementRef.focused\"-->\n    <!--      [class.opened]=\"open\"-->\n    <!--      class=\"icon-dropdown\"-->\n    <!--      prizm-input-right-->\n    <!--      iconClass=\"chevrons-dropdown\"-->\n    <!--    ></prizm-icon>-->\n  </prizm-input-layout>\n\n  <ng-template #dropdown>\n    <prizm-data-list class=\"block\" [scroll]=\"dropdownScroll\" [style.--prizm-data-list-border]=\"0\">\n      <div class=\"list-search-item\" *ngIf=\"searchable\">\n        <prizm-input-layout size=\"m\" label=\"Поиск\">\n          <input class=\"input-search\" #input [formControl]=\"searchInputControl\" prizmInput prizmAutoFocus />\n          <button [interactive]=\"true\" prizmInputIconButton=\"sort-zoom-in\" prizm-input-right></button>\n        </prizm-input-layout>\n      </div>\n      <ng-container *ngIf=\"$.filteredItems?.length; else emptyTemplate\">\n        <div\n          class=\"item\"\n          #parent\n          *ngFor=\"let item of $.filteredItems; let idx = index\"\n          [class.selected]=\"item.checked\"\n          [class.most-relevant]=\"searchable && searchInputControl.value && idx === 0\"\n        >\n          <prizm-checkbox\n            [ngModel]=\"item.checked\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [checked]=\"item.checked\"\n            [host]=\"parent\"\n            [indeterminate]=\"!!item.indeterminate\"\n            (changed)=\"select(item)\"\n          >\n            <div\n              class=\"text\"\n              #elem\n              *prizmLet=\"item | prizmCallFunc : stringify : $any(emptyContent) as text\"\n              [prizmHint]=\"text\"\n              [prizmHintDirection]=\"direction\"\n              [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n            >\n              <ng-container\n                *polymorphOutlet=\"\n                  valueTemplate as content;\n                  context: {\n                    $implicit: {\n                      obj: item.obj,\n                      checked: item.checked,\n                      stringify: item | prizmCallFunc : stringify\n                    }\n                  } as context\n                \"\n              >\n                {{ text }}\n              </ng-container>\n            </div>\n          </prizm-checkbox>\n        </div>\n      </ng-container>\n      <ng-template #emptyTemplate>\n        <ng-container *polymorphOutlet=\"emptyContent as data\">\n          <div class=\"empty-template\">{{ emptyContent }}</div>\n        </ng-container>\n      </ng-template>\n    </prizm-data-list>\n  </ng-template>\n</prizm-dropdown-host>\n","import { NgModule } from '@angular/core';\nimport { PrizmMultiSelectComponent } from './multi-select.component';\n\n/**\n * @deprecated\n * use instead of PrizmInputMultiSelectModule\n * */\n@NgModule({\n  imports: [PrizmMultiSelectComponent],\n  exports: [PrizmMultiSelectComponent],\n})\nexport class PrizmMultiSelectModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmCallFuncPipe, PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport {\n  PolymorphContent,\n  PolymorphOutletDirective,\n  PrizmAutoFocusModule,\n  PrizmDropdownControllerModule,\n  PrizmHintDirective,\n  PrizmLifecycleDirective,\n} from '../../../directives';\nimport { PRIZM_MULTI_SELECT_OPTIONS, PrizmMultiSelectOptions } from './multi-select.options';\nimport { PrizmContextWithImplicit, PrizmNativeFocusableElement } from '../../../types';\nimport { PrizmInputControl, PrizmInputNgControl, PrizmInputTextModule } from '../../input';\nimport { prizmIsNativeFocused, prizmIsTextOverflow$ } from '../../../util';\nimport { debounceTime, map, shareReplay, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, Observable, Subject, timer } from 'rxjs';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport {\n  PrizmDropdownHostClasses,\n  PrizmDropdownHostComponent,\n  PrizmDropdownHostStyles,\n} from '../dropdown-host';\nimport {\n  PrizmMultiSelectIdentityMatcher,\n  PrizmMultiSelectItemStringifyFunc,\n  PrizmMultiSelectItemWithChecked,\n  PrizmMultiSelectSearchMatcher,\n  PrizmMultiSelectValueTransformer,\n} from './multi-select.model';\nimport { PrizmOverlayOutsidePlacement } from '../../../modules/overlay/models';\nimport { PrizmScrollbarComponent, PrizmScrollbarVisibility } from '../../scrollbar';\nimport { PrizmChipsModule } from '../../chips';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconComponent } from '../../icon';\nimport { PrizmDataListComponent } from '../../data-list';\nimport { PrizmCheckboxComponent } from '../../checkbox';\nimport { PrizmOverlayComponent } from '../../../modules/overlay/overlay.component';\n\n// TODO create abstract select component and move to abstract common logic\n@Component({\n  selector: 'prizm-input-multi-select',\n  templateUrl: './input-multi-select.component.html',\n  styleUrls: ['./input-multi-select.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    PrizmOverlayComponent,\n    PolymorphOutletDirective,\n    PrizmInputTextModule,\n    PrizmChipsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PrizmLetDirective,\n    PrizmHintDirective,\n    PrizmIconComponent,\n    PrizmCallFuncPipe,\n    PrizmAutoFocusModule,\n    PrizmScrollbarComponent,\n    PrizmDropdownControllerModule,\n    PrizmDataListComponent,\n    PrizmCheckboxComponent,\n    PrizmLifecycleDirective,\n    PrizmDropdownHostComponent,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PrizmInputMultiSelectComponent),\n      multi: true,\n    },\n    PrizmDestroyService,\n    { provide: PrizmInputControl, useExisting: PrizmInputMultiSelectComponent },\n  ],\n})\nexport class PrizmInputMultiSelectComponent<T> extends PrizmInputNgControl<T[]> implements AfterViewInit {\n  readonly nativeElementType = 'multiselect';\n  readonly hasClearButton = true;\n  override defaultLabel = this.options.label;\n  @ViewChild('focusableElementRef', { read: ElementRef })\n  public override readonly focusableElement?: ElementRef<HTMLElement>;\n\n  @ViewChild('dropdownHostRef')\n  public readonly dropdownHostElement?: PrizmDropdownHostComponent;\n\n  @Input()\n  @prizmDefaultProp()\n  transformer: PrizmMultiSelectValueTransformer<T> = this.options.transformer;\n\n  @Input() set items(data: T[]) {\n    this.items$.next((data as any) ?? []);\n  }\n  get items(): T[] {\n    return this.items$.value;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownScroll: PrizmScrollbarVisibility = 'auto';\n  @Input() dropdownStyles: PrizmDropdownHostStyles;\n  @Input() dropdownClasses: PrizmDropdownHostClasses;\n  @Input()\n  @prizmDefaultProp()\n  icon = this.options.icon;\n\n  @Input()\n  @prizmDefaultProp()\n  selectAllItem: T | null = this.options.chooseAllItem;\n\n  @Input()\n  @prizmDefaultProp()\n  searchable = this.options.searchable;\n\n  @Input()\n  @prizmDefaultProp()\n  isChipsDeletable = this.options.isChipsDeletable;\n\n  @Input()\n  @prizmDefaultProp()\n  minDropdownHeight = this.options.minDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  dropdownWidth = this.options.dropdownWidth;\n\n  @Input()\n  @prizmDefaultProp()\n  maxDropdownHeight = this.options.maxDropdownHeight;\n\n  @Input()\n  @prizmDefaultProp()\n  placeholder = this.options.placeholder;\n\n  @Input()\n  @prizmDefaultProp()\n  searchMatcher: PrizmMultiSelectSearchMatcher<T> = this.options.searchMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  emptyContent: PolymorphContent = this.options.emptyContent;\n\n  /** need only clear function */\n  @Input()\n  @prizmDefaultProp()\n  stringify: PrizmMultiSelectItemStringifyFunc<T> = this.options.stringify;\n\n  @Input()\n  @prizmDefaultProp()\n  identityMatcher: PrizmMultiSelectIdentityMatcher<T> = this.options.identityMatcher;\n\n  @Input()\n  @prizmDefaultProp()\n  valueTemplate: PolymorphContent<PrizmContextWithImplicit<PrizmMultiSelectItemWithChecked<T>>> =\n    this.options.valueContent;\n\n  override hidden = true;\n\n  readonly button_layout_width = 64;\n  override readonly testId_ = 'ui-muilti-select';\n\n  @HostBinding('style.display')\n  get display(): string {\n    return this.value?.length ? 'none' : '';\n  }\n\n  @HostBinding('class.inner')\n  get inner(): boolean {\n    return !this.layoutComponent?.outer ?? false;\n  }\n\n  @HostBinding('class.empty')\n  get emptyChips(): boolean {\n    return !this.chipsSet.size;\n  }\n\n  @HostBinding('attr.data-size')\n  get size(): string {\n    return this.layoutComponent?.size ?? 'l';\n  }\n\n  public readonly defaultIcon = 'chevrons-dropdown';\n  readonly prizmIsTextOverflow$ = prizmIsTextOverflow$;\n  public readonly direction: PrizmOverlayOutsidePlacement = PrizmOverlayOutsidePlacement.RIGHT;\n\n  public readonly items$ = new BehaviorSubject([]);\n  public readonly requiredInputControl = new UntypedFormControl();\n  public readonly searchInputControl = new UntypedFormControl();\n  public readonly chipsControl = new UntypedFormControl([] as string[]);\n\n  public filteredItems$!: Observable<PrizmMultiSelectItemWithChecked<T>[]>;\n\n  selectedItems$!: Observable<T[]>;\n  readonly chipsSet = new Map<string, T>();\n  selectedItemsChips$!: Observable<string[]>;\n\n  override fallbackValue = [] as T[];\n  public filteredItems: PrizmMultiSelectItemWithChecked<T>[] = [];\n  private searchValue!: string;\n\n  readonly focused$$ = new Subject<boolean>();\n  readonly focused$ = this.focused$$.asObservable();\n  readonly opened$$ = new BehaviorSubject<boolean>(false);\n  readonly opened$: Observable<boolean> = this.opened$$.asObservable();\n\n  override get empty(): boolean {\n    return !this.value?.length;\n  }\n  constructor(\n    @Inject(PRIZM_MULTI_SELECT_OPTIONS) private readonly options: PrizmMultiSelectOptions<T>,\n    @Inject(Injector) injector: Injector\n  ) {\n    super(injector);\n  }\n\n  public ngAfterViewInit(): void {\n    // NEED for initial sync with parent params\n    timer(0)\n      .pipe(tap(() => this.changeDetectorRef.markForCheck()))\n      .subscribe();\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.initParentClickListener();\n    this.initFilteredItemsObservables();\n    this.initSelectedItemsObservables();\n    this.selectedItems$\n      .pipe(\n        tap(items => {\n          this.chipsControl.setValue(items as any, { emitEvent: true });\n        }),\n        tap(() => this.changeDetectorRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected initParentClickListener(): void {\n    this.layoutComponent?.innerClick$\n      .pipe(\n        tap(() => this.opened$$.next(this.disabled ? false : !this.opened$$.value)),\n        tap(() => this.changeDetectorRef.markForCheck()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private initSelectedItemsObservables(): void {\n    this.selectedItems$ = this.value$.pipe(debounceTime(0), startWith(this.value)).pipe(\n      switchMap(() => {\n        const selectedItems = this.value;\n        return this.items$.pipe(\n          map(items => {\n            return (\n              items?.filter(item =>\n                (selectedItems ?? []).find(selectedItem => {\n                  return this.identityMatcher(selectedItem, this.transformer(item));\n                })\n              ) ?? []\n            );\n          })\n        );\n      }),\n      shareReplay(1)\n    );\n\n    this.selectedItemsChips$ = this.selectedItems$.pipe(\n      map((selectedItems: T[]) => {\n        this.chipsSet.clear();\n        const result =\n          selectedItems?.map(i => {\n            const str = this.stringify({\n              checked: true,\n              obj: i,\n            });\n\n            this.chipsSet.set(str, i);\n            return str;\n          }) ?? [];\n\n        return result;\n      }),\n      shareReplay(1)\n    );\n  }\n\n  private initFilteredItemsObservables() {\n    this.filteredItems$ = combineLatest([\n      this.searchInputControl.valueChanges.pipe(startWith('')),\n      this.value$.pipe(debounceTime(0)),\n    ]).pipe(\n      switchMap(([searchValue]: [string, T[]]) => {\n        const selectedItems = this.value;\n        return this.items$.pipe(\n          map(items => {\n            if (!this.searchable || !searchValue?.toString().replace(/[ ]+/g, '')) return items;\n            searchValue = this.searchValue = searchValue.toString().trim();\n            return items?.filter(item => this.searchMatcher(searchValue, item)) ?? [];\n          }),\n          map((items: T[]) => {\n            const selectItems = items.map((item: T) => {\n              return {\n                checked: !!selectedItems?.find(selected =>\n                  this.identityMatcher(selected, this.transformer(item))\n                ),\n                obj: item,\n              } as PrizmMultiSelectItemWithChecked<T>;\n            });\n            const selectedCount = this.value?.length;\n            const allItem = this.items$.value?.length;\n            const currentlySearching = this.searchInputControl.value;\n            const addSelectAllItem = allItem && this.selectAllItem && !currentlySearching;\n\n            return [\n              ...((addSelectAllItem ? [this.selectAllItem] : []).map(item => ({\n                checked: allItem === selectedCount,\n                indeterminate: selectedCount && allItem !== this.value.length,\n                obj: item,\n              })) as PrizmMultiSelectItemWithChecked<T>[]),\n              ...selectItems,\n            ];\n          }),\n          tap(items => {\n            this.filteredItems = items;\n            this.dropdownHostElement?.reCalculatePositions(1000 / 60);\n          }),\n          debounceTime(1000 / 60)\n        );\n      })\n    );\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement | null {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  public override clear(ev: MouseEvent): void {\n    ev.stopImmediatePropagation();\n    this.updateValue(null as any);\n    this.markAsTouched();\n  }\n\n  private isSelectAllItem(item: PrizmMultiSelectItemWithChecked<T>): boolean {\n    return Boolean(this.selectAllItem && this.identityMatcher(this.selectAllItem, item.obj));\n  }\n\n  public select(item: PrizmMultiSelectItemWithChecked<T>): void {\n    const newItemState = !item.checked;\n    let values: T[];\n    this.markAsTouched();\n    if (this.isSelectAllItem(item)) {\n      values = newItemState ? [...this.items] : [];\n    } else {\n      const selectedValue = this.transformer(item.obj);\n      values = newItemState\n        ? [...(this.value ?? []), selectedValue]\n        : this.value.filter(i => !this.identityMatcher(i, selectedValue));\n    }\n\n    this.updateValue(values);\n    this.dropdownHostElement?.reCalculatePositions();\n  }\n\n  public safeOpenModal(): void {\n    const inputElement = this.focusableElement?.nativeElement;\n    const open = !this.opened$$.value && !this.disabled && !!inputElement;\n    this.opened$$.next(open);\n  }\n\n  public removeChip(str: string): void {\n    const item = this.chipsSet.get(str);\n    this.select({\n      checked: true,\n      obj: item,\n    } as PrizmMultiSelectItemWithChecked<T>);\n  }\n\n  public trackBy(index: number): number {\n    return index;\n  }\n}\n","<prizm-dropdown-host\n  #dropdownHostRef\n  [content]=\"dropdown\"\n  [isOpen]=\"$any(opened$ | async)\"\n  [prizmDropdownHost]=\"layoutComponent?.el?.nativeElement\"\n  [prizmDropdownHostWidth]=\"dropdownWidth\"\n  [prizmDropdownMinHeight]=\"minDropdownHeight\"\n  [prizmDropdownMaxHeight]=\"maxDropdownHeight\"\n  [dropdownStyles]=\"dropdownStyles\"\n  [dropdownClasses]=\"dropdownClasses\"\n  [ngSwitch]=\"layoutComponent?.outer\"\n  (isOpenChange)=\"$event && searchInputControl.setValue(''); opened$$.next($event)\"\n>\n  <input\n    #focusableElementRef\n    [style.display]=\"layoutComponent?.outer && value?.length ? 'none' : ''\"\n    [style.visibility]=\"!layoutComponent?.outer && value?.length ? 'hidden' : ''\"\n    [disabled]=\"disabled\"\n    [readonly]=\"true\"\n    [tabIndex]=\"!disabled ? 1 : -1\"\n    [placeholder]=\"placeholder\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [ngModel]=\"($any(value) | prizmCallFunc : stringify) ?? ''\"\n    prizmInput\n  />\n\n  <ng-template #dropdown>\n    <prizm-data-list\n      class=\"block\"\n      *prizmLet=\"{ filteredItems: filteredItems$ | async } as $\"\n      [scroll]=\"dropdownScroll\"\n      [style.--prizm-data-list-border]=\"0\"\n    >\n      <div class=\"list-search-item\" *ngIf=\"searchable\">\n        <prizm-input-layout size=\"m\" label=\"Поиск\">\n          <input\n            class=\"input-search\"\n            #input\n            [formControl]=\"searchInputControl\"\n            (input)=\"dropdownHostRef.reCalculatePositions(1000 / 16)\"\n            prizmInput\n            prizmAutoFocus\n          />\n          <button [interactive]=\"true\" prizmInputIconButton=\"sort-zoom-in\" prizm-input-right></button>\n        </prizm-input-layout>\n      </div>\n      <ng-container *ngIf=\"$.filteredItems?.length; else emptyTemplate\">\n        <div\n          class=\"item\"\n          #parent\n          *ngFor=\"let item of $.filteredItems; let idx = index; trackBy: trackBy\"\n          [class.selected]=\"item.checked\"\n          [class.most-relevant]=\"searchable && searchInputControl.value && idx === 0\"\n        >\n          <prizm-checkbox\n            [checked]=\"item.checked\"\n            [ngModel]=\"item.checked\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            [host]=\"parent\"\n            [indeterminate]=\"!!item.indeterminate\"\n            (changed)=\"select(item)\"\n          >\n            <div\n              class=\"text\"\n              #elem\n              *prizmLet=\"item | prizmCallFunc : stringify : $any(emptyContent) as text\"\n              [prizmHint]=\"text\"\n              [prizmHintDirection]=\"direction\"\n              [prizmHintCanShow]=\"$any(elem | prizmCallFunc : prizmIsTextOverflow$ | async)\"\n            >\n              <ng-container\n                *polymorphOutlet=\"\n                  valueTemplate as content;\n                  context: {\n                    $implicit: {\n                      obj: item.obj,\n                      checked: item.checked,\n                      stringify: item | prizmCallFunc : stringify\n                    }\n                  } as context\n                \"\n              >\n                {{ text }}\n              </ng-container>\n            </div>\n          </prizm-checkbox>\n        </div>\n      </ng-container>\n      <ng-template #emptyTemplate>\n        <ng-container *polymorphOutlet=\"emptyContent as data\">\n          <div class=\"empty-template\">{{ emptyContent }}</div>\n        </ng-container>\n      </ng-template>\n    </prizm-data-list>\n  </ng-template>\n</prizm-dropdown-host>\n\n<ng-container *prizmInputLayoutRight>\n  <ng-container\n    *polymorphOutlet=\"\n      icon || defaultIcon as iconName;\n      context: $any({ opened: opened$ | async, disabled: disabled })\n    \"\n  >\n    <prizm-icon\n      [class.opened]=\"opened$ | async\"\n      [class.active]=\"(focused$ | async) || (opened$ | async)\"\n      [class.icon-dropdown]=\"iconName === defaultIcon\"\n      [iconClass]=\"$any(iconName)\"\n      [class.disabled]=\"disabled\"\n      (click)=\"safeOpenModal()\"\n    >\n    </prizm-icon>\n  </ng-container>\n</ng-container>\n\n<ng-container *prizmInputLayoutInBody>\n  <div class=\"in-body-chips-box\" *ngIf=\"value?.length\">\n    <ng-container [ngTemplateOutlet]=\"chipsTemplate\"> </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #chipsTemplate>\n  <ng-container *prizmLet=\"selectedItemsChips$ | async as chips\">\n    <prizm-chips\n      [style.max-width.px]=\"\n        layoutComponent?.el?.nativeElement\n          ? layoutComponent!.el!.nativeElement.clientWidth - button_layout_width\n          : 0\n      \"\n      [class.empty]=\"!chips.length\"\n      [size]=\"$any(size)\"\n      [class.inner]=\"inner\"\n      [singleLine]=\"true\"\n      [deletable]=\"!disabled && isChipsDeletable\"\n      [chips]=\"chips\"\n      (removeChipEvent)=\"removeChip($event)\"\n    ></prizm-chips>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { PrizmInputTextModule } from '../../input/input-text/input-text.module';\nimport { PrizmInputMultiSelectComponent } from './input-multi-select.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmInputMultiSelectComponent],\n  exports: [PrizmInputMultiSelectComponent, PrizmInputTextModule],\n})\nexport class PrizmInputMultiSelectModule {}\n","import { InjectionToken, ValueProvider } from '@angular/core';\nimport { PolymorphContent } from '../../directives/polymorph';\nimport { PrizmContextWithImplicit } from '../../types/context-with-implicit';\nimport { PrizmSizeL, PrizmSizeM } from '../../util';\n\nexport interface PrizmToggleOptions {\n  readonly icons: Readonly<{\n    toggleOff: PolymorphContent<PrizmContextWithImplicit<PrizmSizeL | PrizmSizeM>>;\n    toggleOn: PolymorphContent<PrizmContextWithImplicit<PrizmSizeL | PrizmSizeM>>;\n  }>;\n  readonly singleColor: boolean;\n  readonly showIcons: boolean;\n  readonly size: PrizmSizeL | PrizmSizeM;\n}\n\n/** Default values for the toggle options. */\nexport const PRIZM_TOGGLE_DEFAULT_OPTIONS: PrizmToggleOptions = {\n  icons: {\n    toggleOff: '',\n    toggleOn: '',\n  },\n  singleColor: false,\n  showIcons: false,\n  size: 'm',\n};\n\nexport const PRIZM_TOGGLE_OPTIONS = new InjectionToken<PrizmToggleOptions>(\n  'Default parameters for toggle component',\n  {\n    factory: (): typeof PRIZM_TOGGLE_DEFAULT_OPTIONS => PRIZM_TOGGLE_DEFAULT_OPTIONS,\n  }\n);\n\nexport const prizmToggleOptionsProvider: (options: Partial<PrizmToggleOptions>) => ValueProvider = (\n  options: Partial<PrizmToggleOptions>\n) => ({\n  provide: PRIZM_TOGGLE_OPTIONS,\n  useValue: { ...PRIZM_TOGGLE_DEFAULT_OPTIONS, ...options },\n});\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  Optional,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { PRIZM_TOGGLE_OPTIONS, PrizmToggleOptions } from './toggle-options';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { AbstractPrizmControl } from '../../abstract/control';\nimport { prizmIsNativeFocused, PrizmSize, PrizmSizeL, PrizmSizeM } from '../../util';\nimport { PrizmNativeFocusableElement } from '../../types/focusable-element-accessor';\nimport { PrizmAppearance } from '../../types/appearance.types';\nimport { CommonModule } from '@angular/common';\nimport {\n  PolymorphModule,\n  PrizmCheckedModule,\n  PrizmFocusableModule,\n  PrizmFocusedModule,\n  PrizmFocusVisibleModule,\n  PrizmHoveredModule,\n  PrizmPressedModule,\n  PrizmWrapperModule,\n} from '../../directives';\nimport { PrizmLoaderModule } from '../loader';\nimport { PrizmIconModule } from '../icon';\n\n@Component({\n  selector: 'prizm-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmFocusedModule,\n    PrizmFocusableModule,\n    PrizmFocusVisibleModule,\n    PrizmHoveredModule,\n    PrizmPressedModule,\n    PrizmCheckedModule,\n    PrizmWrapperModule,\n    PrizmLoaderModule,\n    PolymorphModule,\n    PrizmIconModule,\n  ],\n})\nexport class PrizmToggleComponent extends AbstractPrizmControl<boolean> {\n  @ViewChild('focusableElement')\n  private readonly focusableElement?: ElementRef<PrizmNativeFocusableElement>;\n\n  @Input()\n  @prizmDefaultProp()\n  singleColor = this.options.singleColor;\n\n  @Input()\n  @prizmDefaultProp()\n  iconOn = this.options.icons.toggleOn;\n\n  @Input()\n  @prizmDefaultProp()\n  iconOff = this.options.icons.toggleOff;\n\n  @Input()\n  @HostBinding('class._loading')\n  @prizmDefaultProp()\n  showLoader = false;\n\n  @Input()\n  @HostBinding('attr.data-size')\n  @prizmDefaultProp()\n  size: PrizmSizeL | PrizmSizeM = this.options.size;\n\n  override readonly testId_ = 'ui_checkbox';\n\n  constructor(\n    @Optional()\n    @Self()\n    @Inject(NgControl)\n    control: NgControl | null,\n    @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    @Optional()\n    @Inject(PRIZM_TOGGLE_OPTIONS)\n    readonly options: PrizmToggleOptions\n  ) {\n    super(control, changeDetectorRef);\n  }\n\n  get nativeFocusableElement(): PrizmNativeFocusableElement | null {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocused(this.nativeFocusableElement);\n  }\n\n  get appearance(): PrizmAppearance {\n    return this.singleColor || this.checked ? 'primary' : 'secondary';\n  }\n\n  get sizeM(): boolean {\n    return this.size === 'm';\n  }\n\n  @HostBinding('class._checked')\n  get checked(): boolean {\n    return this.value;\n  }\n\n  get loaderSize(): PrizmSize {\n    return this.sizeM ? 'xs' : 's';\n  }\n\n  public onChecked(checked: boolean): void {\n    this.updateValue(checked);\n  }\n\n  public onFocused(focused: boolean): void {\n    this.updateFocused(focused);\n  }\n\n  public onHovered(hovered: boolean): void {\n    this.updateHovered(hovered);\n  }\n\n  public onPressed(pressed: boolean): void {\n    this.updatePressed(pressed);\n  }\n\n  public onFocusVisible(focusVisible: boolean): void {\n    this.updateFocusVisible(focusVisible);\n  }\n\n  protected getFallbackValue(): boolean {\n    return false;\n  }\n}\n","<prizm-wrapper\n  [attr.checked]=\"value\"\n  [appearance]=\"appearance\"\n  [readOnly]=\"readOnly\"\n  [disabled]=\"computedDisabled\"\n  [focused]=\"computedFocusVisible\"\n  [hovered]=\"computedHovered\"\n  [pressed]=\"computedPressed\"\n  [invalid]=\"computedInvalid\"\n  pseudoState=\"toggle\"\n>\n  <prizm-loader\n    class=\"z-loader\"\n    *ngIf=\"showLoader\"\n    [size]=\"loaderSize\"\n    [inheritColor]=\"true\"\n    [showLoader]=\"showLoader\"\n  ></prizm-loader>\n  <div class=\"toggle\">\n    <span class=\"icon-wrapper\">\n      <ng-container *polymorphOutlet=\"iconOn as content; context: { $implicit: size }\">\n        <prizm-icon class=\"icon\" *ngIf=\"content\" [iconClass]=\"$any(content)\" size=\"16\"></prizm-icon>\n      </ng-container>\n    </span>\n    <div class=\"circle\"></div>\n    <span class=\"icon-wrapper\">\n      <ng-container *polymorphOutlet=\"iconOff as content; context: { $implicit: size }\">\n        <prizm-icon class=\"icon\" *ngIf=\"content\" [iconClass]=\"$any(content)\" size=\"16\"></prizm-icon>\n      </ng-container>\n    </span>\n  </div>\n  <input\n    class=\"checkbox\"\n    #focusableElement\n    [attr.aria-checked]=\"value\"\n    [disabled]=\"disabled\"\n    [prizmChecked]=\"checked\"\n    [prizmFocusable]=\"focusable\"\n    (prizmCheckedChange)=\"onChecked($event)\"\n    (prizmFocusedChange)=\"onFocused($event)\"\n    (prizmHoveredChange)=\"onHovered($event)\"\n    (prizmPressedChange)=\"onPressed($event)\"\n    (prizmFocusVisibleChange)=\"onFocusVisible($event)\"\n    type=\"checkbox\"\n    role=\"switch\"\n  />\n</prizm-wrapper>\n","import { NgModule } from '@angular/core';\nimport { PrizmToggleComponent } from './toggle.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmToggleComponent],\n  exports: [PrizmToggleComponent],\n})\nexport class PrizmToggleModule {}\n","import { Directive, EventEmitter, Input, OnChanges, Output, TemplateRef } from '@angular/core';\n\nimport { PrizmStepperStatus } from './types';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[prizmStepperStep]',\n  standalone: true,\n})\nexport class PrizmStepperStepDirective implements OnChanges {\n  @Input('prizmStepperStep') index = 0;\n  @Input() title = '';\n  @Input() status: PrizmStepperStatus = 'default';\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Output() stateChanged = new EventEmitter<number>();\n  constructor(public template: TemplateRef<any>) {}\n\n  public ngOnChanges(): void {\n    this.stateChanged.next(this.index);\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[prizmStepperSelectorItem]',\n  standalone: true,\n})\nexport class PrizmStepperSelectorItemDirective {\n  @Input('prizmStepperSelectorItem') stepIndex = 0;\n  @Input()\n  @HostBinding('disabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = true;\n\n  constructor(private host: ElementRef<HTMLBRElement>) {}\n\n  public focus(): void {\n    this.host.nativeElement.focus();\n  }\n}\n","import { trigger, transition, style, animate } from '@angular/animations';\nimport { Component, EventEmitter, HostBinding, Input, Output, QueryList, ViewChildren } from '@angular/core';\nimport { PrizmStepperSelectorItemDirective } from './stepper-selector-item.directive';\nimport { PrizmStepperStepDirective } from './stepper-step.directive';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmIconComponent } from '../icon/icon.component';\nimport { prizmEmptyQueryList } from '@prizm-ui/helpers';\n\n@Component({\n  selector: 'prizm-stepper-selector',\n  templateUrl: './stepper-selector.component.html',\n  styleUrls: ['./stepper-selector.component.less'],\n  animations: [\n    trigger('inOut', [\n      transition(':enter', [style({ opacity: 0 }), animate('300ms', style({ opacity: 1 }))]),\n    ]),\n  ],\n  standalone: true,\n  imports: [CommonModule, PrizmIconComponent, PrizmStepperSelectorItemDirective],\n})\nexport class PrizmStepperSelectorComponent extends PrizmAbstractTestId {\n  @Input() steps: PrizmStepperStepDirective[] = [];\n\n  @Input() currentStep!: number;\n\n  @Input() @HostBinding('class.vertical') vertical!: boolean;\n\n  @Output() selectStep = new EventEmitter<number>();\n\n  @ViewChildren(PrizmStepperSelectorItemDirective)\n  selectorItems: QueryList<PrizmStepperSelectorItemDirective> = prizmEmptyQueryList();\n  override readonly testId_ = 'ui_stepper--selector';\n\n  public clickOnStep(index: number): void {\n    if (this.currentStep !== index) {\n      this.selectStep.next(index);\n    }\n  }\n\n  public onKeyDown(event: KeyboardEvent, stepNumber: number): void {\n    if (['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n      event.preventDefault();\n\n      const selectorItems = this.selectorItems.toArray();\n\n      switch (event.key) {\n        case 'ArrowRight':\n        case 'ArrowUp': {\n          for (let i = 0; i < selectorItems.length; i++) {\n            const item = selectorItems[i];\n            if (item.stepIndex > stepNumber && item.disabled === false) {\n              item.focus();\n              break;\n            }\n          }\n          break;\n        }\n        case 'ArrowDown':\n        case 'ArrowLeft': {\n          for (let i = selectorItems.length - 1; i >= 0; i--) {\n            const item = selectorItems[i];\n            if (item.stepIndex < stepNumber && item.disabled === false) {\n              item.focus();\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n","<ul class=\"steps\">\n  <ng-container *ngFor=\"let step of steps; last as isLastStep; first as isFirstStep; index as index\">\n    <li>\n      <button\n        class=\"step step--{{ step.status }} step--{{ index }}\"\n        [class.step--current]=\"currentStep === step.index\"\n        [class.step--disabled]=\"step.disabled\"\n        [class.step--first]=\"isFirstStep\"\n        [disabled]=\"step.disabled\"\n        [prizmStepperSelectorItem]=\"step.index\"\n        (click)=\"clickOnStep(step.index)\"\n        (keydown)=\"onKeyDown($event, step.index)\"\n      >\n        <span\n          class=\"step__index\"\n          *ngIf=\"!(currentStep === step.index && step.status !== 'default') && step.status !== null\"\n          [@inOut]\n        >\n          {{ step.index }}\n        </span>\n        <prizm-icon\n          class=\"step__icon\"\n          *ngIf=\"(currentStep === step.index && step.status !== 'default') || step.status === null\"\n          [@inOut]\n          [size]=\"24\"\n          [iconClass]=\"step.status === 'success' ? 'success-circle-fill' : 'alerts-circle-fill'\"\n        ></prizm-icon>\n        <span class=\"step__title\">{{ step.title }}</span>\n      </button>\n    </li>\n    <li class=\"line\" *ngIf=\"!isLastStep\" [ngClass]=\"{ 'line--first': isFirstStep }\"></li>\n  </ng-container>\n</ul>\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\n\nimport { merge, Observable } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { PrizmStepperStepDirective } from './stepper-step.directive';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { PrizmStepperSelectorComponent } from './stepper-selector.component';\nimport { prizmEmptyQueryList } from '@prizm-ui/helpers';\n\n@Component({\n  selector: 'prizm-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.less'],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: 'prizm-stepper',\n    '[class.vertical]': 'vertical',\n  },\n  standalone: true,\n  imports: [CommonModule, PrizmStepperSelectorComponent],\n})\nexport class PrizmStepperComponent extends PrizmAbstractTestId implements AfterContentInit {\n  @Input() title = '';\n\n  @Input() currentStep = 1;\n\n  @Input() vertical = false;\n\n  @Input() stepsSize = 'auto';\n\n  @Output() selectStep = new EventEmitter<number>();\n\n  @ContentChildren(PrizmStepperStepDirective)\n  prizmStepperStepDirectiveQL: QueryList<PrizmStepperStepDirective> = prizmEmptyQueryList();\n\n  steps$!: Observable<PrizmStepperStepDirective[]>;\n  override readonly testId_ = 'ui_stepper';\n  get currentStepTemplate(): TemplateRef<any> | null {\n    const currentStep = this.prizmStepperStepDirectiveQL.find(\n      stepDirective => stepDirective.index === this.currentStep\n    );\n    return currentStep?.template ?? null;\n  }\n\n  public ngAfterContentInit(): void {\n    const steps$ = this.prizmStepperStepDirectiveQL.changes.pipe(\n      startWith<QueryList<PrizmStepperStepDirective>>(this.prizmStepperStepDirectiveQL)\n    );\n\n    const stepsInnerStateChanged$ = merge(\n      ...this.prizmStepperStepDirectiveQL.toArray().map(stepDirective => stepDirective.stateChanged)\n    );\n\n    this.steps$ = merge(steps$, stepsInnerStateChanged$.pipe(switchMap(() => steps$))).pipe(\n      map(ql => ql.toArray().sort((prev, curr) => prev.index - curr.index))\n    );\n  }\n\n  public onSelectStep(step: number): void {\n    this.selectStep.next(step);\n  }\n}\n","<div class=\"header\">{{ title }}</div>\n\n<div class=\"wrapper\">\n  <prizm-stepper-selector\n    [steps]=\"$any(steps$ | async)\"\n    [currentStep]=\"currentStep\"\n    [ngStyle]=\"{ 'min-width': vertical ? stepsSize : 'auto', 'min-height': vertical ? 'auto' : stepsSize }\"\n    [vertical]=\"vertical\"\n    (selectStep)=\"onSelectStep($event)\"\n  ></prizm-stepper-selector>\n\n  <div class=\"step-content\">\n    <ng-container *ngTemplateOutlet=\"currentStepTemplate\"></ng-container>\n  </div>\n</div>\n\n<div class=\"footer\">\n  <ng-content select=\"[prizmStepperFooter]\"></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmStepperComponent } from './stepper.component';\nimport { PrizmStepperStepDirective } from './stepper-step.directive';\nimport { PrizmStepperSelectorItemDirective } from './stepper-selector-item.directive';\nimport { PrizmStepperSelectorComponent } from './stepper-selector.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  exports: [PrizmStepperComponent, PrizmStepperStepDirective],\n  imports: [\n    PrizmStepperComponent,\n    PrizmStepperStepDirective,\n    PrizmStepperSelectorComponent,\n    PrizmStepperSelectorItemDirective,\n  ],\n})\nexport class PrizmStepperModule {}\n","import { BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\nimport { PrizmSplitterAreaComponent } from './area/area.component';\n\nexport class PrizmSplitterService {\n  areaInputSizeChange$$ = new Subject<PrizmSplitterAreaComponent>();\n\n  accuracy = 8;\n\n  private toFixed(num: number): number {\n    return +num.toFixed(this.accuracy);\n  }\n\n  public mathOperation(a: number, b: number, operation: string): number {\n    const accuracyNumber = 10 ** this.accuracy;\n    const newA = this.toFixed(a) * accuracyNumber;\n    const newB = this.toFixed(b) * accuracyNumber;\n\n    switch (operation) {\n      case '-': {\n        return Math.round(newA - newB) / accuracyNumber;\n      }\n\n      case '+': {\n        return Math.round(newA + newB) / accuracyNumber;\n      }\n\n      case '*': {\n        return (newA * newB) / accuracyNumber ** 2;\n      }\n\n      case '/': {\n        return newA / newB;\n      }\n    }\n    return NaN;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { PrizmSplitterService } from '../splitter.service';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-splitter-area',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./area.component.less'],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmSplitterAreaComponent extends PrizmAbstractTestId {\n  static id = 0;\n  override readonly testId_ = 'ui_splitter--area';\n  id = ++PrizmSplitterAreaComponent.id;\n\n  private _size!: number | null;\n  @Input() set size(value: number | null) {\n    if (value === null) {\n      this.hide();\n      this.setSize(value ?? 0);\n      this.setCurrentSize(0);\n    }\n\n    if (value !== null) {\n      this.show();\n      this.setCurrentSize(value);\n      this.setSize(value);\n    }\n\n    this.splitterService.areaInputSizeChange$$.next(this);\n  }\n  get size(): number | null {\n    return this._size;\n  }\n\n  @Input() minSize = 0;\n  @Output() areaMinSize = new EventEmitter();\n\n  @HostBinding('style.order') order!: number;\n  @HostBinding('style.flex-basis') currentSize!: string;\n\n  markForUpdate = false;\n\n  public hide(): void {\n    this.elementRef.nativeElement.hidden = true;\n  }\n\n  public show(): void {\n    this.elementRef.nativeElement.hidden = false;\n  }\n\n  get hidden(): boolean {\n    return this.elementRef.nativeElement.hidden;\n  }\n\n  public setCurrentSize(size: number): void {\n    this.currentSize = size + '%';\n  }\n\n  public setCurrentSizeWithCalc(gap: number): void {\n    this.currentSize = `calc(${this._size}% - ${gap}px)`;\n  }\n\n  public setSize(size: number): void {\n    this._size = size;\n  }\n\n  constructor(\n    public elementRef: ElementRef<HTMLElement>,\n    private cdr: ChangeDetectorRef,\n    private splitterService: PrizmSplitterService\n  ) {\n    super();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PrizmSplitterOrientation } from '../types';\n\n@Component({\n  selector: 'prizm-splitter-gutter-default',\n  template: `<div class=\"slider\" #slider></div>`,\n  styleUrls: [`./gutter-default.component.less`],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class]': 'orientation',\n  },\n  standalone: true,\n})\nexport class PrizmSplitterGutterDefaultComponent {\n  @Input() orientation!: PrizmSplitterOrientation;\n}\n","import { Component, ElementRef, HostBinding, Input, TemplateRef } from '@angular/core';\nimport { PrizmSplitterOrientation } from '../types';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { PrizmSplitterGutterDefaultComponent } from './gutter-default.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'prizm-splitter-gutter',\n  templateUrl: `./gutter.component.html`,\n  styleUrls: ['./gutter.component.less'],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class]': 'orientation',\n  },\n  standalone: true,\n  imports: [CommonModule, PrizmSplitterGutterDefaultComponent],\n})\nexport class PrizmSplitterGutterComponent extends PrizmAbstractTestId {\n  @Input() areaBefore!: number;\n  @Input() areaAfter!: number;\n\n  @Input() orientation!: PrizmSplitterOrientation;\n  @Input() @HostBinding('style.order') order!: number;\n  @Input() template!: TemplateRef<any>;\n\n  position!: number;\n  override readonly testId_ = 'ui_splitter--gutter';\n  constructor(public elementRef: ElementRef<HTMLElement>) {\n    super();\n  }\n}\n","<ng-container *ngIf=\"template; else default\">\n  <ng-container *ngTemplateOutlet=\"template\"></ng-container>\n</ng-container>\n\n<ng-template #default>\n  <prizm-splitter-gutter-default [orientation]=\"orientation\"></prizm-splitter-gutter-default>\n</ng-template>\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[prizmSplitterCustomGutter]',\n  standalone: true,\n})\nexport class PrizmSplitterCustomGutterDirective {\n  @Input() size!: number;\n  constructor(public template: TemplateRef<any>) {}\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { PrizmSplitterOrientation } from './types';\n\nimport { asyncScheduler, BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map, observeOn, startWith, switchMap, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\n\nimport { PrizmSplitterGutterComponent } from './gutter/gutter.component';\nimport { PrizmSplitterAreaComponent } from './area/area.component';\n\nimport { PrizmSplitterService } from './splitter.service';\nimport { PrizmSplitterCustomGutterDirective } from './custom-gutter.directive';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizeObserverModule } from '@ng-web-apis/resize-observer';\n\ntype AreaRealSize = { area: PrizmSplitterAreaComponent; realSize: number; realMinSize: number };\ntype GutterData = { areaBefore: number; areaAfter: number; order: number };\n@Component({\n  selector: 'prizm-splitter',\n  templateUrl: './splitter.component.html',\n  styleUrls: ['./splitter.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService, PrizmSplitterService],\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class]': \"'prizm-spliiter ' + orientation\",\n  },\n  standalone: true,\n  imports: [CommonModule, PrizmSplitterGutterComponent, ResizeObserverModule],\n})\nexport class PrizmSplitterComponent extends PrizmAbstractTestId implements AfterViewInit, AfterContentInit {\n  @Input() orientation: PrizmSplitterOrientation = 'horizontal';\n\n  @Output() areasSizeChange = new EventEmitter<Array<number>>();\n  @Output() areasSplitStart = new EventEmitter<Array<number>>();\n  @Output() areasSplitEnd = new EventEmitter<Array<number>>();\n\n  @ViewChild('container', { static: true }) private containerElement!: ElementRef<HTMLElement>;\n  @ContentChild(PrizmSplitterCustomGutterDirective) customGutter!: PrizmSplitterCustomGutterDirective;\n\n  @ContentChildren(PrizmSplitterAreaComponent) splitterAreaQueryList: QueryList<PrizmSplitterAreaComponent> =\n    prizmEmptyQueryList();\n\n  @ViewChildren(PrizmSplitterGutterComponent)\n  splitterGutterQueryList: QueryList<PrizmSplitterGutterComponent> = prizmEmptyQueryList();\n\n  override readonly testId_ = 'ui_splitter';\n  get gutterElementSize(): number {\n    return this.customGutter ? this.customGutter.size : 8;\n  }\n\n  areas$!: Observable<PrizmSplitterAreaComponent[]>;\n\n  guttersData: Array<GutterData> = [];\n\n  containerSize$$ = new BehaviorSubject(0);\n\n  lastGap = 0;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private destroy$: PrizmDestroyService,\n    private splitterService: PrizmSplitterService\n  ) {\n    super();\n  }\n\n  public ngAfterContentInit(): void {\n    this.areas$ = merge(\n      this.splitterAreaQueryList.changes.pipe(\n        startWith<QueryList<PrizmSplitterAreaComponent>>(this.splitterAreaQueryList),\n        map(ql => ql.toArray())\n      ),\n      this.splitterService.areaInputSizeChange$$.pipe(map(() => this.splitterAreaQueryList.toArray()))\n    ).pipe(\n      map(areas => areas.filter(area => !area.hidden)),\n      observeOn(asyncScheduler)\n    );\n\n    this.areas$.pipe(takeUntil(this.destroy$)).subscribe(areas => {\n      const gap = ((areas.length - 1) * this.gutterElementSize) / areas.length;\n      if (gap !== this.lastGap) {\n        areas.forEach(area => area.setCurrentSizeWithCalc(gap));\n      }\n\n      this.lastGap = gap;\n\n      this.guttersData = [];\n      areas.forEach((area, index) => {\n        area.order = index;\n        if (index < areas.length - 1) {\n          this.guttersData.push({ areaBefore: index, areaAfter: index + 1, order: index + 1 });\n        }\n      });\n\n      this.cdr.markForCheck();\n    });\n\n    this.splitterService.areaInputSizeChange$$\n      .pipe(withLatestFrom(this.areas$), takeUntil(this.destroy$))\n      .subscribe(([changedArea, areas]) => {\n        const gap = ((areas.length - 1) * this.gutterElementSize) / areas.length;\n        changedArea.setCurrentSizeWithCalc(gap);\n        this.cdr.markForCheck();\n      });\n  }\n\n  public ngAfterViewInit(): void {\n    const guttersComponents$ = this.splitterGutterQueryList.changes.pipe(\n      startWith<QueryList<PrizmSplitterGutterComponent>>(this.splitterGutterQueryList),\n      map(ql => ql.toArray())\n    );\n\n    guttersComponents$\n      .pipe(\n        switchMap(gutters =>\n          merge(\n            ...gutters.map(gutter => {\n              const elem = gutter.elementRef.nativeElement;\n\n              return fromEvent<PointerEvent>(elem, 'pointerdown').pipe(\n                withLatestFrom(this.areas$),\n                switchMap(([event, areas]) => {\n                  event.preventDefault();\n                  elem.setPointerCapture(event.pointerId);\n\n                  const containerBCR = this.containerElement.nativeElement.getBoundingClientRect();\n                  const containerSize = this.isHorizontal ? containerBCR.width : containerBCR.height;\n\n                  const guttersSize = this.splitterGutterQueryList.length * this.gutterElementSize;\n                  const guttersGapInPx = this.splitterService.mathOperation(guttersSize, areas.length, '/');\n                  const guttersGapInPercent =\n                    this.splitterService.mathOperation(guttersGapInPx, containerSize, '/') * 100;\n\n                  const guttersBefore = gutter.order - 1;\n                  const guttersAfter = gutters.length - gutter.order;\n\n                  const areasBefore = areas\n                    .filter(area => area.order < gutter.order)\n                    .map(area => this.getAreaRealSizes(area, containerSize, guttersGapInPercent));\n\n                  const areasAfter = areas\n                    .filter(area => area.order >= gutter.order)\n                    .map(area => this.getAreaRealSizes(area, containerSize, guttersGapInPercent));\n\n                  const min = this.splitterService.mathOperation(\n                    this.isHorizontal ? containerBCR.left : containerBCR.top,\n                    this.splitterService.mathOperation(this.gutterElementSize, guttersBefore, '*'),\n                    '+'\n                  );\n\n                  const max = this.splitterService.mathOperation(\n                    this.isHorizontal ? containerBCR.right : containerBCR.bottom,\n                    this.gutterElementSize * (guttersAfter + 1),\n                    '-'\n                  );\n\n                  const splitterBCR = elem.getBoundingClientRect();\n\n                  const offset = {\n                    left: this.splitterService.mathOperation(event.clientX, splitterBCR.left, '-'),\n                    top: this.splitterService.mathOperation(event.clientY, splitterBCR.top, '-'),\n                  };\n\n                  gutter.position = this.isHorizontal\n                    ? this.splitterService.mathOperation(event.clientX, offset.left, '-')\n                    : this.splitterService.mathOperation(event.clientY, offset.top, '-');\n\n                  this.areasSplitStart.emit(\n                    this.getAreasSize(\n                      [...areasBefore, ...areasAfter],\n                      containerSize,\n                      containerSize - guttersSize\n                    )\n                  );\n\n                  return fromEvent<PointerEvent>(elem, 'pointermove').pipe(\n                    map(event => {\n                      event.preventDefault();\n                      return {\n                        gutter,\n                        event,\n                        offset,\n                        min,\n                        max,\n                        areasBefore,\n                        areasAfter,\n                        containerSize,\n                        guttersSize,\n                      };\n                    }),\n                    takeUntil(\n                      merge(fromEvent(document, 'pointerup'), fromEvent(elem, 'pointercancel')).pipe(\n                        tap(event => {\n                          this.areasSplitEnd.emit(\n                            this.getAreasSize(\n                              [...areasBefore, ...areasAfter],\n                              containerSize,\n                              containerSize - guttersSize\n                            )\n                          );\n                        })\n                      )\n                    )\n                  );\n                })\n              );\n            })\n          )\n        ),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        ({ gutter, event, offset, min, max, areasBefore, areasAfter, containerSize, guttersSize }) => {\n          let newPosition = this.isHorizontal\n            ? this.splitterService.mathOperation(event.clientX, offset.left, '-')\n            : this.splitterService.mathOperation(event.clientY, offset.top, '-');\n\n          if (newPosition < min) {\n            newPosition = min;\n          }\n          if (newPosition > max) {\n            newPosition = max;\n          }\n\n          const diff = this.splitterService.mathOperation(gutter.position, newPosition, '-');\n\n          let offsetInPercent;\n\n          if (newPosition === min) {\n            offsetInPercent = areasBefore.reduce((prev, curr) => prev + curr.realSize, 0);\n          } else if (newPosition === max) {\n            offsetInPercent = areasAfter.reduce((prev, curr) => prev + curr.realSize, 0);\n          } else {\n            offsetInPercent = Math.abs(this.splitterService.mathOperation(diff, containerSize, '/')) * 100;\n          }\n\n          const revercedAreasBefore = [...areasBefore].reverse();\n          if (diff === 0) {\n            return;\n          }\n          if (diff < 0) {\n            const shrinked = this.shrinkAreas(areasAfter, offsetInPercent);\n\n            revercedAreasBefore[0].realSize = this.splitterService.mathOperation(\n              revercedAreasBefore[0].realSize,\n              shrinked,\n              '+'\n            );\n            revercedAreasBefore[0].area.setCurrentSize(revercedAreasBefore[0].realSize);\n          } else if (diff > 0) {\n            const shrinked = this.shrinkAreas(revercedAreasBefore, offsetInPercent);\n            areasAfter[0].realSize = this.splitterService.mathOperation(\n              areasAfter[0].realSize,\n              shrinked,\n              '+'\n            );\n            areasAfter[0].area.setCurrentSize(areasAfter[0].realSize);\n          }\n\n          gutter.position = newPosition;\n\n          this.areasSizeChange.emit(\n            this.getAreasSize([...areasBefore, ...areasAfter], containerSize, containerSize - guttersSize)\n          );\n\n          this.cdr.markForCheck();\n        }\n      );\n  }\n\n  private shrinkAreas(areas: AreaRealSize[], offsetInPercent: number): number {\n    let sum = 0;\n\n    for (const areaRealSizes of areas) {\n      if (offsetInPercent === 0) {\n        break;\n      }\n\n      const avalableSize = this.splitterService.mathOperation(\n        areaRealSizes.realSize,\n        areaRealSizes.realMinSize,\n        '-'\n      );\n      if (avalableSize >= offsetInPercent) {\n        areaRealSizes.realSize = this.splitterService.mathOperation(\n          areaRealSizes.realSize,\n          offsetInPercent,\n          '-'\n        );\n        areaRealSizes.area.setCurrentSize(areaRealSizes.realSize);\n        sum = this.splitterService.mathOperation(sum, offsetInPercent, '+');\n        offsetInPercent = 0;\n\n        if (areaRealSizes.realSize === areaRealSizes.realMinSize) {\n          areaRealSizes.area.areaMinSize.emit();\n        }\n        break;\n      } else {\n        offsetInPercent = this.splitterService.mathOperation(offsetInPercent, avalableSize, '-');\n        sum = this.splitterService.mathOperation(sum, avalableSize, '+');\n        areaRealSizes.realSize = areaRealSizes.realMinSize;\n        areaRealSizes.area.setCurrentSize(areaRealSizes.realSize);\n\n        areaRealSizes.area.areaMinSize.emit();\n      }\n    }\n\n    return sum;\n  }\n\n  public get isHorizontal(): boolean {\n    return this.orientation === 'horizontal';\n  }\n\n  private getAreaRealSizes(\n    area: PrizmSplitterAreaComponent,\n    containerSize: number,\n    guttersGapInPercent: number\n  ): AreaRealSize {\n    const sizeInPx = area.elementRef.nativeElement[this.isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const realSize = this.splitterService.mathOperation(sizeInPx, containerSize, '/') * 100;\n    const realMinSize = Math.max(\n      0,\n      this.splitterService.mathOperation(area.minSize, guttersGapInPercent, '-')\n    );\n    return {\n      area,\n      realSize,\n      realMinSize,\n    };\n  }\n\n  private getAreasSize(areas: Array<AreaRealSize>, containerSize: number, areasSize: number): Array<number> {\n    const sizes = areas.map(({ area, realSize, realMinSize }) => {\n      if (realMinSize === realSize) {\n        return area.minSize;\n      } else {\n        return containerSize * (realSize / areasSize);\n      }\n    });\n\n    return sizes;\n  }\n}\n","<div class=\"container container--{{ orientation }}\" #container>\n  <prizm-splitter-gutter\n    *ngFor=\"let gutter of guttersData\"\n    [areaBefore]=\"$any(gutter.areaBefore)\"\n    [areaAfter]=\"$any(gutter.areaAfter)\"\n    [order]=\"$any(gutter.order)\"\n    [orientation]=\"orientation\"\n    [template]=\"$any(customGutter?.template)\"\n  >\n  </prizm-splitter-gutter>\n  <ng-content select=\"prizm-splitter-area\"></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmSplitterAreaComponent } from './area/area.component';\nimport { PrizmSplitterGutterDefaultComponent } from './gutter/gutter-default.component';\nimport { PrizmSplitterGutterComponent } from './gutter/gutter.component';\n\nimport { PrizmSplitterComponent } from './splitter.component';\nimport { PrizmSplitterCustomGutterDirective } from './custom-gutter.directive';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [\n    PrizmSplitterComponent,\n    PrizmSplitterAreaComponent,\n    PrizmSplitterGutterComponent,\n    PrizmSplitterGutterDefaultComponent,\n    PrizmSplitterCustomGutterDirective,\n  ],\n  exports: [PrizmSplitterComponent, PrizmSplitterAreaComponent, PrizmSplitterCustomGutterDirective],\n})\nexport class PrizmSplitterModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { PrizmSliderCnobValuePosition } from './types';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'prizm-slider-cnob',\n  template: `<span class=\"value value--{{ showValueOn }}\" *ngIf=\"value !== null\">\n    {{ value }}\n  </span>`,\n  styleUrls: ['./slider-cnob.component.less'],\n\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.tabindex]': \"disabled ? null : '0'\",\n    '[attr.disabled]': \"disabled ? '' : null\",\n  },\n  standalone: true,\n  imports: [NgIf],\n})\nexport class PrizmSliderCnobComponent {\n  @Input() @HostBinding('attr.index') index!: number;\n  @Input() value!: number | null;\n  @Input() showValueOn!: PrizmSliderCnobValuePosition;\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Output()\n  dragStart = new EventEmitter<{\n    index: number;\n    shiftX: number;\n    shiftY: number;\n  }>();\n\n  @HostListener('pointerdown', ['$event']) public pointerdown(event: PointerEvent): void {\n    if (this.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    this.el.nativeElement.setPointerCapture(event.pointerId);\n\n    const bcr = this.el.nativeElement.getBoundingClientRect();\n    const shiftX = event.clientX - bcr.left;\n    const shiftY = event.clientY - bcr.bottom;\n\n    this.dragStart.next({\n      index: this.index,\n      shiftX,\n      shiftY,\n    });\n  }\n\n  @HostListener('dragstart', ['$event']) private nativeDragStart(event: Event): void {\n    event.preventDefault();\n  }\n\n  constructor(private el: ElementRef<HTMLElement>) {}\n}\n","import { DOCUMENT, NgClass, NgIf, NgStyle } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnChanges,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PrizmDestroyService, prizmEmptyQueryList } from '@prizm-ui/helpers';\n\nimport { fromEvent, merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmSliderCnobComponent } from './slider-cnob.component';\nimport { PrizmSliderCnobValuePosition, PrizmSliderOrientation, PrizmSliderValue } from './types';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: `prizm-slider`,\n    '[class.horizontal]': 'isHorizontal',\n    '[class.vertical]': '!isHorizontal',\n    '[attr.disabled]': \"isDisabled ? '' : null\",\n  },\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: PrizmSliderComponent, multi: true },\n    PrizmDestroyService,\n  ],\n  standalone: true,\n  imports: [NgIf, NgClass, NgStyle, PrizmSliderCnobComponent],\n})\nexport class PrizmSliderComponent\n  extends PrizmAbstractTestId\n  implements ControlValueAccessor, AfterViewInit, OnChanges\n{\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() step = 1;\n  @Input() orientation: PrizmSliderOrientation = 'horizontal';\n  @Input() @HostBinding('class.range') range = false;\n  @Input() showMinMax = true;\n  @Input() showValue = true;\n  @Input() cnobValuePosition: PrizmSliderCnobValuePosition = 'top';\n\n  @ViewChild('track') scrollbar!: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(PrizmSliderCnobComponent) private _cnobs: QueryList<PrizmSliderCnobComponent> =\n    prizmEmptyQueryList();\n\n  private get cnobs(): Observable<QueryList<PrizmSliderCnobComponent>> {\n    return this._cnobs.changes.pipe(startWith(this._cnobs));\n  }\n  private _value: PrizmSliderValue = null;\n\n  private cnobPositions = [0, 0];\n\n  public isDisabled = false;\n\n  override readonly testId_ = 'ui_slider';\n  touchedFn!: () => void;\n  changedFn!: (obj: number | [number, number] | null) => void;\n\n  private getSortedValue(): PrizmSliderValue {\n    if (Array.isArray(this._value)) {\n      return [...this._value].sort((a, b) => a - b).map(item => Math.round(item)) as [number, number];\n    } else {\n      return Math.round(this._value ?? 0);\n    }\n  }\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private destroy$: PrizmDestroyService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    super();\n  }\n\n  public ngAfterViewInit(): void {\n    this.initCnobMoveHandler();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    const min = changes.min?.currentValue ?? this.min;\n    const max = changes.max?.currentValue ?? this.max;\n    const step = changes.step?.currentValue ?? this.step;\n\n    if (min >= max) {\n      this.defaultErrorHandler();\n      throw new Error('min >= max');\n    }\n\n    if (step <= 0 || this.valueRange % step) {\n      this.defaultErrorHandler();\n      throw new Error('invalid step value');\n    }\n\n    if (('min' in changes && !changes.min.firstChange) || ('max' in changes && !changes.max.firstChange)) {\n      this.setPositionFromValue();\n    }\n\n    if ('showMinMax' in changes && !changes.showMinMax.firstChange) {\n      this.setPositionFromValue();\n    }\n  }\n\n  public onCnobKeydown(cnobIndex: number, event: KeyboardEvent): void {\n    if (['ArrowLeft', 'ArrowDown'].includes(event.key)) {\n      event.preventDefault();\n      if (this.cnobPositions[cnobIndex] === 0) {\n        return;\n      }\n      this.moveCnobOneStep(cnobIndex, 'back');\n      return;\n    }\n\n    if (['ArrowUp', 'ArrowRight'].includes(event.key)) {\n      event.preventDefault();\n      if (this.cnobPositions[cnobIndex] === 100) {\n        return;\n      }\n      this.moveCnobOneStep(cnobIndex, 'forward');\n      return;\n    }\n  }\n\n  public getPosition(cnobIndex: number): number {\n    return this.cnobPositions[cnobIndex];\n  }\n\n  public getCnobValue(cnobIndex: number): number {\n    if (this._value === null) {\n      return 0;\n    }\n\n    if (this.range === false) {\n      return this._value as number;\n    }\n\n    const cnobPosition = this.cnobPositions[cnobIndex];\n    const anotherCnobPosition = this.cnobPositions[this.getAnotherCnobIndex(cnobIndex)];\n\n    const value = this.getSortedValue() as [number, number];\n\n    if (cnobPosition < anotherCnobPosition) {\n      return value[0];\n    } else {\n      return value[1];\n    }\n  }\n\n  public get scrollbarLinearGradient(): string {\n    let [cnob1, cnob2] = this.cnobPositions;\n\n    if (cnob1 > cnob2) {\n      [cnob1, cnob2] = [cnob2, cnob1];\n    }\n\n    const color = this.isDisabled ? 'var(--disabled)' : 'var(--progress)';\n\n    return `\n    ${this.isHorizontal ? 'to right' : 'to top'},\n    transparent 0,\n    transparent ${cnob1}%,\n    ${color} ${cnob1}%,\n    ${color} ${cnob2}%,\n    transparent ${cnob2}%,\n    transparent 100%`;\n  }\n\n  public get isHorizontal(): boolean {\n    return this.orientation === 'horizontal';\n  }\n\n  public writeValue(value: PrizmSliderValue): void {\n    this._value = value;\n    this.setPositionFromValue();\n  }\n\n  public registerOnChange(fn: any): void {\n    this.changedFn = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.touchedFn = fn;\n  }\n\n  public setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  private moveCnobOneStep(cnobIndex: number, direction: 'forward' | 'back'): void {\n    const currentPosition = this.cnobPositions[cnobIndex];\n\n    if (direction === 'forward') {\n      this.updatePositionsAndValue(cnobIndex, currentPosition + this.positionStepSize);\n    } else {\n      this.updatePositionsAndValue(cnobIndex, currentPosition - this.positionStepSize);\n    }\n  }\n\n  private get valueRange(): number {\n    return Math.abs(this.max - this.min);\n  }\n\n  private get stepsCount(): number {\n    return this.valueRange / this.step;\n  }\n\n  private get positionStepSize(): number {\n    return 100 / this.stepsCount;\n  }\n\n  private setPositionFromValue(): void {\n    if (Array.isArray(this._value)) {\n      for (let i = 0; i < this._value.length; i++) {\n        const currentStep = Math.abs(this._value[i] - this.min) / this.step;\n        this.cnobPositions[i] = (currentStep / this.stepsCount) * 100;\n      }\n    } else {\n      const currentStep = Math.abs((this._value ?? 0) - this.min) / this.step;\n      this.cnobPositions[1] = (currentStep / this.stepsCount) * 100;\n    }\n  }\n\n  private initCnobMoveHandler(): void {\n    const pointerMove$ = fromEvent<PointerEvent>(this.document, 'pointermove');\n    const pointerUp$ = fromEvent<PointerEvent>(this.document, 'pointerup');\n\n    const scrollbarEl = this.scrollbar.nativeElement;\n\n    this.cnobs\n      .pipe(\n        switchMap(cnobs =>\n          merge(...cnobs.map(cnob => cnob.dragStart)).pipe(\n            switchMap(({ index, shiftX, shiftY }) => {\n              this.touchedFn();\n\n              const scrollBarRect = scrollbarEl.getBoundingClientRect();\n              const scrollBarSize = this.isHorizontal ? scrollBarRect.width : scrollBarRect.height;\n\n              return pointerMove$.pipe(\n                map(event => {\n                  const newPositionPx = this.isHorizontal\n                    ? event.clientX - scrollBarRect.left - shiftX\n                    : scrollBarSize - (event.clientY - scrollBarRect.top - shiftY);\n\n                  const newPosition = (newPositionPx / scrollBarSize) * 100;\n\n                  // курсор вышел из слайдера => оставить бегунок в его границах.\n                  if (newPositionPx < 0) {\n                    return 0;\n                  }\n\n                  if (newPositionPx > scrollBarSize) {\n                    return 100;\n                  }\n\n                  const currentPosition: number = this.cnobPositions[index];\n\n                  if (Math.abs(currentPosition - newPosition) < this.positionStepSize) {\n                    return currentPosition;\n                  }\n\n                  const diff = currentPosition - newPosition;\n\n                  if (diff < 0) {\n                    return (\n                      currentPosition +\n                      Math.floor(Math.abs(diff) / this.positionStepSize) * this.positionStepSize\n                    );\n                  } else {\n                    return (\n                      currentPosition -\n                      Math.floor(Math.abs(diff) / this.positionStepSize) * this.positionStepSize\n                    );\n                  }\n                }),\n                distinctUntilChanged(),\n                tap(value => {\n                  this.updatePositionsAndValue(index, value);\n                }),\n                takeUntil(pointerUp$)\n              );\n            }),\n            takeUntil(this.destroy$)\n          )\n        )\n      )\n      .subscribe();\n  }\n  private getAnotherCnobIndex(currentCnobIndex: number): number {\n    if (currentCnobIndex === 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  private updatePositionsAndValue(cnobIndex: number, position: number): void {\n    this.cnobPositions[cnobIndex] = position;\n\n    const newValue = this.min + (this.valueRange * position) / 100;\n\n    if (Array.isArray(this._value)) {\n      this._value[cnobIndex] = Math.round(newValue);\n    } else {\n      this._value = Math.round(newValue);\n    }\n\n    this.changedFn(this.getSortedValue());\n    this.cdr.markForCheck();\n  }\n\n  private defaultErrorHandler(): void {\n    if (this.range) {\n      this._value = [0, 0];\n    } else {\n      this._value = 0;\n    }\n\n    this.setPositionFromValue();\n  }\n}\n","<div class=\"value\" *ngIf=\"showMinMax\" [ngClass]=\"{ 'value--min': isHorizontal, 'value--max': !isHorizontal }\">\n  {{ isHorizontal ? min : max }}\n</div>\n<div\n  class=\"scrollbar\"\n  #scrollbar\n  [ngStyle]=\"{ 'background-image': 'linear-gradient(' + scrollbarLinearGradient + ')' }\"\n>\n  <div class=\"scrollbar__track\" #track>\n    <prizm-slider-cnob\n      class=\"scrollbar__cnob prizm-slider-cnob\"\n      *ngIf=\"range\"\n      [index]=\"0\"\n      [style.left.%]=\"isHorizontal ? getPosition(0) : null\"\n      [style.bottom.%]=\"isHorizontal ? null : getPosition(0)\"\n      [showValueOn]=\"cnobValuePosition\"\n      [value]=\"showValue && isDisabled === false ? getCnobValue(0) : null\"\n      [disabled]=\"isDisabled\"\n      (keydown)=\"onCnobKeydown(0, $event)\"\n    ></prizm-slider-cnob>\n\n    <prizm-slider-cnob\n      class=\"scrollbar__cnob prizm-slider-cnob\"\n      [index]=\"1\"\n      [style.left.%]=\"isHorizontal ? getPosition(1) : null\"\n      [style.bottom.%]=\"isHorizontal ? null : getPosition(1)\"\n      [value]=\"showValue && isDisabled === false ? getCnobValue(1) : null\"\n      [showValueOn]=\"cnobValuePosition\"\n      [disabled]=\"isDisabled\"\n      (keydown)=\"onCnobKeydown(1, $event)\"\n    ></prizm-slider-cnob>\n  </div>\n</div>\n<div class=\"value\" *ngIf=\"showMinMax\" [ngClass]=\"{ 'value--max': isHorizontal, 'value--min': !isHorizontal }\">\n  {{ isHorizontal ? max : min }}\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PrizmSliderCnobComponent } from './slider-cnob.component';\nimport { PrizmSliderComponent } from './slider.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmSliderComponent, PrizmSliderCnobComponent],\n  exports: [PrizmSliderComponent, PrizmSliderCnobComponent],\n})\nexport class PrizmSliderModule {}\n","import { PrizmCarouselArrayContent } from '../input';\nimport { PrizmDay, PrizmTime } from '../../@core';\n\nexport enum PrizmCronUiBaseType {\n  every,\n  after,\n  specified,\n  between,\n}\n\nexport type PrizmCronTabItem = 'second' | 'minute' | 'hour' | 'day' | 'month' | 'year';\nexport type PrizmCronTabSpecifiedList = {\n  second?: PrizmCronUiBaseType[];\n  minute?: PrizmCronUiBaseType[];\n  hour?: PrizmCronUiBaseType[];\n  day?: PrizmCronUiDayType[];\n  month?: PrizmCronUiBaseType[];\n  year?: PrizmCronUiBaseType[];\n};\n\nexport type PrizmCronPeriod = {\n  start: [PrizmDay | null, PrizmTime | null] | null;\n  end: [PrizmDay | null, PrizmTime | null] | null;\n  indefinitely: boolean;\n};\n\nexport enum PrizmCronUiDayType {\n  every,\n  between,\n  after,\n  specified,\n  afterDayOfWeek,\n  afterDayOfMonth,\n  specifiedDayOfMonth,\n  specifiedDayOfWeek,\n  lastDayOfMonth,\n  lastWeekDayOfMonth,\n  lastChosenDayOfWeek,\n  lastChosenDaysOfMonth,\n  nearestWeekDayToTheChosenDayOfMonth,\n  onTheChosenDayOfWeek,\n}\n\nexport type PrizmCronUiListItem = {\n  value: string;\n  key: string;\n};\n\nexport type PrizmCronUiStateList = {\n  everyChosenTimesAfterChosen: {\n    on: PrizmCarouselArrayContent<string>;\n    after: PrizmCarouselArrayContent<string>;\n  };\n  specified: {\n    key: string;\n    value: string;\n  }[];\n  between: {\n    start: PrizmCarouselArrayContent<string>;\n    end: PrizmCarouselArrayContent<string>;\n  };\n};\n\nexport type PrizmCronUiState<TYPE> = {\n  type: TYPE;\n  everyChosenTimesAfterChosen: {\n    on: string;\n    after: string;\n  };\n  specified: string[];\n  between: { start: string; end: string };\n};\n","/**\n * TODO #mz ADD I18N support\n * */\nexport const PRIZM_CRON_UI_MONTH_CRON_KEYS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC',\n] as const;\n\nexport const PRIZM_CRON_UI_DAYS_OF_WEEK_CRON_KEYS = [\n  'SUN',\n  'MON',\n  'TUE',\n  'WED',\n  'THU',\n  'FRI',\n  'SAT',\n] as const;\n","import { PrizmCronUiDayType } from './model';\nimport { PRIZM_CRON_UI_DAYS_OF_WEEK_CRON_KEYS } from './const';\nimport { prizmGetNumberWithZero } from '@prizm-ui/core';\nimport { PrizmInputCarouselArrayContent } from '../input/carousel';\n\nexport function getArrWithStringNumbers(length: number, start = 1, withZero = false): string[] {\n  return Array.from({ length }, (_, i) => {\n    const sum = i + start;\n    const result = withZero ? prizmGetNumberWithZero(sum) : sum;\n    return result + '';\n  });\n}\n\nexport function getCarousel(length: number, start = 1): PrizmInputCarouselArrayContent<string> {\n  return new PrizmInputCarouselArrayContent(\n    getArrWithStringNumbers(length, start),\n    (item, el) => item === el\n  );\n}\nexport function getArrWithWeekNumber(): string[] {\n  return ['2', '3', '4', '5', '6', '7', '1'];\n}\n\nexport function getCarouselWeek(): PrizmInputCarouselArrayContent<string> {\n  return new PrizmInputCarouselArrayContent(getArrWithWeekNumber(), (item, el) => item === el);\n}\n\nexport function prizmConvertDayToType(day: string, dayOfWeek: string): PrizmCronUiDayType {\n  if (day === '*') return PrizmCronUiDayType.every;\n  else if (day === '?') {\n    if (dayOfWeek === '*') return PrizmCronUiDayType.every;\n    if (dayOfWeek.includes('/')) return PrizmCronUiDayType.afterDayOfWeek;\n    else if (dayOfWeek.endsWith('L')) return PrizmCronUiDayType.lastChosenDayOfWeek;\n    else if (dayOfWeek.includes('#')) return PrizmCronUiDayType.onTheChosenDayOfWeek;\n    else if (PRIZM_CRON_UI_DAYS_OF_WEEK_CRON_KEYS.find(a => dayOfWeek.includes(a)))\n      return PrizmCronUiDayType.specifiedDayOfWeek;\n  } else if (day.includes('/')) {\n    return PrizmCronUiDayType.afterDayOfMonth;\n  } else if (day.startsWith('L-')) {\n    return PrizmCronUiDayType.lastChosenDaysOfMonth;\n  } else if (day === 'L') {\n    return PrizmCronUiDayType.lastDayOfMonth;\n  } else if (day === 'LW') {\n    return PrizmCronUiDayType.lastWeekDayOfMonth;\n  } else if (day.includes('-')) {\n    return PrizmCronUiDayType.between;\n  } else if (day.endsWith('W')) {\n    return PrizmCronUiDayType.nearestWeekDayToTheChosenDayOfMonth;\n  }\n\n  return PrizmCronUiDayType.specifiedDayOfMonth;\n}\n\n/**\n * Определяет, может ли элемент списка Cron отобразиться на основе переданных элементов и проверяемого элемента.\n *\n * @param {unknown[]} items - Массив элементов, которые могут быть отображены.\n * @param {unknown} item - Элемент, который необходимо проверить на возможность отображения.\n * @returns {boolean} Возвращает true, если список элементов пуст и проверяемый элемент содержится в нем, иначе false.\n */\nexport function canShowCronListItem(items: unknown[], item: unknown): boolean {\n  return !items.length || items.includes(item);\n}\n","import { canShowCronListItem, getArrWithStringNumbers, getCarousel } from './util';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { distinctUntilChanged, filter, finalize, first, map, takeUntil, tap } from 'rxjs/operators';\nimport { UntypedFormControl } from '@angular/forms';\nimport { PrizmCronUiBaseType, PrizmCronUiState, PrizmCronUiStateList } from './model';\nimport { PrizmCronService, PrizmCronValueObject } from '../../services/cron';\n\nexport abstract class PrizmCronUiBaseState<\n  ENUM extends Record<string, unknown> = typeof PrizmCronUiBaseType,\n  TYPE = PrizmCronUiBaseType,\n  STATE extends PrizmCronUiState<TYPE> = PrizmCronUiState<TYPE>,\n  LIST extends PrizmCronUiStateList = PrizmCronUiStateList\n> {\n  readonly list: LIST = {\n    everyChosenTimesAfterChosen: this.everyChosenTimesAfterChosen.list,\n    specified: this.specified.list,\n    between: this.between.list,\n  } as LIST;\n\n  readonly defaultState: STATE = {\n    type: this.initialType,\n    everyChosenTimesAfterChosen: this.everyChosenTimesAfterChosen.value,\n    specified: this.specified.value,\n    between: this.between.value,\n  } as STATE;\n\n  readonly state$ = new BehaviorSubject<STATE>(this.defaultState);\n\n  abstract readonly cron: PrizmCronService;\n  abstract readonly destroy$: PrizmDestroyService;\n  readonly canShowCronListItem = canShowCronListItem;\n\n  constructor(\n    public readonly current$: Observable<any>,\n    public readonly initialType: TYPE,\n    public readonly TYPES: ENUM,\n    private readonly between = {\n      value: {\n        start: '0',\n        end: '1',\n      },\n      list: {\n        start: getCarousel(60, 0),\n        end: getCarousel(60, 0),\n      },\n    },\n    private readonly specified = {\n      value: ['0'],\n      list: getArrWithStringNumbers(60, 1, false).map((i, idx) => ({\n        key: idx.toString(),\n        value: idx.toString(),\n      })),\n    },\n    private readonly everyChosenTimesAfterChosen = {\n      list: {\n        on: getCarousel(60, 1),\n        after: getCarousel(60, 0),\n      },\n      value: {\n        on: '1',\n        after: '0',\n      },\n    }\n  ) {\n    this.initialType = initialType;\n  }\n\n  public readonly typeControl = new UntypedFormControl();\n\n  public readonly type$ = this.current$.pipe(map(i => this.getTypeByValue(i, this.cron.value)));\n\n  public init(): void {\n    this.initLocalStateChanger();\n    this.initLocalTypeChanger();\n  }\n\n  protected initLocalStateChanger(): void {\n    /* add change when base changes */\n    this.current$\n      .pipe(\n        distinctUntilChanged(this.isBaseChanged),\n        tap(value => this.updateLocalState(value, this.getTypeByValue(value, this.cron.value))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected isBaseChanged(a: any, b: any): boolean {\n    return a === b;\n  }\n\n  protected initLocalTypeChanger(): void {\n    this.type$\n      .pipe(\n        filter(i => i != this.typeControl.value),\n        tap(type => {\n          this.typeControl.setValue(type);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public abstract updateMainState(value: string): void;\n\n  public getTypeByValueByDefault(value: string, cron: PrizmCronValueObject): PrizmCronUiBaseType {\n    if (value === '*') {\n      return PrizmCronUiBaseType.every;\n    } else if (value.includes('/')) {\n      return PrizmCronUiBaseType.after;\n    } else if (value.includes('-')) {\n      return PrizmCronUiBaseType.between;\n    }\n\n    return PrizmCronUiBaseType.specified;\n  }\n  public getTypeByValue(hour: string, cron: PrizmCronValueObject): TYPE {\n    return this.getTypeByValueByDefault(hour, cron) as unknown as TYPE;\n  }\n\n  public updatePartial(state: Partial<STATE>): void {\n    this.state$.next({\n      ...this.state$.value,\n      ...state,\n    });\n  }\n\n  public updateMainIfChanged(newState: string): void {\n    this.current$\n      .pipe(\n        first(),\n        tap(old => {\n          if (old !== newState) {\n            this.updateMainState(newState);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * update between\n   * */\n  public updateBetween({\n    start,\n    end,\n  }: {\n    start?: string;\n    end?: string;\n  } = {}): void {\n    start = start ?? this.state$.value.between.start;\n    end = end ?? this.state$.value.between.end;\n    this.updateMainIfChanged(`${start}-${end}`);\n  }\n\n  /**\n   * update on # after #\n   * */\n  public updateOn(\n    options: {\n      on?: string;\n      after?: string;\n    } = {}\n  ): void {\n    let { on, after } = options;\n    on = on ?? this.state$.value.everyChosenTimesAfterChosen.on;\n    after = after ?? this.state$.value.everyChosenTimesAfterChosen.after;\n    this.updateMainIfChanged(`${after}/${on}`);\n  }\n\n  /**\n   * update on\n   * */\n  public updateSpecified(specified?: string[]): void {\n    this.updateMainIfChanged(`${specified?.join(',') ?? 0}`);\n  }\n\n  /**\n   * set every *\n   * */\n  public setEvery(): void {\n    this.updateMainIfChanged('*');\n  }\n\n  /**\n   * TODO fix type casting\n   * */\n  public updateLocalState(value: any, type: TYPE): void {\n    switch (type) {\n      case this.TYPES.between:\n        {\n          const arr = value.split('-');\n          const start = arr[0] ?? '0';\n          const end = arr[1] ?? '0';\n\n          this.updatePartial({\n            type: PrizmCronUiBaseType.between,\n            between: {\n              start: start,\n              end: end,\n            },\n          } as unknown as Partial<STATE>);\n        }\n        break;\n      case this.TYPES.every:\n        this.updatePartial({\n          type: PrizmCronUiBaseType.every,\n        } as unknown as Partial<STATE>);\n        break;\n      case this.TYPES.specified:\n        this.updatePartial({\n          type: PrizmCronUiBaseType.specified,\n          specified: value.split(','),\n        } as unknown as Partial<STATE>);\n        break;\n\n      case this.TYPES.after:\n        {\n          const arr = value.split('/');\n          const on = arr[1] ?? '0';\n          const after = arr[0] ?? '0';\n          this.updatePartial({\n            type: PrizmCronUiBaseType.after,\n            everyChosenTimesAfterChosen: {\n              on: on,\n              after: after,\n            },\n          } as unknown as Partial<STATE>);\n        }\n        break;\n    }\n  }\n\n  public destroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType } from './model';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronService } from '../../services/cron';\n\n@Injectable()\nexport class PrizmCronUiSecondState extends PrizmCronUiBaseState {\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(cron.second$, PrizmCronUiBaseType.every, PrizmCronUiBaseType);\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      second: value,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType } from './model';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronService } from '../../services/cron';\n\n@Injectable()\nexport class PrizmCronUiMinuteState extends PrizmCronUiBaseState {\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(cron.minute$, PrizmCronUiBaseType.every, PrizmCronUiBaseType);\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      minute: value,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType } from './model';\nimport { getArrWithStringNumbers, getCarousel } from './util';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronService } from '../../services/cron';\n\n@Injectable()\nexport class PrizmCronUiHourState extends PrizmCronUiBaseState {\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(\n      cron.hour$,\n      PrizmCronUiBaseType.every,\n      PrizmCronUiBaseType,\n      {\n        value: {\n          start: '0',\n          end: '1',\n        },\n        list: {\n          start: getCarousel(24, 0),\n          end: getCarousel(24, 0),\n        },\n      },\n      {\n        value: ['0'],\n        list: getArrWithStringNumbers(24, 0, false).map((i, idx) => ({\n          key: i,\n          value: i,\n        })),\n      },\n      {\n        list: {\n          on: getCarousel(24, 1),\n          after: getCarousel(24, 0),\n        },\n        value: {\n          on: '1',\n          after: '0',\n        },\n      }\n    );\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      hour: value,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType } from './model';\nimport { getCarousel } from './util';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PRIZM_CRON_UI_MONTH_CRON_KEYS } from './const';\nimport { PrizmCronService } from '../../services/cron';\n\n@Injectable()\nexport class PrizmCronUiMonthState extends PrizmCronUiBaseState {\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(\n      cron.month$,\n      PrizmCronUiBaseType.every,\n      PrizmCronUiBaseType,\n      {\n        value: {\n          start: '1',\n          end: '2',\n        },\n        list: {\n          start: getCarousel(12, 1),\n          end: getCarousel(12, 1),\n        },\n      },\n      {\n        value: [],\n        list: Object.values(PRIZM_CRON_UI_MONTH_CRON_KEYS).map((value, idx) => ({\n          key: PRIZM_CRON_UI_MONTH_CRON_KEYS[idx],\n          value: idx.toString(),\n        })),\n      },\n      {\n        list: {\n          on: getCarousel(12, 1),\n          after: getCarousel(12, 1),\n        },\n        value: {\n          on: '2',\n          after: '1',\n        },\n      }\n    );\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      month: value,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType } from './model';\nimport { getCarousel } from './util';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronService } from '../../services/cron';\nimport { PrizmCarouselArrayContent } from '../input/carousel';\n\n@Injectable()\nexport class PrizmCronUiYearState extends PrizmCronUiBaseState {\n  readonly currentYear = new Date().getFullYear();\n\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(\n      cron.year$,\n      PrizmCronUiBaseType.every,\n      PrizmCronUiBaseType,\n      {\n        value: {\n          start: new Date().getFullYear().toString(),\n          end: new Date().getFullYear().toString(),\n        },\n        list: {\n          start: new PrizmCarouselArrayContent(getYears()),\n          end: new PrizmCarouselArrayContent(getYears()),\n        },\n      },\n      {\n        value: [],\n        list: getYears().map(value => ({\n          key: value,\n          value: value,\n        })),\n      },\n      {\n        list: {\n          on: getCarousel(83, 1),\n          after: new PrizmCarouselArrayContent(getYears()),\n        },\n        value: {\n          on: '1',\n          after: new Date().getFullYear().toString(),\n        },\n      }\n    );\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      year: value,\n    });\n  }\n\n  private getYears(): string[] {\n    return Array.from({ length: 50 }).map((_, idx) => idx + this.currentYear + '');\n  }\n}\n\nfunction getYears(length = 50, from = new Date().getFullYear()): string[] {\n  return Array.from({ length: 50 }).map((_, idx) => idx + from + '');\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmCronUiBaseType, PrizmCronUiDayType, PrizmCronUiListItem } from './model';\nimport { PrizmCronUiBaseState } from './cron-ui-base.state';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronService, PrizmCronValueObject } from '../../services/cron';\nimport {\n  getArrWithStringNumbers,\n  getArrWithWeekNumber,\n  getCarousel,\n  getCarouselWeek,\n  prizmConvertDayToType,\n} from './util';\nimport { combineLatest, merge } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, tap } from 'rxjs/operators';\nimport { PRIZM_CRON_UI_DAYS_OF_WEEK_CRON_KEYS } from './const';\n\n@Injectable()\nexport class PrizmCronUiDayState extends PrizmCronUiBaseState<typeof PrizmCronUiDayType, PrizmCronUiDayType> {\n  public lastChosenDayOfMonthValue = '1';\n  public selectedDayOfWeek: string[] = [];\n  public readonly afterNumberOfWeekList = getCarousel(5, 1);\n  public onNumberOfWeekListValue = this.afterNumberOfWeekList.first;\n  public readonly dayOfMonthItems: PrizmCronUiListItem[] = getArrWithStringNumbers(31, 1).map(\n    (key, index) => ({\n      key: key,\n      value: key,\n    })\n  );\n  public readonly dayOfWeekItems: PrizmCronUiListItem[] = getArrWithWeekNumber().map(i => ({\n    key: PRIZM_CRON_UI_DAYS_OF_WEEK_CRON_KEYS[parseInt(i, 10) - 1],\n    value: i,\n  }));\n\n  public readonly carouselWeek = getCarouselWeek();\n  public readonly carouselWeekLastChosenDayOfChosenWeek = getCarouselWeek();\n  public readonly carouselWeekLastChosenDayOfWeek = getCarouselWeek();\n  public readonly carouselWeekAfterDayOfWeek = getCarouselWeek();\n  public lastChosenDayOfWeekValue2 = this.carouselWeek.first;\n  public lastChosenDayOfWeekValue = this.carouselWeek.first;\n  public readonly nearestDayOfMonth = getCarousel(31, 1);\n  public readonly contentLastChosenDayOfMonth = getCarousel(31, 1);\n  public readonly afterDayOfWeekListDays = getCarousel(7, 1);\n  public selectedDayOfMonth: string[] = [];\n  public afterDayOfWeekListDaysValue = this.afterDayOfWeekListDays.first;\n  public afterDayOfWeekListDayOfWeeksValue = this.carouselWeek.first;\n  public readonly afterDayOfMonthListDays = getCarousel(31, 1);\n  public afterDayOfMonthListDaysValue = this.afterDayOfMonthListDays.first;\n  public readonly afterDayOfMonthListRepeatDays = getCarousel(31, 1);\n  public afterDayOfMonthListRepeatDaysValue = this.afterDayOfMonthListRepeatDays.first;\n  public nearestDayOfMonthValue = '1';\n  constructor(public readonly cron: PrizmCronService, public readonly destroy$: PrizmDestroyService) {\n    super(\n      cron.value$.pipe(map(i => [i.dayOfMonth, i.dayOfWeek])),\n      PrizmCronUiDayType.every,\n      PrizmCronUiDayType,\n      {\n        value: {\n          start: '0',\n          end: '1',\n        },\n        list: {\n          start: getCarousel(31, 0),\n          end: getCarousel(31, 0),\n        },\n      },\n      {\n        value: ['0'],\n        list: getArrWithStringNumbers(31, 0, false).map((i, idx) => ({\n          key: i,\n          value: i,\n        })),\n      },\n      {\n        list: {\n          on: getCarousel(31, 1),\n          after: getCarousel(31, 0),\n        },\n        value: {\n          on: '1',\n          after: '0',\n        },\n      }\n    );\n  }\n\n  public setLastDayOfMonth(): void {\n    this.cron.updateWith({\n      dayOfMonth: 'L',\n      dayOfWeek: '?',\n    });\n  }\n\n  public setLastWeekDayOfMonth(): void {\n    this.cron.updateWith({\n      dayOfMonth: 'LW',\n      dayOfWeek: '?',\n    });\n  }\n\n  public override init(): void {\n    combineLatest([this.cron.dayOfMonth$, this.cron.dayOfWeek$])\n      .pipe(\n        map(([day, dayOfWeek]) => prizmConvertDayToType(day, dayOfWeek)),\n        filter(i => i != this.typeControl.value),\n        tap(type => {\n          this.typeControl.setValue(type);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n    this.initLocalStateChanger();\n  }\n\n  /**\n   * set every *\n   * */\n  public override setEvery(): void {\n    this.cron.updateWith({\n      dayOfWeek: `*`,\n      dayOfMonth: `?`,\n    });\n  }\n\n  public updateLastChosenDayOfMonth(lastChosenDayOfMonthValue?: string): void {\n    this.lastChosenDayOfMonthValue = lastChosenDayOfMonthValue ?? this.lastChosenDayOfMonthValue;\n    this.cron.updateWith({\n      dayOfWeek: `?`,\n      dayOfMonth: `L-${lastChosenDayOfMonthValue || 1}`,\n    });\n  }\n  public updateLastChosenDayOfWeek(lastChosenDayOfWeekValue: string, addEnding = true): void {\n    const newValue =\n      (addEnding ? lastChosenDayOfWeekValue : lastChosenDayOfWeekValue.replace(/L$/g, '')) || '2';\n    this.lastChosenDayOfWeekValue = newValue;\n    this.cron.updateWith({\n      dayOfMonth: `?`,\n      dayOfWeek: `${newValue}L`,\n    });\n  }\n\n  public updateLastChosenDayOfChosenWeek(\n    onNumberOfWeekListValue?: string | null,\n    lastChosenDayOfWeekValue2?: string\n  ): void {\n    this.onNumberOfWeekListValue = onNumberOfWeekListValue ?? this.onNumberOfWeekListValue;\n    this.lastChosenDayOfWeekValue2 = lastChosenDayOfWeekValue2 ?? this.lastChosenDayOfWeekValue2;\n    this.cron.updateWith({\n      dayOfMonth: `?`,\n      dayOfWeek: `${this.lastChosenDayOfWeekValue2}#${this.onNumberOfWeekListValue}`,\n    });\n  }\n\n  public updateAfterDayOfWeek({\n    afterDayOfWeekListDaysValue,\n    afterDayOfWeekListDayOfWeeksValue,\n  }: {\n    afterDayOfWeekListDaysValue?: string;\n    afterDayOfWeekListDayOfWeeksValue?: string;\n  } = {}): void {\n    this.afterDayOfWeekListDaysValue = afterDayOfWeekListDaysValue ?? this.afterDayOfWeekListDaysValue;\n    this.afterDayOfWeekListDayOfWeeksValue =\n      afterDayOfWeekListDayOfWeeksValue ?? this.afterDayOfWeekListDayOfWeeksValue;\n    if (!this.afterDayOfWeekListDayOfWeeksValue) return;\n    this.cron.updateWith({\n      dayOfMonth: `?`,\n      dayOfWeek: `${this.afterDayOfWeekListDayOfWeeksValue}/${this.afterDayOfWeekListDaysValue}`,\n    });\n  }\n  public updateSelectedDayOfWeek(selectedDayOfWeek: string[]): void {\n    this.selectedDayOfWeek = selectedDayOfWeek;\n    this.cron.updateWith({\n      dayOfMonth: `?`,\n      dayOfWeek: this.selectedDayOfWeek.join(','),\n    });\n  }\n\n  public updateSelectedDayOfMonth(selectedDayOfMonth: string[]): void {\n    this.selectedDayOfMonth = selectedDayOfMonth;\n    this.cron.updateWith({\n      dayOfWeek: `?`,\n      dayOfMonth: [...new Set(this.selectedDayOfMonth.length ? this.selectedDayOfMonth : ['1'])].join(','),\n    });\n  }\n\n  public updateAfterDayOfMonth(\n    afterDayOfMonthListRepeatDaysValue?: string | null,\n    afterDayOfMonthListDaysValue?: string\n  ): void {\n    this.afterDayOfMonthListRepeatDaysValue =\n      afterDayOfMonthListRepeatDaysValue ?? this.afterDayOfMonthListRepeatDaysValue;\n    this.afterDayOfMonthListDaysValue = afterDayOfMonthListDaysValue ?? this.afterDayOfMonthListDaysValue;\n    this.cron.updateWith({\n      dayOfWeek: `?`,\n      dayOfMonth: `${this.afterDayOfMonthListDaysValue}/${this.afterDayOfMonthListRepeatDaysValue}`,\n    });\n  }\n\n  public updateNearestDayOfMonth(nearestDayOfMonthValue?: string): void {\n    this.nearestDayOfMonthValue = nearestDayOfMonthValue ?? this.nearestDayOfMonthValue;\n    this.cron.updateWith({\n      dayOfMonth: `${this.nearestDayOfMonthValue}W`,\n      dayOfWeek: '?',\n    });\n  }\n  public override updateBetween({\n    start,\n    end,\n  }: {\n    start?: string;\n    end?: string;\n  } = {}): void {\n    start = start ?? this.state$.value.between.start;\n    end = end ?? this.state$.value.between.end;\n    this.state$.value.between.start = start;\n    this.state$.value.between.end = end;\n    this.cron.updateWith({\n      dayOfMonth: `${start}-${end}`,\n    });\n  }\n\n  public override getTypeByValueByDefault(value: string, cron: PrizmCronValueObject): PrizmCronUiBaseType {\n    return prizmConvertDayToType(cron.dayOfMonth, cron.dayOfWeek) as unknown as PrizmCronUiBaseType;\n  }\n\n  public override updateLocalState(\n    [dayOfMonth, dayOfWeek]: [string, string],\n    type: PrizmCronUiDayType\n  ): void {\n    switch (type) {\n      case this.TYPES.between:\n        {\n          const arr = dayOfMonth.split('-');\n          const start = arr[0] ?? '0';\n          const end = arr[1] ?? '0';\n\n          this.updatePartial({\n            type: PrizmCronUiDayType.between,\n            between: {\n              start: start,\n              end: end,\n            },\n          });\n        }\n        break;\n      case this.TYPES.every:\n        this.updatePartial({\n          type: PrizmCronUiDayType.every,\n        });\n        break;\n\n      case this.TYPES.specifiedDayOfWeek:\n        {\n          this.updateSelectedDayOfWeek(dayOfWeek.split(','));\n        }\n        break;\n\n      case this.TYPES.lastChosenDayOfWeek:\n        {\n          this.updateLastChosenDayOfWeek(dayOfWeek, false);\n        }\n        break;\n\n      case this.TYPES.nearestWeekDayToTheChosenDayOfMonth:\n        {\n          this.updateNearestDayOfMonth(dayOfMonth?.replace('W', ''));\n        }\n        break;\n\n      case this.TYPES.onTheChosenDayOfWeek:\n        {\n          const [lastChosenDayOfWeekValue2, onNumberOfWeekListValue] = dayOfWeek?.split('#') ?? [];\n          if (lastChosenDayOfWeekValue2 && onNumberOfWeekListValue)\n            this.updateLastChosenDayOfChosenWeek(onNumberOfWeekListValue, lastChosenDayOfWeekValue2);\n        }\n        break;\n\n      case this.TYPES.specifiedDayOfMonth:\n        {\n          this.updateSelectedDayOfMonth(dayOfMonth.split(','));\n        }\n        break;\n\n      case this.TYPES.lastChosenDaysOfMonth:\n        {\n          this.updateLastChosenDayOfMonth(dayOfMonth?.replace(/L-/g, ''));\n        }\n        break;\n\n      case this.TYPES.afterDayOfMonth:\n        {\n          const [afterDayOfMonthListDaysValue, afterDayOfMonthListRepeatDaysValue] =\n            dayOfMonth?.split('/') ?? [];\n          this.updateAfterDayOfMonth(afterDayOfMonthListRepeatDaysValue, afterDayOfMonthListDaysValue);\n        }\n        break;\n\n      case this.TYPES.afterDayOfWeek:\n        {\n          const [afterDayOfWeekListDayOfWeeksValue, afterDayOfWeekListDaysValue] =\n            dayOfWeek?.split('/') ?? [];\n          if (afterDayOfWeekListDayOfWeeksValue && afterDayOfWeekListDaysValue)\n            this.updateAfterDayOfWeek({ afterDayOfWeekListDaysValue, afterDayOfWeekListDayOfWeeksValue });\n        }\n        break;\n    }\n  }\n\n  protected override isBaseChanged(a: [string, string], b: [string, string]): boolean {\n    return a && b && a?.[0] === b?.[0] && a?.[1] === b?.[1];\n  }\n\n  public updateMainState(value: string): void {\n    this.cron.updateWith({\n      dayOfMonth: value,\n    });\n  }\n}\n","export class PrizmCronHRStringUtilities {\n  /**\n   * Takes a string with '%s' placeholders and replaces them with provided values.\n   * Works like sprintf in C or string.Format in C#.\n   * @static\n   * @param {string} template - The string template with enclosed %s replacements\n   * @param {...string[]} values - The ordered replacement text\n   * @returns {string}\n   */\n  public static format(template: string, ...values: string[]): string {\n    return template.replace(/%s/g, function (substring: string, ...args: any[]): string {\n      return values.shift() as string;\n    });\n  }\n\n  /**\n   *\n   * Given a string and an array of search strings, determines if the string\n   * contains any value from the array.\n   * @static\n   * @param {string} text - The string to search\n   * @param {string[]} searchStrings - The array of values to search for\n   * @returns {boolean}\n   */\n  public static containsAny(text: string, searchStrings: string[]): boolean {\n    return searchStrings.some(c => {\n      return text.indexOf(c) > -1;\n    });\n  }\n}\n","function assert(value: boolean, message: string) {\n  if (!value) {\n    throw new Error(message);\n  }\n}\n\nexport default class PrizmCronHRRangeValidator {\n  public static secondRange(parse: string) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const second = parseInt(parsed[i], 10);\n        assert(second >= 0 && second <= 59, 'seconds part must be >= 0 and <= 59');\n      }\n    }\n  }\n\n  public static minuteRange(parse: string) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const minute = parseInt(parsed[i], 10);\n        assert(minute >= 0 && minute <= 59, 'minutes part must be >= 0 and <= 59');\n      }\n    }\n  }\n\n  public static hourRange(parse: string) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const hour = parseInt(parsed[i], 10);\n        assert(hour >= 0 && hour <= 23, 'hours part must be >= 0 and <= 23');\n      }\n    }\n  }\n\n  public static dayOfMonthRange(parse: string) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const dayOfMonth = parseInt(parsed[i], 10);\n        assert(dayOfMonth >= 1 && dayOfMonth <= 31, 'DOM part must be >= 1 and <= 31');\n      }\n    }\n  }\n\n  public static monthRange(parse: string, monthStartIndexZero: boolean) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const month = parseInt(parsed[i], 10);\n        assert(\n          month >= 1 && month <= 12,\n          monthStartIndexZero ? 'month part must be >= 0 and <= 11' : 'month part must be >= 1 and <= 12'\n        );\n      }\n    }\n  }\n\n  public static dayOfWeekRange(parse: string, dayOfWeekStartIndexZero: boolean) {\n    const parsed = parse.split(',');\n    for (let i = 0; i < parsed.length; i++) {\n      if (!isNaN(parseInt(parsed[i], 10))) {\n        const dayOfWeek = parseInt(parsed[i], 10);\n        assert(\n          dayOfWeek >= 0 && dayOfWeek <= 7,\n          dayOfWeekStartIndexZero ? 'DOW part must be >= 0 and <= 6' : 'DOW part must be >= 1 and <= 7'\n        );\n      }\n    }\n  }\n}\n","import PrizmCronHRRangeValidator from './range-validator';\n\n/**\n * Parses and normalizes a cron expression\n * @export\n * @class PrizmCronHRParser\n */\nexport class PrizmCronHRParser {\n  expression: string;\n  dayOfWeekStartIndexZero: boolean;\n  monthStartIndexZero: boolean;\n\n  constructor(expression: string, dayOfWeekStartIndexZero = true, monthStartIndexZero = false) {\n    this.expression = expression;\n    this.dayOfWeekStartIndexZero = dayOfWeekStartIndexZero;\n    this.monthStartIndexZero = monthStartIndexZero;\n  }\n\n  /**\n   * Parses and normalizes a cron expression into an array of strings\n   * @returns {string[]}\n   */\n  public parse(): string[] {\n    const parsed = this.extractParts(this.expression);\n    this.normalize(parsed);\n    this.validate(parsed);\n\n    return parsed;\n  }\n\n  protected extractParts(expression: string) {\n    if (!this.expression) {\n      throw new Error('Expression is empty');\n    }\n\n    // split on one or more spaces\n    const parsed: string[] = expression.trim().split(/[ ]+/);\n\n    if (parsed.length < 5) {\n      throw new Error(\n        `Expression has only ${parsed.length} part${\n          parsed.length == 1 ? '' : 's'\n        }. At least 5 parts are required.`\n      );\n    } else if (parsed.length == 5) {\n      // 5 part cron so shift array past seconds element\n      parsed.unshift('');\n      parsed.push('');\n    } else if (parsed.length == 6) {\n      /* We will detect if this 6 part expression has a year specified and if so we will shift the parts and treat the\n        first part as a minute part rather than a second part.\n\n        Ways we detect:\n          1. Last part is a literal year (i.e. 2020)\n          2. 3rd or 5th part is specified as \"?\" (DOM or DOW)\n      */\n      const isYearWithNoSecondsPart = /\\d{4}$/.test(parsed[5]) || parsed[4] == '?' || parsed[2] == '?';\n\n      if (isYearWithNoSecondsPart) {\n        // year provided; shift parts over by one\n        parsed.unshift('');\n      } else {\n        // seconds provided\n        parsed.push('');\n      }\n    } else if (parsed.length > 7) {\n      throw new Error(`Expression has ${parsed.length} parts; too many!`);\n    }\n\n    return parsed;\n  }\n\n  protected normalize(expressionParts: string[]): void {\n    // Convert ? to * for DOM and DOW\n    expressionParts[3] = expressionParts[3].replace('?', '*');\n    expressionParts[5] = expressionParts[5].replace('?', '*');\n\n    // Convert ? to * for Hour. ? isn't valid for hour position but we can work around it.\n    expressionParts[2] = expressionParts[2].replace('?', '*');\n\n    // Convert 0/, 1/ to */\n    if (expressionParts[0].indexOf('0/') == 0) {\n      // Seconds\n      expressionParts[0] = expressionParts[0].replace('0/', '*/');\n    }\n\n    if (expressionParts[1].indexOf('0/') == 0) {\n      // Minutes\n      expressionParts[1] = expressionParts[1].replace('0/', '*/');\n    }\n\n    if (expressionParts[2].indexOf('0/') == 0) {\n      // Hours\n      expressionParts[2] = expressionParts[2].replace('0/', '*/');\n    }\n\n    if (expressionParts[3].indexOf('1/') == 0) {\n      // DOM\n      expressionParts[3] = expressionParts[3].replace('1/', '*/');\n    }\n\n    if (expressionParts[4].indexOf('1/') == 0) {\n      // Month\n      expressionParts[4] = expressionParts[4].replace('1/', '*/');\n    }\n\n    if (expressionParts[6].indexOf('1/') == 0) {\n      // Years\n      expressionParts[6] = expressionParts[6].replace('1/', '*/');\n    }\n\n    // Adjust DOW based on dayOfWeekStartIndexZero option\n    // Normalized DOW: 0=Sunday/6=Saturday\n    expressionParts[5] = expressionParts[5].replace(/(^\\d)|([^#/\\s]\\d)/g, t => {\n      // skip anything preceeded by # or /\n      const dowDigits = t.replace(/\\D/, ''); // extract digit part (i.e. if \"-2\" or \",2\", just take 2)\n      let dowDigitsAdjusted: string = dowDigits;\n\n      if (this.dayOfWeekStartIndexZero) {\n        // \"7\" also means Sunday so we will convert to \"0\" to normalize it\n        if (dowDigits == '7') {\n          dowDigitsAdjusted = '0';\n        }\n      } else {\n        // If dayOfWeekStartIndexZero==false, Sunday is specified as 1 and Saturday is specified as 7.\n        // To normalize, we will shift the  DOW number down so that 1 becomes 0, 2 becomes 1, and so on.\n        dowDigitsAdjusted = (parseInt(dowDigits) - 1).toString();\n      }\n\n      return t.replace(dowDigits, dowDigitsAdjusted);\n    });\n\n    // Convert DOW 'L' to '6' (Saturday)\n    if (expressionParts[5] == 'L') {\n      expressionParts[5] = '6';\n    }\n\n    // Convert DOM '?' to '*'\n    if (expressionParts[3] == '?') {\n      expressionParts[3] = '*';\n    }\n\n    if (\n      expressionParts[3].indexOf('W') > -1 &&\n      (expressionParts[3].indexOf(',') > -1 || expressionParts[3].indexOf('-') > -1)\n    ) {\n      throw new Error(\n        \"The 'W' character can be specified only when the day-of-month is a single day, not a range or list of days.\"\n      );\n    }\n\n    // Convert DOW SUN-SAT format to 0-6 format\n    const days: { [key: string]: number } = {\n      SUN: 1,\n      MON: 2,\n      TUE: 3,\n      WED: 4,\n      THU: 5,\n      FRI: 6,\n      SAT: 7,\n      // SUN: 0,\n      // MON: 1,\n      // TUE: 2,\n      // WED: 3,\n      // THU: 4,\n      // FRI: 5,\n      // SAT: 6,\n    };\n    for (const day in days) {\n      expressionParts[5] = expressionParts[5].replace(new RegExp(day, 'gi'), days[day].toString());\n    }\n\n    // Adjust month based on monthStartIndexZero option\n    // Normalized Month: 1=JAN/12=DEC\n    expressionParts[4] = expressionParts[4].replace(/(^\\d{1,2})|([^#/\\s]\\d{1,2})/g, t => {\n      // skip anything preceeded by # or /\n      const dowDigits = t.replace(/\\D/, ''); // extract digit part (i.e. if \"-2\" or \",2\", just take 2)\n      let dowDigitsAdjusted: string = dowDigits;\n\n      if (this.monthStartIndexZero) {\n        // if monthStartIndexZero==true, we will shift month number up so that JAN=1 and DEC=12\n        dowDigitsAdjusted = (parseInt(dowDigits) + 1).toString();\n      }\n\n      return t.replace(dowDigits, dowDigitsAdjusted);\n    });\n\n    // Convert JAN-DEC format to 1-12 format\n    const months: { [key: string]: number } = {\n      JAN: 1,\n      FEB: 2,\n      MAR: 3,\n      APR: 4,\n      MAY: 5,\n      JUN: 6,\n      JUL: 7,\n      AUG: 8,\n      SEP: 9,\n      OCT: 10,\n      NOV: 11,\n      DEC: 12,\n    };\n\n    for (const month in months) {\n      expressionParts[4] = expressionParts[4].replace(new RegExp(month, 'gi'), months[month].toString());\n    }\n\n    // Convert 0 second to (empty)\n    if (expressionParts[0] == '0') {\n      expressionParts[0] = '';\n    }\n\n    // If time increment or * (every) is specified for seconds or minutes and hours part is single item, make it a \"self-range\" so\n    // the expression can be interpreted as an increment / range.  This will allow us to easily interpret an hour part as 'between' a second or minute duration.\n    //     For example:\n    //     0-20/3 9 * * * => 0-20/3 9-9 * * * (9 => 9-9) => Every 3 minutes, minutes 0 through 20 past the hour, between 09:00 AM and 09:59 AM\n    //     */5 3 * * * => */5 3-3 * * * (3 => 3-3) => Every 5 minutes, between 03:00 AM and 03:59 AM\n    if (\n      !/\\*|-|,|\\//.test(expressionParts[2]) &&\n      (/\\*|\\//.test(expressionParts[1]) || /\\*|\\//.test(expressionParts[0]))\n    ) {\n      expressionParts[2] += `-${expressionParts[2]}`;\n    }\n\n    // Loop through all parts and apply global normalization\n    for (let i = 0; i < expressionParts.length; i++) {\n      // ignore empty characters around comma\n      // if nothing left, set it to *\n      if (expressionParts[i].indexOf(',') != -1) {\n        expressionParts[i] =\n          expressionParts[i]\n            .split(',')\n            .filter(str => str !== '')\n            .join(',') || '*';\n      }\n      // convert all '*/1' to '*'\n      if (expressionParts[i] == '*/1') {\n        expressionParts[i] = '*';\n      }\n\n      /* Convert Month,DOW,Year step values with a starting value (i.e. not '*') to range expressions.\n         This allows us to reuse the range expression handling for step values.\n\n           For example:\n           - month part '3/2' will be converted to '3-12/2' (every 2 months between March and December)\n           - DOW part '3/2' will be converted to '3-6/2' (every 2 days between Tuesday and Saturday)\n      */\n\n      if (expressionParts[i].indexOf('/') > -1 && !/^\\*|-|,/.test(expressionParts[i])) {\n        let stepRangeThrough: string | null = null;\n        switch (i) {\n          case 4:\n            stepRangeThrough = '12';\n            break;\n          case 5:\n            stepRangeThrough = '6';\n            break;\n          case 6:\n            // stepRangeThrough = '9999';\n            stepRangeThrough = null;\n            break;\n          default:\n            stepRangeThrough = null;\n            break;\n        }\n\n        if (stepRangeThrough !== null) {\n          const parts: string[] = expressionParts[i].split('/');\n          expressionParts[i] = `${parts[0]}-${stepRangeThrough}/${parts[1]}`;\n        }\n      }\n    }\n  }\n\n  protected validate(parsed: string[]) {\n    this.assertNoInvalidCharacters('DOW', parsed[5]);\n    this.assertNoInvalidCharacters('DOM', parsed[3]);\n    this.validateRange(parsed);\n  }\n\n  protected validateRange(parsed: string[]) {\n    PrizmCronHRRangeValidator.secondRange(parsed[0]);\n    PrizmCronHRRangeValidator.minuteRange(parsed[1]);\n    PrizmCronHRRangeValidator.hourRange(parsed[2]);\n    PrizmCronHRRangeValidator.dayOfMonthRange(parsed[3]);\n    PrizmCronHRRangeValidator.monthRange(parsed[4], this.monthStartIndexZero);\n    PrizmCronHRRangeValidator.dayOfWeekRange(parsed[5], this.dayOfWeekStartIndexZero);\n  }\n\n  protected assertNoInvalidCharacters(partDescription: string, expression: string) {\n    // No characters other than 'L' or 'W' should remain after normalization\n    const invalidChars = expression.match(/[A-KM-VX-Z]+/gi);\n    if (invalidChars && invalidChars.length) {\n      throw new Error(`${partDescription} part contains invalid values: '${invalidChars.toString()}'`);\n    }\n  }\n}\n","import { PrizmCronHRStringUtilities } from './string-utilities';\nimport { PrizmCronHRParser } from './cron-parser';\nimport { PrizmCronHROptions } from './options';\n\nimport { PrizmCronHRLocale } from './i18n/locale';\nimport { PrizmCronHRLocaleLoader } from './i18n/locale-loader';\n\nexport class PrizmCronHRExpressionDescriptor {\n  static locales: { [name: string]: PrizmCronHRLocale } = {};\n  static defaultLocale: string;\n  static specialCharacters: string[];\n\n  expression: string;\n  expressionParts: string[];\n  options: PrizmCronHROptions;\n  i18n: PrizmCronHRLocale;\n\n  /**\n   * Converts a cron expression into a description a human can read\n   * @static\n   * @param {string} expression - The cron expression\n   * @param {IOptions} [{\n   *         throwExceptionOnParseError = true,\n   *         casingType = CasingTypeEnum.Sentence,\n   *         verbose = false,\n   *         dayOfWeekStartIndexZero = true,\n   *         monthStartIndexZero = false,\n   *         use24HourTimeFormat = false,\n   *         locale = 'en'\n   *     }={}]\n   * @returns {string}\n   */\n  public static toString(\n    expression: string,\n    {\n      throwExceptionOnParseError = true,\n      verbose = false,\n      dayOfWeekStartIndexZero = true,\n      monthStartIndexZero = false,\n      use24HourTimeFormat,\n      locale = null,\n    }: PrizmCronHROptions = {}\n  ): string {\n    // We take advantage of Destructuring Object Parameters (and defaults) in TS/ES6 and now we will reassemble back to\n    // an Options type so we can pass around options with ease.\n\n    const options = <PrizmCronHROptions>{\n      throwExceptionOnParseError: throwExceptionOnParseError,\n      verbose: verbose,\n      dayOfWeekStartIndexZero: dayOfWeekStartIndexZero,\n      monthStartIndexZero: monthStartIndexZero,\n      use24HourTimeFormat: use24HourTimeFormat,\n      locale: locale,\n    };\n\n    const descripter = new PrizmCronHRExpressionDescriptor(expression, options);\n    return descripter.getFullDescription();\n  }\n\n  public static initialize(localesLoader: PrizmCronHRLocaleLoader, defaultLocale = 'en') {\n    PrizmCronHRExpressionDescriptor.specialCharacters = ['/', '-', ',', '*'];\n    PrizmCronHRExpressionDescriptor.defaultLocale = defaultLocale;\n\n    // Load locales\n    localesLoader.load(PrizmCronHRExpressionDescriptor.locales);\n  }\n\n  constructor(expression: string, options: PrizmCronHROptions) {\n    this.expression = expression;\n    this.options = options;\n    this.expressionParts = new Array(5);\n\n    if (!this.options.locale && PrizmCronHRExpressionDescriptor.defaultLocale) {\n      this.options.locale = PrizmCronHRExpressionDescriptor.defaultLocale;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    if (!PrizmCronHRExpressionDescriptor.locales[this.options!.locale!]) {\n      const fallBackLocale = Object.keys(PrizmCronHRExpressionDescriptor.locales)[0];\n      // fall back to English\n      console.warn(\n        `Locale '${this.options.locale}' could not be found; falling back to '${fallBackLocale}'.`\n      );\n\n      this.options.locale = fallBackLocale;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.i18n = PrizmCronHRExpressionDescriptor.locales[this.options!.locale!];\n\n    if (options.use24HourTimeFormat === undefined) {\n      // if use24HourTimeFormat not specified, set based on locale default\n      options.use24HourTimeFormat = this.i18n.use24HourTimeFormatByDefault();\n    }\n  }\n\n  protected getFullDescription() {\n    let description = '';\n\n    try {\n      const parser = new PrizmCronHRParser(\n        this.expression,\n        this.options.dayOfWeekStartIndexZero,\n        this.options.monthStartIndexZero\n      );\n      this.expressionParts = parser.parse();\n      const timeSegment = this.getTimeOfDayDescription();\n      const dayOfMonthDesc = this.getDayOfMonthDescription();\n      const monthDesc = this.getMonthDescription();\n      const dayOfWeekDesc = this.getDayOfWeekDescription();\n\n      const yearDesc = this.getYearDescription();\n\n      description += timeSegment + dayOfMonthDesc + dayOfWeekDesc + monthDesc + yearDesc;\n      description = this.transformVerbosity(description, !!this.options.verbose);\n\n      // uppercase first character\n      description = description.charAt(0).toLocaleUpperCase() + description.substr(1);\n    } catch (ex) {\n      if (!this.options.throwExceptionOnParseError) {\n        description = this.i18n.anErrorOccuredWhenGeneratingTheExpressionD();\n      } else {\n        throw `${ex}`;\n      }\n    }\n    return description;\n  }\n\n  protected getTimeOfDayDescription() {\n    const secondsExpression: string = this.expressionParts[0];\n    const minuteExpression: string = this.expressionParts[1];\n    const hourExpression: string = this.expressionParts[2];\n\n    let description = '';\n\n    // handle special cases first\n    if (\n      !PrizmCronHRStringUtilities.containsAny(\n        minuteExpression,\n        PrizmCronHRExpressionDescriptor.specialCharacters\n      ) &&\n      !PrizmCronHRStringUtilities.containsAny(\n        hourExpression,\n        PrizmCronHRExpressionDescriptor.specialCharacters\n      ) &&\n      !PrizmCronHRStringUtilities.containsAny(\n        secondsExpression,\n        PrizmCronHRExpressionDescriptor.specialCharacters\n      )\n    ) {\n      // specific time of day (i.e. 10 14)\n      description +=\n        this.i18n.atSpace() + this.formatTime(hourExpression, minuteExpression, secondsExpression);\n    } else if (\n      !secondsExpression &&\n      minuteExpression.indexOf('-') > -1 &&\n      !(minuteExpression.indexOf(',') > -1) &&\n      !(minuteExpression.indexOf('/') > -1) &&\n      !PrizmCronHRStringUtilities.containsAny(\n        hourExpression,\n        PrizmCronHRExpressionDescriptor.specialCharacters\n      )\n    ) {\n      // minute range in single hour (i.e. 0-10 11)\n      const minuteParts: string[] = minuteExpression.split('-');\n      description += PrizmCronHRStringUtilities.format(\n        this.i18n.everyMinuteBetweenX0AndX1(),\n        this.formatTime(hourExpression, minuteParts[0], ''),\n        this.formatTime(hourExpression, minuteParts[1], '')\n      );\n    } else if (\n      !secondsExpression &&\n      hourExpression.indexOf(',') > -1 &&\n      hourExpression.indexOf('-') == -1 &&\n      hourExpression.indexOf('/') == -1 &&\n      !PrizmCronHRStringUtilities.containsAny(\n        minuteExpression,\n        PrizmCronHRExpressionDescriptor.specialCharacters\n      )\n    ) {\n      // hours list with single minute (i.e. 30 6,14,16)\n      const hourParts: string[] = hourExpression.split(',');\n      description += this.i18n.at();\n\n      for (let i = 0; i < hourParts.length; i++) {\n        description += ' ';\n        description += this.formatTime(hourParts[i], minuteExpression, '');\n\n        if (i < hourParts.length - 2) {\n          description += ',';\n        }\n\n        if (i == hourParts.length - 2) {\n          description += this.i18n.spaceAnd();\n        }\n      }\n    } else {\n      // default time description\n      const secondsDescription = this.getSecondsDescription();\n      const minutesDescription = this.getMinutesDescription();\n      const hoursDescription = this.getHoursDescription();\n\n      description += secondsDescription;\n\n      if (description && minutesDescription) {\n        description += ', ';\n      }\n\n      description += minutesDescription;\n\n      if (minutesDescription === hoursDescription) {\n        return description;\n      }\n\n      if (description && hoursDescription) {\n        description += ', ';\n      }\n\n      description += hoursDescription;\n    }\n\n    return description;\n  }\n\n  protected getSecondsDescription() {\n    const description: string | null = this.getSegmentDescription(\n      this.expressionParts[0],\n      this.i18n.everySecond(),\n      s => {\n        return s;\n      },\n      s => {\n        return PrizmCronHRStringUtilities.format(this.i18n.everyX0Seconds(s), s);\n      },\n      s => {\n        return this.i18n.secondsX0ThroughX1PastTheMinute();\n      },\n      s => {\n        return s == '0'\n          ? ''\n          : parseInt(s) < 20\n          ? this.i18n.atX0SecondsPastTheMinute(s)\n          : this.i18n.atX0SecondsPastTheMinuteGt20() || this.i18n.atX0SecondsPastTheMinute(s);\n      }\n    );\n\n    return description;\n  }\n\n  protected getMinutesDescription() {\n    const secondsExpression = this.expressionParts[0];\n    const hourExpression = this.expressionParts[2];\n    const description: string | null = this.getSegmentDescription(\n      this.expressionParts[1],\n      this.i18n.everyMinute(),\n      s => {\n        return s;\n      },\n      s => {\n        return PrizmCronHRStringUtilities.format(this.i18n.everyX0Minutes(s), s);\n      },\n      s => {\n        return this.i18n.minutesX0ThroughX1PastTheHour();\n      },\n      s => {\n        try {\n          return s == '0' && hourExpression.indexOf('/') == -1 && secondsExpression == ''\n            ? this.i18n.everyHour()\n            : parseInt(s) < 20\n            ? this.i18n.atX0MinutesPastTheHour(s)\n            : this.i18n.atX0MinutesPastTheHourGt20() || this.i18n.atX0MinutesPastTheHour(s);\n        } catch (e) {\n          return this.i18n.atX0MinutesPastTheHour(s);\n        }\n      }\n    );\n\n    return description;\n  }\n\n  protected getHoursDescription() {\n    const expression = this.expressionParts[2];\n    let description = this.getSegmentDescription(\n      expression,\n      this.i18n.everyHour(),\n      s => {\n        return this.formatTime(s, '0', '');\n      },\n      s => {\n        return PrizmCronHRStringUtilities.format(this.i18n.everyX0Hours(s), s);\n      },\n      s => {\n        return this.i18n.betweenX0AndX1();\n      },\n      s => {\n        return this.i18n.atX0();\n      }\n    );\n\n    // If this is an hour range and minute segment is not \"on the hour\" (0), we'll change the second hour part from :00 to :59\n    if (description && expression.includes('-') && this.expressionParts[1] != '0') {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const atTheHourMatches = Array.from(description.matchAll(/:00/g));\n      if (atTheHourMatches.length > 1) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const lastAtTheHourMatchIndex = atTheHourMatches[atTheHourMatches.length - 1].index;\n        description =\n          description.substring(0, lastAtTheHourMatchIndex) +\n          ':59' +\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          description.substring(lastAtTheHourMatchIndex! + 3);\n      }\n    }\n\n    return description;\n  }\n\n  protected getDayOfWeekDescription() {\n    const daysOfWeekNames = this.i18n.daysOfTheWeek();\n    let description: string | null = null;\n    if (this.expressionParts[5] == '*') {\n      // DOW is specified as * so we will not generate a description and defer to DOM part.\n      // Otherwise, we could get a contradiction like \"on day 1 of the month, every day\"\n      // or a dupe description like \"every day, every day\".\n      description = '';\n    } else {\n      description = this.getSegmentDescription(\n        this.expressionParts[5],\n        this.i18n.commaEveryDay(),\n        (s, form) => {\n          let exp: string = s;\n          if (s.indexOf('#') > -1) {\n            exp = s.substring(0, s.indexOf('#'));\n          } else if (s.indexOf('L') > -1) {\n            exp = exp.replace('L', '');\n          }\n\n          // потому начинаются дни с субботы под номером 1\n          const incrementNumber = +exp - 1;\n          const newExp = incrementNumber === -1 ? 6 : incrementNumber;\n\n          let description = this.i18n.daysOfTheWeekInCase\n            ? this.i18n.daysOfTheWeekInCase(form)[newExp]\n            : daysOfWeekNames[newExp];\n\n          if (s.indexOf('#') > -1) {\n            let dayOfWeekOfMonthDescription: string | null = null;\n            const dayOfWeekOfMonthNumber: string = s.substring(s.indexOf('#') + 1);\n            const dayOfWeekNumber = s.substring(0, s.indexOf('#'));\n            switch (dayOfWeekOfMonthNumber) {\n              case '1':\n                dayOfWeekOfMonthDescription = this.i18n.first(dayOfWeekNumber);\n                break;\n              case '2':\n                dayOfWeekOfMonthDescription = this.i18n.second(dayOfWeekNumber);\n                break;\n              case '3':\n                dayOfWeekOfMonthDescription = this.i18n.third(dayOfWeekNumber);\n                break;\n              case '4':\n                dayOfWeekOfMonthDescription = this.i18n.fourth(dayOfWeekNumber);\n                break;\n              case '5':\n                dayOfWeekOfMonthDescription = this.i18n.fifth(dayOfWeekNumber);\n                break;\n            }\n            description = dayOfWeekOfMonthDescription + ' ' + description;\n          }\n\n          return description;\n        },\n        s => {\n          if (parseInt(s) == 1) {\n            // rather than \"every 1 days\" just return empty string\n            return '';\n          } else {\n            return PrizmCronHRStringUtilities.format(this.i18n.commaEveryX0DaysOfTheWeek(s), s);\n          }\n        },\n        s => {\n          // If both DOM and DOW are specified, the cron will execute at either time.\n          const beginFrom = s.substring(0, s.indexOf('-'));\n\n          const domSpecified = this.expressionParts[3] != '*';\n          return domSpecified\n            ? this.i18n.commaAndX0ThroughX1(beginFrom)\n            : this.i18n.commaX0ThroughX1(beginFrom);\n        },\n        s => {\n          let format: string | null = null;\n          if (s.indexOf('#') > -1) {\n            const dayOfWeekOfMonthNumber: string = s.substring(s.indexOf('#') + 1);\n            format = this.i18n.commaOnThe(dayOfWeekOfMonthNumber).trim() + this.i18n.spaceX0OfTheMonth();\n          } else if (s.indexOf('L') > -1) {\n            format = this.i18n.commaOnTheLastX0OfTheMonth(s.replace('L', ''));\n          } else {\n            // If both DOM and DOW are specified, the cron will execute at either time.\n            const domSpecified = this.expressionParts[3] != '*';\n            format = domSpecified ? this.i18n.commaAndOnX0() : this.i18n.commaOnlyOnX0(s);\n          }\n\n          return format;\n        }\n      );\n    }\n    if (this.i18n.clear && description) description = this.i18n.clear(description);\n\n    return description;\n  }\n\n  protected getMonthDescription() {\n    const monthNames = this.i18n.monthsOfTheYear();\n\n    return this.getSegmentDescription(\n      this.expressionParts[4],\n      '',\n      (s, form) => {\n        return form && this.i18n.monthsOfTheYearInCase\n          ? this.i18n.monthsOfTheYearInCase(form)[parseInt(s) - 1]\n          : monthNames[parseInt(s) - 1];\n      },\n      s => {\n        //\n        if (parseInt(s) == 1) {\n          // rather than \"every 1 months\" just return empty string\n          return '';\n        } else {\n          return PrizmCronHRStringUtilities.format(this.i18n.commaEveryX0Months(s), s);\n        }\n      },\n      s => {\n        return this.i18n.commaMonthX0ThroughMonthX1() || this.i18n.commaX0ThroughX1();\n      },\n      s => {\n        return this.i18n.commaOnlyInMonthX0 ? this.i18n.commaOnlyInMonthX0() : this.i18n.commaOnlyInX0();\n      }\n    );\n  }\n\n  protected getDayOfMonthDescription(): string | null {\n    let description: string | null = null;\n    const expression: string = this.expressionParts[3];\n\n    switch (expression) {\n      case 'L':\n        description = this.i18n.commaOnTheLastDayOfTheMonth();\n        break;\n      case 'WL':\n      case 'LW':\n        description = this.i18n.commaOnTheLastWeekdayOfTheMonth();\n        break;\n      default: // i.e. 3W or W2\n        // eslint-disable-next-line no-case-declarations\n        const weekDayNumberMatches = expression.match(/(\\d{1,2}W)|(W\\d{1,2})/);\n        if (weekDayNumberMatches) {\n          const dayNumber: number = parseInt(weekDayNumberMatches[0].replace('W', ''));\n          const dayString: string =\n            dayNumber == 1\n              ? this.i18n.firstWeekday()\n              : PrizmCronHRStringUtilities.format(this.i18n.weekdayNearestDayX0(), dayNumber.toString());\n          description = PrizmCronHRStringUtilities.format(this.i18n.commaOnTheX0OfTheMonth(), dayString);\n\n          break;\n        } else {\n          // Handle \"last day offset\" (i.e. L-5:  \"5 days before the last day of the month\")\n          const lastDayOffSetMatches = expression.match(/L-(\\d{1,2})/);\n          if (lastDayOffSetMatches) {\n            const offSetDays = lastDayOffSetMatches[1];\n            description = PrizmCronHRStringUtilities.format(\n              this.i18n.commaDaysBeforeTheLastDayOfTheMonth(offSetDays),\n              offSetDays\n            );\n            break;\n          } else if (expression == '*' && this.expressionParts[5] != '*') {\n            // * dayOfMonth and dayOfWeek specified so use dayOfWeek verbiage instead\n            return '';\n          } else {\n            description = this.getSegmentDescription(\n              expression,\n              this.i18n.commaEveryDay(),\n              s => {\n                return s == 'L'\n                  ? this.i18n.lastDay()\n                  : this.i18n.dayX0\n                  ? PrizmCronHRStringUtilities.format(this.i18n.dayX0(), s)\n                  : s;\n              },\n              s => {\n                return s == '1' ? this.i18n.commaEveryDay() : this.i18n.commaEveryX0Days(s);\n              },\n              s => {\n                return this.i18n.commaBetweenDayX0AndX1OfTheMonth(s);\n              },\n              s => {\n                return this.i18n.commaOnDayX0OfTheMonth(s);\n              }\n            );\n          }\n          break;\n        }\n    }\n\n    return description;\n  }\n\n  protected getYearDescription() {\n    return this.getSegmentDescription(\n      this.expressionParts[6],\n      '',\n      s => {\n        return /^\\d+$/.test(s) ? new Date(parseInt(s), 1).getFullYear().toString() : s;\n      },\n      s => {\n        return PrizmCronHRStringUtilities.format(this.i18n.commaEveryX0Years(s), s);\n      },\n      s => {\n        return this.i18n.commaYearX0ThroughYearX1() || this.i18n.commaX0ThroughX1();\n      },\n      s => {\n        return this.i18n.commaOnlyInYearX0 ? this.i18n.commaOnlyInYearX0() : this.i18n.commaOnlyInX0();\n      }\n    );\n  }\n\n  protected getSegmentDescription(\n    expression: string,\n    allDescription: string,\n    getSingleItemDescription: (t: string, form?: number) => string,\n    getIncrementDescriptionFormat: (t: string) => string,\n    getRangeDescriptionFormat: (t: string) => string,\n    getDescriptionFormat: (t: string) => string\n  ): string | null {\n    let description: string | null = null;\n    const doesExpressionContainIncrement = expression.indexOf('/') > -1;\n    const doesExpressionContainRange = expression.indexOf('-') > -1;\n    const doesExpressionContainMultipleValues = expression.indexOf(',') > -1;\n\n    if (!expression) {\n      // Empty\n      description = '';\n    } else if (expression === '*') {\n      // * (All)\n      description = allDescription;\n    } else if (\n      !doesExpressionContainIncrement &&\n      !doesExpressionContainRange &&\n      !doesExpressionContainMultipleValues\n    ) {\n      // Simple\n      description = PrizmCronHRStringUtilities.format(\n        getDescriptionFormat(expression),\n        getSingleItemDescription(expression)\n      );\n    } else if (doesExpressionContainMultipleValues) {\n      // Multiple Values\n\n      const segments: string[] = expression.split(',');\n      let descriptionContent = '';\n      for (let i = 0; i < segments.length; i++) {\n        if (i > 0 && segments.length > 2) {\n          descriptionContent += ',';\n\n          if (i < segments.length - 1) {\n            descriptionContent += ' ';\n          }\n        }\n\n        if (i > 0 && segments.length > 1 && (i == segments.length - 1 || segments.length == 2)) {\n          descriptionContent += `${this.i18n.spaceAnd()} `;\n        }\n\n        if (segments[i].indexOf('/') > -1 || segments[i].indexOf('-') > -1) {\n          // Multiple Values with Increment or Range\n\n          const isSegmentRangeWithoutIncrement =\n            segments[i].indexOf('-') > -1 && segments[i].indexOf('/') == -1;\n\n          let currentDescriptionContent = this.getSegmentDescription(\n            segments[i],\n            allDescription,\n            getSingleItemDescription,\n            getIncrementDescriptionFormat,\n            isSegmentRangeWithoutIncrement ? this.i18n.commaX0ThroughX1 : getRangeDescriptionFormat,\n            getDescriptionFormat\n          );\n\n          if (isSegmentRangeWithoutIncrement) {\n            currentDescriptionContent = currentDescriptionContent?.replace(', ', '') as any;\n          }\n\n          descriptionContent += currentDescriptionContent;\n        } else if (!doesExpressionContainIncrement) {\n          descriptionContent += getSingleItemDescription(segments[i]);\n        } else {\n          descriptionContent += this.getSegmentDescription(\n            segments[i],\n            allDescription,\n            getSingleItemDescription,\n            getIncrementDescriptionFormat,\n            getRangeDescriptionFormat,\n            getDescriptionFormat\n          );\n        }\n      }\n\n      if (!doesExpressionContainIncrement) {\n        description = PrizmCronHRStringUtilities.format(getDescriptionFormat(expression), descriptionContent);\n      } else {\n        description = descriptionContent;\n      }\n    } else if (doesExpressionContainIncrement) {\n      // Increment\n\n      const segments: string[] = expression.split('/');\n      description = PrizmCronHRStringUtilities.format(\n        getIncrementDescriptionFormat(segments[1]),\n        segments[1]\n      );\n\n      if (segments[0].indexOf('-') > -1) {\n        // Range with Increment (ex: 2-59/3 )\n\n        const rangeSegmentDescription: string = this.generateRangeSegmentDescription(\n          segments[0],\n          getRangeDescriptionFormat,\n          getSingleItemDescription\n        );\n\n        if (rangeSegmentDescription.indexOf(', ') != 0) {\n          description += ', ';\n        }\n\n        description += rangeSegmentDescription;\n      } else if (segments[0].indexOf('*') == -1) {\n        let rangeItemDescription: string = PrizmCronHRStringUtilities.format(\n          getDescriptionFormat(segments[0]),\n          getSingleItemDescription(segments[0])\n        );\n\n        // remove any leading comma\n        rangeItemDescription = rangeItemDescription.replace(', ', '');\n\n        description += PrizmCronHRStringUtilities.format(this.i18n.commaStartingX0(), rangeItemDescription);\n      }\n    } else if (doesExpressionContainRange) {\n      // Range\n\n      description = this.generateRangeSegmentDescription(\n        expression,\n        getRangeDescriptionFormat,\n        getSingleItemDescription\n      );\n    }\n\n    return description;\n  }\n\n  protected generateRangeSegmentDescription(\n    rangeExpression: string,\n    getRangeDescriptionFormat: (t: string) => string,\n    getSingleItemDescription: (t: string, form?: number) => string\n  ): string {\n    let description = '';\n    const rangeSegments: string[] = rangeExpression.split('-');\n    const rangeSegment1Description: string = getSingleItemDescription(rangeSegments[0], 1);\n    const rangeSegment2Description: string = getSingleItemDescription(rangeSegments[1], 2);\n    const rangeDescriptionFormat = getRangeDescriptionFormat(rangeExpression);\n    description += PrizmCronHRStringUtilities.format(\n      rangeDescriptionFormat,\n      rangeSegment1Description,\n      rangeSegment2Description\n    );\n\n    return description;\n  }\n\n  protected formatTime(hourExpression: string, minuteExpression: string, secondExpression: string) {\n    let hour: number = parseInt(hourExpression);\n    let period = '';\n    let setPeriodBeforeTime = false;\n    if (!this.options.use24HourTimeFormat) {\n      setPeriodBeforeTime = !!(this.i18n.setPeriodBeforeTime && this.i18n.setPeriodBeforeTime());\n      period = setPeriodBeforeTime ? `${this.getPeriod(hour)} ` : ` ${this.getPeriod(hour)}`;\n      if (hour > 12) {\n        hour -= 12;\n      }\n      if (hour === 0) {\n        hour = 12;\n      }\n    }\n\n    const minute = minuteExpression;\n    let second = '';\n    if (secondExpression) {\n      second = `:${('00' + secondExpression).substring(secondExpression.length)}`;\n    }\n\n    return `${setPeriodBeforeTime ? period : ''}${('00' + hour.toString()).substring(\n      hour.toString().length\n    )}:${('00' + minute.toString()).substring(minute.toString().length)}${second}${\n      !setPeriodBeforeTime ? period : ''\n    }`;\n  }\n\n  protected transformVerbosity(description: string, useVerboseFormat: boolean) {\n    if (!useVerboseFormat) {\n      description = description.replace(new RegExp(`, ${this.i18n.everyMinute()}`, 'g'), '');\n      description = description.replace(new RegExp(`, ${this.i18n.everyHour()}`, 'g'), '');\n      description = description.replace(new RegExp(this.i18n.commaEveryDay(), 'g'), '');\n      description = description.replace(/, ?$/, '');\n    }\n    return description;\n  }\n\n  private getPeriod(hour: number): string {\n    return hour >= 12 ? (this.i18n.pm && this.i18n.pm()) || 'PM' : (this.i18n.am && this.i18n.am()) || 'AM';\n  }\n}\n","// English\n\nimport { PrizmCronHRLocale } from '../locale';\nexport class en implements PrizmCronHRLocale {\n  public atX0SecondsPastTheMinuteGt20(): string | null {\n    return null;\n  }\n  public atX0MinutesPastTheHourGt20(): string | null {\n    return null;\n  }\n  public commaMonthX0ThroughMonthX1(): string | null {\n    return null;\n  }\n  public commaYearX0ThroughYearX1(): string | null {\n    return null;\n  }\n\n  public use24HourTimeFormatByDefault() {\n    return false;\n  }\n\n  public anErrorOccuredWhenGeneratingTheExpressionD() {\n    return 'An error occured when generating the expression description.  Check the cron expression syntax.';\n  }\n  public everyMinute() {\n    return 'every minute';\n  }\n  public everyHour() {\n    return 'every hour';\n  }\n  public atSpace() {\n    return 'At ';\n  }\n  public everyMinuteBetweenX0AndX1() {\n    return 'Every minute between %s and %s';\n  }\n  public at() {\n    return 'At';\n  }\n  public spaceAnd() {\n    return ' and';\n  }\n  public everySecond() {\n    return 'every second';\n  }\n  public everyX0Seconds() {\n    return 'every %s seconds';\n  }\n  public secondsX0ThroughX1PastTheMinute() {\n    return 'seconds %s through %s past the minute';\n  }\n  public atX0SecondsPastTheMinute() {\n    return 'at %s seconds past the minute';\n  }\n  public everyX0Minutes() {\n    return 'every %s minutes';\n  }\n  public minutesX0ThroughX1PastTheHour() {\n    return 'minutes %s through %s past the hour';\n  }\n  public atX0MinutesPastTheHour() {\n    return 'at %s minutes past the hour';\n  }\n  public everyX0Hours() {\n    return 'every %s hours';\n  }\n  public betweenX0AndX1() {\n    return 'between %s and %s';\n  }\n  public atX0() {\n    return 'at %s';\n  }\n  public commaEveryDay() {\n    return ', every day';\n  }\n  public commaEveryX0DaysOfTheWeek() {\n    return ', every %s days of the week';\n  }\n  public commaX0ThroughX1() {\n    return ', %s through %s';\n  }\n  public commaAndX0ThroughX1() {\n    return ', %s through %s';\n  }\n  public first() {\n    return 'first';\n  }\n  public second() {\n    return 'second';\n  }\n  public third() {\n    return 'third';\n  }\n  public fourth() {\n    return 'fourth';\n  }\n  public fifth() {\n    return 'fifth';\n  }\n  public commaOnThe() {\n    return ', on the ';\n  }\n  public spaceX0OfTheMonth() {\n    return ' %s of the month';\n  }\n  public lastDay() {\n    return 'the last day';\n  }\n  public commaOnTheLastX0OfTheMonth() {\n    return ', on the last %s of the month';\n  }\n  public commaOnlyOnX0() {\n    return ', only on %s';\n  }\n  public commaAndOnX0() {\n    return ', and on %s';\n  }\n  public commaEveryX0Months() {\n    return ', every %s months';\n  }\n  public commaOnlyInX0() {\n    return ', only in %s';\n  }\n  public commaOnTheLastDayOfTheMonth() {\n    return ', on the last day of the month';\n  }\n  public commaOnTheLastWeekdayOfTheMonth() {\n    return ', on the last weekday of the month';\n  }\n  public commaDaysBeforeTheLastDayOfTheMonth() {\n    return ', %s days before the last day of the month';\n  }\n  public firstWeekday() {\n    return 'first weekday';\n  }\n  public weekdayNearestDayX0() {\n    return 'weekday nearest day %s';\n  }\n  public commaOnTheX0OfTheMonth() {\n    return ', on the %s of the month';\n  }\n  public commaEveryX0Days() {\n    return ', every %s days';\n  }\n  public commaBetweenDayX0AndX1OfTheMonth() {\n    return ', between day %s and %s of the month';\n  }\n  public commaOnDayX0OfTheMonth() {\n    return ', on day %s of the month';\n  }\n  public commaEveryHour() {\n    return ', every hour';\n  }\n  public commaEveryX0Years(s?: string) {\n    if (s === '1') return '';\n    return ', every %s years';\n  }\n  public commaStartingX0() {\n    return ', starting %s';\n  }\n  public daysOfTheWeek() {\n    return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  }\n  public monthsOfTheYear() {\n    return [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n  }\n}\n","// Russian\n\nimport { PrizmCronHRLocale } from '../locale';\n\nconst getPhraseByNumber = (str: string | undefined, words: Array<string>) => {\n  const number = Number(str);\n  return number !== undefined\n    ? words[\n        number % 100 > 4 && number % 100 < 20\n          ? 2\n          : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? Math.abs(number) % 10 : 5]\n      ]\n    : words[2];\n};\nconst getPhraseByDayOfWeek = (str: string | undefined, words: Array<string>) => {\n  const number = Number(str);\n  return number !== undefined\n    ? words[number === 0 ? 0 : number === 1 || number === 2 || number === 4 ? 1 : 2]\n    : words[1];\n};\n\nexport class ru implements PrizmCronHRLocale {\n  public atX0SecondsPastTheMinuteGt20(): string | null {\n    return null;\n  }\n  public atX0MinutesPastTheHourGt20(): string | null {\n    return null;\n  }\n  public commaMonthX0ThroughMonthX1(): string | null {\n    return null;\n  }\n  public commaYearX0ThroughYearX1(): string | null {\n    return null;\n  }\n  public use24HourTimeFormatByDefault() {\n    return true;\n  }\n  public everyMinute() {\n    return 'каждую минуту';\n  }\n  public everyHour() {\n    return 'каждый час';\n  }\n  public anErrorOccuredWhenGeneratingTheExpressionD() {\n    return 'Произошла ошибка во время генерации описания выражения. Проверьте синтаксис крон-выражения.';\n  }\n  public atSpace() {\n    return 'В ';\n  }\n  public everyMinuteBetweenX0AndX1() {\n    return 'Каждую минуту с %s по %s';\n  }\n  public at() {\n    return 'В';\n  }\n  public spaceAnd() {\n    return ' и';\n  }\n  public everySecond() {\n    return 'каждую секунду';\n  }\n  public everyX0Seconds(s?: string) {\n    return getPhraseByNumber(s, ['каждую %s секунду', 'каждые %s секунды', 'каждые %s секунд']);\n  }\n  public secondsX0ThroughX1PastTheMinute() {\n    return 'секунды с %s по %s';\n  }\n  public atX0SecondsPastTheMinute(s?: string) {\n    return getPhraseByNumber(s, ['в %s секунду', 'в %s секунды', 'в %s секунд']);\n  }\n  public everyX0Minutes(s?: string) {\n    return getPhraseByNumber(s, ['каждую %s минуту', 'каждые %s минуты', 'каждые %s минут']);\n  }\n  public minutesX0ThroughX1PastTheHour() {\n    return 'минуты с %s по %s';\n  }\n  public atX0MinutesPastTheHour(s?: string) {\n    return getPhraseByNumber(s, ['в %s минуту', 'в %s минуты', 'в %s минут']);\n  }\n  public everyX0Hours(s?: string) {\n    return getPhraseByNumber(s, ['каждый %s час', 'каждые %s часа', 'каждые %s часов']);\n  }\n  public betweenX0AndX1() {\n    return 'с %s по %s';\n  }\n  public atX0() {\n    return 'в %s';\n  }\n  public commaEveryDay() {\n    return ', каждый день';\n  }\n  public commaEveryX0DaysOfTheWeek(s?: string) {\n    return getPhraseByNumber(s, ['', ', каждые %s дня недели', ', каждые %s дней недели']);\n  }\n  public commaX0ThroughX1(s?: string) {\n    return s && (s[0] == '2' || s[0] == '3') ? ', со %s по %s' : ', с %s по %s';\n  }\n  public commaAndX0ThroughX1(s?: string) {\n    return s && (s[0] == '2' || s[0] == '3') ? ' и со %s по %s' : ' и с %s по %s';\n  }\n  public first(s?: string) {\n    return getPhraseByDayOfWeek(s, ['первое', 'первый', 'первую']);\n  }\n  public clear(fullDescription: string) {\n    return fullDescription.replace('по пятницу', '');\n  }\n  public second(s?: string) {\n    return getPhraseByDayOfWeek(s, ['второе', 'второй', 'вторую']);\n  }\n  public third(s?: string) {\n    return getPhraseByDayOfWeek(s, ['третье', 'третий', 'третью']);\n  }\n  public fourth(s?: string) {\n    return getPhraseByDayOfWeek(s, ['четвертое', 'четвертый', 'четвертую']);\n  }\n  public fifth(s?: string) {\n    return getPhraseByDayOfWeek(s, ['пятое', 'пятый', 'пятую']);\n  }\n  public commaOnThe(s?: string) {\n    return s === '2' ? ', во ' : ', в ';\n  }\n  public spaceX0OfTheMonth() {\n    return ' %s месяца';\n  }\n  public lastDay() {\n    return 'последний день';\n  }\n  public commaOnTheLastX0OfTheMonth(s?: string) {\n    return getPhraseByDayOfWeek(s, [\n      ', в последнее %s месяца',\n      ', в последний %s месяца',\n      ', в последнюю %s месяца',\n    ]);\n  }\n  public commaOnlyOnX0(s?: string) {\n    return s && s[0] === '2' ? ', только во %s' : ', только в %s';\n  }\n  public commaAndOnX0() {\n    return ', и %s';\n  }\n  public commaEveryX0Months(s?: string) {\n    return getPhraseByNumber(s, ['', ' каждые %s месяца', ' каждые %s месяцев']);\n  }\n  public commaOnlyInMonthX0() {\n    return ', только %s';\n  }\n  public commaOnlyInX0() {\n    return ', только в %s';\n  }\n  public commaOnTheLastDayOfTheMonth() {\n    return ', в последний день месяца';\n  }\n  public commaOnTheLastWeekdayOfTheMonth() {\n    return ', в последний рабочий день месяца';\n  }\n  public commaDaysBeforeTheLastDayOfTheMonth(s?: string) {\n    return getPhraseByNumber(s, [\n      ', за %s день до конца месяца',\n      ', за %s дня до конца месяца',\n      ', за %s дней до конца месяца',\n    ]);\n  }\n  public firstWeekday() {\n    return 'первый рабочий день';\n  }\n  public weekdayNearestDayX0() {\n    return 'ближайший рабочий день к %s числу';\n  }\n  public commaOnTheX0OfTheMonth() {\n    return ', в %s месяца';\n  }\n  public commaEveryX0Days(s?: string) {\n    return getPhraseByNumber(s, [', каждый %s день', ', каждые %s дня', ', каждые %s дней']);\n  }\n  public commaBetweenDayX0AndX1OfTheMonth(s?: string) {\n    return s && s.substring(0, s.indexOf('-')) == '2'\n      ? ', со %s по %s число месяца'\n      : ', с %s по %s число месяца';\n  }\n  public commaOnDayX0OfTheMonth(s?: string) {\n    return s && s[0] == '2' ? ', во %s число месяца' : ', в %s число месяца';\n  }\n  public commaEveryX0Years(s?: string) {\n    if (s === '1') return '';\n    return ', каждый %s год';\n    // return getPhraseByNumber(s, [', каждый %s год', ', каждые %s года', ', каждые %s лет']);\n  }\n  public commaStartingX0() {\n    return ', начало %s';\n  }\n  public daysOfTheWeek() {\n    return ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\n  }\n  public daysOfTheWeekInCase(f = 2) {\n    return f == 1\n      ? ['воскресенья', 'понедельника', 'вторника', 'среды', 'четверга', 'пятницы', 'субботы']\n      : ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\n  }\n  public monthsOfTheYear() {\n    return [\n      'январь',\n      'февраль',\n      'март',\n      'апрель',\n      'май',\n      'июнь',\n      'июль',\n      'август',\n      'сентябрь',\n      'октябрь',\n      'ноябрь',\n      'декабрь',\n    ];\n  }\n  public monthsOfTheYearInCase(f?: number) {\n    return f == 1\n      ? [\n          'января',\n          'февраля',\n          'марта',\n          'апреля',\n          'мая',\n          'июня',\n          'июля',\n          'августа',\n          'сентября',\n          'октября',\n          'ноября',\n          'декабря',\n        ]\n      : this.monthsOfTheYear();\n  }\n}\n","import { PrizmCronHRLocale } from './locale';\nimport * as allLocales from './all-locales';\n\nexport class PrizmCronHRAllLocalesLoader {\n  public load(availableLocales: { [name: string]: PrizmCronHRLocale }) {\n    for (const property in allLocales) {\n      // eslint-disable-next-line no-prototype-builtins,@typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      if (typeof allLocales[property] !== 'undefined') {\n        availableLocales[property] = new (allLocales as any)[property]() as PrizmCronHRLocale;\n      }\n    }\n  }\n}\n","import { PrizmCronHRExpressionDescriptor } from './expression-descriptor';\nimport { PrizmCronHRAllLocalesLoader } from './i18n/all-locales-loader';\n\nPrizmCronHRExpressionDescriptor.initialize(new PrizmCronHRAllLocalesLoader());\nexport default PrizmCronHRExpressionDescriptor;\n\nconst prizmCronHRToString = PrizmCronHRExpressionDescriptor.toString;\nexport { prizmCronHRToString };\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { prizmCapitalizeFirstLetter } from '@prizm-ui/core';\n\n@Pipe({\n  name: 'prizmCronMonth',\n  standalone: true,\n})\nexport class PrizmCronMonthPipe implements PipeTransform {\n  readonly datePipe = new DatePipe(this.locale);\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n  public transform(month: number, day = 1, format = 'LLLL'): string {\n    const date = new Date();\n    date.setMonth(month ?? 1, day);\n    return prizmCapitalizeFirstLetter(this.datePipe.transform(date, format) as string);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { prizmCapitalizeFirstLetter } from '@prizm-ui/core';\n\n@Pipe({\n  name: 'prizmCronWeek',\n  standalone: true,\n})\nexport class PrizmCronWeekPipe implements PipeTransform {\n  readonly datePipe = new DatePipe(this.locale);\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n  public transform(day = 2, format = 'EEEE'): string {\n    const date = new Date(1990, 0, day - 1);\n\n    return prizmCapitalizeFirstLetter(this.datePipe.transform(date, format) as string);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { PrizmCronUiListItem } from '../../model';\nimport { PolymorphContent } from '../../../../directives/polymorph';\n\n@Component({\n  selector: 'prizm-cron-schedule',\n  styleUrls: ['./schedule.component.less'],\n  templateUrl: './schedule.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronScheduleComponent {\n  @Input()\n  public items: PrizmCronUiListItem[] = [];\n\n  @Input()\n  public selected: string[] = [];\n\n  @Output()\n  public selectedChange = new EventEmitter<string[]>();\n\n  @ContentChild('content', { read: TemplateRef }) template!: PolymorphContent<{\n    item: PrizmCronUiListItem;\n    idx: number;\n  }>;\n\n  public isSelected(item: PrizmCronUiListItem): boolean {\n    return this.selected.indexOf(item.key) !== -1;\n  }\n\n  public select(item: PrizmCronUiListItem): void {\n    const isSelected = this.isSelected(item);\n    if (isSelected) {\n      this.selected = this.selected.filter(i => i !== item.key);\n    } else {\n      this.selected.push(item.key);\n    }\n    this.emit();\n  }\n\n  public emit(): void {\n    this.selectedChange.emit((this.selected = this.selected.length ? this.selected : [this.items[0].key]));\n  }\n}\n","<div class=\"block\">\n  <div\n    class=\"item prizm-font-btn-links-14\"\n    *ngFor=\"let item of items; let idx = index\"\n    [class.selected]=\"isSelected(item)\"\n    (click)=\"select(item)\"\n  >\n    <ng-container *polymorphOutlet=\"template; context: { item: item, idx: idx }\">\n      {{ item.value }}\n    </ng-container>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { PolymorphContent } from '../../../../directives/polymorph';\nimport { PrizmCarouselContent } from '../../../input/carousel';\n\n@Component({\n  selector: 'prizm-cron-carousel',\n  styleUrls: ['./carousel.component.less'],\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronCarouselComponent {\n  @Input()\n  public content!: PrizmCarouselContent;\n\n  @Input()\n  public value!: string;\n\n  @ContentChild('content', { read: TemplateRef })\n  public template!: PolymorphContent<{ content: number }>;\n\n  @Output()\n  public valueChange = new EventEmitter<string>();\n}\n","<prizm-input-layout [label]=\"null\" [size]=\"'m'\" [outer]=\"true\" [position]=\"'center'\">\n  <prizm-input-carousel\n    [required]=\"true\"\n    [carouselContent]=\"content\"\n    [ngModel]=\"value\"\n    [ngModelOptions]=\"{ standalone: true }\"\n    [lightMode]=\"true\"\n    [ngSwitch]=\"!!template\"\n    (ngModelChange)=\"valueChange.emit((value = $event))\"\n  >\n    <ng-container *polymorphOutlet=\"template as value; context: { content: content.currentValue }\">\n      <div>{{ content.currentValue }}</div>\n    </ng-container>\n  </prizm-input-carousel>\n</prizm-input-layout>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmCronUiHourState } from '../../cron-ui-hour.state';\nimport { PrizmCronUiBaseType } from '../../model';\n\n@Component({\n  selector: 'prizm-cron-hour',\n  styleUrls: ['./hour.component.less', '../../cron-element.component.less'],\n  templateUrl: './hour.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronHourComponent {\n  @Input() specifiedList: PrizmCronUiBaseType[] = [];\n  constructor(public readonly cronUiState: PrizmCronUiHourState) {}\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">Каждый час</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>Каждый</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>час, начиная с</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"scheduleComponent.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>Выбранный час (выбор одного или нескольких)</span>\n        <prizm-cron-schedule\n          #scheduleComponent\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>Каждый час с</span>\n        <prizm-cron-carousel\n          #start\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>до</span>\n        <prizm-cron-carousel\n          #end\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\nimport { PrizmCronUiYearState } from '../../cron-ui-year.state';\nimport { PrizmCronUiBaseType } from '../../model';\nimport { UntypedFormControl } from '@angular/forms';\nimport { PrizmChipsComponent } from '../../../chips';\n\n@Component({\n  selector: 'prizm-cron-year',\n  styleUrls: ['./year.component.less', '../../cron-element.component.less'],\n  templateUrl: './year.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronYearComponent {\n  @Input() specifiedList: PrizmCronUiBaseType[] = [];\n  public deletable = true;\n  public requiredInputControl = new UntypedFormControl('');\n  public chipsControl = new UntypedFormControl([]);\n  public yearForAdd: string | null = null;\n  public chipses: string[] = [];\n  public readonly allowedYear = /[0-9]/g;\n  @ViewChild(PrizmChipsComponent, { static: true }) chipsComponent!: PrizmChipsComponent;\n\n  constructor(public readonly cronUiState: PrizmCronUiYearState) {}\n\n  public removedChips(value: string[]): void {\n    const correctedValue = this.corrector(value);\n    this.chipses = correctedValue;\n    this.saveSpecified(correctedValue.join(', '));\n  }\n\n  public onEnter(value: any, chipsComponent: PrizmChipsComponent): void {\n    if (!value) return;\n    const str = value.toString();\n    this.yearForAdd = null;\n\n    this.chipses.push(str);\n    this.chipses = this.corrector(this.chipses);\n    this.saveSpecified(this.chipses.join(', '));\n  }\n\n  public join(str: string[]): string {\n    return str.join(', ');\n  }\n\n  public corrector(str: string[]): string[] {\n    const result = str\n      .reduce((base: number[], i) => {\n        const trimmed = i.replace(/[ ]+/g, '');\n        const int = parseInt(trimmed, 10);\n\n        if (!trimmed) {\n          return base;\n        }\n\n        if (!int) return base;\n        if (int < 1900) return base;\n        if (int > 2999) base.push(2999);\n        else base.push(int);\n\n        return base;\n      }, [])\n      .sort()\n      .map(i => i.toString());\n\n    return Array.from(new Set(result));\n  }\n\n  public saveSpecified(str: string): void {\n    return this.cronUiState.updateSpecified(str.replace(/[ ]+/g, '').split(','));\n  }\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">Каждый год</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>Каждый</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>год, начиная с</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"scheduleComponent.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column year\">\n        <span>Выбранный год (выбор одного или нескольких)</span>\n        <div>\n          <prizm-input-layout\n            class=\"year-input\"\n            *prizmLet=\"\n              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : corrector as chips\n            \"\n            [outer]=\"true\"\n            [label]=\"null\"\n            size=\"m\"\n          >\n            <input\n              #input\n              [(ngModel)]=\"yearForAdd\"\n              [prizmInputAllowedSymbols]=\"allowedYear\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              (enter)=\"onEnter($event, chipsComponent)\"\n              prizmInput\n              placeholder=\"Введите год\"\n            />\n            <prizm-chips\n              #chipsComponent\n              [ngModel]=\"chips\"\n              [deletable]=\"deletable\"\n              (ngModelChange)=\"removedChips($event)\"\n              prizm-input-bottom\n            ></prizm-chips>\n          </prizm-input-layout>\n\n          <!--          <prizm-input-layout-->\n          <!--            class=\"year-input\"-->\n          <!--            *prizmLet=\"-->\n          <!--              cronUiState.state$ | async | prizmPluck : ['specified'] | prizmCallFunc : join as joinedStr-->\n          <!--            \"-->\n          <!--            [outer]=\"true\"-->\n          <!--            [label]=\"null\"-->\n          <!--            [forceClear]=\"false\"-->\n          <!--            size=\"m\"-->\n          <!--          >-->\n          <!--            <input-->\n          <!--              [prizmInputAllowedSymbols]=\"allowedYear\"-->\n          <!--              [prizmInputCorrector]=\"corrector\"-->\n          <!--              [ngModel]=\"joinedStr\"-->\n          <!--              [ngModelOptions]=\"{ standalone: true }\"-->\n          <!--              (ngModelChange)=\"saveSpecified($event)\"-->\n          <!--              prizmInput-->\n          <!--            />-->\n          <!--          </prizm-input-layout>-->\n        </div>\n        <prizm-cron-schedule\n          #scheduleComponent\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>Каждый год с</span>\n        <prizm-cron-carousel\n          #start\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>до</span>\n        <prizm-cron-carousel\n          #end\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronUiDayState } from '../../cron-ui-day.state';\nimport { PrizmCronUiDayType } from '../../model';\nimport { Observable } from 'rxjs';\nimport { PrizmLanguageCron } from '@prizm-ui/i18n';\nimport { PRIZM_CRON } from '../../../../tokens/i18n';\n\n@Component({\n  selector: 'prizm-cron-day',\n  styleUrls: ['./day.component.less', '../../cron-element.component.less'],\n  templateUrl: './day.component.html',\n  providers: [PrizmDestroyService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronDayComponent {\n  @Input() specifiedList: PrizmCronUiDayType[] = [];\n  constructor(\n    @Inject(PRIZM_CRON) public readonly cronI18n$: Observable<PrizmLanguageCron['cron']>,\n    public readonly cronUiState: PrizmCronUiDayState\n  ) {}\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        {{ cronI18n$ | async | prizmPluck : ['day', 'every'] }}\n      </div>\n    </label>\n  </ng-container>\n\n  <!--  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">-->\n  <!--    <label-->\n  <!--      class=\"block row\"-->\n  <!--      *prizmLet=\"cronUiState.TYPES.between as currentType\"-->\n  <!--      [class.selected]=\"cronUiState.typeControl.value === currentType\"-->\n  <!--    >-->\n  <!--      <div class=\"radio\">-->\n  <!--        <prizm-radio-button-->\n  <!--          [formControl]=\"cronUiState.typeControl\"-->\n  <!--          [label]=\"null\"-->\n  <!--          [value]=\"currentType\"-->\n  <!--          [name]=\"'type'\"-->\n  <!--          (changeEvent)=\"cronUiState.updateBetween()\"-->\n  <!--        ></prizm-radio-button>-->\n  <!--      </div>-->\n  <!--      <div class=\"content\">-->\n  <!--        <span>Каждый день с</span>-->\n  <!--        <prizm-cron-carousel-->\n  <!--          #start-->\n  <!--          [content]=\"cronUiState.list.between.start\"-->\n  <!--          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"-->\n  <!--          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"-->\n  <!--        ></prizm-cron-carousel>-->\n  <!--        <span>до</span>-->\n  <!--        <prizm-cron-carousel-->\n  <!--          #end-->\n  <!--          [content]=\"cronUiState.list.between.end\"-->\n  <!--          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"-->\n  <!--          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"-->\n  <!--        ></prizm-cron-carousel>-->\n  <!--      </div>-->\n  <!--    </label>-->\n  <!--  </ng-container>-->\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.afterDayOfWeek)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.afterDayOfWeek as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateAfterDayOfWeek()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        Каждый\n        <prizm-cron-carousel\n          [content]=\"cronUiState.afterDayOfWeekListDays\"\n          [value]=\"cronUiState.afterDayOfWeekListDaysValue\"\n          (valueChange)=\"cronUiState.updateAfterDayOfWeek({ afterDayOfWeekListDaysValue: $event })\"\n        ></prizm-cron-carousel>\n        день, начиная с\n        <prizm-cron-carousel\n          [content]=\"cronUiState.carouselWeekAfterDayOfWeek\"\n          [value]=\"cronUiState.afterDayOfWeekListDayOfWeeksValue\"\n          (valueChange)=\"cronUiState.updateAfterDayOfWeek({ afterDayOfWeekListDayOfWeeksValue: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value | prizmCronWeek }}\n          </ng-template>\n        </prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.afterDayOfMonth)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.afterDayOfMonth as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateAfterDayOfMonth()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        Каждый\n        <prizm-cron-carousel\n          [content]=\"cronUiState.afterDayOfMonthListRepeatDays\"\n          [value]=\"cronUiState.afterDayOfMonthListRepeatDaysValue\"\n          (valueChange)=\"cronUiState.updateAfterDayOfMonth($event)\"\n        ></prizm-cron-carousel>\n        день, начиная с\n        <prizm-cron-carousel\n          [content]=\"cronUiState.afterDayOfMonthListDays\"\n          [value]=\"cronUiState.afterDayOfMonthListDaysValue\"\n          (valueChange)=\"cronUiState.updateAfterDayOfMonth(null, $event)\"\n        ></prizm-cron-carousel>\n        числа месяца\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specifiedDayOfWeek)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specifiedDayOfWeek as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>По определённым дням недели (выбор одного или нескольких)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.dayOfWeekItems\"\n          [selected]=\"cronUiState.selectedDayOfWeek\"\n          (selectedChange)=\"cronUiState.updateSelectedDayOfWeek($event)\"\n        >\n          <ng-template #content let-item=\"item\">\n            {{ item.value | prizmCronWeek : 'E' }}\n          </ng-template>\n        </prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specifiedDayOfMonth)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specifiedDayOfMonth as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"scheduleDayOfMonthItems.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>По определённым дням месяца (выбор одного или нескольких)</span>\n        <prizm-cron-schedule\n          #scheduleDayOfMonthItems\n          [items]=\"cronUiState.dayOfMonthItems\"\n          [selected]=\"cronUiState.selectedDayOfMonth\"\n          (selectedChange)=\"cronUiState.updateSelectedDayOfMonth($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.lastDayOfMonth)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.lastDayOfMonth as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setLastDayOfMonth()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">Последний день месяца</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.lastWeekDayOfMonth)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.lastWeekDayOfMonth as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setLastWeekDayOfMonth()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">Последний рабочий день месяца</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.lastChosenDayOfWeek)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.lastChosenDayOfWeek as currentType\"\n      [class.selected]=\"currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateLastChosenDayOfWeek(cronUiState.lastChosenDayOfWeekValue)\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        В последний (-юю, -ее)\n        <prizm-cron-carousel\n          #cronCarouselComponent\n          [content]=\"cronUiState.carouselWeekLastChosenDayOfWeek\"\n          [value]=\"cronUiState.lastChosenDayOfWeekValue\"\n          (valueChange)=\"cronUiState.updateLastChosenDayOfWeek($event)\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value | prizmCronWeek }}\n          </ng-template>\n        </prizm-cron-carousel>\n        месяца\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.lastChosenDaysOfMonth)\"\n  >\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.lastChosenDaysOfMonth as currentType\"\n      [class.selected]=\"currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateLastChosenDayOfMonth()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        В последний(-ие)\n        <prizm-cron-carousel\n          [content]=\"cronUiState.contentLastChosenDayOfMonth\"\n          [value]=\"cronUiState.lastChosenDayOfMonthValue\"\n          (valueChange)=\"cronUiState.updateLastChosenDayOfMonth($event)\"\n        ></prizm-cron-carousel>\n        день (дня, дней) до конца месяца\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"\n      cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.nearestWeekDayToTheChosenDayOfMonth)\n    \"\n  >\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.nearestWeekDayToTheChosenDayOfMonth as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateNearestDayOfMonth()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        Ближайший рабочий день (Понедельник - Пятница) к\n        <prizm-cron-carousel\n          [content]=\"cronUiState.nearestDayOfMonth\"\n          [value]=\"cronUiState.nearestDayOfMonthValue\"\n          (valueChange)=\"cronUiState.updateNearestDayOfMonth($event)\"\n        ></prizm-cron-carousel>\n        числу месяца\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.onTheChosenDayOfWeek)\"\n  >\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.onTheChosenDayOfWeek as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateLastChosenDayOfChosenWeek()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        В\n        <prizm-cron-carousel\n          [content]=\"cronUiState.afterNumberOfWeekList\"\n          [value]=\"cronUiState.onNumberOfWeekListValue\"\n          (valueChange)=\"cronUiState.updateLastChosenDayOfChosenWeek($event)\"\n        ></prizm-cron-carousel>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.carouselWeekLastChosenDayOfChosenWeek\"\n          [value]=\"cronUiState.lastChosenDayOfWeekValue2\"\n          (valueChange)=\"cronUiState.updateLastChosenDayOfChosenWeek(null, $event)\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value | prizmCronWeek }}\n          </ng-template>\n        </prizm-cron-carousel>\n        месяца\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronUiMonthState } from '../../cron-ui-month.state';\nimport { PrizmCronUiBaseType } from '../../model';\n\n@Component({\n  selector: 'prizm-cron-month',\n  styleUrls: ['./month.component.less', '../../cron-element.component.less'],\n  templateUrl: './month.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmCronMonthComponent {\n  @Input() specifiedList: PrizmCronUiBaseType[] = [];\n  constructor(public readonly cronUiState: PrizmCronUiMonthState) {}\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">Каждый месяц</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>Каждый</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>месяц, начиная с</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ (value ?? 1) - 1 | prizmCronMonth }}\n          </ng-template>\n        </prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>Выбранный месяц (выбор одного или нескольких)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        >\n          <ng-template #content let-item=\"item\">\n            {{ item.value | prizmCronMonth : 1 : 'MMM' }}\n          </ng-template>\n        </prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>Каждый месяц с</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ (value ?? 1) - 1 | prizmCronMonth }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>до</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ (value ?? 1) - 1 | prizmCronMonth }}\n          </ng-template>\n        </prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmCronUiMinuteState } from '../../cron-ui-minute.state';\nimport { PrizmCronUiBaseType } from '../../model';\n\n@Component({\n  selector: 'prizm-cron-minute',\n  styleUrls: ['./minute.component.less', '../../cron-element.component.less'],\n  templateUrl: './minute.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmCronMinuteComponent {\n  @Input() specifiedList: PrizmCronUiBaseType[] = [];\n  constructor(public readonly cronUiState: PrizmCronUiMinuteState) {}\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">Каждая минута</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>Каждая</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>минута, начиная с</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>Выбранная минута (выбор одной или нескольких)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>Каждая минута с</span>\n        <prizm-cron-carousel\n          #start\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>до</span>\n        <prizm-cron-carousel\n          #end\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { PrizmCronUiSecondState } from '../../cron-ui-second.state';\nimport { PrizmCronUiBaseType } from '../../model';\n\n@Component({\n  selector: 'prizm-cron-second',\n  styleUrls: ['./second.component.less', '../../cron-element.component.less'],\n  templateUrl: './second.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmDestroyService],\n})\nexport class PrizmCronSecondComponent {\n  @Input() specifiedList: PrizmCronUiBaseType[] = [];\n  constructor(public readonly cronUiState: PrizmCronUiSecondState) {}\n}\n","<div class=\"blocks\">\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.every)\">\n    <label\n      class=\"every value-block block\"\n      *prizmLet=\"cronUiState.TYPES.every as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.setEvery()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">Каждая секунда</div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.after)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.after as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateOn()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content row\">\n        <span>Каждая</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'on']\"\n          (valueChange)=\"cronUiState.updateOn({ on: $event })\"\n        >\n          <ng-template #content let-value=\"content\">\n            {{ value }}\n          </ng-template>\n        </prizm-cron-carousel>\n        <span>секунда, начиная с</span>\n\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['everyChosenTimesAfterChosen', 'after']\"\n          (valueChange)=\"cronUiState.updateOn({ after: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.specified)\">\n    <label\n      class=\"block\"\n      *prizmLet=\"cronUiState.TYPES.specified as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"schedule.emit()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content column\">\n        <span>Выбранная секунда (выбор одной или нескольких)</span>\n        <prizm-cron-schedule\n          #schedule\n          [items]=\"cronUiState.list.specified\"\n          [selected]=\"cronUiState.state$ | async | prizmPluck : ['specified']\"\n          (selectedChange)=\"cronUiState.updateSpecified($event)\"\n        ></prizm-cron-schedule>\n      </div>\n    </label>\n  </ng-container>\n\n  <ng-container *ngIf=\"cronUiState.canShowCronListItem(specifiedList, cronUiState.TYPES.between)\">\n    <label\n      class=\"block row\"\n      *prizmLet=\"cronUiState.TYPES.between as currentType\"\n      [class.selected]=\"cronUiState.typeControl.value === currentType\"\n    >\n      <div class=\"radio\">\n        <prizm-radio-button\n          [formControl]=\"cronUiState.typeControl\"\n          [label]=\"null\"\n          [value]=\"currentType\"\n          [name]=\"'type'\"\n          (changeEvent)=\"cronUiState.updateBetween()\"\n        ></prizm-radio-button>\n      </div>\n      <div class=\"content\">\n        <span>Каждая секунда с</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.start\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'start']\"\n          (valueChange)=\"cronUiState.updateBetween({ start: $event })\"\n        ></prizm-cron-carousel>\n        <span>до</span>\n        <prizm-cron-carousel\n          [content]=\"cronUiState.list.between.end\"\n          [value]=\"cronUiState.state$ | async | prizmPluck : ['between', 'end']\"\n          (valueChange)=\"cronUiState.updateBetween({ end: $event })\"\n        ></prizm-cron-carousel>\n      </div>\n    </label>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmCronMonthPipe } from './pipes/cron-month.pipe';\nimport { PrizmCronWeekPipe } from './pipes/cron-week.pipe';\nimport { PrizmCronScheduleComponent } from './components/schedule/schedule.component';\nimport { PrizmCronCarouselComponent } from './components/carousel/carousel.component';\nimport { PrizmCronHourComponent } from './components/hour/hour.component';\nimport { PrizmCronYearComponent } from './components/year/year.component';\nimport { PrizmCronDayComponent } from './components/day/day.component';\nimport { PrizmCronMonthComponent } from './components/month/month.component';\nimport { PrizmCronMinuteComponent } from './components/minute/minute.component';\nimport { PrizmCronSecondComponent } from './components/second/second.component';\nimport { PrizmCallFuncPipe, PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';\nimport { CommonModule } from '@angular/common';\nimport { PrizmToggleComponent } from '../toggle';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrizmInputLayoutDateTimeModule } from '../input/input-date-time';\nimport { PrizmSwitcherComponent } from '../switcher';\nimport { PrizmHintDirective } from '../../directives/hint';\nimport { PrizmRadioButtonComponent } from '../radio';\nimport { PrizmChipsModule } from '../chips';\nimport { PrizmInputCarouselModule } from '../input/carousel';\nimport { PrizmScrollbarComponent } from '../scrollbar/scrollbar.component';\nimport { PolymorphOutletDirective } from '../../directives/polymorph/directives/outlet';\nimport { PrizmButtonComponent } from '../button';\n\n@NgModule({\n  declarations: [\n    PrizmCronScheduleComponent,\n    PrizmCronCarouselComponent,\n    PrizmCronHourComponent,\n    PrizmCronYearComponent,\n    PrizmCronDayComponent,\n    PrizmCronMonthComponent,\n    PrizmCronMinuteComponent,\n    PrizmCronSecondComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PolymorphOutletDirective,\n    PrizmLetDirective,\n    PrizmChipsModule,\n    PrizmInputCarouselModule,\n    PrizmRadioButtonComponent,\n    PrizmHintDirective,\n    ReactiveFormsModule,\n    PrizmSwitcherComponent,\n    PrizmInputLayoutDateTimeModule,\n    PrizmToggleComponent,\n    PrizmScrollbarComponent,\n    PrizmCronMonthPipe,\n    PrizmCronWeekPipe,\n    PrizmPluckPipe,\n    PrizmCallFuncPipe,\n    PrizmButtonComponent,\n  ],\n  exports: [\n    PrizmCallFuncPipe,\n    PrizmLetDirective,\n    PolymorphOutletDirective,\n    PrizmInputCarouselModule,\n    FormsModule,\n    PrizmRadioButtonComponent,\n    PrizmHintDirective,\n    PrizmInputLayoutDateTimeModule,\n    ReactiveFormsModule,\n    CommonModule,\n    PrizmToggleComponent,\n    PrizmSwitcherComponent,\n    PrizmScrollbarComponent,\n    PrizmChipsModule,\n    PrizmPluckPipe,\n    PrizmCronScheduleComponent,\n    PrizmCronCarouselComponent,\n    PrizmCronHourComponent,\n    PrizmCronYearComponent,\n    PrizmCronDayComponent,\n    PrizmCronMonthComponent,\n    PrizmCronMinuteComponent,\n    PrizmCronSecondComponent,\n    PrizmCronMonthPipe,\n    PrizmCronWeekPipe,\n    PrizmButtonComponent,\n  ],\n})\nexport class PrizmCronInnerModule {}\n","import { ChangeDetectorRef, inject, Inject, Pipe, PipeTransform } from '@angular/core';\nimport { prizmCronHRToString } from '../human-readable/crons-i18n';\nimport { PRIZM_LANGUAGE, PrizmLanguage } from '@prizm-ui/i18n';\nimport { Observable } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\nimport { map } from 'rxjs/operators';\n\n@Pipe({\n  name: 'prizmCronHumanReadable',\n  standalone: true,\n})\nexport class PrizmCronHumanReadablePipe implements PipeTransform {\n  readonly cdRef = inject(ChangeDetectorRef);\n  readonly language$ = inject(PRIZM_LANGUAGE);\n  readonly asyncPipe = new AsyncPipe(this.cdRef);\n\n  public transform(expression: string): string {\n    const lang = this.asyncPipe.transform(this.language$.pipe(map(i => i.shortName)));\n\n    if (!lang) return '';\n\n    return prizmCronHRToString(expression, {\n      locale: lang,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmCronHumanReadablePipe } from './pipe/cron-human-readable.pipe';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCronHumanReadablePipe],\n  exports: [PrizmCronHumanReadablePipe],\n})\nexport class PrizmCronHumanReadableModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { PrizmDestroyService, PrizmLetDirective } from '@prizm-ui/helpers';\nimport { PrizmSwitcherItem } from '../switcher';\nimport { UntypedFormControl } from '@angular/forms';\nimport { PrizmCronService, prizmI18nInitWithKey } from '../../services';\nimport { distinctUntilChanged, filter, first, map, skip, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmCronUiSecondState } from './cron-ui-second.state';\nimport { PrizmCronUiMinuteState } from './cron-ui-minute.state';\nimport { PrizmCronUiHourState } from './cron-ui-hour.state';\nimport { PrizmCronUiMonthState } from './cron-ui-month.state';\nimport { PrizmCronUiYearState } from './cron-ui-year.state';\nimport { prizmIsTextOverflow } from '../../util';\nimport { PrizmCronPeriod, PrizmCronTabItem, PrizmCronTabSpecifiedList } from './model';\nimport { PrizmCronUiDayState } from './cron-ui-day.state';\nimport { prizmDefaultProp } from '@prizm-ui/core';\nimport { combineLatest, concat, Observable, timer } from 'rxjs';\nimport { PRIZM_LANGUAGE, PrizmLanguage, PrizmLanguageCron } from '@prizm-ui/i18n';\nimport { prizmCronHRToString } from '../cron-human-readable/human-readable/crons-i18n';\nimport { PRIZM_CRON } from '../../tokens';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { PrizmCronMonthPipe } from './pipes/cron-month.pipe';\nimport { PrizmCronWeekPipe } from './pipes/cron-week.pipe';\nimport { PrizmCronInnerModule } from './cron-inner.module';\nimport { PrizmCronHumanReadablePipe } from '../cron-human-readable';\n\n@Component({\n  selector: 'prizm-cron',\n  styleUrls: ['./cron.component.less'],\n  templateUrl: './cron.component.html',\n  exportAs: 'prizmCron',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    PrizmDestroyService,\n    PrizmCronService,\n    PrizmLetDirective,\n    PrizmCronUiSecondState,\n    PrizmCronUiMonthState,\n    PrizmCronUiHourState,\n    PrizmCronUiDayState,\n    PrizmCronUiYearState,\n    PrizmCronUiMinuteState,\n    ...prizmI18nInitWithKey(PRIZM_CRON, 'cron'),\n  ],\n  standalone: true,\n  imports: [PrizmCronHumanReadablePipe, PrizmCronInnerModule, PrizmCronMonthPipe, PrizmCronWeekPipe],\n})\nexport class PrizmCronComponent extends PrizmAbstractTestId implements OnInit {\n  @Input() public set value(value: string) {\n    if (!value) return;\n    this.cron.updateWith(value);\n  }\n  public get value(): string {\n    return this.cron.valueAsString;\n  }\n\n  @Input()\n  @prizmDefaultProp()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input()\n  @prizmDefaultProp()\n  autoSubmit = false;\n\n  @Input()\n  @prizmDefaultProp()\n  hidePeriod = false;\n\n  @Input()\n  @prizmDefaultProp()\n  hideResult = false;\n\n  @Input()\n  @prizmDefaultProp()\n  showHumanReadable = false;\n\n  @Input()\n  @prizmDefaultProp()\n  resetButton = false;\n\n  override readonly testId_ = 'ui_cron';\n\n  @Input()\n  @prizmDefaultProp()\n  public set period(period: PrizmCronPeriod) {\n    if (this.indefinitelyControl.value !== period.indefinitely)\n      this.indefinitelyControl.setValue(period.indefinitely);\n\n    if (this.startDateControl.value !== period.start) this.startDateControl.setValue(period.start);\n\n    if (this.endDateControl.value !== period.end) this.endDateControl.setValue(period.end);\n  }\n  public get period(): PrizmCronPeriod {\n    return {\n      indefinitely: this.indefinitelyControl.value,\n      start: this.startDateControl.value,\n      end: this.indefinitelyControl.value ? null : this.endDateControl.value,\n    };\n  }\n\n  readonly cronLanguage$ = this.language$.pipe(\n    map(lang => {\n      return lang.shortName;\n    })\n  );\n\n  readonly humanReadableStr$ = combineLatest([this.cronLanguage$, this.cron.valueAsString$]).pipe(\n    map(([lang, val]) => {\n      return prizmCronHRToString(val, {\n        locale: lang,\n      });\n    })\n  );\n\n  @Output() valueChange = new EventEmitter<string>();\n  @Output() periodChange = new EventEmitter<PrizmCronPeriod>();\n  @Output() selectedChange = new EventEmitter<PrizmCronTabItem>();\n\n  @Input()\n  set selected(selected: PrizmCronTabItem) {\n    this.selectedSwitcherIdx = this.switchers.findIndex(i => i.id === selected);\n  }\n\n  @Input() specifiedList: PrizmCronTabSpecifiedList | null = null;\n  @Input() set tabs(tabs: PrizmCronTabItem[]) {\n    this.switchers = this.switchers.map(i => {\n      i.hide = !tabs.includes(i.id as any);\n      return i;\n    });\n\n    if (tabs.length && !tabs.includes(this.selected)) {\n      this.selectedChange.emit((this.selected = tabs[0]));\n    }\n  }\n\n  public switchers: PrizmSwitcherItem<PrizmCronTabItem>[] = [\n    {\n      title: 'Секунды',\n      id: 'second',\n    },\n    {\n      title: 'Минуты',\n      id: 'minute',\n    },\n    {\n      title: 'Часы',\n      id: 'hour',\n    },\n    {\n      title: 'Дни',\n      id: 'day',\n    },\n    {\n      title: 'Месяцы',\n      id: 'month',\n    },\n    {\n      title: 'Годы',\n      id: 'year',\n    },\n  ];\n\n  initialValue!: string;\n  public readonly value$ = this.cron.value$;\n  public readonly valueAsString$ = this.cron.valueAsString$;\n  public readonly startDateControl = new UntypedFormControl();\n  public readonly endDateControl = new UntypedFormControl();\n  public readonly indefinitelyControl = new UntypedFormControl(false);\n  public indefinitely = false;\n  public selectedSwitcherIdx = 0;\n  public readonly prizmIsTextOverflow = prizmIsTextOverflow;\n\n  constructor(\n    @Inject(PRIZM_LANGUAGE)\n    readonly language$: Observable<PrizmLanguage>,\n    public readonly cron: PrizmCronService,\n    @Inject(PRIZM_CRON) public readonly cronI18n$: Observable<PrizmLanguageCron['cron']>,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly cronUiSecondState: PrizmCronUiSecondState,\n    private readonly cronUiHourState: PrizmCronUiHourState,\n    private readonly cronUiYearState: PrizmCronUiYearState,\n    private readonly cronUiMonthState: PrizmCronUiMonthState,\n    private readonly cronUiMinuteState: PrizmCronUiMinuteState,\n    private readonly cronUiDayState: PrizmCronUiDayState\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.initAutoSubmiter();\n    this.cronUiSecondState.init();\n    this.cronUiHourState.init();\n    this.cronUiDayState.init();\n    this.cronUiMonthState.init();\n    this.cronUiYearState.init();\n    this.cronUiMinuteState.init();\n    this.initEndDateStateChanger();\n    this.saveInitialValue();\n  }\n\n  private endDateStateCorrector(): void {\n    if (this.indefinitelyControl.value) this.endDateControl.disable();\n    else this.endDateControl.enable();\n  }\n\n  private initEndDateStateChanger(): void {\n    concat(timer(0).pipe(map(() => this.indefinitelyControl.value)), this.indefinitelyControl.valueChanges)\n      .pipe(\n        tap(() => this.endDateStateCorrector()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private emitPeriod(): void {\n    if (this.hidePeriod) return;\n    this.periodChange.emit(this.period);\n  }\n\n  private saveInitialValue(): void {\n    this.initialValue = this.cron.valueAsString;\n  }\n\n  private initAutoSubmiter(): void {\n    this.cron.valueAsString$\n      .pipe(\n        filter(() => this.autoSubmit && !this.disabled),\n        distinctUntilChanged(),\n        tap(val => {\n          this.valueChange.emit(val);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    combineLatest([\n      this.startDateControl.valueChanges.pipe(startWith(this.startDateControl.value), distinctUntilChanged()),\n      this.endDateControl.valueChanges.pipe(startWith(this.endDateControl.value), distinctUntilChanged()),\n      this.indefinitelyControl.valueChanges.pipe(\n        startWith(this.indefinitelyControl.value),\n        distinctUntilChanged()\n      ),\n    ])\n      .pipe(\n        skip(1),\n        filter(() => this.autoSubmit && !this.disabled),\n        tap(controls => {\n          this.emitPeriod();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  private emit(cronValue: string): void {\n    if (this.disabled) return;\n    this.valueChange.emit(cronValue);\n    this.emitPeriod();\n    this.saveInitialValue();\n  }\n\n  public submit(): void {\n    this.cron.valueAsString$\n      .pipe(\n        tap(val => {\n          this.emit(val);\n        }),\n        first(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  public reset(): void {\n    this.value = this.initialValue;\n  }\n\n  public copy(): void {\n    // TODO safe with injection\n    navigator.clipboard.writeText(this.cron.valueAsString);\n  }\n\n  public copyHumanReadable(): void {\n    this.humanReadableStr$\n      .pipe(\n        first(),\n        tap(humanReadableStr => {\n          navigator.clipboard.writeText(humanReadableStr);\n        })\n      )\n      .subscribe();\n  }\n\n  public indexChanged(index: number): void {\n    const selected = this.switchers.find((_, i) => i === index);\n    this.selectedChange.emit((this.selected = selected?.id as any));\n  }\n}\n","<div class=\"block\">\n  <div class=\"title py-none inner-block small-padding\">\n    <span class=\"prizm-font-title-h4\">\n      {{ cronI18n$ | async | prizmPluck : ['title'] }}\n    </span>\n    <div class=\"submit-block\" *ngIf=\"!hideResult || !autoSubmit\">\n      <ng-container *ngIf=\"!hideResult\">\n        <prizm-input-layout\n          *prizmLet=\"valueAsString$ | async as valueStr\"\n          [border]=\"false\"\n          [label]=\"null\"\n          [outer]=\"true\"\n          [forceClear]=\"false\"\n          size=\"m\"\n        >\n          <input\n            #elem\n            [prizmHint]=\"valueStr\"\n            [readonly]=\"true\"\n            [prizmHintCanShow]=\"prizmIsTextOverflow(elem.elementRef.nativeElement)\"\n            [ngModel]=\"valueStr\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            prizmInput\n            prizmHintDirection=\"b\"\n          />\n\n          <ng-container prizm-input-right>\n            <button [interactive]=\"true\" (click)=\"copy()\" prizmInputIconButton=\"editor-copy\"></button>\n          </ng-container>\n        </prizm-input-layout>\n      </ng-container>\n      <button *ngIf=\"resetButton\" (click)=\"reset()\" prizmButton size=\"m\">\n        {{ cronI18n$ | async | prizmPluck : ['resetText'] }}\n      </button>\n      <button *ngIf=\"!autoSubmit\" [disabled]=\"disabled\" (click)=\"submit()\" prizmButton size=\"m\">\n        {{ cronI18n$ | async | prizmPluck : ['submitText'] }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"human-readable-block inner-block\" *ngIf=\"showHumanReadable\">\n    <prizm-input-layout\n      *prizmLet=\"valueAsString$ | async as valueStr\"\n      [border]=\"false\"\n      [label]=\"null\"\n      [outer]=\"true\"\n      [forceClear]=\"false\"\n      size=\"m\"\n    >\n      <input\n        #humarReadableElem\n        *prizmLet=\"$any(valueAsString$ | async) | prizmCronHumanReadable as humanReadableStr\"\n        [prizmHint]=\"humanReadableStr\"\n        [readonly]=\"true\"\n        [prizmHintCanShow]=\"prizmIsTextOverflow(humarReadableElem.elementRef.nativeElement)\"\n        [ngModel]=\"humanReadableStr\"\n        [ngModelOptions]=\"{ standalone: true }\"\n        prizmInput\n        prizmHintDirection=\"b\"\n      />\n\n      <ng-container prizm-input-right>\n        <button\n          [interactive]=\"true\"\n          (click)=\"copyHumanReadable()\"\n          prizmInputIconButton=\"editor-copy\"\n        ></button>\n      </ng-container>\n    </prizm-input-layout>\n  </div>\n\n  <div class=\"inner-block border-bottom\">\n    <prizm-switcher\n      [fullWidth]=\"true\"\n      [selectedSwitcherIdx]=\"selectedSwitcherIdx\"\n      [switchers]=\"switchers\"\n      (selectedSwitcherIdxChange)=\"indexChanged($event)\"\n    >\n    </prizm-switcher>\n  </div>\n\n  <div class=\"inner-block date-period border-bottom\" *ngIf=\"!hidePeriod\">\n    <div class=\"date-block\">\n      <prizm-input-layout [label]=\"cronI18n$ | async | prizmPluck : ['startDateLabel']\" size=\"m\">\n        <prizm-input-layout-date-time\n          [formControl]=\"startDateControl\"\n          [max]=\"endDateControl.value ?? undefined\"\n        >\n        </prizm-input-layout-date-time>\n      </prizm-input-layout>\n\n      <prizm-input-layout [label]=\"cronI18n$ | async | prizmPluck : ['endDateLabel']\" size=\"m\">\n        <prizm-input-layout-date-time\n          [min]=\"startDateControl.value ?? undefined\"\n          [disabled]=\"indefinitely\"\n          [formControl]=\"endDateControl\"\n        >\n        </prizm-input-layout-date-time>\n      </prizm-input-layout>\n    </div>\n    <div class=\"date-footer\">\n      <div class=\"indefinitely-toggle\">\n        <prizm-toggle [formControl]=\"indefinitelyControl\" size=\"m\"> </prizm-toggle>\n        {{ cronI18n$ | async | prizmPluck : ['indefinitelyLabel'] }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"sub-pages\" [ngSwitch]=\"selectedSwitcherIdx\">\n    <prizm-scrollbar>\n      <prizm-cron-second *ngSwitchCase=\"0\" [specifiedList]=\"specifiedList?.second ?? []\"></prizm-cron-second>\n      <prizm-cron-minute *ngSwitchCase=\"1\" [specifiedList]=\"specifiedList?.minute ?? []\"></prizm-cron-minute>\n      <prizm-cron-hour *ngSwitchCase=\"2\" [specifiedList]=\"specifiedList?.hour ?? []\"></prizm-cron-hour>\n      <prizm-cron-day *ngSwitchCase=\"3\" [specifiedList]=\"specifiedList?.day ?? []\"></prizm-cron-day>\n      <prizm-cron-month *ngSwitchCase=\"4\" [specifiedList]=\"specifiedList?.month ?? []\"></prizm-cron-month>\n      <prizm-cron-year *ngSwitchCase=\"5\" [specifiedList]=\"specifiedList?.year ?? []\"></prizm-cron-year>\n    </prizm-scrollbar>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmCronComponent } from './cron.component';\nimport { PrizmCronMonthPipe } from './pipes/cron-month.pipe';\nimport { PrizmCronWeekPipe } from './pipes/cron-week.pipe';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmCronComponent, PrizmCronMonthPipe, PrizmCronWeekPipe],\n  exports: [PrizmCronComponent, PrizmCronMonthPipe, PrizmCronWeekPipe],\n})\nexport class PrizmCronModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\n\n@Component({\n  selector: 'prizm-error-page',\n  templateUrl: 'error-page.component.html',\n  styleUrls: ['error-page.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmErrorPageComponent extends PrizmAbstractTestId {\n  @Input() code!: number;\n  @Input() title!: string;\n  override readonly testId_ = 'ui_error-page';\n}\n","<div class=\"code\">{{ code }}</div>\n<div class=\"title\">{{ title }}</div>\n<div class=\"user-content\"><ng-content></ng-content></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PrizmErrorPageComponent } from './error-page.component';\n\n@NgModule({\n  declarations: [PrizmErrorPageComponent],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [PrizmErrorPageComponent],\n})\nexport class PrizmErrorPageModule {}\n","import { InjectionToken } from '@angular/core';\nimport { PrizmFileUploadOptions } from './types';\n\nexport const prizmFileUploadDefaultOptions: PrizmFileUploadOptions = {\n  showRetryButtons: true,\n};\n\nexport const PRIZM_FILEUPLOAD_OPTIONS = new InjectionToken<Partial<PrizmFileUploadOptions>>(\n  'Prizm file upload options'\n);\n","export enum UploadingStatusEnum {\n  idle = 'idle',\n  progress = 'progress',\n  warning = 'warning',\n  success = 'success',\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { UploadingStatusEnum } from '../file-upload.enums';\n\n@Pipe({ name: 'prizmUploadStatus', standalone: true })\nexport class PrizmUploadStatusPipe implements PipeTransform {\n  public transform(progress: number, error: boolean): UploadingStatusEnum {\n    if (error) {\n      return UploadingStatusEnum.warning;\n    }\n\n    if (progress === 0) {\n      return UploadingStatusEnum.idle;\n    }\n\n    if (progress === 100) {\n      return UploadingStatusEnum.success;\n    }\n\n    return UploadingStatusEnum.progress;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'prizmFileSize', standalone: true })\nexport class PrizmFileSizePipe implements PipeTransform {\n  public transform(size: number): string {\n    if (size < 1024) {\n      return size + 'bytes';\n    } else if (size > 1024 && size < 1048576) {\n      return (size / 1024).toFixed(1) + 'KB';\n    } else if (size > 1048576) {\n      return (size / 1048576).toFixed(1) + 'MB';\n    }\n\n    return '';\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\n\nimport {\n  PrizmDestroyService,\n  PrizmLetDirective,\n  PrizmPluckPipe,\n  PrizmSanitizerPipe,\n} from '@prizm-ui/helpers';\nimport {\n  PrizmFilesMap,\n  PrizmFilesProgress,\n  PrizmFileUploadOptions,\n  PrizmFileValidationErrors,\n} from './types';\nimport { PRIZM_FILEUPLOAD_OPTIONS, prizmFileUploadDefaultOptions } from './file-upload-options';\nimport { PRIZM_FILE_UPLOAD } from '../../tokens';\nimport { Observable } from 'rxjs';\nimport { PrizmLanguageFileUpload } from '@prizm-ui/i18n';\nimport { prizmI18nInitWithKey } from '../../services';\nimport { PrizmAbstractTestId } from '@prizm-ui/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\nimport { PrizmButtonComponent } from '../button';\nimport { PrizmProgressBarComponent } from '../progress';\nimport { PrizmIconComponent } from '../icon';\nimport { PrizmUploadStatusPipe } from './pipes/upload-status.pipe';\nimport { PrizmFileSizePipe } from './pipes/file-size.pipe';\n\n@Component({\n  selector: 'prizm-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    PrizmUploadStatusPipe,\n    PrizmFileSizePipe,\n    PrizmSanitizerPipe,\n    PrizmPluckPipe,\n    PrizmLetDirective,\n    PrizmProgressBarComponent,\n    PrizmButtonComponent,\n    PrizmIconComponent,\n  ],\n  standalone: true,\n  providers: [PrizmDestroyService, ...prizmI18nInitWithKey(PRIZM_FILE_UPLOAD, 'fileUpload')],\n})\nexport class PrizmFileUploadComponent extends PrizmAbstractTestId implements AfterViewInit, OnDestroy {\n  @ViewChild('dropzone') dropzoneElementRef!: ElementRef<HTMLDivElement>;\n\n  override readonly testId_ = 'ui_file_upload';\n\n  options: PrizmFileUploadOptions = { ...prizmFileUploadDefaultOptions };\n  constructor(\n    private renderer: Renderer2,\n    @Inject(PRIZM_FILE_UPLOAD) public readonly fileUpload$: Observable<PrizmLanguageFileUpload['fileUpload']>,\n    @Optional() @Inject(PRIZM_FILEUPLOAD_OPTIONS) customOptions: PrizmFileUploadOptions\n  ) {\n    super();\n    this.options = { ...this.options, ...customOptions };\n  }\n\n  private listeners: Array<() => void> = [];\n\n  private validationErrors: { [filename: string]: PrizmFileValidationErrors } = {};\n\n  @Input() accept = '';\n  @Input() multiple = false;\n  @Input() maxFileSize = Number.MAX_SAFE_INTEGER;\n  @Input() maxFilesCount = Number.MAX_SAFE_INTEGER;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Input() set progress(progress: PrizmFilesProgress) {\n    for (const key of Object.keys(progress)) {\n      if (this.filesMap.has(key)) {\n        this.filesMap.set(key, { ...this.filesMap.get(key), ...progress[key] } as any);\n      }\n    }\n  }\n\n  @Output() beforeFilesChange = new EventEmitter<void>();\n  @Output() filesChange = new EventEmitter<Array<File>>();\n  @Output() filesValidationErrors = new EventEmitter<{ [filename: string]: PrizmFileValidationErrors }>();\n  @Output() filesCountError = new EventEmitter<Array<string>>();\n  @Output() retry = new EventEmitter<File>();\n\n  public filesMap: PrizmFilesMap = new Map();\n\n  get files(): Array<File> {\n    return [...this.filesMap.entries()].map(([_, { file }]) => file);\n  }\n\n  public ngAfterViewInit(): void {\n    this.listeners.push(\n      this.renderer.listen(\n        this.dropzoneElementRef.nativeElement,\n        'dragover',\n        this.dropzoneDragOverListener.bind(this)\n      )\n    );\n\n    this.listeners.push(\n      this.renderer.listen(\n        this.dropzoneElementRef.nativeElement,\n        'dragleave',\n        this.dropzoneDragLeaveListener.bind(this)\n      )\n    );\n  }\n\n  public ngOnDestroy(): void {\n    for (const listener of this.listeners) {\n      listener();\n    }\n  }\n\n  public onDrop(event: DragEvent): void {\n    event.preventDefault();\n\n    if (this.disabled === false) {\n      const { files } = event.dataTransfer as any;\n      this.selectFiles(Array.from(files));\n    }\n\n    this.dropzoneElementRef.nativeElement.classList.remove('active');\n  }\n\n  public onFileInputChange(event: Event): void {\n    const inputFile = event.target as HTMLInputElement as any;\n\n    if (inputFile.files.length > 0) {\n      this.selectFiles(Array.from(inputFile.files));\n      inputFile.value = '';\n    }\n  }\n\n  public getFileExtension(file: File): string {\n    return '.' + file.name.split('.').pop();\n  }\n\n  public removeFile(filename: string, options: { emitEvent: boolean } = { emitEvent: true }): void {\n    if (options.emitEvent) {\n      this.beforeFilesChange.next();\n    }\n    const fileData = this.filesMap.get(filename) as any;\n    if (fileData.url) {\n      URL.revokeObjectURL(fileData.url);\n    }\n    this.filesMap.delete(filename);\n\n    if (options.emitEvent) {\n      this.filesChange.next(this.files);\n    }\n  }\n\n  public clearFiles(options: { emitEvent: boolean } = { emitEvent: true }): void {\n    if (options.emitEvent) {\n      this.beforeFilesChange.next();\n    }\n\n    for (const file of this.filesMap.keys()) {\n      this.removeFile(file);\n    }\n\n    if (options.emitEvent) {\n      this.filesChange.next([]);\n    }\n  }\n\n  public filesTrackBy(index: number, file: { key: string; value: any }): string {\n    return file.key;\n  }\n\n  public retryUpload(filename: string): void {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.retry.emit(this.filesMap.get(filename).file) as any;\n  }\n\n  private dropzoneDragOverListener(event: DragEvent): void {\n    event.preventDefault();\n    if (this.disabled === false) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      event.dataTransfer.dropEffect = 'copy';\n      this.dropzoneElementRef.nativeElement.classList.add('active');\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      event.dataTransfer.dropEffect = 'none';\n    }\n  }\n\n  private dropzoneDragLeaveListener(): void {\n    this.dropzoneElementRef.nativeElement.classList.remove('active');\n  }\n\n  private selectFiles(files: File[]): void {\n    const filteredFiles = files.filter(file => this.validate(file));\n\n    if (filteredFiles.length === 0) {\n      this.emitValidationErrors();\n      return;\n    }\n\n    this.beforeFilesChange.next();\n\n    if (filteredFiles.length > this.maxFilesCount) {\n      this.filesCountError.next(filteredFiles.slice(this.maxFilesCount).map(file => file.name));\n      filteredFiles.length = this.maxFilesCount;\n    }\n\n    this.emitValidationErrors();\n\n    this.clearFiles({ emitEvent: false });\n\n    for (const file of filteredFiles) {\n      this.filesMap.set(file.name, {\n        file,\n        progress: 0,\n        error: false,\n        url: this.isImage(file) ? URL.createObjectURL(file) : (null as any),\n      });\n    }\n\n    this.filesChange.next(this.files);\n  }\n\n  private validate(file: File): boolean {\n    const errors: PrizmFileValidationErrors = {};\n\n    if (this.accept && this.isFileTypeValid(file) === false) {\n      errors.accept = { expect: this.accept, current: file.type };\n    }\n\n    if (file.size > this.maxFileSize) {\n      errors.size = { max: this.maxFileSize, current: file.size };\n    }\n\n    const valid = Object.keys(errors).length === 0;\n\n    if (valid === false) {\n      this.validationErrors[file.name] = errors;\n    }\n\n    return valid;\n  }\n\n  private emitValidationErrors(): void {\n    if (Object.entries(this.validationErrors).length > 0) {\n      this.filesValidationErrors.next(this.validationErrors);\n      this.validationErrors = {};\n    }\n  }\n\n  private isImage(file: File): boolean {\n    return /^image\\//.test(file.type);\n  }\n\n  private isFileTypeValid(file: File): boolean {\n    const acceptableTypes = this.accept.split(',').map(type => type.trim());\n    for (const type of acceptableTypes) {\n      const acceptable = this.isWildcard(type)\n        ? this.getTypeClass(file.type) === this.getTypeClass(type)\n        : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n\n      if (acceptable) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private getTypeClass(fileType: string): string {\n    return fileType.substring(0, fileType.indexOf('/'));\n  }\n\n  private isWildcard(fileType: string): boolean {\n    return fileType.indexOf('*') !== -1;\n  }\n}\n","<ng-container *prizmLet=\"fileUpload$ | async as translations\">\n  <input\n    class=\"hidden\"\n    #inputFile\n    [multiple]=\"multiple\"\n    [accept]=\"accept\"\n    (change)=\"onFileInputChange($event)\"\n    type=\"file\"\n  />\n\n  <div class=\"dropzone\" #dropzone (drop)=\"onDrop($event)\">\n    <div class=\"dropzone__title\">\n      {{ translations | prizmPluck : ['dropzone__title'] }}\n    </div>\n    <div class=\"dropzone__description\">\n      {{ translations | prizmPluck : ['dropzone__description'] }}\n    </div>\n    <div class=\"dropzone__user-content\">\n      <ng-content></ng-content>\n    </div>\n\n    <button\n      class=\"dropzone__file-select\"\n      [disabled]=\"disabled\"\n      (click)=\"inputFile.click()\"\n      type=\"button\"\n      prizmButton\n      appearanceType=\"outline\"\n      appearance=\"secondary\"\n      size=\"m\"\n    >\n      {{ translations | prizmPluck : ['btn__select'] }}\n    </button>\n  </div>\n\n  <div class=\"files\" *ngIf=\"filesMap.size > 0\">\n    <div class=\"file files__item\" *ngFor=\"let item of filesMap | keyvalue; trackBy: filesTrackBy\">\n      <div class=\"file__preview\">\n        <img\n          class=\"file__image\"\n          *ngIf=\"item.value.url; else iconTpl\"\n          [src]=\"item.value.url | prizmSanitizer : 'bypassSecurityTrustResourceUrl'\"\n        />\n\n        <ng-template #iconTpl>\n          <prizm-icon class=\"file__icon\" [size]=\"16\" iconClass=\"files-file\"></prizm-icon>\n        </ng-template>\n      </div>\n\n      <div class=\"file__info\">\n        <span class=\"file__name\">{{ item.key }}</span>\n        <span class=\"file__size\">{{ item.value.file.size | prizmFileSize }}</span>\n      </div>\n\n      <div class=\"file__stage\">\n        {{  options.statusNames?.[item.value.progress | prizmUploadStatus : item.value.error] ?? (translations | prizmPluck : [item.value.progress | prizmUploadStatus : item.value.error]) }}\n      </div>\n\n      <button\n        class=\"file__retry-btn\"\n        *ngIf=\"item.value.error && options.showRetryButtons\"\n        [disabled]=\"disabled\"\n        [icon]=\"'arrows-refresh'\"\n        (click)=\"retryUpload(item.key)\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"s\"\n      ></button>\n\n      <button\n        class=\"file__delete-btn\"\n        [disabled]=\"disabled\"\n        [icon]=\"'delete'\"\n        (click)=\"removeFile(item.key)\"\n        prizmIconButton\n        appearanceType=\"ghost\"\n        appearance=\"secondary\"\n        size=\"s\"\n      ></button>\n\n      <div class=\"file__progress progress\">\n        <progress\n          class=\"progress__bar {{ item.value.progress | prizmUploadStatus : item.value.error }}\"\n          [value]=\"item.value.progress\"\n          prizmProgressBar\n          max=\"100\"\n          size=\"s\"\n        ></progress>\n        <span class=\"progress__value\">{{ item.value.progress }}%</span>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\n\nimport { PrizmFileUploadComponent } from './file-upload.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmFileUploadComponent],\n  exports: [PrizmFileUploadComponent],\n})\nexport class PrizmFileUploadModule {}\n","import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { prizmIsNativeFocusedIn } from '../../util/is-native-focused-in';\nimport { PrizmSize, prizmSizeBigger } from '../../util/size-bigger';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport { PolymorphOutletDirective } from '../../directives/polymorph';\n\n@Component({\n  selector: 'prizm-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, PolymorphOutletDirective],\n})\nexport class PrizmSpinnerComponent extends PrizmAbstractTestId {\n  @Input()\n  size: PrizmSize = 's';\n\n  @Input()\n  inheritColor = false;\n\n  @Input()\n  textContent: TemplateRef<unknown> | null = null;\n\n  @HostBinding('class._loading')\n  loading = true;\n\n  override readonly testId_ = 'ui_spinner';\n\n  constructor(\n    @Inject(DOCUMENT) private readonly documentRef: Document,\n    @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>\n  ) {\n    super();\n  }\n\n  get hasText(): boolean {\n    return !!this.textContent;\n  }\n\n  get isHorizontal(): boolean {\n    return !prizmSizeBigger(this.size);\n  }\n\n  get focused(): boolean {\n    return prizmIsNativeFocusedIn(this.elementRef.nativeElement);\n  }\n}\n","<div\n  class=\"z-loader\"\n  [class.z-loader_horizontal]=\"isHorizontal\"\n  [class.z-loader_inherit-color]=\"inheritColor\"\n  [attr.data-prizm-element-size]=\"size\"\n>\n  <svg class=\"z-icon\" focusable=\"false\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle class=\"z-circle\" cx=\"50\" cy=\"50\" r=\"50\" stroke-dasharray=\"314\"></circle>\n  </svg>\n\n  <div class=\"z-text\" *ngIf=\"hasText\" [class.z-text_horizontal]=\"isHorizontal\">\n    <ng-container [ngTemplateOutlet]=\"textContent\"></ng-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmSpinnerComponent } from './spinner.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmSpinnerComponent],\n  exports: [PrizmSpinnerComponent],\n})\nexport class PrizmSpinnerModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PrizmColumnStatus } from '../column-settings.model';\n\n@Pipe({\n  name: 'prizmColumnIcon',\n  standalone: true,\n})\nexport class PrizmColumnIconPipe implements PipeTransform {\n  public transform(status: PrizmColumnStatus): string {\n    let icon = 'sort-eye';\n    switch (status) {\n      case 'hidden':\n        icon = 'sort-eye-off-2';\n        break;\n\n      case 'sticky':\n        icon = 'account-lock';\n        break;\n    }\n    return icon;\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PrizmAbstractTestId } from '../../../../abstract/interactive';\nimport { PrizmColumnSettings } from './../../column-settings.model';\nimport { PrizmLanguageColumnSettings } from '@prizm-ui/i18n';\nimport { CDK_DRAG_CONFIG, DragDropConfig, DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmColumnIconPipe } from '../../pipes/column-icon.pipe';\nimport { PrizmButtonComponent } from '../../../button/button.component';\nimport { PrizmToggleComponent } from '../../../toggle/toggle.component';\nimport { PrizmIconComponent } from '../../../icon/icon.component';\nimport { PrizmScrollbarComponent } from '../../../scrollbar/scrollbar.component';\nimport { PrizmHintDirective } from '../../../../directives/hint/hint.directive';\nimport { PrizmListingItemComponent } from '../../../listing-item';\n\nconst DragConfig: DragDropConfig = {\n  zIndex: 9999,\n};\n\n@Component({\n  selector: 'prizm-column-drop-list',\n  templateUrl: './column-drop-list.component.html',\n  styleUrls: ['./column-drop-list.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: CDK_DRAG_CONFIG, useValue: DragConfig }],\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmButtonComponent,\n    PrizmToggleComponent,\n    DragDropModule,\n    PrizmIconComponent,\n    PrizmScrollbarComponent,\n    PrizmLetDirective,\n    PrizmPluckPipe,\n    PrizmHintDirective,\n    FormsModule,\n    PrizmThemeModule,\n    PrizmColumnIconPipe,\n    PrizmListingItemComponent,\n  ],\n})\nexport class PrizmColumnDropListComponent extends PrizmAbstractTestId {\n  @Input() columns!: PrizmColumnSettings[];\n  @Input() translations!: PrizmLanguageColumnSettings['columnSettings'];\n  @Input() isLastColumnShown = false;\n  @Output() statusChanged = new EventEmitter<void>();\n\n  override readonly testId_ = 'ui_column_drop-list';\n\n  public toggleColumnStatus(column: PrizmColumnSettings): void {\n    if (column.status === 'default') {\n      column.status = 'hidden';\n    } else if (column.status === 'hidden') {\n      column.status = 'default';\n    }\n    this.statusChanged.emit();\n  }\n}\n","<prizm-scrollbar class=\"scroll-box\">\n  <ng-container *ngIf=\"columns.length; else dropZone\">\n    <prizm-listing-item\n      *ngFor=\"let column of columns\"\n      cdkDrag\n      cdkDragPreviewClass=\"prizm-high-index\"\n      prizmTheme\n    >\n      <ng-container leftBox>\n        <prizm-icon [size]=\"24\" iconClass=\"editor-dots\"></prizm-icon>\n      </ng-container>\n      <span>{{ column.name }}</span>\n      <ng-container rightBox>\n        <button\n          [icon]=\"column.status | prizmColumnIcon\"\n          [disabled]=\"column.status === 'sticky' || (isLastColumnShown && column.status === 'default')\"\n          [prizmHint]=\"\n            isLastColumnShown && column.status === 'default'\n              ? (translations | prizmPluck : ['disabledHint'])\n              : ''\n          \"\n          (click)=\"toggleColumnStatus(column)\"\n          prizmIconButton\n          appearanceType=\"ghost\"\n          appearance=\"secondary\"\n          size=\"m\"\n        ></button>\n      </ng-container>\n      <ng-container *cdkDragPlaceholder>\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n      </ng-container>\n    </prizm-listing-item>\n  </ng-container>\n</prizm-scrollbar>\n\n<ng-template #dropZone>\n  <div class=\"dropzone\">{{ translations | prizmPluck : ['dropzone'] }}</div>\n</ng-template>\n\n<ng-template #placeholder>\n  <div class=\"dropzone\"></div>\n</ng-template>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { PrizmAbstractTestId } from '../../abstract/interactive';\nimport {\n  CdkDragDrop,\n  CdkDropList,\n  DragDropModule,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { PrizmColumnSettings, PrizmColumnStatus, PrizmTableSettings } from './column-settings.model';\nimport { PrizmLanguageColumnSettings } from '@prizm-ui/i18n';\nimport { Observable } from 'rxjs';\nimport { PRIZM_COLUMN_SETTINGS } from '../../tokens';\nimport { prizmI18nInitWithKey } from '../../services';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport { CommonModule } from '@angular/common';\nimport { PrizmCardComponent } from '../card';\nimport { PrizmButtonComponent } from '../button';\nimport { PrizmToggleComponent } from '../toggle';\nimport { PrizmIconComponent } from '../icon';\nimport { PrizmScrollbarComponent } from '../scrollbar';\nimport { PrizmLetDirective, PrizmPluckPipe } from '@prizm-ui/helpers';\nimport { PrizmHintDirective } from '../../directives';\nimport { FormsModule } from '@angular/forms';\nimport { PrizmThemeModule } from '@prizm-ui/theme';\nimport { PrizmColumnIconPipe } from './pipes/column-icon.pipe';\nimport { PrizmColumnDropListComponent } from './components/column-drop-list/column-drop-list.component';\n\n@Component({\n  selector: 'prizm-column-settings',\n  templateUrl: './column-settings.component.html',\n  styleUrls: ['./column-settings.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CommonModule,\n    PrizmCardComponent,\n    PrizmButtonComponent,\n    PrizmToggleComponent,\n    DragDropModule,\n    PrizmIconComponent,\n    PrizmScrollbarComponent,\n    PrizmColumnDropListComponent,\n    PrizmLetDirective,\n    PrizmPluckPipe,\n    PrizmHintDirective,\n    FormsModule,\n    PrizmThemeModule,\n    PrizmColumnIconPipe,\n  ],\n  providers: [...prizmI18nInitWithKey(PRIZM_COLUMN_SETTINGS, 'columnSettings')],\n})\nexport class PrizmColumnSettingsComponent extends PrizmAbstractTestId implements AfterViewInit {\n  @ViewChild('stickyLeftList', { read: CdkDropList }) stickyLeftList: CdkDropList | undefined;\n  @ViewChild('columnList', { read: CdkDropList }) columnList: CdkDropList | undefined;\n  @ViewChild('stickyRightList', { read: CdkDropList }) stickyRightList: CdkDropList | undefined;\n\n  public _settings!: PrizmTableSettings;\n  @Input() set settings(value: PrizmTableSettings) {\n    this._settings = cloneDeep(value);\n  }\n  @Input() defaultSettings: PrizmTableSettings | undefined;\n  @Input() stickySettings = false;\n  @Input() headerSettings = false;\n  @Output() isSettingsChanged = new EventEmitter<PrizmTableSettings | null>();\n\n  public isLastColumnShown = false;\n  public connectedColumns: CdkDropList[] = [];\n  public connectedLeft: CdkDropList[] = [];\n  public connectedRight: CdkDropList[] = [];\n\n  override readonly testId_ = 'ui_column_settings';\n\n  constructor(\n    @Inject(PRIZM_COLUMN_SETTINGS)\n    public readonly columnSettings$: Observable<PrizmLanguageColumnSettings['columnSettings']>\n  ) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.stickySettings) {\n      this.connectedColumns = [this.stickyLeftList as CdkDropList, this.stickyRightList as CdkDropList];\n      this.connectedLeft = [this.columnList as CdkDropList, this.stickyRightList as CdkDropList];\n      this.connectedRight = [this.columnList as CdkDropList, this.stickyLeftList as CdkDropList];\n    }\n  }\n\n  public resetToDeafault(): void {\n    this._settings = cloneDeep(this.defaultSettings as PrizmTableSettings);\n    this.checkIsLastShown();\n  }\n\n  public drop(event: CdkDragDrop<PrizmColumnSettings[]>, status: PrizmColumnStatus) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      event.previousContainer.data[event.previousIndex].status = status;\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n      this.checkIsLastShown();\n    }\n  }\n\n  public showAll() {\n    this._settings.columns = this._settings.columns.map(el => {\n      return { ...el, status: 'default' };\n    });\n    this.checkIsLastShown();\n  }\n\n  public close(settings: PrizmTableSettings | null): void {\n    this.isSettingsChanged.emit(settings);\n  }\n\n  public checkIsLastShown(): void {\n    this.isLastColumnShown =\n      this._settings.columns.filter(el => el.status === 'default').length <= 1 &&\n      !(this._settings.stickyLeft.length || this._settings.stickyRight.length);\n  }\n}\n","<div class=\"container\" *prizmLet=\"columnSettings$ | async as translations\">\n  <div class=\"header\">\n    <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['title'] }}</div>\n    <button\n      *ngIf=\"defaultSettings\"\n      (click)=\"resetToDeafault()\"\n      prizmButton\n      appearanceType=\"ghost\"\n      appearance=\"danger\"\n      size=\"m\"\n    >\n      {{ translations | prizmPluck : ['resetBtn'] }}\n    </button>\n  </div>\n  <div class=\"section\" *ngIf=\"headerSettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['subTitle'] }}</div>\n    </div>\n    <div class=\"section-toggle\">\n      <prizm-toggle [(ngModel)]=\"_settings.fixHeader\" size=\"m\"></prizm-toggle>\n      <span class=\"prizm-font-main-body-14\">{{ translations | prizmPluck : ['fixHeaderToggle'] }}</span>\n    </div>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyLeft'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      class=\"column-list\"\n      #stickyLeftList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyLeft\"\n      [cdkDropListConnectedTo]=\"connectedLeft\"\n      [columns]=\"_settings.stickyLeft\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\">\n    <div class=\"section-header\">\n      <div class=\"title prizm-font-title-h4\">{{ translations | prizmPluck : ['mainColumns'] }}</div>\n      <div class=\"show-all\" (click)=\"showAll()\">\n        {{ translations | prizmPluck : ['showAllBtn'] }}\n      </div>\n    </div>\n    <prizm-column-drop-list\n      #columnList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.columns\"\n      [cdkDropListConnectedTo]=\"connectedColumns\"\n      [columns]=\"_settings.columns\"\n      [isLastColumnShown]=\"isLastColumnShown\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'default')\"\n      (statusChanged)=\"checkIsLastShown()\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"section\" *ngIf=\"stickySettings\">\n    <div class=\"section-header\">\n      <div class=\"prizm-font-title-h4\">{{ translations | prizmPluck : ['stickyRight'] }}</div>\n    </div>\n    <prizm-column-drop-list\n      #stickyRightList=\"cdkDropList\"\n      [cdkDropListData]=\"_settings.stickyRight\"\n      [cdkDropListConnectedTo]=\"connectedRight\"\n      [columns]=\"_settings.stickyRight\"\n      [translations]=\"translations\"\n      (cdkDropListDropped)=\"drop($event, 'sticky')\"\n      cdkDropList\n    ></prizm-column-drop-list>\n  </div>\n  <div class=\"footer prizm-font-btn-links-14\">\n    <div class=\"buttons\">\n      <button (click)=\"close(null)\" appearance=\"secondary\" appearanceType=\"ghost\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['cancelBtn'] }}\n      </button>\n      <button (click)=\"close(_settings)\" appearance=\"primary\" size=\"m\" prizmButton>\n        {{ translations | prizmPluck : ['saveBtn'] }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { PrizmColumnSettingsComponent } from './column-settings.component';\nimport { PrizmColumnDropListComponent } from './components/column-drop-list/column-drop-list.component';\n\n/**\n * @deprecated\n * use standalone\n * */\n@NgModule({\n  imports: [PrizmColumnSettingsComponent, PrizmColumnDropListComponent],\n  exports: [PrizmColumnSettingsComponent],\n})\nexport class PrizmColumnSettingsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["prizmTypedFromEvent","PRIZM_REMOVED_ELEMENT","i1","i2","i3","mergeObs","i1.PrizmEventZoneService","prizmWatch","i1.PrizmOverscrollService","i1.PrizmHoveredService","i2.PrizmOverlayControl","i5.PrizmScrollbarComponent","i1.PrizmFocusVisibleService","i2.PrizmHoveredService","i2.PolymorphOutletDirective","i3.PrizmFocusTrapDirective","i4.PrizmButtonComponent","i5","i3.PolymorphOutletDirective","i5.PrizmButtonComponent","i6.PrizmFocusTrapDirective","i7.PrizmScrollbarComponent","DEFAULT_OPTIONS","i4.PrizmScrollbarComponent","i5.PrizmIconComponent","i1.PrizmStickyRelativeService","switchMap","i1.PrizmInputZoneService","i2.PrizmInputZoneService","i2.PrizmIconComponent","i1.PrizmTableTreeService","i2.PrizmTableSorterService","i3.PrizmTableService","i1.PrizmTableSorterService","i3.PrizmIconComponent","i4.PrizmResizedDirective","i4","i1.PrizmTableRowService","i2.PrizmTableTreeService","i5.PolymorphOutletDirective","i6.PrizmIconComponent","i7.PrizmTableRowInitDirective","i8.PrizmTrDirective","i1.PrizmTdService","i1.PrizmTableService","i2.PrizmThGroupService","PrizmMapperPipe","PrizmMapperPipeModule","i1.PolymorphOutletDirective","i1.PrizmIconComponent","i4.PrizmHintDirective","i5.PrizmInputIconButtonComponent","i1.PrizmInputLayoutComponent","i2.PrizmInputIconButtonComponent","i3.PrizmInputIconButtonComponent","i1.PrizmInputTextComponent","i1.PrizmInputIconButtonComponent","i1.PrizmInputLayoutLeftDirective","i2.PrizmInputLayoutRightDirective","i2.PrizmMapperPipe","i3.PrizmRepeatTimesDirective","i4.PrizmHoveredDirective","i6.PrizmCalendarSheetPipe","i2.PrizmFocusVisibleDirective","i3.PrizmFocusedDirective","i4.PrizmFocusableDirective","i5.PrizmPreventDefaultDirective","i6.PrizmButtonComponent","i3.PrizmPrimitiveSpinButtonComponent","i4.PrizmMonthPipe","ITEMS_IN_ROW","i2.PrizmMonthPipe","i3.PrizmMapperPipe","i1.PrizmOverlayService","i2.PrizmZoneEventService","i6.PrizmLifecycleDirective","i8.PolymorphOutletDirective","i9.PrizmMutationObserveDirective","i3.PrizmPreventDefaultDirective","i4.PrizmCalendarComponent","i5.PrizmInputLayoutComponent","i6.PrizmInputIconButtonComponent","i7.PrizmInputTextComponent","i8.PrizmLinkComponent","i9","i10.PrizmDropdownHostComponent","i1.PrizmCalendarComponent","i2.PrizmLifecycleDirective","i5.PrizmCalendarComponent","i7.PrizmInputLayoutRightDirective","i8.PrizmInputTextComponent","i10","i3.PrizmButtonComponent","i4.PrizmPreventDefaultDirective","i3.PrizmInputLayoutComponent","i4.PrizmInputIconButtonComponent","i5.PrizmInputTextComponent","i6.PrizmDropdownHostComponent","i7.PrizmCalendarRangeComponent","i8","i3.PrizmInputZoneDirective","i4.PrizmInputInZoneDirective","i6.PrizmInputLayoutRightDirective","MenuItems","ValidationPattern","i2.PrizmInputLayoutComponent","i4.PrizmInputTextComponent","i4.PrizmInputStatusTextDirective","i5.PrizmInputLayoutRightDirective","i6.PrizmInputTextComponent","i4.PrizmDataListComponent","i7.PrizmInputStatusTextDirective","i9.PrizmLifecycleDirective","i10.PrizmPreventDefaultDirective","i11.PrizmCalendarComponent","i12.PrizmDropdownHostComponent","tap","i3.PrizmInputStatusTextDirective","i4.PrizmInputLayoutRightDirective","i6","i7","i8.PrizmInputZoneDirective","i9.PrizmInputInZoneDirective","i10.PrizmLifecycleDirective","i11.PrizmPreventDefaultDirective","i3.PrizmDataListComponent","i4.PrizmDropdownHostComponent","i2.PrizmStopPropagationDirective","i5.PrizmFocusableDirective","i2.PrizmCalendarMonthComponent","i3.PrizmDropdownHostComponent","i6.PolymorphOutletDirective","i7.PrizmInputLayoutComponent","i8.PrizmInputIconButtonComponent","i9.PrizmInputTextComponent","i10.PrizmMapperPipe","i4.PrizmLifecycleDirective","i8.PrizmMapperPipe","i2.PrizmInputDateRangeComponent","i3.PrizmDropdownZoneDirective","i5.PrizmInputTimeComponent","i5.PrizmLifecycleDirective","i6.PrizmInputLayoutTimeComponent","i9.PrizmInputLayoutRightDirective","i10.PrizmInputTextComponent","i11","i1.PrizmCalendarMonthComponent","i2.PrizmDropdownHostComponent","i4.PrizmInputLayoutComponent","i9.PrizmMapperPipe","i3.PrizmCalendarMonthComponent","i6.PrizmMapperPipe","i7.PrizmHintDirective","i9.PrizmDropdownControllerDirective","i9.PrizmAutoFocusDirective","i10.PrizmDropdownControllerDirective","i2.PrizmSelectInputComponent","i1.PrizmToastRef","i4.PrizmIndicatorComponent","i1.PrizmToastService","i3.PrizmScrollbarComponent","i4.ToastWrapperComponent","i2.PrizmToastService","i1.PrizmToastControl","i4.PrizmFocusTrapDirective","i2.PrizmButtonComponent","i2.PrizmLoaderComponent","i3.PrizmExpandComponent","i4.PrizmTreeItemComponent","i5.PrizmTreeNodeDirective","i1.ActiveNavigationItemService","i3.PrizmHintDirective","i4.PrizmNavigationItemSimpleComponent","i3.PrizmNavigationItemSimpleComponent","i4.PrizmNavigationItemExpandableComponent","i2.PrizmNavigationMenuToolbarService","i2.PrizmHoveredDirective","i1.PrizmTreeComponent","i2.PrizmTreeChildrenDirective","i3.PrizmTreeControllerDirective","i1.PrizmNavigationMenuToolbarService","i2.PrizmNavigationMenuGroupService","i3.PrizmNavigationMenuService","i1.PrizmNavigationMenuService","i5.PrizmDataListComponent","i2.PrizmTabsService","i4.PrizmCounterComponent","i6.PrizmChipsComponent","i10.PrizmIconComponent","i11.PrizmAutoFocusDirective","i13.PrizmDataListComponent","i14.PrizmCheckboxComponent","i16.PrizmDropdownHostComponent","i5.PrizmInputLayoutInBodyDirective","i7.PrizmChipsComponent","i2.PrizmFocusedDirective","i3.PrizmFocusableDirective","i4.PrizmFocusVisibleDirective","i5.PrizmHoveredDirective","i6.PrizmPressedDirective","i7.PrizmCheckedDirective","i9.PrizmLoaderComponent","i10.PolymorphOutletDirective","i11.PrizmIconComponent","i1.PrizmSplitterService","i2.PrizmSplitterService","i1.PrizmCronService","i4.PrizmInputCarouselComponent","i1.PrizmCronUiHourState","i5.PrizmRadioButtonComponent","i6.PrizmCronScheduleComponent","i7.PrizmCronCarouselComponent","i1.PrizmCronUiYearState","i5.PrizmChipsComponent","i6.PrizmInputLayoutComponent","i7.PrizmInputAllowedSymbolsDirective","i8.PrizmRadioButtonComponent","i10.PrizmCronScheduleComponent","i11.PrizmCronCarouselComponent","i1.PrizmCronUiDayState","i8.PrizmCronWeekPipe","i1.PrizmCronUiMonthState","i8.PrizmCronMonthPipe","i1.PrizmCronUiMinuteState","i1.PrizmCronUiSecondState","i3.PrizmCronUiSecondState","i4.PrizmCronUiHourState","i5.PrizmCronUiYearState","i6.PrizmCronUiMonthState","i7.PrizmCronUiMinuteState","i8.PrizmCronUiDayState","i10.PrizmInputHintDirective","i11.PrizmInputLayoutComponent","i12.PrizmInputIconButtonComponent","i13","i14.PrizmHintDirective","i15.PrizmInputLayoutDateTimeComponent","i16.PrizmInputTextComponent","i17.PrizmToggleComponent","i18.PrizmSwitcherComponent","i19.PrizmScrollbarComponent","i20.PrizmCronHourComponent","i21.PrizmCronYearComponent","i22.PrizmCronDayComponent","i23.PrizmCronMonthComponent","i24.PrizmCronMinuteComponent","i25.PrizmCronSecondComponent","i26.PrizmButtonComponent"],"mappings":"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"}