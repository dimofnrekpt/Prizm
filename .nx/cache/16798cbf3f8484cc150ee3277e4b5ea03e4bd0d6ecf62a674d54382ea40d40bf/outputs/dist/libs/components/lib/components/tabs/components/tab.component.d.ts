import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { PrizmTabCounterOptions, PrizmTabType } from '../tabs.interface';
import { PrizmTabsService } from '../tabs.service';
import { PolymorphContent } from '../../../directives';
import { Observable } from 'rxjs';
import { PrizmDestroyService, PrizmLetContextService } from '@prizm-ui/helpers';
import { PrizmTabContext, PrizmTabMenuContext } from '../tabs.model';
import { PrizmAbstractTestId } from '../../../abstract/interactive';
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class PrizmTabComponent extends PrizmAbstractTestId implements OnInit, OnDestroy {
    private readonly inMenuContextService;
    readonly tabsService: PrizmTabsService;
    readonly destroy: PrizmDestroyService;
    readonly el: ElementRef<HTMLElement>;
    type: PrizmTabType;
    icon: PolymorphContent<PrizmTabContext> | null;
    content: PolymorphContent<PrizmTabContext> | null;
    closeIcon: PolymorphContent<PrizmTabContext>;
    count: number;
    _counterOptions: PrizmTabCounterOptions;
    set counterOptions(value: Partial<PrizmTabCounterOptions> | undefined);
    closable: boolean;
    get disabled(): BooleanInput;
    set disabled(value: BooleanInput);
    private _disabled;
    private idx_;
    readonly idx$: Observable<number>;
    get idx(): number | null;
    closeTab: EventEmitter<void>;
    private currentDomIdx;
    readonly testId_ = "ui_tab";
    readonly isActiveTab$: Observable<boolean>;
    readonly tab$: Observable<PrizmTabComponent>;
    constructor(inMenuContextService: PrizmLetContextService<PrizmTabMenuContext>, tabsService: PrizmTabsService, destroy: PrizmDestroyService, el: ElementRef<HTMLElement>);
    ngOnDestroy(): void;
    private isFromMenuTab;
    private isMainProjectedTab;
    private initUpdateIndexOnDomUpdateListener;
    private initClickListenerToSelectTab;
    ngOnInit(): void;
    selectTab$(): Observable<unknown>;
    onClose(event: MouseEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmTabComponent, [{ optional: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmTabComponent, "prizm-tab", never, { "type": "type"; "icon": "icon"; "content": "content"; "closeIcon": "closeIcon"; "count": "count"; "counterOptions": "counterOptions"; "closable": "closable"; "disabled": "disabled"; }, { "closeTab": "closeTab"; }, never, never, true, never>;
}
