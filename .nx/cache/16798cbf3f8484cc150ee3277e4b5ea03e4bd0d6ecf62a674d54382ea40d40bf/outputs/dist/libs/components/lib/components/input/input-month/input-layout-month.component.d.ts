import { ElementRef, Injector } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { PrizmMonth } from '../../../@core/date-time/month';
import { PrizmYear } from '../../../@core/date-time/year';
import { PrizmInputDateOptions } from '../../../tokens/input-date-options';
import { PrizmDateButton } from '../../../types/date-button';
import { PrizmBooleanHandler, PrizmHandler } from '../../../types/handler';
import { PrizmInputNgControl } from '../common';
import * as i0 from "@angular/core";
export declare class PrizmInputLayoutMonthComponent extends PrizmInputNgControl<PrizmMonth | null> {
    readonly formatter: PrizmHandler<PrizmMonth | null, Observable<string>>;
    private readonly options;
    readonly hasClearButton = true;
    readonly nativeElementType = "input-month";
    readonly testId_ = "ui_input_month";
    readonly focusableElement?: ElementRef<HTMLInputElement>;
    min: PrizmMonth;
    extraButtonInjector: Injector;
    placeholder: string;
    max: PrizmMonth;
    disabledItemHandler: PrizmBooleanHandler<PrizmMonth>;
    open: boolean;
    activeYear: PrizmYear;
    rightButtons$: BehaviorSubject<PrizmDateButton[]>;
    get interactive(): boolean;
    onClick(): void;
    constructor(formatter: PrizmHandler<PrizmMonth | null, Observable<string>>, options: PrizmInputDateOptions, injector: Injector);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): PrizmInputDateOptions['icon'];
    onValueChange(value: string): void;
    onMonthClick(month: PrizmMonth): void;
    onOpenChange(open: boolean): void;
    private close;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmInputLayoutMonthComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmInputLayoutMonthComponent, "prizm-input-layout-month", never, { "min": "min"; "extraButtonInjector": "extraButtonInjector"; "placeholder": "placeholder"; "max": "max"; "disabledItemHandler": "disabledItemHandler"; }, {}, never, never, true, never>;
}
