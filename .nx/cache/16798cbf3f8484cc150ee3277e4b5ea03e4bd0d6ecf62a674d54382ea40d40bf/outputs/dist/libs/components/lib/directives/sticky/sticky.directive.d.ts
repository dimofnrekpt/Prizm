import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { PrizmDestroyService } from '@prizm-ui/helpers';
import { PrizmStickyRelativeService } from './sticky-relative.service';
import * as i0 from "@angular/core";
export declare class PrizmStickyDirective implements OnChanges, OnDestroy, OnInit {
    readonly elRef: ElementRef<HTMLElement>;
    private readonly renderer;
    private readonly relativeService;
    private readonly destroy$;
    prizmStickyLeft: boolean;
    prizmStickyRight: boolean;
    prizmStickyTop: boolean;
    prizmStickyBottom: boolean;
    prizmStickyRelative?: HTMLElement;
    position: string;
    stylesOnSticky?: Record<string, unknown>;
    get applySticky(): string;
    private setActiveStyle;
    private readonly destroyPrevious$;
    private readonly changedSides;
    constructor(elRef: ElementRef<HTMLElement>, renderer: Renderer2, relativeService: PrizmStickyRelativeService, destroy$: PrizmDestroyService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    private setStylesIfExist;
    private clearStylesIfSet;
    private init;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmStickyDirective, [null, null, { optional: true; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PrizmStickyDirective, "[prizmStickyLeft], [prizmStickyRight], [prizmStickyTop], [prizmStickyBottom]", never, { "prizmStickyLeft": "prizmStickyLeft"; "prizmStickyRight": "prizmStickyRight"; "prizmStickyTop": "prizmStickyTop"; "prizmStickyBottom": "prizmStickyBottom"; "prizmStickyRelative": "prizmStickyRelative"; "position": "position"; "stylesOnSticky": "stylesOnSticky"; }, {}, never, never, false, never>;
}
