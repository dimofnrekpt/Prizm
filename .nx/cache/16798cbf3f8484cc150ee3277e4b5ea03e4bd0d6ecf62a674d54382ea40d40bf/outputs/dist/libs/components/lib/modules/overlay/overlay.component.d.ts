import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, ElementRef, Injector, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { PrizmDestroyService } from '@prizm-ui/helpers';
import { PrizmThemeService } from '@prizm-ui/theme';
import { PrizmOverlayConfig, PrizmOverlayContent, PrizmOverlayId } from './models';
import { PrizmOverlayAbstractPosition } from './position/position';
import * as i0 from "@angular/core";
export declare class PrizmOverlayComponent implements OnInit, AfterViewInit, OnDestroy {
    readonly inj: Injector;
    readonly theme: PrizmThemeService;
    private readonly cd;
    private readonly destroy$;
    private readonly compResolver;
    private readonly overlayElRef;
    compOutlet: ViewContainerRef;
    content: PrizmOverlayContent;
    config: PrizmOverlayConfig;
    position: PrizmOverlayAbstractPosition;
    zid: PrizmOverlayId;
    zIndex: number;
    el: HTMLElement | any;
    wrapperEl: HTMLElement | any;
    extra: string;
    parentInjector: any;
    compInstance: any;
    parentContainer: HTMLElement;
    get stylePosition(): string;
    constructor(inj: Injector, theme: PrizmThemeService, cd: ChangeDetectorRef, destroy$: PrizmDestroyService, compResolver: ComponentFactoryResolver, overlayElRef: ElementRef<HTMLElement>);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private initStyleVars;
    setComponent(props: Record<string, unknown>): Record<string, any>;
    updateTextContent(data: string): void;
    ngOnDestroy(): void;
    private listenPos;
    private updatePos;
    private setPos;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrizmOverlayComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PrizmOverlayComponent, "prizm-overlay", never, {}, {}, never, never, true, never>;
}
