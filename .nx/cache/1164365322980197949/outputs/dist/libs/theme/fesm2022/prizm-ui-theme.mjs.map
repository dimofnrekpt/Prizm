{"version":3,"file":"prizm-ui-theme.mjs","sources":["../../../../libs/theme/src/lib/services/theme.service.ts","../../../../libs/theme/src/lib/directive/theme/local-theme.service.ts","../../../../libs/theme/src/lib/directive/theme/theme.directive.ts","../../../../libs/theme/src/lib/directive/theme/const.ts","../../../../libs/theme/src/lib/directive/theme/theme-inverted-values.service.ts","../../../../libs/theme/src/lib/directive/theme/theme-inverted.directive.ts","../../../../libs/theme/src/lib/directive/theme/theme-inverted-values.directive.ts","../../../../libs/theme/src/lib/directive/theme/theme.module.ts","../../../../libs/theme/src/prizm-ui-theme.ts"],"sourcesContent":["import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { PrizmTheme } from '../types/theme';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmThemeService implements OnDestroy {\n  private rootElement_!: HTMLElement | null;\n  public set rootElement(el: HTMLElement | null) {\n    this.rootElement_ = el;\n  }\n  public get rootElement(): HTMLElement {\n    return (this.rootElement_ as HTMLElement) ?? this.document.querySelector('body');\n  }\n  private readonly themeStorage = new Map<HTMLElement, string>();\n\n  private readonly changeSource$ = new BehaviorSubject<{\n    theme: PrizmTheme;\n    el?: HTMLElement;\n  }>({\n    theme: 'light',\n  });\n  readonly change$ = this.changeSource$.pipe(\n    tap(data => data.el && this.themeStorage.set(data.el, data.theme))\n  );\n  public get value(): string {\n    return this.changeSource$.value.theme;\n  }\n  readonly changesTheme$ = this.change$.pipe(map(i => i.theme));\n  public readonly attThemeKey = 'data-prizm-theme';\n  public readonly subscription = new Subscription();\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this.subscription.add(this.change$.pipe(tap(theme => this.setToHtml(theme.theme, theme.el))).subscribe());\n  }\n\n  public getLastThemeForElement(el: HTMLElement = this.rootElement): string | null {\n    let theme = this.themeStorage.get(el);\n    if (el !== this.rootElement_)\n      theme = el.closest(`[${this.attThemeKey}]`)?.getAttribute(this.attThemeKey) as string;\n    return theme ?? null;\n  }\n\n  public getLastThemeForElement$(el: HTMLElement = this.rootElement): Observable<string | null> {\n    return this.change$.pipe(\n      map(() => this.getLastThemeForElement(el)),\n      distinctUntilChanged()\n    );\n  }\n\n  public getInvertedThemeByElement$(\n    element = this.rootElement,\n    pairThemeValues: Record<string, string> = {\n      light: 'dark',\n      dark: 'light',\n    }\n  ): Observable<string | null> {\n    return this.getLastThemeForElement$(element).pipe(map(theme => theme && pairThemeValues[theme]));\n  }\n\n  public getByElement(el?: HTMLElement): PrizmTheme {\n    return (el ?? this.rootElement)?.getAttribute(this.attThemeKey) as PrizmTheme;\n  }\n\n  private setToHtml(theme: PrizmTheme, el?: HTMLElement): void {\n    (el ?? this.rootElement)?.setAttribute(this.attThemeKey, theme);\n  }\n\n  public update(theme: PrizmTheme, el: HTMLElement = this.rootElement): void {\n    this.changeSource$.next({\n      theme,\n      el,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrizmTheme } from '../../types';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class PrizmLocalThemeService {\n  private readonly theme$$ = new BehaviorSubject<PrizmTheme | null>(null);\n  readonly theme$ = this.theme$$.asObservable();\n\n  public setTheme(theme: PrizmTheme | null): void {\n    this.theme$$.next(theme);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n  SkipSelf,\n} from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { distinctUntilChanged, map, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmThemeService } from '../../services/theme.service';\nimport { PrizmTheme } from '../../types/theme';\nimport { prizmObservable } from '@prizm-ui/core';\nimport { combineLatest, of, ReplaySubject } from 'rxjs';\nimport { PrizmLocalThemeService } from './local-theme.service';\n\n@Directive({\n  selector: '[prizmTheme]',\n  providers: [PrizmDestroyService, PrizmLocalThemeService],\n})\nexport class PrizmThemeDirective implements OnInit {\n  @Output()\n  public readonly prizmThemeChange = new EventEmitter<PrizmTheme>();\n\n  @Input()\n  @prizmObservable({\n    name: 'theme$$',\n  })\n  public prizmTheme!: PrizmTheme;\n\n  private readonly theme$$: ReplaySubject<PrizmTheme> = new ReplaySubject(1);\n\n  constructor(\n    @Inject(ElementRef)\n    private readonly element: ElementRef<HTMLInputElement>,\n    private readonly themeService: PrizmThemeService,\n    @Self() private readonly localThemeService: PrizmLocalThemeService,\n    @Optional() @SkipSelf() private readonly parentLocalThemeService: PrizmLocalThemeService,\n    private readonly destroy$: PrizmDestroyService,\n    private readonly renderer2: Renderer2\n  ) {}\n\n  public ngOnInit(): void {\n    const themeArr = [\n      this.theme$$,\n      this.parentLocalThemeService?.theme$ ?? of(null),\n      this.themeService.getLastThemeForElement$(this.themeService.rootElement),\n    ];\n    combineLatest(themeArr)\n      .pipe(\n        map(([theme, localTheme, themeFromService]) => theme || localTheme || themeFromService),\n        distinctUntilChanged(),\n        tap(theme => {\n          this.localThemeService.setTheme(theme);\n          this.renderer2.setAttribute(\n            this.element.nativeElement,\n            this.themeService.attThemeKey,\n            theme as PrizmTheme\n          );\n        }),\n        tap(theme => this.prizmThemeChange.next((this.prizmTheme = theme as PrizmTheme))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { PrizmThemeInvertedValues } from './model';\n\nexport const PRIZM_CONST_DEFAULT_INVERTED_VALUES: PrizmThemeInvertedValues = {\n  dark: 'light',\n  light: 'dark',\n};\n\nexport const PRIZM_THEME_INVERTED_VALUES = new InjectionToken<PrizmThemeInvertedValues>(\n  `Prizm Theme inverted values`,\n  {\n    factory: (): PrizmThemeInvertedValues => PRIZM_CONST_DEFAULT_INVERTED_VALUES,\n  }\n);\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PrizmThemeInvertedValues } from './model';\nimport { PRIZM_CONST_DEFAULT_INVERTED_VALUES } from './const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrizmThemeInvertedValuesService {\n  readonly value$$: BehaviorSubject<PrizmThemeInvertedValues>;\n\n  private invertedValues: PrizmThemeInvertedValues;\n\n  constructor(\n    @Inject('PRIZM_THEME_INVERTED_VALUES') @Optional() customInvertedValues: PrizmThemeInvertedValues\n  ) {\n    this.invertedValues = customInvertedValues ?? PRIZM_CONST_DEFAULT_INVERTED_VALUES;\n    this.value$$ = new BehaviorSubject<PrizmThemeInvertedValues>(this.invertedValues);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, inject, Input, OnInit, Output } from '@angular/core';\nimport { PrizmDestroyService } from '@prizm-ui/helpers';\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { PrizmThemeService } from '../../services/theme.service';\nimport { PrizmTheme } from '../../types/theme';\nimport { prizmObservable } from '@prizm-ui/core';\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { PrizmThemeInvertedValuesService } from './theme-inverted-values.service';\n\n@Directive({\n  selector: '[prizmThemeInverted]',\n  providers: [PrizmDestroyService],\n})\nexport class PrizmThemeInvertedDirective implements OnInit {\n  readonly themeService: PrizmThemeService = inject(PrizmThemeService);\n  readonly elementRef: ElementRef = inject(ElementRef);\n  readonly destroy$: PrizmDestroyService = inject(PrizmDestroyService);\n  readonly themeInvertedValuesService: PrizmThemeInvertedValuesService = inject(\n    PrizmThemeInvertedValuesService\n  );\n\n  @Output()\n  public readonly prizmThemeChange = new EventEmitter<PrizmTheme>();\n\n  @Input()\n  @prizmObservable({\n    name: 'themeElement$$',\n    subject: () => new ReplaySubject(1),\n  })\n  public themeElement = this.themeService.rootElement;\n\n  private readonly themeElement$$!: Observable<HTMLElement>;\n\n  public ngOnInit(): void {\n    combineLatest([this.themeInvertedValuesService.value$$, this.themeElement$$])\n      .pipe(\n        switchMap(([invertedValues, themeElement]) =>\n          invertedValues?.['*']\n            ? of(invertedValues?.['*'])\n            : this.themeService.getInvertedThemeByElement$(themeElement, invertedValues)\n        ),\n        tap(newTheme => newTheme && this.themeService.update(newTheme, this.elementRef.nativeElement)),\n        tap(newTheme => newTheme && this.prizmThemeChange.next(newTheme)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n}\n","import { Directive, Input, OnChanges, Self } from '@angular/core';\nimport { PrizmThemeInvertedValues } from './model';\nimport { PrizmThemeInvertedValuesService } from './theme-inverted-values.service';\n\n@Directive({\n  selector: '[prizmThemeInvertedValues]',\n  providers: [PrizmThemeInvertedValuesService],\n})\nexport class PrizmThemeInvertedValuesDirective implements OnChanges {\n  @Input()\n  public prizmThemeInvertedValues!: PrizmThemeInvertedValues;\n\n  constructor(@Self() readonly themeInvertedValuesService: PrizmThemeInvertedValuesService) {}\n\n  ngOnChanges(): void {\n    this.themeInvertedValuesService.value$$.next(this.prizmThemeInvertedValues);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmThemeDirective } from './theme.directive';\nimport { PrizmThemeInvertedDirective } from './theme-inverted.directive';\nimport { PrizmThemeInvertedValuesDirective } from './theme-inverted-values.directive';\n\n@NgModule({\n  declarations: [PrizmThemeDirective, PrizmThemeInvertedDirective, PrizmThemeInvertedValuesDirective],\n  exports: [PrizmThemeDirective, PrizmThemeInvertedDirective, PrizmThemeInvertedValuesDirective],\n})\nexport class PrizmThemeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.PrizmThemeService","i2.PrizmLocalThemeService","i1.PrizmThemeInvertedValuesService"],"mappings":"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"}