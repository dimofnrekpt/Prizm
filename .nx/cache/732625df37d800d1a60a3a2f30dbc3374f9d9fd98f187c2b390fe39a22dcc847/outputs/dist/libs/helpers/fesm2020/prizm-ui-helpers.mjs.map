{"version":3,"file":"prizm-ui-helpers.mjs","sources":["../../../../libs/helpers/src/lib/pipes/call-func/call-func.pipe.ts","../../../../libs/helpers/src/lib/pipes/call-func/call-func.module.ts","../../../../libs/helpers/src/lib/pipes/pluck/pluck.pipe.ts","../../../../libs/helpers/src/lib/pipes/pluck/pluck.module.ts","../../../../libs/helpers/src/lib/pipes/to-type/to-type.pipe.ts","../../../../libs/helpers/src/lib/pipes/to-type/to-type.module.ts","../../../../libs/helpers/src/lib/pipes/sanitize/sanitizer.pipe.ts","../../../../libs/helpers/src/lib/pipes/sanitize/sanitizer-pipe.module.ts","../../../../libs/helpers/src/lib/pipes/to-observable/to-observable.pipe.ts","../../../../libs/helpers/src/lib/pipes/to-observable/to-observable.module.ts","../../../../libs/helpers/src/lib/directives/let/let-context.service.ts","../../../../libs/helpers/src/lib/directives/let/let.directive.ts","../../../../libs/helpers/src/lib/directives/let/let.module.ts","../../../../libs/helpers/src/lib/services/destroy/destroy.service.ts","../../../../libs/helpers/src/lib/util/common.ts","../../../../libs/helpers/src/lib/util/compare/compare.ts","../../../../libs/helpers/src/lib/util/rxjs/rxjs.ts","../../../../libs/helpers/src/lib/util/rxjs/mutation-observer.ts","../../../../libs/helpers/src/lib/util/form/index.ts","../../../../libs/helpers/src/lib/util/decorators/log/log.ts","../../../../libs/helpers/src/lib/util/uuid.ts","../../../../libs/helpers/src/lib/util/style/style.ts","../../../../libs/helpers/src/lib/util/number/prizm-format-number.ts","../../../../libs/helpers/src/prizm-ui-helpers.ts"],"sourcesContent":["import { ChangeDetectorRef, EmbeddedViewRef, Pipe, PipeTransform } from '@angular/core';\n\ntype Method<T = any> = (this: T, ...args: any[]) => any;\ntype Head<T extends Method> = Parameters<T>[0];\ntype Tail<T extends Method> = T extends (first: any, ...rest: infer R) => any ? R : never;\n\n/**\n * Этот пайп позволяет снизить кол-во вызовов функций которые вызываются из шаблона,\n * когда входящие аргументы не меняются.\n *\n * @button <ng-container *ngIf=\"firstArg | prizmCallFunc : someMethod\">SomeValue</ng-container>\n * @button <ng-container>{{firstArg | prizmCallFunc : someMethod : secondArg}}</ng-container>\n */\n@Pipe({ name: 'prizmCallFunc', standalone: true })\nexport class PrizmCallFuncPipe<C> implements PipeTransform {\n  private readonly context: C;\n\n  // with Ivy you can inject EmbeddedViewRef directly\n  constructor(private cd: ChangeDetectorRef) {\n    this.context = (this.cd as EmbeddedViewRef<C>).context;\n  }\n\n  public transform<M extends Method<C>>(param: Head<M>, fn: M, ...params: Tail<M>): ReturnType<M> {\n    return fn.apply(this.context, [param, ...params]);\n  }\n}\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const CallFuncPipe = PrizmCallFuncPipe;\n","import { NgModule } from '@angular/core';\nimport { PrizmCallFuncPipe } from './call-func.pipe';\n\n/**\n * @deprecated\n * use standalone components instead\n * */\n@NgModule({\n  exports: [PrizmCallFuncPipe],\n  imports: [PrizmCallFuncPipe],\n})\nexport class PrizmCallFuncModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { prizmAssert } from '@prizm-ui/core';\n\n@Pipe({\n  name: 'prizmPluck',\n  standalone: true,\n})\nexport class PrizmPluckPipe implements PipeTransform {\n  public transform<T, K extends keyof T & string>(\n    input: T | null,\n    arr: K,\n    defaultValue?: unknown\n  ): T extends null ? null : T[K];\n  public transform<T, K extends keyof T & string>(\n    input: T | null,\n    arr: [K],\n    defaultValue?: unknown\n  ): T extends null ? null : T[K];\n  public transform<T, K extends keyof T, K2 extends keyof T[K]>(\n    input: T | null,\n    arr: [K, K2],\n    defaultValue?: unknown\n  ): T[K][K2];\n  public transform<T, K extends keyof T, K2 extends keyof T[K], K3 extends keyof T[K][K2]>(\n    input: T | null,\n    arr: [K, K2, K3],\n    defaultValue?: unknown\n  ): T extends null ? null : T[K][K2][K3];\n  public transform<\n    T,\n    K extends keyof T,\n    K2 extends keyof T[K],\n    K3 extends keyof T[K][K2],\n    K4 extends keyof T[K][K2][K3]\n  >(input: T | null, arr: [K, K2, K3, K4], defaultValue?: unknown): T extends null ? null : T[K][K2][K3][K4];\n  public transform<\n    T,\n    K extends keyof T,\n    K2 extends keyof T[K],\n    K3 extends keyof T[K][K2],\n    K4 extends keyof T[K][K2][K3],\n    K5 extends keyof T[K][K2][K3][K4]\n  >(\n    input: T | null,\n    arr: [K, K2, K3, K4, K5],\n    defaultValue?: unknown\n  ): T extends null ? null : T[K][K2][K3][K4][K5];\n  public transform<\n    T,\n    K extends keyof T,\n    K2 extends keyof T[K],\n    K3 extends keyof T[K][K2],\n    K4 extends keyof T[K][K2][K3],\n    K5 extends keyof T[K][K2][K3][K4],\n    K6 extends keyof T[K][K2][K3][K4][K5]\n  >(\n    input: T | null,\n    arr: [K, K2, K3, K4, K5, K6],\n    defaultValue?: unknown\n  ): T extends null ? null : T[K][K2][K3][K4][K5][K6];\n  public transform<\n    T,\n    K extends keyof T & string,\n    K2 extends keyof T[K] & string,\n    K3 extends keyof T[K][K2] & string,\n    K4 extends keyof T[K][K2][K3] & string,\n    K5 extends keyof T[K][K2][K3][K4] & string,\n    K6 extends keyof T[K][K2][K3][K4][K5] & string\n  >(\n    input: T | null,\n    key: K | [K] | [K, K2] | [K, K2, K3] | [K, K2, K3, K4] | [K, K2, K3, K4, K5] | [K, K2, K3, K4, K5, K6],\n    defaultValue: any = null\n  ): any {\n    if (!input || typeof input !== 'object') {\n      prizmAssert.assert(false, 'prizmPluck in input instead of object or array, get ' + input);\n      return null;\n    }\n    if (key == null) {\n      throw new Error('prizmPluck in key instead of valid key, get ' + key);\n    }\n\n    if (Array.isArray(key)) {\n      let result = input as any;\n      for (const k of key) {\n        result = result?.[k];\n      }\n      return result ?? defaultValue;\n    }\n\n    return input?.[key] ?? defaultValue;\n  }\n}\n","import { PrizmPluckPipe } from './pluck.pipe';\nimport { NgModule } from '@angular/core';\n\n/**\n * @deprecated\n * use standalone components instead\n * */\n@NgModule({\n  imports: [PrizmPluckPipe],\n  exports: [PrizmPluckPipe],\n})\nexport class PrizmPluckPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Этот пайп можно использовать для приведения типов переменных контекста ng-template,\n * чтобы ввести хотя бы какую-то проверку типа шаблона для таких ссылок.\n *\n * @button <ng-template let-someArg><span *ngIf=\"someArg | prizmToType : typeName\"></span></ng-template>\n */\n@Pipe({ name: 'prizmToType', standalone: true })\nexport class PrizmToTypePipe implements PipeTransform {\n  public transform<T>(value: unknown, _typeSource: T): T {\n    return value as T;\n  }\n}\n/**\n * TODO v5: remove\n * @deprecated\n * */\nexport const ToTypePipe = PrizmToTypePipe;\n","import { NgModule } from '@angular/core';\nimport { PrizmToTypePipe } from './to-type.pipe';\n\n/**\n * @deprecated\n * use standalone components instead\n * */\n@NgModule({\n  exports: [PrizmToTypePipe],\n  imports: [PrizmToTypePipe],\n})\nexport class PrizmToTypeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { DomSanitizer, SafeValue } from '@angular/platform-browser';\n\ntype Method = Exclude<keyof DomSanitizer, 'sanitize'>;\n\n@Pipe({\n  name: 'prizmSanitizer',\n  standalone: true,\n})\nexport class PrizmSanitizerPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  public transform(value: string, method: Method): SafeValue {\n    return this.sanitizer[method](value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmSanitizerPipe } from './sanitizer.pipe';\n\n/**\n * @deprecated\n * use standalone components instead\n * */\n@NgModule({\n  imports: [PrizmSanitizerPipe],\n  exports: [PrizmSanitizerPipe],\n})\nexport class PrizmSanitizerPipeModule {}\n","import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { BehaviorSubject, defer, isObservable, Observable, of } from 'rxjs';\nimport * as operators from 'rxjs/operators';\nimport { shareReplay } from 'rxjs/operators';\nimport { PrizmToObservableOperator } from './model';\n\n@Pipe({ name: 'prizmToObservable', standalone: true })\nexport class PrizmToObservablePipe<T> implements PipeTransform, OnDestroy {\n  private subject$$!: BehaviorSubject<T | unknown>;\n  private lastObservable$$!: Observable<T | unknown>;\n  private lastOperators!: PrizmToObservableOperator[];\n  public transform(\n    value: T | Observable<T> | Promise<T>,\n    operators: PrizmToObservableOperator[] = []\n  ): Observable<T> {\n    if (typeof (value as Promise<T>)?.then === 'function') {\n      value = defer(() => value as Promise<T>);\n    }\n    let $: Observable<T> = of(value as T);\n    if (!isObservable(value)) {\n      if (!this.subject$$ || this.lastOperators !== operators) {\n        this.subject$$ = new BehaviorSubject<unknown>(value);\n        this.lastObservable$$ = this.addOperatorsToObservable(\n          this.subject$$ as Observable<unknown> as Observable<T>,\n          (this.lastOperators = operators)\n        ).pipe(shareReplay(1));\n        $ = this.lastObservable$$ as Observable<T>;\n      } else {\n        this.subject$$.next(value);\n        return this.lastObservable$$ as Observable<T>;\n      }\n    } else {\n      $ = value as Observable<T>;\n    }\n\n    return this.addOperatorsToObservable($, operators) as Observable<T>;\n  }\n\n  private addOperatorsToObservable(\n    $: Observable<T>,\n    operators: PrizmToObservableOperator[]\n  ): Observable<unknown> {\n    const operatorsArray = (operators ?? [])\n      .map(operator => {\n        if (typeof operator === 'string') return this.getOperatorFunction(operator);\n        if (Array.isArray(operator)) {\n          const [key, ...args] = operator;\n          return this.getOperatorFunctionByKey(key as string, args);\n        }\n        return operator;\n      })\n      .filter(Boolean);\n\n    return operators?.length ? $.pipe(...(operatorsArray as [])) : $;\n  }\n\n  private getOperatorFunction(str: string): unknown {\n    const result = this.parseFunctionString(str);\n    if (!result) return null;\n    return this.getOperatorFunctionByKey(result.functionName, result?.args);\n  }\n\n  private getOperatorFunctionByKey(key: string, args: unknown[]): unknown {\n    const method = operators[key as keyof typeof operators] as any;\n    if (typeof method !== 'function') return null;\n    return method(...args);\n  }\n\n  private parseFunctionString(str: string): {\n    functionName: string;\n    args: string[];\n  } | null {\n    const regex = /^(\\w+)\\((.*)\\)$/;\n    const match = str.match(regex);\n    if (!match) {\n      return null;\n    }\n    const functionName = match[1];\n    const argsString = match[2].trim();\n    const args = argsString ? argsString.split(',').map(arg => JSON.parse(arg.trim())) : [];\n    return { functionName, args };\n  }\n\n  ngOnDestroy(): void {\n    this.subject$$?.complete();\n    this.subject$$?.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmToObservablePipe } from './to-observable.pipe';\n\n/**\n * @deprecated\n * use standalone components instead\n * */\n@NgModule({\n  imports: [PrizmToObservablePipe],\n  exports: [PrizmToObservablePipe],\n})\nexport class PrizmToObservableModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class PrizmLetContextService<T> implements OnDestroy {\n  private readonly context$$ = new BehaviorSubject<T | null>(null);\n  get context$(): Observable<T | null> {\n    return this.context$$.asObservable();\n  }\n  get context(): T | null {\n    return this.context$$.value;\n  }\n  public setContext(newContext: T): void {\n    this.context$$.next(newContext);\n  }\n\n  public ngOnDestroy(): void {\n    this.context$$.complete();\n    this.context$$.unsubscribe();\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PrizmLetContextService } from './let-context.service';\nimport { Observable } from 'rxjs';\n\ninterface LetContext<T> {\n  $implicit: T | null;\n  prizmLet: T | null;\n}\n\n/**\n * Это директива позволяет повторно использовать вычисленное значение в нескольких местах в шаблоне,\n * чтобы избежать пересчета геттеров или множества асинхронных каналов.\n *\n * @button <ng-container *prizmLet=\"{items: items$ | async, center: center} as $\"> {{$.items?.count}} {{$.center}}</ng-container>\n * @button <ng-container *prizmLet=\"queryParams.isMap$ | async as isMap\">{{isMap}}</ng-container>\n */\n@Directive({\n  selector: '[prizmLet]',\n  exportAs: 'prizmLet',\n  standalone: true,\n  providers: [PrizmLetContextService],\n})\nexport class PrizmLetDirective<T> implements OnDestroy {\n  get context(): T | null {\n    return this.contextService.context;\n  }\n  get context$(): Observable<T | null> {\n    return this.contextService.context$;\n  }\n  constructor(\n    private templateRef: TemplateRef<LetContext<T>>,\n    private viewContainer: ViewContainerRef,\n    private contextService: PrizmLetContextService<T>\n  ) {}\n  @Input('prizmLet') set init(newContext: T) {\n    this.updateContext(newContext);\n  }\n\n  private readonly ctx: LetContext<T> = { $implicit: null, prizmLet: null };\n\n  private viewRef: EmbeddedViewRef<LetContext<T>> | null = this.viewContainer.createEmbeddedView(\n    this.templateRef,\n    this.ctx\n  );\n\n  public ngOnDestroy(): void {\n    this.viewContainer.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private updateContext(newContext: T): void {\n    this.ctx.$implicit = this.ctx.prizmLet = newContext;\n    this.contextService.setContext(newContext);\n    if (this.viewRef) {\n      this.viewRef.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PrizmLetDirective } from './let.directive';\n\n/**\n * @deprecated\n * use standalone instead\n * */\n@NgModule({\n  imports: [PrizmLetDirective],\n  exports: [PrizmLetDirective],\n})\nexport class PrizmLetModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { PrizmDestroyCallback } from './models';\n\n/**\n * Observable abstraction over ngOnDestroy for use with takeUntil\n */\n@Injectable()\nexport class PrizmDestroyService extends ReplaySubject<void> implements OnDestroy {\n  private readonly cb = new Set<PrizmDestroyCallback>();\n  constructor() {\n    super(1);\n  }\n\n  ngOnDestroy(): void {\n    this.next();\n    this.complete();\n    this.cb.forEach((cb: PrizmDestroyCallback) => cb());\n    this.cb.clear();\n  }\n\n  public addCallback(cb: () => void): void {\n    this.cb.add(cb);\n  }\n}\n","import { QueryList } from '@angular/core';\n\n/**\n * sort number, string, date by asc or desc\n * */\nexport function prizmSort<T>(x: T, y: T, asc = true): number {\n  const a = x instanceof Date ? Number(x) : x;\n  const b = y instanceof Date ? Number(y) : y;\n  let result = 0;\n\n  if (a === b) {\n    return result;\n  }\n\n  if (typeof a === 'string' && typeof b === 'string') {\n    result = a.localeCompare(b);\n  } else {\n    result = a > b ? 1 : -1;\n  }\n\n  if (!asc) {\n    if (result === -1) result = 1;\n    else if (result === 1) result = -1;\n  }\n\n  return result;\n}\n\nexport function prizmEmptyQueryList<T = any>() {\n  return new QueryList<T>();\n}\n","export abstract class Compare {\n  public static isTruthy<T>(value: T): boolean {\n    return Boolean(value) === true;\n  }\n\n  public static isFalsy<T>(value: T): boolean {\n    return Boolean(value) === false;\n  }\n\n  public static isUndefined(value: unknown): value is undefined {\n    return value === undefined;\n  }\n\n  public static isNullish(value: unknown): value is null | undefined {\n    return value == null;\n  }\n\n  public static isNotNullish<T>(value: unknown): value is NonNullable<T> {\n    return value != null;\n  }\n\n  public static isNull(value: unknown): value is null {\n    return value === null;\n  }\n\n  public static isEqualDates(a: Date, b: Date): boolean {\n    return a === b || a.getTime() === b.getTime();\n  }\n}\n","import { Compare } from '../compare/compare';\nimport { debounceTime, filter, map, observeOn, switchMap, tap, throttleTime } from 'rxjs/operators';\nimport {\n  asyncScheduler,\n  BehaviorSubject,\n  merge,\n  MonoTypeOperatorFunction,\n  Observable,\n  OperatorFunction,\n  race,\n  Subscriber,\n  timer,\n} from 'rxjs';\n\n/**\n * Фильтрует значения, которые являются неправдивыми (falsy).\n * @returns Оператор, который можно использовать с Observable.\n */\nexport function filterFalsy<T>(): MonoTypeOperatorFunction<T> {\n  return filter(Compare.isFalsy);\n}\n\n/**\n * Использует первый observable, который будет излучен в заданном промежутке времени.\n * @param time - время в миллисекундах\n * @param sources - массив источников Observable\n * @returns Observable, который эмитирует первое значение из источников.\n */\nexport function raceEmit<R = any>(time: number, ...sources: Observable<any>[]): Observable<R> {\n  return merge(...sources).pipe(throttleTime(time));\n}\n\n/**\n * Создает Observable, который излучает изменения размера элемента.\n * @param elements - массив элементов, для которых должны быть отслеживаны изменения размера.\n * @returns Observable, который эмитирует массив событий изменения размера.\n */\nexport function prizmElementResized$(...elements: Element[]): Observable<ResizeObserverEntry[]> {\n  return new Observable((subscriber: Subscriber<ResizeObserverEntry[]>) => {\n    const resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => subscriber.next(entries));\n\n    elements.forEach(elem => resizeObserver.observe(elem));\n\n    return (): void => resizeObserver.disconnect();\n  });\n}\n\n/**\n * Фильтрует значения, которые являются истинными (truthy).\n * @returns Оператор, который можно использовать с Observable.\n */\nexport function filterTruthy<T>(): MonoTypeOperatorFunction<T> {\n  return filter(Compare.isTruthy);\n}\n\n/**\n * Фильтрует значения, которые не являются нулевыми или неопределенными.\n * @returns Оператор, который можно использовать с Observable.\n */\nexport function filterNotNullish<T>(): OperatorFunction<T, T> {\n  return filter(Compare.isNotNullish);\n}\n\n/**\n * Фильтрует значения, которые являются нулевыми или неопределенными.\n * @returns Оператор, который можно использовать с Observable.\n */\nexport function filterNullish<T>(): OperatorFunction<T, null | undefined> {\n  return filter(Compare.isNullish);\n}\n\n/**\n * Преобразует неопределенные значения в null.\n * @returns Оператор, который можно использовать с Observable.\n */\nexport function mapUndefinedToNull<T>(): OperatorFunction<T, T | null> {\n  return map((v: T | undefined) => (Compare.isUndefined(v) ? null : (v as T)));\n}\n\n/**\n * Перемещает выполнение функции на указанное количество итераций в цикле событий.\n * @param count - Количество итераций цикла событий для перемещения.\n * @returns Оператор, который можно использовать с Observable для продолжения цепочки.\n */\nexport function moveInEventLoopIteration<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (!count) return source;\n\n    source = source.pipe(observeOn(asyncScheduler, 0));\n\n    if (count > 1) {\n      source = source.pipe(moveInEventLoopIteration(count - 1));\n    }\n\n    return source;\n  };\n}\n\nexport function prizmRaceInEmit<T>(inner: Observable<T>[], reloadTime?: number): Observable<T> {\n  const repeat$ = new BehaviorSubject<void>(void 0);\n  let result = repeat$.pipe(\n    switchMap(() => {\n      return race(...inner);\n    })\n  );\n  if (Compare.isNotNullish(reloadTime)) result = result.pipe(debounceTime(reloadTime));\n\n  return result.pipe(tap(() => repeat$.next()));\n}\n","import { Observable } from 'rxjs';\n\nexport function prizmFromMutationObserver$(\n  target: HTMLElement,\n  config?: MutationObserverInit\n): Observable<MutationRecord[]> {\n  return new Observable(observer => {\n    const mutation = new MutationObserver((mutations, instance) => {\n      observer.next(mutations);\n    });\n    mutation.observe(target, config);\n\n    return () => {\n      mutation.disconnect();\n    };\n  });\n}\n","import { AsyncValidatorFn, UntypedFormControl, ValidatorFn } from '@angular/forms';\nimport { concat, EMPTY, mapTo, merge, Observable, of, timer } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\n\nexport class PrizmFormControlHelpers {\n  public static getDisabled$(origin: UntypedFormControl): Observable<boolean> {\n    return origin.statusChanges.pipe(map(() => this.getDisabled(origin)));\n  }\n  public static getValidators$(origin: UntypedFormControl): Observable<ValidatorFn | ValidatorFn[] | null> {\n    return origin.statusChanges.pipe(map(() => this.getValidators(origin)));\n  }\n  public static getAsyncValidators$(\n    origin: UntypedFormControl\n  ): Observable<AsyncValidatorFn | AsyncValidatorFn[] | null> {\n    return origin.statusChanges.pipe(map(() => this.getAsyncValidators(origin)));\n  }\n\n  public static getValue$<T = any>(origin: UntypedFormControl): Observable<T> {\n    return origin.valueChanges.pipe(map(() => this.getValue<T>(origin)));\n  }\n\n  public static getDisabled(origin: UntypedFormControl): boolean {\n    return origin.disabled;\n  }\n  public static isTouched(origin: UntypedFormControl): boolean {\n    return origin.touched;\n  }\n  public static isDirty(origin: UntypedFormControl): boolean {\n    return origin.dirty;\n  }\n\n  public static getValidators(origin: UntypedFormControl): ValidatorFn | ValidatorFn[] | null {\n    return (origin as any)?.['_rawValidators'] ?? null;\n  }\n\n  public static getAsyncValidators(origin: UntypedFormControl): AsyncValidatorFn | AsyncValidatorFn[] | null {\n    return (origin as any)?.['_rawAsyncValidators'] ?? null;\n  }\n\n  public static getValue<T>(origin: UntypedFormControl): T {\n    return origin.value;\n  }\n\n  public static syncStates(\n    origin: UntypedFormControl,\n    bidirectional: boolean,\n    ...others: UntypedFormControl[]\n  ): Observable<boolean> {\n    const all = [origin, ...others];\n    return concat(\n      timer(0).pipe(map(() => origin)),\n      bidirectional\n        ? merge(...all.map(control => control.statusChanges.pipe(mapTo(control))))\n        : origin.statusChanges.pipe(mapTo(origin))\n    ).pipe(\n      map(origin => {\n        (bidirectional ? all : others).forEach(control => {\n          const disabled = this.getDisabled(origin);\n          if (disabled === control.disabled) return;\n          if (disabled) {\n            control.disable();\n          } else {\n            control.enable();\n          }\n          this.syncControlVisualStates(origin, control);\n        });\n\n        return this.getDisabled(origin);\n      })\n    );\n  }\n\n  public static syncValidators(\n    origin: UntypedFormControl,\n    bidirectional: boolean,\n    ...others: UntypedFormControl[]\n  ): Observable<ValidatorFn | ValidatorFn[] | null> {\n    const all = [origin, ...others];\n    return concat(\n      of(this.getValidators(origin)),\n      bidirectional ? merge(...all.map(control => this.getValidators$(control))) : this.getValidators$(origin)\n    ).pipe(\n      tap(validators => {\n        (bidirectional ? all : others).forEach(control => {\n          control.setValidators(validators);\n        });\n      })\n    );\n  }\n\n  public static syncAllValidators(\n    origin: UntypedFormControl,\n    bidirectional: boolean,\n    ...others: UntypedFormControl[]\n  ): Observable<ValidatorFn | ValidatorFn[] | AsyncValidatorFn | AsyncValidatorFn[] | null> {\n    return merge(\n      this.syncValidators(origin, bidirectional, ...others),\n      this.syncAsyncValidators(origin, bidirectional, ...others)\n    );\n  }\n\n  public static syncAsyncValidators(\n    origin: UntypedFormControl,\n    bidirectional: boolean,\n    ...others: UntypedFormControl[]\n  ): Observable<AsyncValidatorFn | AsyncValidatorFn[] | null> {\n    const all = [origin, ...others];\n    return concat(\n      of(this.getAsyncValidators(origin)),\n      bidirectional\n        ? merge(...all.map(control => this.getAsyncValidators$(control)))\n        : this.getAsyncValidators$(origin)\n    ).pipe(\n      tap(asyncValidators => {\n        (bidirectional ? all : others).forEach(control => {\n          control.setAsyncValidators(asyncValidators);\n        });\n      })\n    );\n  }\n\n  public static setValue<T = any>(\n    control: UntypedFormControl,\n    newValue: T,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    }\n  ): void {\n    const currentValue = this.getValue<T>(control);\n    if (currentValue === newValue) return;\n    control.setValue(newValue, options);\n  }\n\n  public static setDisabled(\n    control: UntypedFormControl,\n    disabled: boolean,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    }\n  ): void {\n    if (disabled === control.disabled) return;\n    if (!disabled) control.enable(options);\n    else control.disable(options);\n  }\n\n  public static syncControlVisualStates(control: UntypedFormControl, other: UntypedFormControl): void {\n    if (control.pristine) other.markAsPristine();\n    if (control.dirty) other.markAsDirty();\n    if (control.touched) other.markAsTouched();\n    if (control.untouched) other.markAsUntouched();\n    if (control.pending) other.markAsPending();\n  }\n\n  public static syncValues<ORIGIN_VALUE = any, OTHER_VALUE = any>(\n    origin: UntypedFormControl,\n    fromOrigin: (valueFromOrigin: ORIGIN_VALUE) => OTHER_VALUE,\n    fromOthers: null | ((valueFromOther: OTHER_VALUE) => ORIGIN_VALUE),\n    ...others: UntypedFormControl[]\n  ): Observable<ORIGIN_VALUE> {\n    return merge(\n      timer(0).pipe(\n        first(),\n        map(() => this.getValue(origin) as ORIGIN_VALUE),\n        tap((valueFromOrigin: ORIGIN_VALUE) => {\n          const value = fromOrigin(valueFromOrigin);\n          others.forEach(control => {\n            this.setValue(control, value);\n            this.syncControlVisualStates(origin, control);\n          });\n        })\n      ),\n      this.getValue$(origin).pipe(\n        filter(() => Boolean(fromOrigin)),\n        tap((valueFromOrigin: ORIGIN_VALUE) => {\n          const value = fromOrigin(valueFromOrigin);\n          others.forEach(control => {\n            this.setValue(control, value);\n            this.syncControlVisualStates(origin, control);\n          });\n        })\n      ),\n      fromOthers\n        ? merge(...others.map(control => this.getValue$(control))).pipe(\n            filter(() => Boolean(fromOthers)),\n            tap((valueFromOther: OTHER_VALUE) => {\n              const value = fromOthers(valueFromOther);\n              this.setValue(origin, value);\n            })\n          )\n        : EMPTY\n    ).pipe(map(() => this.getValue(origin)));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface PrizmLogOptions {\n  logArguments?: boolean;\n  logResult?: boolean;\n  logExecutionTime?: boolean;\n  enabled?: boolean;\n}\n\nexport function PrizmLogExecution(options: PrizmLogOptions = {}): any {\n  const { enabled = true, logArguments = true, logResult = true, logExecutionTime = true } = options;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (target: Object, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor => {\n    const originalMethod = descriptor.value;\n\n    if (!enabled) return descriptor;\n\n    if (descriptor.set) {\n      const originalSetter = descriptor.set;\n\n      descriptor.set = function (value: any): void {\n        const className = target.constructor.name;\n        const propertyName = propertyKey;\n        const fullPropertyName = `${className}.${propertyName}`;\n\n        console.log(`Вызов сеттера: ${fullPropertyName}`);\n\n        if (logArguments) {\n          console.log('Аргумент:', value);\n        }\n\n        const startTime = performance.now();\n        originalSetter.call(this, value);\n\n        if (logExecutionTime) {\n          const endTime = performance.now();\n          console.log(`Время выполнения: ${endTime - startTime} мс`);\n        }\n      };\n    } else if (descriptor.value) {\n      descriptor.value = function (...args: any[]): any {\n        const className = target.constructor.name;\n        const functionName = propertyKey || target.constructor.name;\n        const fullFunctionName = propertyKey ? `${className}.${functionName}` : functionName;\n\n        console.log(fullFunctionName, `Вызов функции`);\n\n        if (logArguments) {\n          console.log(fullFunctionName, 'Аргументы:', args);\n        }\n\n        const startTime = performance.now();\n        let result = originalMethod.apply(this, args);\n\n        if (result instanceof Promise) {\n          result = result.then(res => {\n            if (logResult) {\n              console.log(fullFunctionName, 'Результат:', res);\n            }\n            if (logExecutionTime) {\n              const endTime = performance.now();\n              console.log(fullFunctionName, `Время выполнения: ${endTime - startTime} мс`);\n            }\n            return res;\n          });\n        } else if (result instanceof Observable) {\n          result = result.pipe(\n            tap(res => {\n              if (logResult) {\n                console.log(fullFunctionName, 'Результат:', res);\n              }\n              if (logExecutionTime) {\n                const endTime = performance.now();\n                console.log(fullFunctionName, `Время выполнения: ${endTime - startTime} мс`);\n              }\n            })\n          );\n        } else {\n          if (logResult) {\n            console.log(fullFunctionName, 'Результат:', result);\n          }\n          if (logExecutionTime) {\n            const endTime = performance.now();\n            console.log(fullFunctionName, `Время выполнения: ${endTime - startTime} мс`);\n          }\n        }\n\n        return result;\n      };\n    }\n\n    return descriptor;\n  };\n}\n","import { v4 } from 'uuid';\n\nexport function prizmGenerateId(): string {\n  return v4();\n}\n","import { Compare } from '../compare';\n\nexport function prizmStyleGetVars(obj: Record<string, unknown>): Record<string, string> {\n  return Object.entries(obj).reduce((base, [key, value]) => {\n    key = prizmStyleToSnake(key);\n    if (key.startsWith('--')) key = key.replace(/^--/, '');\n    if (key.startsWith('prizm')) key = key.replace(/^prizm-/, '');\n    key = `--prizm-${key}`;\n    base[key] = Compare.isNullish(value) ? '' : value?.toString() ?? '';\n    return base;\n  }, {} as Record<string, string>);\n}\n\nexport function prizmStyleToSnake(str: string): string {\n  return str.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`);\n}\n","import { PrizmDecimal } from '@prizm-ui/core';\n\nexport function prizmFormatNumber(num: number, precision: number, decimal: PrizmDecimal = 'never'): string {\n  if (precision === Infinity) {\n    switch (decimal) {\n      case 'not-zero':\n        return num.toString().replace(/\\.0+$/, '');\n      case 'never':\n        return Math.round(num).toString();\n      default:\n        return num.toString();\n    }\n  }\n\n  switch (decimal) {\n    case 'not-zero':\n      return (Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision)).toString();\n    case 'always':\n      return num.toFixed(precision);\n    case 'never':\n    default:\n      return Math.round(num).toString();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.PrizmLetContextService"],"mappings":"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"}