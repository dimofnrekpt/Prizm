"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6495],{6495:e=>{e.exports="import { Component } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport {\n  PrizmSelectIdentityMatcher,\n  PrizmSelectSearchMatcher,\n  PrizmSelectStringify,\n  PrizmSelectValueTransformver,\n} from '@prizm-ui/components';\n\ntype PrizmItem = {\n  id: number;\n  name: string;\n};\n@Component({\n  selector: 'prizm-select-with-transformer-example',\n  templateUrl: './select-with-transformer-example.component.html',\n  styles: [\n    `\n      .item {\n        display: flex;\n        gap: 0.5rem;\n      }\n    `,\n  ],\n})\nexport class PrizmSelectWithTransformerExampleComponent {\n  readonly items: PrizmItem[] = [\n    { id: 1, name: '\u0420\u043e\u0441\u0441\u0438\u044f' },\n    { id: 2, name: '\u0421\u0428\u0410' },\n    { id: 3, name: '\u041e\u0410\u042d' },\n  ];\n  readonly valueControl = new UntypedFormControl(3);\n\n  readonly searchMatcher: PrizmSelectSearchMatcher<PrizmItem> = (search: string, item: PrizmItem) => {\n    return item?.name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  readonly transformer: PrizmSelectValueTransformver<PrizmItem> = a => a?.id;\n  readonly identityMatcher: PrizmSelectIdentityMatcher<PrizmItem> = (a: PrizmItem, b: PrizmItem) => {\n    return a === b;\n  };\n\n  readonly stringify: PrizmSelectStringify<PrizmItem> = (item: PrizmItem): any => {\n    return item?.name;\n  };\n\n  public setDefaultValue(): void {\n    this.valueControl.setValue(this.items[0].id);\n  }\n}\n"}}]);