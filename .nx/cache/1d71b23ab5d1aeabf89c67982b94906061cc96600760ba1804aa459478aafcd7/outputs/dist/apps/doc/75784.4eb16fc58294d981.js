"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[75784],{75784:e=>{e.exports="import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\nimport {\n  PRIZM_TREE_LOADER,\n  PRIZM_TREE_LOADING,\n  PRIZM_TREE_START,\n  PrizmHandler,\n  PrizmTreeService,\n} from '@prizm-ui/components';\nimport { TreeTemplateLazyExampleService } from './tree-template-lazy-example.service';\nimport { Item } from './tree-template-lazy.model';\n\n@Component({\n  selector: 'prizm-tree-template-lazy-example',\n  templateUrl: './tree-template-lazy-example.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    PrizmTreeService,\n    {\n      provide: PRIZM_TREE_START,\n      useValue: { text: 'Topmost' },\n    },\n    {\n      provide: PRIZM_TREE_LOADER,\n      useClass: TreeTemplateLazyExampleService,\n    },\n  ],\n})\nexport class TreeTemplateLazyExampleComponent {\n  map = new Map<Item, boolean>();\n\n  constructor(\n    @Inject(PRIZM_TREE_LOADING) readonly loading: unknown,\n    @Inject(PrizmTreeService) readonly service: PrizmTreeService<Item>\n  ) {}\n\n  public childrenHandler: PrizmHandler<Item, readonly Item[]> = item => this.service.getChildren(item);\n\n  public onToggled(item: Item): void {\n    this.service.loadChildren(item);\n  }\n}\n"}}]);