"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[91930],{91930:e=>{e.exports="import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\n\n@Component({\n  selector: 'prizm-select-panel-example',\n  templateUrl: './select-panel-example.component.html',\n  styleUrls: ['./select-panel-example.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrizmSelectPanelExampleComponent {\n  showPanel = false;\n\n  data = new Array(5).fill(null).map((item, index) => ({\n    label: { title: `\u0447\u0438\u043f\u0441 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438 ${index + 1}`, subtitle: '\u041f\u0443\u0442\u044c  \\\\ \u043f\u0443\u0442\u044c \\\\  \u043f\u0443\u0442\u044c' },\n    checked: false,\n  }));\n\n  filteredData = [...this.data];\n\n  constructor(public readonly cdRef: ChangeDetectorRef) {}\n\n  get someChecked(): boolean {\n    return this.data.some(item => item.checked) && this.allChecked === false;\n  }\n\n  get allChecked(): boolean {\n    return this.data.every(item => item.checked);\n  }\n\n  public show(): void {\n    this.showPanel = true;\n    this.filter('');\n  }\n\n  public hide(): void {\n    this.showPanel = false;\n    this.cdRef.markForCheck();\n  }\n\n  public onChange(value: boolean): void {\n    for (const option of this.data) {\n      option.checked = value;\n    }\n  }\n\n  public filter(value: string): void {\n    if (value) {\n      this.filteredData = this.data.filter(item => item.label.title.includes(value));\n      return;\n    }\n    this.filteredData = [...this.data];\n  }\n}\n"}}]);