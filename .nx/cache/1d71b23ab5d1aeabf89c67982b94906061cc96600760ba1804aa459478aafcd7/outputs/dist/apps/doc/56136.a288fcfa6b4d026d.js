"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[56136],{56136:e=>{e.exports="import { Component, OnInit } from '@angular/core';\nimport {\n  PrizmAstHtmlItem,\n  prizmAstHtmlParse,\n  prizmAstHtmlStringify,\n  PrizmTemplateTask,\n  PrizmTemplateTaskProcessor,\n} from '@prizm-ui/ast';\nimport { ZyfraTextareaTemplateTasks } from '@prizm-ui/ast/cb3-template-examples';\n\n@Component({\n  selector: 'prizm-ast-textarea-example',\n  templateUrl: './textarea.component.html',\n  styles: [\n    `\n      .block {\n        display: flex;\n        gap: 1rem;\n      }\n    `,\n  ],\n})\nexport class PrizmAstTextareaExampleComponent implements OnInit {\n  readonly tasks: PrizmTemplateTask[] = ZyfraTextareaTemplateTasks;\n  // readonly tasks: PrizmTemplateTask[] = [\n  //   {\n  //     selector: 'zyfra-input-switch',\n  //     tasks: [\n  //       prizmAstCreateActionBy(PrizmChangeNameTemplateTask, {\n  //         name: 'prizm-toggle',\n  //       }),\n  //     ],\n  //     inputs: {\n  //       disabled: [\n  //         prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {}),\n  //         prizmAstCreateActionBy(PrizmAddCommentTemplateTask, {\n  //           comment: 'TODO: for pass disabled use pass by FormControl ',\n  //         }),\n  //       ],\n  //       readonly: [\n  //         prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {}),\n  //         prizmAstCreateActionBy(PrizmAddCommentTemplateTask, {\n  //           comment: 'TODO: for pass readonly use pass by FormControl ',\n  //         }),\n  //       ],\n  //       mini: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'size',\n  //           setExactNewAttrName: true,\n  //           value: 'm',\n  //         }),\n  //       ],\n  //\n  //       ariaLabelledBy: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       styleClass: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       style: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       inputId: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       tabindex: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       name: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //     },\n  //     outputs: {},\n  //   },\n  // ];\n  readonly html = `\n<zyfra-textarea\n\n  [(ngModel)]=\"modelForTextArea\"\n  placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0435\u043a\u0441\u0442..\"\n  class=\"inputClass\"\n  disabled=\"false\"\n  maxlength=\"100\"\n  minlength=\"0\"\n  rows=\"5\"\n  cols=\"10\"\n  autoResize=\"false\"\n  name=\"some name\"\n  (onResize)=\"onResizeTextAreaHandler($event)\"\n></zyfra-textarea>\n`;\n  result!: string;\n\n  public ngOnInit(): void {\n    this.parse();\n  }\n\n  private parse(): void {\n    const parsed = prizmAstHtmlParse(this.html);\n    const nodeProcessor = new PrizmTemplateTaskProcessor(this.tasks);\n    this.result = prizmAstHtmlStringify(nodeProcessor.processTasks(parsed) as PrizmAstHtmlItem[]);\n  }\n}\n"}}]);