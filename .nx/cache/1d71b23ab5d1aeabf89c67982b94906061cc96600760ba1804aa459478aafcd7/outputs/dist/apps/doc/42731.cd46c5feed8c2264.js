"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[42731],{42731:e=>{e.exports="import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { PrizmDay, PrizmTime } from '@prizm-ui/components';\nimport { addDays, addHours, addMonths } from 'date-fns';\n\ntype DateItem = {\n  title: string;\n  range: [[PrizmDay, PrizmTime], [PrizmDay, PrizmTime]];\n};\n\n@Component({\n  selector: 'prizm-dropdown-host-date-list-example',\n  templateUrl: './date-list.component.html',\n  styles: [\n    `\n      .box {\n        padding: 16px;\n      }\n\n      .header {\n        color: var(--prizm-v3-text-icon-primary);\n      }\n\n      .list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 16px 24px;\n      }\n\n      .header {\n        display: flex;\n        gap: 8px;\n        align-items: center;\n\n        prizm-icon {\n          font-weight: 300;\n        }\n      }\n\n      .date-control {\n        margin-top: 24px;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n\n        prizm-input-date-time ::ng-deep {\n          width: 100%;\n\n          prizm-input-layout {\n            width: 100%;\n          }\n        }\n      }\n\n      .footer {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 8px;\n      }\n    `,\n  ],\n})\nexport class PrizmDropdownHostDateListExampleComponent implements OnInit {\n  open = false;\n  data: DateItem[] = [\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0447\u0430\u0441',\n      range: [\n        [\n          PrizmDay.fromLocalNativeDate(new Date()),\n          new PrizmTime(new Date().getHours() - 1, new Date().getMinutes(), 0),\n        ],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0441\u0443\u0442\u043a\u0438',\n      range: [\n        [PrizmDay.fromLocalNativeDate(addDays(new Date(), -1)), PrizmTime.fromLocalNativeDate(new Date())],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 2 \u0447\u0430\u0441\u0430',\n      range: [\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(addHours(new Date(), -2))],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 7 \u0434\u043d\u0435\u0439',\n      range: [\n        [PrizmDay.fromLocalNativeDate(addDays(new Date(), -7)), PrizmTime.fromLocalNativeDate(new Date())],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 4 \u0447\u0430\u0441\u0430',\n      range: [\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(addHours(new Date(), -4))],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 30 \u0434\u043d\u0435\u0439',\n      range: [\n        [PrizmDay.fromLocalNativeDate(addDays(new Date(), -30)), PrizmTime.fromLocalNativeDate(new Date())],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 8 \u0447\u0430\u0441\u043e\u0432',\n      range: [\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(addHours(new Date(), -8))],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 90 \u0434\u043d\u0435\u0439',\n      range: [\n        [PrizmDay.fromLocalNativeDate(addDays(new Date(), -90)), PrizmTime.fromLocalNativeDate(new Date())],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 12 \u0447\u0430\u0441\u043e\u0432',\n      range: [\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(addHours(new Date(), -12))],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n    {\n      title: '\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 6 \u043c\u0435\u0441\u044f\u0446\u0435\u0432',\n      range: [\n        [PrizmDay.fromLocalNativeDate(addMonths(new Date(), -6)), PrizmTime.fromLocalNativeDate(new Date())],\n        [PrizmDay.fromLocalNativeDate(new Date()), PrizmTime.fromLocalNativeDate(new Date())],\n      ],\n    },\n  ];\n\n  readonly startControl = new UntypedFormControl('');\n  readonly endControl = new UntypedFormControl('');\n\n  constructor(public readonly cdRef: ChangeDetectorRef) {}\n\n  public select(item: DateItem | null): void {\n    if (!item) {\n      this.startControl.enable();\n      this.endControl.enable();\n      return;\n    }\n    this.startControl.disable();\n    this.endControl.disable();\n\n    // TODO fix type\n    this.startControl.setValue(item.range[0] as any);\n    // TODO fix type\n    this.endControl.setValue(item.range[1] as any);\n  }\n\n  ngOnInit(): void {\n    this.select(null);\n  }\n}\n"}}]);