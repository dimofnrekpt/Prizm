"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[44069],{44069:t=>{t.exports="import { Component, OnInit } from '@angular/core';\nimport {\n  PrizmAstHtmlItem,\n  prizmAstHtmlParse,\n  prizmAstHtmlStringify,\n  PrizmTemplateTaskProcessor,\n  PrizmTemplateTask,\n} from '@prizm-ui/ast';\nimport { ZyfraDropdownTemplateTasks } from '@prizm-ui/ast/cb3-template-examples';\n\n@Component({\n  selector: 'prizm-ast-dropdown-example',\n  templateUrl: './dropdown.component.html',\n  styles: [\n    `\n      .block {\n        display: flex;\n        gap: 1rem;\n      }\n    `,\n  ],\n})\nexport class PrizmAstDropdownExampleComponent implements OnInit {\n  readonly tasks: PrizmTemplateTask[] = ZyfraDropdownTemplateTasks;\n  // readonly tasks: PrizmTemplateTask[] = [\n  //   {\n  //     selector: 'zyfra-dropdown',\n  //     tasks: [\n  //       prizmAstCreateActionBy(PrizmChangeNameTemplateTask, {\n  //         name: 'prizm-select',\n  //       }),\n  //     ],\n  //     inputs: {\n  //       options: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'items',\n  //           needFixApi: true\n  //         }),\n  //       ],\n  //       dropdownIcon: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'icon',\n  //           needFixApi: true\n  //         }),\n  //       ],\n  //       showClear: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'forceClear'\n  //         }),\n  //       ],\n  //\n  //\n  //       optionValue: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       optionLabel: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       optionDisabled: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       optionGroupLabel: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       optionGroupChildren: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       name: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       scrollHeight: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       style: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       panelStyle: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       styleClass: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       panelStyleClass: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filter: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filterValue: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filterBy: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filterMatchMode: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filterPlaceholder: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       filterLocale: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       required: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       disabled: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       readonly: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       emptyMessage: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       emptyFilterMessage: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       ariaLabelledBy: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       editable: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       maxlength: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       appendTo: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       tabindex: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       inputId: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       dataKey: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       autofocus: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       autofocusFilter: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       resetFilterOnHide: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       autoDisplayFirst: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       group: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       groupTemplateClass: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //     },\n  //     outputs: {\n  //       onChange: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       onFocus: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       onBlur: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       onShow: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       onHide: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       onFilter: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //\n  //       onClick: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'click'\n  //         }),\n  //       ],\n  //     }\n  //   },\n  //\n  // ];\n  readonly html = `\n<zyfra-dropdown\n  [options]=\"cities\"\n  [(ngModel)]=\"model\"\n  optionLabel=\"name\"\n  placeholder=\"Select a City\"\n  [showClear]=\"true\"\n></zyfra-dropdown>`;\n  result!: string;\n\n  public ngOnInit(): void {\n    this.parse();\n  }\n\n  private parse(): void {\n    const parsed = prizmAstHtmlParse(this.html);\n    const nodeProcessor = new PrizmTemplateTaskProcessor(this.tasks);\n    this.result = prizmAstHtmlStringify(nodeProcessor.processTasks(parsed) as PrizmAstHtmlItem[]);\n  }\n}\n"}}]);