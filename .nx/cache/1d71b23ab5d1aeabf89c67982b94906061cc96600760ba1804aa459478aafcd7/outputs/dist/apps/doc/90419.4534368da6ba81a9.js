"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[90419],{90419:e=>{e.exports="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  PrizmTableCellSorter,\n  PrizmTableCellSorterHandler,\n  PrizmTableCellStatus,\n  prizmTableDefaultColumnSort,\n  PrizmTableSorterService,\n} from '@prizm-ui/components';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { delay, map, switchMap, tap } from 'rxjs/operators';\n\nexport interface ITableProduct {\n  id?: number;\n  status?: PrizmTableCellStatus;\n  code: number;\n  name: string;\n  category: string;\n  count: number;\n  children?: ITableProduct[];\n}\nexport const TABLE_EXAMPLE_SORT: ITableProduct[] = [\n  {\n    code: 8,\n    name: '\u0423\u0433\u043b\u0435\u043a\u0441\u0438\u043b\u044b\u0439 \u0433\u0430\u0437',\n    category: 'Premium',\n    count: 99,\n  },\n  {\n    code: 1,\n    name: '\u041f\u043e\u043b\u0438\u0443\u0440\u0435\u0442\u0430\u043d',\n    category: 'Premium',\n    count: 3000,\n  },\n  {\n    code: 2,\n    name: '\u041f\u043e\u043b\u0438\u044d\u0441\u0442\u0435\u0440',\n    category: 'Active',\n    count: 123,\n    status: 'success',\n  },\n  {\n    code: 3,\n    name: '\u042d\u043f\u043e\u043a\u0441\u0438\u0434\u043d\u0430\u044f \u0441\u043c\u043e\u043b\u0430',\n    category: 'Sport',\n    count: 56000,\n    status: 'success',\n  },\n  {\n    code: 4,\n    name: '\u041f\u0440\u043e\u043f\u0430\u043d\u0442',\n    category: 'Sport+',\n    count: 539,\n  },\n  {\n    code: 5,\n    name: '\u041f\u043e\u043b\u0438\u0431\u0435\u0442\u043e\u043d',\n    category: 'Premium',\n    count: 23,\n    status: 'danger',\n  },\n  {\n    code: 6,\n    name: '\u041f\u043e\u043b\u0438\u0443\u0440\u0435\u0442\u0430\u043d',\n    category: 'Premium',\n    count: 99,\n  },\n  {\n    code: 7,\n    name: '\u041f\u0440\u043e\u043f\u0430\u043d\u0442',\n    category: 'Premium',\n    count: 23,\n    status: 'warning',\n  },\n  {\n    code: 9,\n    name: '\u0412\u043e\u0434\u043e\u0440\u043e\u0434',\n    category: 'Premium',\n    count: 23,\n  },\n  {\n    code: 10,\n    name: '\u041a\u043e\u043c\u043f\u0430\u0443\u043d\u0434',\n    category: 'Premium',\n    count: 99,\n  },\n];\n\n@Component({\n  selector: 'prizm-table-server-sort-example',\n  templateUrl: './table-server-sort-example.component.html',\n  styleUrls: ['./table-server-sort-example.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PrizmTableSorterService],\n})\nexport class TableServerSortExampleComponent {\n  public columns: string[] = ['code', 'name', 'category', 'count'];\n  public sorter = prizmTableDefaultColumnSort;\n  public products: ITableProduct[] = TABLE_EXAMPLE_SORT;\n\n  public searchString: string | null = null;\n  public searchAllowedProducts: ITableProduct[] = this.products;\n  public sorter$$ = new BehaviorSubject<PrizmTableCellSorter<ITableProduct>[]>([]);\n  public readonly data$ = this.sorter$$.pipe(\n    tap(() => this.showLoader$.next(true)),\n    switchMap((sort: PrizmTableCellSorter<ITableProduct>[]) => {\n      return of(this.products).pipe(\n        delay(3000),\n        map(data => {\n          return this.tableSorterService.sort(\n            data,\n            sort.map(i => ({\n              ...i,\n              sorter: prizmTableDefaultColumnSort as PrizmTableCellSorterHandler<ITableProduct>,\n            }))\n          );\n        })\n      );\n    }),\n    tap(() => this.showLoader$.next(false))\n  );\n  constructor(private readonly tableSorterService: PrizmTableSorterService<ITableProduct>) {}\n  public showLoader$ = new BehaviorSubject(false);\n  public search<T extends keyof ITableProduct>(value: string, key: T): void {\n    this.searchString = value.toLowerCase();\n\n    this.searchAllowedProducts = this.products.filter(product =>\n      (product[key] as string).toLowerCase().includes(this.searchString as string)\n    );\n  }\n\n  public updateSort(sort: PrizmTableCellSorter<any>[]): void {\n    this.sorter$$.next(sort);\n  }\n}\n"}}]);