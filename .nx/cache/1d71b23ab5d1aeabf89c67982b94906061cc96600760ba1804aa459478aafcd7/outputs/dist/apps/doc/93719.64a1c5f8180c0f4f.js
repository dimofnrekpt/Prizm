"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[93719],{93719:t=>{t.exports="import { Component, OnInit } from '@angular/core';\nimport {\n  PrizmAstHtmlItem,\n  prizmAstHtmlParse,\n  prizmAstHtmlStringify,\n  PrizmTemplateTask,\n  PrizmTemplateTaskProcessor,\n} from '@prizm-ui/ast';\nimport { ZyfraTooltipTemplateTasks } from '@prizm-ui/ast/cb3-template-examples';\n\n@Component({\n  selector: 'prizm-ast-tooltip-example',\n  templateUrl: './tooltip.component.html',\n  styles: [\n    `\n      .block {\n        display: flex;\n        gap: 1rem;\n      }\n    `,\n  ],\n})\nexport class PrizmAstTooltipExampleComponent implements OnInit {\n  readonly tasks: PrizmTemplateTask[] = ZyfraTooltipTemplateTasks;\n  // readonly tasks: PrizmTemplateTask[] = [\n  //   {\n  //     selector: [\n  //       {\n  //         type: 'byAttr',\n  //         attrs: {\n  //           'zyfraTooltip': undefined\n  //         }\n  //       }\n  //     ],\n  //     tasks: [],\n  //     inputs: {\n  //       zyfraTooltip: [prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //         newAttrName: 'prizmTooltip'\n  //       })],\n  //       zyfraTooltipShow: [prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //         newAttrName: 'prizmHintShow'\n  //       })],\n  //       zyfraTooltipContext: [prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //         newAttrName: 'prizmHintContext'\n  //       })],\n  //       zyfraTooltipDelay: [prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //         newAttrName: 'prizmTooltipShowDelay'\n  //       })],\n  //       zyfraTooltipPosition: [\n  //         prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //           newAttrName: 'prizmHintDirection',\n  //           needFixApi: true\n  //         })\n  //       ],\n  //       zyfraTooltipColor: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       zyfraTooltipClass: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //       zyfraTooltipOverflowText: [prizmAstCreateActionBy(PrizmNotSupportedTemplateTask, {})],\n  //     },\n  //     outputs: {\n  //       zyfraTooltipShowChange: [prizmAstCreateActionBy(PrizmRenameTemplateTask, {\n  //         newAttrName: 'prizmHoveredChange'\n  //       })],\n  //     },\n  //   }\n  // ];\n  readonly html = `\n<ng-template #someTemplate><span>Show me</span></div></ng-template>\n<button zyfraButton\n    class=\"class\"\n    type=\"button\"\n    [zyfraTooltip]=\"someTemplate\"\n    color=\"success\"\n    zyfraTooltipPosition=\"right\"\n>\n  Right\n</button>\n\n\n<button\n  zyfraButton\n  class=\"class\"\n  type=\"button\"\n  zyfraTooltip=\"\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430 \u0441\u043f\u0440\u0430\u0432\u0430\"\n  zyfraTooltipPosition=\"right\"\n>\n    Right\n</button>\n`;\n  result!: string;\n\n  public ngOnInit(): void {\n    this.parse();\n  }\n\n  private parse(): void {\n    const parsed = prizmAstHtmlParse(this.html);\n    const nodeProcessor = new PrizmTemplateTaskProcessor(this.tasks);\n    this.result = prizmAstHtmlStringify(nodeProcessor.processTasks(parsed) as PrizmAstHtmlItem[]);\n  }\n}\n"}}]);