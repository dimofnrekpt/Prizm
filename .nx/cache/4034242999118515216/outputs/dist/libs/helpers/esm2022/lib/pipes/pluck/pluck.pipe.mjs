import { Pipe } from '@angular/core';
import { prizmAssert } from '@prizm-ui/core';
import * as i0 from "@angular/core";
export class PrizmPluckPipe {
    transform(input, key, defaultValue = null) {
        if (!input || typeof input !== 'object') {
            prizmAssert.assert(false, 'prizmPluck in input instead of object or array, get ' + input);
            return null;
        }
        if (key == null) {
            throw new Error('prizmPluck in key instead of valid key, get ' + key);
        }
        if (Array.isArray(key)) {
            let result = input;
            for (const k of key) {
                result = result?.[k];
            }
            return result ?? defaultValue;
        }
        return input?.[key] ?? defaultValue;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmPluckPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.1.8", ngImport: i0, type: PrizmPluckPipe, isStandalone: true, name: "prizmPluck" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.8", ngImport: i0, type: PrizmPluckPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'prizmPluck',
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Y2sucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvaGVscGVycy9zcmMvbGliL3BpcGVzL3BsdWNrL3BsdWNrLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQU03QyxNQUFNLE9BQU8sY0FBYztJQXFEbEIsU0FBUyxDQVNkLEtBQWUsRUFDZixHQUFzRyxFQUN0RyxlQUFvQixJQUFJO1FBRXhCLElBQUksQ0FBQyxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQ3ZDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLHNEQUFzRCxHQUFHLEtBQUssQ0FBQyxDQUFDO1lBQzFGLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDZixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1NBQ3ZFO1FBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3RCLElBQUksTUFBTSxHQUFHLEtBQVksQ0FBQztZQUMxQixLQUFLLE1BQU0sQ0FBQyxJQUFJLEdBQUcsRUFBRTtnQkFDbkIsTUFBTSxHQUFHLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3RCO1lBQ0QsT0FBTyxNQUFNLElBQUksWUFBWSxDQUFDO1NBQy9CO1FBRUQsT0FBTyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxZQUFZLENBQUM7SUFDdEMsQ0FBQzs4R0FuRlUsY0FBYzs0R0FBZCxjQUFjOzsyRkFBZCxjQUFjO2tCQUoxQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxZQUFZO29CQUNsQixVQUFVLEVBQUUsSUFBSTtpQkFDakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwcml6bUFzc2VydCB9IGZyb20gJ0Bwcml6bS11aS9jb3JlJztcblxuQFBpcGUoe1xuICBuYW1lOiAncHJpem1QbHVjaycsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIFByaXptUGx1Y2tQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHB1YmxpYyB0cmFuc2Zvcm08VCwgSyBleHRlbmRzIGtleW9mIFQgJiBzdHJpbmc+KFxuICAgIGlucHV0OiBUIHwgbnVsbCxcbiAgICBhcnI6IEssXG4gICAgZGVmYXVsdFZhbHVlPzogdW5rbm93blxuICApOiBUIGV4dGVuZHMgbnVsbCA/IG51bGwgOiBUW0tdO1xuICBwdWJsaWMgdHJhbnNmb3JtPFQsIEsgZXh0ZW5kcyBrZXlvZiBUICYgc3RyaW5nPihcbiAgICBpbnB1dDogVCB8IG51bGwsXG4gICAgYXJyOiBbS10sXG4gICAgZGVmYXVsdFZhbHVlPzogdW5rbm93blxuICApOiBUIGV4dGVuZHMgbnVsbCA/IG51bGwgOiBUW0tdO1xuICBwdWJsaWMgdHJhbnNmb3JtPFQsIEsgZXh0ZW5kcyBrZXlvZiBULCBLMiBleHRlbmRzIGtleW9mIFRbS10+KFxuICAgIGlucHV0OiBUIHwgbnVsbCxcbiAgICBhcnI6IFtLLCBLMl0sXG4gICAgZGVmYXVsdFZhbHVlPzogdW5rbm93blxuICApOiBUW0tdW0syXTtcbiAgcHVibGljIHRyYW5zZm9ybTxULCBLIGV4dGVuZHMga2V5b2YgVCwgSzIgZXh0ZW5kcyBrZXlvZiBUW0tdLCBLMyBleHRlbmRzIGtleW9mIFRbS11bSzJdPihcbiAgICBpbnB1dDogVCB8IG51bGwsXG4gICAgYXJyOiBbSywgSzIsIEszXSxcbiAgICBkZWZhdWx0VmFsdWU/OiB1bmtub3duXG4gICk6IFQgZXh0ZW5kcyBudWxsID8gbnVsbCA6IFRbS11bSzJdW0szXTtcbiAgcHVibGljIHRyYW5zZm9ybTxcbiAgICBULFxuICAgIEsgZXh0ZW5kcyBrZXlvZiBULFxuICAgIEsyIGV4dGVuZHMga2V5b2YgVFtLXSxcbiAgICBLMyBleHRlbmRzIGtleW9mIFRbS11bSzJdLFxuICAgIEs0IGV4dGVuZHMga2V5b2YgVFtLXVtLMl1bSzNdXG4gID4oaW5wdXQ6IFQgfCBudWxsLCBhcnI6IFtLLCBLMiwgSzMsIEs0XSwgZGVmYXVsdFZhbHVlPzogdW5rbm93bik6IFQgZXh0ZW5kcyBudWxsID8gbnVsbCA6IFRbS11bSzJdW0szXVtLNF07XG4gIHB1YmxpYyB0cmFuc2Zvcm08XG4gICAgVCxcbiAgICBLIGV4dGVuZHMga2V5b2YgVCxcbiAgICBLMiBleHRlbmRzIGtleW9mIFRbS10sXG4gICAgSzMgZXh0ZW5kcyBrZXlvZiBUW0tdW0syXSxcbiAgICBLNCBleHRlbmRzIGtleW9mIFRbS11bSzJdW0szXSxcbiAgICBLNSBleHRlbmRzIGtleW9mIFRbS11bSzJdW0szXVtLNF1cbiAgPihcbiAgICBpbnB1dDogVCB8IG51bGwsXG4gICAgYXJyOiBbSywgSzIsIEszLCBLNCwgSzVdLFxuICAgIGRlZmF1bHRWYWx1ZT86IHVua25vd25cbiAgKTogVCBleHRlbmRzIG51bGwgPyBudWxsIDogVFtLXVtLMl1bSzNdW0s0XVtLNV07XG4gIHB1YmxpYyB0cmFuc2Zvcm08XG4gICAgVCxcbiAgICBLIGV4dGVuZHMga2V5b2YgVCxcbiAgICBLMiBleHRlbmRzIGtleW9mIFRbS10sXG4gICAgSzMgZXh0ZW5kcyBrZXlvZiBUW0tdW0syXSxcbiAgICBLNCBleHRlbmRzIGtleW9mIFRbS11bSzJdW0szXSxcbiAgICBLNSBleHRlbmRzIGtleW9mIFRbS11bSzJdW0szXVtLNF0sXG4gICAgSzYgZXh0ZW5kcyBrZXlvZiBUW0tdW0syXVtLM11bSzRdW0s1XVxuICA+KFxuICAgIGlucHV0OiBUIHwgbnVsbCxcbiAgICBhcnI6IFtLLCBLMiwgSzMsIEs0LCBLNSwgSzZdLFxuICAgIGRlZmF1bHRWYWx1ZT86IHVua25vd25cbiAgKTogVCBleHRlbmRzIG51bGwgPyBudWxsIDogVFtLXVtLMl1bSzNdW0s0XVtLNV1bSzZdO1xuICBwdWJsaWMgdHJhbnNmb3JtPFxuICAgIFQsXG4gICAgSyBleHRlbmRzIGtleW9mIFQgJiBzdHJpbmcsXG4gICAgSzIgZXh0ZW5kcyBrZXlvZiBUW0tdICYgc3RyaW5nLFxuICAgIEszIGV4dGVuZHMga2V5b2YgVFtLXVtLMl0gJiBzdHJpbmcsXG4gICAgSzQgZXh0ZW5kcyBrZXlvZiBUW0tdW0syXVtLM10gJiBzdHJpbmcsXG4gICAgSzUgZXh0ZW5kcyBrZXlvZiBUW0tdW0syXVtLM11bSzRdICYgc3RyaW5nLFxuICAgIEs2IGV4dGVuZHMga2V5b2YgVFtLXVtLMl1bSzNdW0s0XVtLNV0gJiBzdHJpbmdcbiAgPihcbiAgICBpbnB1dDogVCB8IG51bGwsXG4gICAga2V5OiBLIHwgW0tdIHwgW0ssIEsyXSB8IFtLLCBLMiwgSzNdIHwgW0ssIEsyLCBLMywgSzRdIHwgW0ssIEsyLCBLMywgSzQsIEs1XSB8IFtLLCBLMiwgSzMsIEs0LCBLNSwgSzZdLFxuICAgIGRlZmF1bHRWYWx1ZTogYW55ID0gbnVsbFxuICApOiBhbnkge1xuICAgIGlmICghaW5wdXQgfHwgdHlwZW9mIGlucHV0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgcHJpem1Bc3NlcnQuYXNzZXJ0KGZhbHNlLCAncHJpem1QbHVjayBpbiBpbnB1dCBpbnN0ZWFkIG9mIG9iamVjdCBvciBhcnJheSwgZ2V0ICcgKyBpbnB1dCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGtleSA9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3ByaXptUGx1Y2sgaW4ga2V5IGluc3RlYWQgb2YgdmFsaWQga2V5LCBnZXQgJyArIGtleSk7XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoa2V5KSkge1xuICAgICAgbGV0IHJlc3VsdCA9IGlucHV0IGFzIGFueTtcbiAgICAgIGZvciAoY29uc3QgayBvZiBrZXkpIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0Py5ba107XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0ID8/IGRlZmF1bHRWYWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5wdXQ/LltrZXldID8/IGRlZmF1bHRWYWx1ZTtcbiAgfVxufVxuIl19