"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[74909],{74909:e=>{e.exports="import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ITableProduct } from '../table-basic-example/table-basic-example.component';\nimport { TABLE_EXAMPLE_DATA_1 } from '../../table-example.const';\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'prizm-table-filter-example',\n  templateUrl: './table-filter-example.component.html',\n  styleUrls: ['./table-filter-example.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableFilterExampleComponent {\n  public columns: string[] = ['code', 'name', 'category', 'count'];\n\n  public products: ITableProduct[] = TABLE_EXAMPLE_DATA_1;\n  public productsCategories: string[] = ['Premium', 'Active', 'Sport', 'Sport+'];\n\n  public filterOpen = false;\n  public filterOn = false;\n\n  public formGroup = new UntypedFormGroup({\n    control1: new UntypedFormControl(true),\n    control2: new UntypedFormControl(true),\n    control3: new UntypedFormControl(true),\n    control4: new UntypedFormControl(true),\n  });\n\n  public filteredProducts$: Observable<ITableProduct[]> = this.formGroup.valueChanges.pipe(\n    map(formVal => {\n      const mask = Object.values(formVal);\n      const chosenCategories = this.productsCategories.filter((category, i) => mask[i]);\n      this.filterOn = chosenCategories.length !== mask.length;\n      return this.products.filter(products => chosenCategories.includes(products.category));\n    }),\n    startWith(this.products)\n  );\n}\n"}}]);