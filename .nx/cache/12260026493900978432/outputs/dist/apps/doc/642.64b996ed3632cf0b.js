"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[642],{642:e=>{e.exports="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PrizmTableCellStatus, prizmTableDefaultColumnSort } from '@prizm-ui/components';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { TABLE_EXAMPLE_TREE_DATA_1 } from '../../table-example.const';\nimport cloneDeep from 'lodash-es/cloneDeep';\n\nexport interface ITableProduct {\n  id?: number | string;\n  status?: PrizmTableCellStatus;\n  code: string;\n  name: string;\n  category: string;\n  count: number;\n  children?: ITableProduct[];\n}\n\n@Component({\n  selector: 'prizm-table-tree-example',\n  templateUrl: './table-tree-example.component.html',\n  styleUrls: ['./table-tree-example.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableTreeExampleComponent {\n  sorter = prizmTableDefaultColumnSort;\n  showFormatNumber = true;\n  public columns: string[] = ['name', 'category', 'amount'];\n  public products: ITableProduct[] = cloneDeep(TABLE_EXAMPLE_TREE_DATA_1);\n\n  public readonly getTableChildrenWithLazy = (item: ITableProduct): Observable<ITableProduct[]> => {\n    return of(item.children ?? []).pipe(delay(2000));\n  };\n\n  public readonly getTableChildren = (item: ITableProduct): Observable<ITableProduct[]> => {\n    return of(item.children ?? []);\n  };\n\n  public readonly getRowId = (item: ITableProduct): ITableProduct['code'] => {\n    return item.code;\n  };\n\n  public updateProducts(): void {\n    this.products = cloneDeep(TABLE_EXAMPLE_TREE_DATA_1);\n  }\n\n  public updateProduct(add: boolean): void {\n    const products = cloneDeep(this.products);\n    if (add) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      products[0].children[0].children[1].name = '* ' + products[0].children[0].children[1].name;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      products[0].children[0].children[1].name = products[0].children[0].children[1].name.replace('* ', '');\n    }\n    this.products = products;\n  }\n}\n"}}]);